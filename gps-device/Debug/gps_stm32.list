
gps_stm32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000f3b0  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000f28  0800f550  0800f550  0001f550  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010478  08010478  00030244  2**0
                  CONTENTS
  4 .ARM          00000008  08010478  08010478  00020478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010480  08010480  00030244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08010480  08010480  00020480  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010484  08010484  00020484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000244  20000000  08010488  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000128  20000244  080106cc  00030244  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000036c  080106cc  0003036c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030244  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000d7ed  00000000  00000000  00030274  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001ee6  00000000  00000000  0003da61  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b48  00000000  00000000  0003f948  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000a90  00000000  00000000  00040490  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001686c  00000000  00000000  00040f20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000cfdb  00000000  00000000  0005778c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008c2eb  00000000  00000000  00064767  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f0a52  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005058  00000000  00000000  000f0aa4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000cc  00000000  00000000  000f5afc  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      000001b9  00000000  00000000  000f5bc8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000244 	.word	0x20000244
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800f538 	.word	0x0800f538

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000248 	.word	0x20000248
 80001dc:	0800f538 	.word	0x0800f538

080001e0 <strcmp>:
 80001e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001e8:	2a01      	cmp	r2, #1
 80001ea:	bf28      	it	cs
 80001ec:	429a      	cmpcs	r2, r3
 80001ee:	d0f7      	beq.n	80001e0 <strcmp>
 80001f0:	1ad0      	subs	r0, r2, r3
 80001f2:	4770      	bx	lr

080001f4 <strlen>:
 80001f4:	4603      	mov	r3, r0
 80001f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001fa:	2a00      	cmp	r2, #0
 80001fc:	d1fb      	bne.n	80001f6 <strlen+0x2>
 80001fe:	1a18      	subs	r0, r3, r0
 8000200:	3801      	subs	r0, #1
 8000202:	4770      	bx	lr
	...

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	; 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_dcmpun>:
 8000b5c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x10>
 8000b66:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b6a:	d10a      	bne.n	8000b82 <__aeabi_dcmpun+0x26>
 8000b6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x20>
 8000b76:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b7a:	d102      	bne.n	8000b82 <__aeabi_dcmpun+0x26>
 8000b7c:	f04f 0000 	mov.w	r0, #0
 8000b80:	4770      	bx	lr
 8000b82:	f04f 0001 	mov.w	r0, #1
 8000b86:	4770      	bx	lr

08000b88 <__aeabi_d2iz>:
 8000b88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b90:	d215      	bcs.n	8000bbe <__aeabi_d2iz+0x36>
 8000b92:	d511      	bpl.n	8000bb8 <__aeabi_d2iz+0x30>
 8000b94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b9c:	d912      	bls.n	8000bc4 <__aeabi_d2iz+0x3c>
 8000b9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ba2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ba6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000baa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bae:	fa23 f002 	lsr.w	r0, r3, r2
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	4770      	bx	lr
 8000bb8:	f04f 0000 	mov.w	r0, #0
 8000bbc:	4770      	bx	lr
 8000bbe:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bc2:	d105      	bne.n	8000bd0 <__aeabi_d2iz+0x48>
 8000bc4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bc8:	bf08      	it	eq
 8000bca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	bf00      	nop

08000bd8 <__aeabi_d2uiz>:
 8000bd8:	004a      	lsls	r2, r1, #1
 8000bda:	d211      	bcs.n	8000c00 <__aeabi_d2uiz+0x28>
 8000bdc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000be0:	d211      	bcs.n	8000c06 <__aeabi_d2uiz+0x2e>
 8000be2:	d50d      	bpl.n	8000c00 <__aeabi_d2uiz+0x28>
 8000be4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000be8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bec:	d40e      	bmi.n	8000c0c <__aeabi_d2uiz+0x34>
 8000bee:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bf2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bf6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bfa:	fa23 f002 	lsr.w	r0, r3, r2
 8000bfe:	4770      	bx	lr
 8000c00:	f04f 0000 	mov.w	r0, #0
 8000c04:	4770      	bx	lr
 8000c06:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c0a:	d102      	bne.n	8000c12 <__aeabi_d2uiz+0x3a>
 8000c0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c10:	4770      	bx	lr
 8000c12:	f04f 0000 	mov.w	r0, #0
 8000c16:	4770      	bx	lr

08000c18 <__aeabi_d2f>:
 8000c18:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c1c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c20:	bf24      	itt	cs
 8000c22:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c26:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c2a:	d90d      	bls.n	8000c48 <__aeabi_d2f+0x30>
 8000c2c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c30:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c34:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c38:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c3c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c40:	bf08      	it	eq
 8000c42:	f020 0001 	biceq.w	r0, r0, #1
 8000c46:	4770      	bx	lr
 8000c48:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c4c:	d121      	bne.n	8000c92 <__aeabi_d2f+0x7a>
 8000c4e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c52:	bfbc      	itt	lt
 8000c54:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c58:	4770      	bxlt	lr
 8000c5a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c5e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c62:	f1c2 0218 	rsb	r2, r2, #24
 8000c66:	f1c2 0c20 	rsb	ip, r2, #32
 8000c6a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c6e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c72:	bf18      	it	ne
 8000c74:	f040 0001 	orrne.w	r0, r0, #1
 8000c78:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c7c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c80:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c84:	ea40 000c 	orr.w	r0, r0, ip
 8000c88:	fa23 f302 	lsr.w	r3, r3, r2
 8000c8c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c90:	e7cc      	b.n	8000c2c <__aeabi_d2f+0x14>
 8000c92:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c96:	d107      	bne.n	8000ca8 <__aeabi_d2f+0x90>
 8000c98:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c9c:	bf1e      	ittt	ne
 8000c9e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000ca2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000ca6:	4770      	bxne	lr
 8000ca8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cac:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cb0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_ldivmod>:
 8000cb8:	b97b      	cbnz	r3, 8000cda <__aeabi_ldivmod+0x22>
 8000cba:	b972      	cbnz	r2, 8000cda <__aeabi_ldivmod+0x22>
 8000cbc:	2900      	cmp	r1, #0
 8000cbe:	bfbe      	ittt	lt
 8000cc0:	2000      	movlt	r0, #0
 8000cc2:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000cc6:	e006      	blt.n	8000cd6 <__aeabi_ldivmod+0x1e>
 8000cc8:	bf08      	it	eq
 8000cca:	2800      	cmpeq	r0, #0
 8000ccc:	bf1c      	itt	ne
 8000cce:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000cd2:	f04f 30ff 	movne.w	r0, #4294967295
 8000cd6:	f000 b9f5 	b.w	80010c4 <__aeabi_idiv0>
 8000cda:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cde:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce2:	2900      	cmp	r1, #0
 8000ce4:	db09      	blt.n	8000cfa <__aeabi_ldivmod+0x42>
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	db1a      	blt.n	8000d20 <__aeabi_ldivmod+0x68>
 8000cea:	f000 f883 	bl	8000df4 <__udivmoddi4>
 8000cee:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf6:	b004      	add	sp, #16
 8000cf8:	4770      	bx	lr
 8000cfa:	4240      	negs	r0, r0
 8000cfc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d00:	2b00      	cmp	r3, #0
 8000d02:	db1b      	blt.n	8000d3c <__aeabi_ldivmod+0x84>
 8000d04:	f000 f876 	bl	8000df4 <__udivmoddi4>
 8000d08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d10:	b004      	add	sp, #16
 8000d12:	4240      	negs	r0, r0
 8000d14:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d18:	4252      	negs	r2, r2
 8000d1a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d1e:	4770      	bx	lr
 8000d20:	4252      	negs	r2, r2
 8000d22:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d26:	f000 f865 	bl	8000df4 <__udivmoddi4>
 8000d2a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d2e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d32:	b004      	add	sp, #16
 8000d34:	4240      	negs	r0, r0
 8000d36:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3a:	4770      	bx	lr
 8000d3c:	4252      	negs	r2, r2
 8000d3e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d42:	f000 f857 	bl	8000df4 <__udivmoddi4>
 8000d46:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d4a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d4e:	b004      	add	sp, #16
 8000d50:	4252      	negs	r2, r2
 8000d52:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d56:	4770      	bx	lr

08000d58 <__aeabi_uldivmod>:
 8000d58:	b953      	cbnz	r3, 8000d70 <__aeabi_uldivmod+0x18>
 8000d5a:	b94a      	cbnz	r2, 8000d70 <__aeabi_uldivmod+0x18>
 8000d5c:	2900      	cmp	r1, #0
 8000d5e:	bf08      	it	eq
 8000d60:	2800      	cmpeq	r0, #0
 8000d62:	bf1c      	itt	ne
 8000d64:	f04f 31ff 	movne.w	r1, #4294967295
 8000d68:	f04f 30ff 	movne.w	r0, #4294967295
 8000d6c:	f000 b9aa 	b.w	80010c4 <__aeabi_idiv0>
 8000d70:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d74:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d78:	f000 f83c 	bl	8000df4 <__udivmoddi4>
 8000d7c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d80:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d84:	b004      	add	sp, #16
 8000d86:	4770      	bx	lr

08000d88 <__aeabi_d2lz>:
 8000d88:	b538      	push	{r3, r4, r5, lr}
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	4604      	mov	r4, r0
 8000d90:	460d      	mov	r5, r1
 8000d92:	f7ff febb 	bl	8000b0c <__aeabi_dcmplt>
 8000d96:	b928      	cbnz	r0, 8000da4 <__aeabi_d2lz+0x1c>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	4629      	mov	r1, r5
 8000d9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000da0:	f000 b80a 	b.w	8000db8 <__aeabi_d2ulz>
 8000da4:	4620      	mov	r0, r4
 8000da6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000daa:	f000 f805 	bl	8000db8 <__aeabi_d2ulz>
 8000dae:	4240      	negs	r0, r0
 8000db0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000db4:	bd38      	pop	{r3, r4, r5, pc}
 8000db6:	bf00      	nop

08000db8 <__aeabi_d2ulz>:
 8000db8:	b5d0      	push	{r4, r6, r7, lr}
 8000dba:	4b0c      	ldr	r3, [pc, #48]	; (8000dec <__aeabi_d2ulz+0x34>)
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	4606      	mov	r6, r0
 8000dc0:	460f      	mov	r7, r1
 8000dc2:	f7ff fc31 	bl	8000628 <__aeabi_dmul>
 8000dc6:	f7ff ff07 	bl	8000bd8 <__aeabi_d2uiz>
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fbb2 	bl	8000534 <__aeabi_ui2d>
 8000dd0:	4b07      	ldr	r3, [pc, #28]	; (8000df0 <__aeabi_d2ulz+0x38>)
 8000dd2:	2200      	movs	r2, #0
 8000dd4:	f7ff fc28 	bl	8000628 <__aeabi_dmul>
 8000dd8:	4602      	mov	r2, r0
 8000dda:	460b      	mov	r3, r1
 8000ddc:	4630      	mov	r0, r6
 8000dde:	4639      	mov	r1, r7
 8000de0:	f7ff fa6a 	bl	80002b8 <__aeabi_dsub>
 8000de4:	f7ff fef8 	bl	8000bd8 <__aeabi_d2uiz>
 8000de8:	4621      	mov	r1, r4
 8000dea:	bdd0      	pop	{r4, r6, r7, pc}
 8000dec:	3df00000 	.word	0x3df00000
 8000df0:	41f00000 	.word	0x41f00000

08000df4 <__udivmoddi4>:
 8000df4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000df8:	9d08      	ldr	r5, [sp, #32]
 8000dfa:	4604      	mov	r4, r0
 8000dfc:	468e      	mov	lr, r1
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	d14d      	bne.n	8000e9e <__udivmoddi4+0xaa>
 8000e02:	428a      	cmp	r2, r1
 8000e04:	4694      	mov	ip, r2
 8000e06:	d969      	bls.n	8000edc <__udivmoddi4+0xe8>
 8000e08:	fab2 f282 	clz	r2, r2
 8000e0c:	b152      	cbz	r2, 8000e24 <__udivmoddi4+0x30>
 8000e0e:	fa01 f302 	lsl.w	r3, r1, r2
 8000e12:	f1c2 0120 	rsb	r1, r2, #32
 8000e16:	fa20 f101 	lsr.w	r1, r0, r1
 8000e1a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e1e:	ea41 0e03 	orr.w	lr, r1, r3
 8000e22:	4094      	lsls	r4, r2
 8000e24:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e28:	0c21      	lsrs	r1, r4, #16
 8000e2a:	fbbe f6f8 	udiv	r6, lr, r8
 8000e2e:	fa1f f78c 	uxth.w	r7, ip
 8000e32:	fb08 e316 	mls	r3, r8, r6, lr
 8000e36:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000e3a:	fb06 f107 	mul.w	r1, r6, r7
 8000e3e:	4299      	cmp	r1, r3
 8000e40:	d90a      	bls.n	8000e58 <__udivmoddi4+0x64>
 8000e42:	eb1c 0303 	adds.w	r3, ip, r3
 8000e46:	f106 30ff 	add.w	r0, r6, #4294967295
 8000e4a:	f080 811f 	bcs.w	800108c <__udivmoddi4+0x298>
 8000e4e:	4299      	cmp	r1, r3
 8000e50:	f240 811c 	bls.w	800108c <__udivmoddi4+0x298>
 8000e54:	3e02      	subs	r6, #2
 8000e56:	4463      	add	r3, ip
 8000e58:	1a5b      	subs	r3, r3, r1
 8000e5a:	b2a4      	uxth	r4, r4
 8000e5c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e60:	fb08 3310 	mls	r3, r8, r0, r3
 8000e64:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e68:	fb00 f707 	mul.w	r7, r0, r7
 8000e6c:	42a7      	cmp	r7, r4
 8000e6e:	d90a      	bls.n	8000e86 <__udivmoddi4+0x92>
 8000e70:	eb1c 0404 	adds.w	r4, ip, r4
 8000e74:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e78:	f080 810a 	bcs.w	8001090 <__udivmoddi4+0x29c>
 8000e7c:	42a7      	cmp	r7, r4
 8000e7e:	f240 8107 	bls.w	8001090 <__udivmoddi4+0x29c>
 8000e82:	4464      	add	r4, ip
 8000e84:	3802      	subs	r0, #2
 8000e86:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e8a:	1be4      	subs	r4, r4, r7
 8000e8c:	2600      	movs	r6, #0
 8000e8e:	b11d      	cbz	r5, 8000e98 <__udivmoddi4+0xa4>
 8000e90:	40d4      	lsrs	r4, r2
 8000e92:	2300      	movs	r3, #0
 8000e94:	e9c5 4300 	strd	r4, r3, [r5]
 8000e98:	4631      	mov	r1, r6
 8000e9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e9e:	428b      	cmp	r3, r1
 8000ea0:	d909      	bls.n	8000eb6 <__udivmoddi4+0xc2>
 8000ea2:	2d00      	cmp	r5, #0
 8000ea4:	f000 80ef 	beq.w	8001086 <__udivmoddi4+0x292>
 8000ea8:	2600      	movs	r6, #0
 8000eaa:	e9c5 0100 	strd	r0, r1, [r5]
 8000eae:	4630      	mov	r0, r6
 8000eb0:	4631      	mov	r1, r6
 8000eb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000eb6:	fab3 f683 	clz	r6, r3
 8000eba:	2e00      	cmp	r6, #0
 8000ebc:	d14a      	bne.n	8000f54 <__udivmoddi4+0x160>
 8000ebe:	428b      	cmp	r3, r1
 8000ec0:	d302      	bcc.n	8000ec8 <__udivmoddi4+0xd4>
 8000ec2:	4282      	cmp	r2, r0
 8000ec4:	f200 80f9 	bhi.w	80010ba <__udivmoddi4+0x2c6>
 8000ec8:	1a84      	subs	r4, r0, r2
 8000eca:	eb61 0303 	sbc.w	r3, r1, r3
 8000ece:	2001      	movs	r0, #1
 8000ed0:	469e      	mov	lr, r3
 8000ed2:	2d00      	cmp	r5, #0
 8000ed4:	d0e0      	beq.n	8000e98 <__udivmoddi4+0xa4>
 8000ed6:	e9c5 4e00 	strd	r4, lr, [r5]
 8000eda:	e7dd      	b.n	8000e98 <__udivmoddi4+0xa4>
 8000edc:	b902      	cbnz	r2, 8000ee0 <__udivmoddi4+0xec>
 8000ede:	deff      	udf	#255	; 0xff
 8000ee0:	fab2 f282 	clz	r2, r2
 8000ee4:	2a00      	cmp	r2, #0
 8000ee6:	f040 8092 	bne.w	800100e <__udivmoddi4+0x21a>
 8000eea:	eba1 010c 	sub.w	r1, r1, ip
 8000eee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ef2:	fa1f fe8c 	uxth.w	lr, ip
 8000ef6:	2601      	movs	r6, #1
 8000ef8:	0c20      	lsrs	r0, r4, #16
 8000efa:	fbb1 f3f7 	udiv	r3, r1, r7
 8000efe:	fb07 1113 	mls	r1, r7, r3, r1
 8000f02:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f06:	fb0e f003 	mul.w	r0, lr, r3
 8000f0a:	4288      	cmp	r0, r1
 8000f0c:	d908      	bls.n	8000f20 <__udivmoddi4+0x12c>
 8000f0e:	eb1c 0101 	adds.w	r1, ip, r1
 8000f12:	f103 38ff 	add.w	r8, r3, #4294967295
 8000f16:	d202      	bcs.n	8000f1e <__udivmoddi4+0x12a>
 8000f18:	4288      	cmp	r0, r1
 8000f1a:	f200 80cb 	bhi.w	80010b4 <__udivmoddi4+0x2c0>
 8000f1e:	4643      	mov	r3, r8
 8000f20:	1a09      	subs	r1, r1, r0
 8000f22:	b2a4      	uxth	r4, r4
 8000f24:	fbb1 f0f7 	udiv	r0, r1, r7
 8000f28:	fb07 1110 	mls	r1, r7, r0, r1
 8000f2c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000f30:	fb0e fe00 	mul.w	lr, lr, r0
 8000f34:	45a6      	cmp	lr, r4
 8000f36:	d908      	bls.n	8000f4a <__udivmoddi4+0x156>
 8000f38:	eb1c 0404 	adds.w	r4, ip, r4
 8000f3c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000f40:	d202      	bcs.n	8000f48 <__udivmoddi4+0x154>
 8000f42:	45a6      	cmp	lr, r4
 8000f44:	f200 80bb 	bhi.w	80010be <__udivmoddi4+0x2ca>
 8000f48:	4608      	mov	r0, r1
 8000f4a:	eba4 040e 	sub.w	r4, r4, lr
 8000f4e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000f52:	e79c      	b.n	8000e8e <__udivmoddi4+0x9a>
 8000f54:	f1c6 0720 	rsb	r7, r6, #32
 8000f58:	40b3      	lsls	r3, r6
 8000f5a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000f5e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000f62:	fa20 f407 	lsr.w	r4, r0, r7
 8000f66:	fa01 f306 	lsl.w	r3, r1, r6
 8000f6a:	431c      	orrs	r4, r3
 8000f6c:	40f9      	lsrs	r1, r7
 8000f6e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000f72:	fa00 f306 	lsl.w	r3, r0, r6
 8000f76:	fbb1 f8f9 	udiv	r8, r1, r9
 8000f7a:	0c20      	lsrs	r0, r4, #16
 8000f7c:	fa1f fe8c 	uxth.w	lr, ip
 8000f80:	fb09 1118 	mls	r1, r9, r8, r1
 8000f84:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f88:	fb08 f00e 	mul.w	r0, r8, lr
 8000f8c:	4288      	cmp	r0, r1
 8000f8e:	fa02 f206 	lsl.w	r2, r2, r6
 8000f92:	d90b      	bls.n	8000fac <__udivmoddi4+0x1b8>
 8000f94:	eb1c 0101 	adds.w	r1, ip, r1
 8000f98:	f108 3aff 	add.w	sl, r8, #4294967295
 8000f9c:	f080 8088 	bcs.w	80010b0 <__udivmoddi4+0x2bc>
 8000fa0:	4288      	cmp	r0, r1
 8000fa2:	f240 8085 	bls.w	80010b0 <__udivmoddi4+0x2bc>
 8000fa6:	f1a8 0802 	sub.w	r8, r8, #2
 8000faa:	4461      	add	r1, ip
 8000fac:	1a09      	subs	r1, r1, r0
 8000fae:	b2a4      	uxth	r4, r4
 8000fb0:	fbb1 f0f9 	udiv	r0, r1, r9
 8000fb4:	fb09 1110 	mls	r1, r9, r0, r1
 8000fb8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000fbc:	fb00 fe0e 	mul.w	lr, r0, lr
 8000fc0:	458e      	cmp	lr, r1
 8000fc2:	d908      	bls.n	8000fd6 <__udivmoddi4+0x1e2>
 8000fc4:	eb1c 0101 	adds.w	r1, ip, r1
 8000fc8:	f100 34ff 	add.w	r4, r0, #4294967295
 8000fcc:	d26c      	bcs.n	80010a8 <__udivmoddi4+0x2b4>
 8000fce:	458e      	cmp	lr, r1
 8000fd0:	d96a      	bls.n	80010a8 <__udivmoddi4+0x2b4>
 8000fd2:	3802      	subs	r0, #2
 8000fd4:	4461      	add	r1, ip
 8000fd6:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000fda:	fba0 9402 	umull	r9, r4, r0, r2
 8000fde:	eba1 010e 	sub.w	r1, r1, lr
 8000fe2:	42a1      	cmp	r1, r4
 8000fe4:	46c8      	mov	r8, r9
 8000fe6:	46a6      	mov	lr, r4
 8000fe8:	d356      	bcc.n	8001098 <__udivmoddi4+0x2a4>
 8000fea:	d053      	beq.n	8001094 <__udivmoddi4+0x2a0>
 8000fec:	b15d      	cbz	r5, 8001006 <__udivmoddi4+0x212>
 8000fee:	ebb3 0208 	subs.w	r2, r3, r8
 8000ff2:	eb61 010e 	sbc.w	r1, r1, lr
 8000ff6:	fa01 f707 	lsl.w	r7, r1, r7
 8000ffa:	fa22 f306 	lsr.w	r3, r2, r6
 8000ffe:	40f1      	lsrs	r1, r6
 8001000:	431f      	orrs	r7, r3
 8001002:	e9c5 7100 	strd	r7, r1, [r5]
 8001006:	2600      	movs	r6, #0
 8001008:	4631      	mov	r1, r6
 800100a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800100e:	f1c2 0320 	rsb	r3, r2, #32
 8001012:	40d8      	lsrs	r0, r3
 8001014:	fa0c fc02 	lsl.w	ip, ip, r2
 8001018:	fa21 f303 	lsr.w	r3, r1, r3
 800101c:	4091      	lsls	r1, r2
 800101e:	4301      	orrs	r1, r0
 8001020:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001024:	fa1f fe8c 	uxth.w	lr, ip
 8001028:	fbb3 f0f7 	udiv	r0, r3, r7
 800102c:	fb07 3610 	mls	r6, r7, r0, r3
 8001030:	0c0b      	lsrs	r3, r1, #16
 8001032:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8001036:	fb00 f60e 	mul.w	r6, r0, lr
 800103a:	429e      	cmp	r6, r3
 800103c:	fa04 f402 	lsl.w	r4, r4, r2
 8001040:	d908      	bls.n	8001054 <__udivmoddi4+0x260>
 8001042:	eb1c 0303 	adds.w	r3, ip, r3
 8001046:	f100 38ff 	add.w	r8, r0, #4294967295
 800104a:	d22f      	bcs.n	80010ac <__udivmoddi4+0x2b8>
 800104c:	429e      	cmp	r6, r3
 800104e:	d92d      	bls.n	80010ac <__udivmoddi4+0x2b8>
 8001050:	3802      	subs	r0, #2
 8001052:	4463      	add	r3, ip
 8001054:	1b9b      	subs	r3, r3, r6
 8001056:	b289      	uxth	r1, r1
 8001058:	fbb3 f6f7 	udiv	r6, r3, r7
 800105c:	fb07 3316 	mls	r3, r7, r6, r3
 8001060:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8001064:	fb06 f30e 	mul.w	r3, r6, lr
 8001068:	428b      	cmp	r3, r1
 800106a:	d908      	bls.n	800107e <__udivmoddi4+0x28a>
 800106c:	eb1c 0101 	adds.w	r1, ip, r1
 8001070:	f106 38ff 	add.w	r8, r6, #4294967295
 8001074:	d216      	bcs.n	80010a4 <__udivmoddi4+0x2b0>
 8001076:	428b      	cmp	r3, r1
 8001078:	d914      	bls.n	80010a4 <__udivmoddi4+0x2b0>
 800107a:	3e02      	subs	r6, #2
 800107c:	4461      	add	r1, ip
 800107e:	1ac9      	subs	r1, r1, r3
 8001080:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8001084:	e738      	b.n	8000ef8 <__udivmoddi4+0x104>
 8001086:	462e      	mov	r6, r5
 8001088:	4628      	mov	r0, r5
 800108a:	e705      	b.n	8000e98 <__udivmoddi4+0xa4>
 800108c:	4606      	mov	r6, r0
 800108e:	e6e3      	b.n	8000e58 <__udivmoddi4+0x64>
 8001090:	4618      	mov	r0, r3
 8001092:	e6f8      	b.n	8000e86 <__udivmoddi4+0x92>
 8001094:	454b      	cmp	r3, r9
 8001096:	d2a9      	bcs.n	8000fec <__udivmoddi4+0x1f8>
 8001098:	ebb9 0802 	subs.w	r8, r9, r2
 800109c:	eb64 0e0c 	sbc.w	lr, r4, ip
 80010a0:	3801      	subs	r0, #1
 80010a2:	e7a3      	b.n	8000fec <__udivmoddi4+0x1f8>
 80010a4:	4646      	mov	r6, r8
 80010a6:	e7ea      	b.n	800107e <__udivmoddi4+0x28a>
 80010a8:	4620      	mov	r0, r4
 80010aa:	e794      	b.n	8000fd6 <__udivmoddi4+0x1e2>
 80010ac:	4640      	mov	r0, r8
 80010ae:	e7d1      	b.n	8001054 <__udivmoddi4+0x260>
 80010b0:	46d0      	mov	r8, sl
 80010b2:	e77b      	b.n	8000fac <__udivmoddi4+0x1b8>
 80010b4:	3b02      	subs	r3, #2
 80010b6:	4461      	add	r1, ip
 80010b8:	e732      	b.n	8000f20 <__udivmoddi4+0x12c>
 80010ba:	4630      	mov	r0, r6
 80010bc:	e709      	b.n	8000ed2 <__udivmoddi4+0xde>
 80010be:	4464      	add	r4, ip
 80010c0:	3802      	subs	r0, #2
 80010c2:	e742      	b.n	8000f4a <__udivmoddi4+0x156>

080010c4 <__aeabi_idiv0>:
 80010c4:	4770      	bx	lr
 80010c6:	bf00      	nop

080010c8 <HAL_UARTEx_RxEventCallback>:
static void MX_DMA_Init(void);
static void MX_USART1_UART_Init(void);
static void MX_RTC_Init(void);
/* USER CODE BEGIN PFP */

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
 80010d0:	460b      	mov	r3, r1
 80010d2:	807b      	strh	r3, [r7, #2]
	uartReady=1;
 80010d4:	4b04      	ldr	r3, [pc, #16]	; (80010e8 <HAL_UARTEx_RxEventCallback+0x20>)
 80010d6:	2201      	movs	r2, #1
 80010d8:	701a      	strb	r2, [r3, #0]
}
 80010da:	bf00      	nop
 80010dc:	370c      	adds	r7, #12
 80010de:	46bd      	mov	sp, r7
 80010e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e4:	4770      	bx	lr
 80010e6:	bf00      	nop
 80010e8:	20000324 	.word	0x20000324

080010ec <HAL_UART_ErrorCallback>:

void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80010ec:	b480      	push	{r7}
 80010ee:	b083      	sub	sp, #12
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	6078      	str	r0, [r7, #4]
	uartError=1;
 80010f4:	4b04      	ldr	r3, [pc, #16]	; (8001108 <HAL_UART_ErrorCallback+0x1c>)
 80010f6:	2201      	movs	r2, #1
 80010f8:	701a      	strb	r2, [r3, #0]
}
 80010fa:	bf00      	nop
 80010fc:	370c      	adds	r7, #12
 80010fe:	46bd      	mov	sp, r7
 8001100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001104:	4770      	bx	lr
 8001106:	bf00      	nop
 8001108:	20000325 	.word	0x20000325

0800110c <uartRead>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

///////////////////////////////////

void uartRead(uint8_t* data, const uint16_t size) {
 800110c:	b580      	push	{r7, lr}
 800110e:	b082      	sub	sp, #8
 8001110:	af00      	add	r7, sp, #0
 8001112:	6078      	str	r0, [r7, #4]
 8001114:	460b      	mov	r3, r1
 8001116:	807b      	strh	r3, [r7, #2]
	uartError=0;
 8001118:	4b09      	ldr	r3, [pc, #36]	; (8001140 <uartRead+0x34>)
 800111a:	2200      	movs	r2, #0
 800111c:	701a      	strb	r2, [r3, #0]
	uartReady=0;
 800111e:	4b09      	ldr	r3, [pc, #36]	; (8001144 <uartRead+0x38>)
 8001120:	2200      	movs	r2, #0
 8001122:	701a      	strb	r2, [r3, #0]
	HAL_UART_DMAStop(&huart1); //stop possible previous transfer
 8001124:	4808      	ldr	r0, [pc, #32]	; (8001148 <uartRead+0x3c>)
 8001126:	f004 fea0 	bl	8005e6a <HAL_UART_DMAStop>
	HAL_UARTEx_ReceiveToIdle_DMA(&huart1, data, size);
 800112a:	887b      	ldrh	r3, [r7, #2]
 800112c:	461a      	mov	r2, r3
 800112e:	6879      	ldr	r1, [r7, #4]
 8001130:	4805      	ldr	r0, [pc, #20]	; (8001148 <uartRead+0x3c>)
 8001132:	f004 ff19 	bl	8005f68 <HAL_UARTEx_ReceiveToIdle_DMA>
}
 8001136:	bf00      	nop
 8001138:	3708      	adds	r7, #8
 800113a:	46bd      	mov	sp, r7
 800113c:	bd80      	pop	{r7, pc}
 800113e:	bf00      	nop
 8001140:	20000325 	.word	0x20000325
 8001144:	20000324 	.word	0x20000324
 8001148:	20000280 	.word	0x20000280

0800114c <uartSend>:

//void uartReadBlocking(uint8_t* data, const uint16_t size,const uint32_t timeout) {
//	HAL_UART_Receive(&huart1, data, size, timeout);
//}

void uartSend(uint8_t* data, const uint16_t size) {
 800114c:	b580      	push	{r7, lr}
 800114e:	b082      	sub	sp, #8
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
 8001154:	460b      	mov	r3, r1
 8001156:	807b      	strh	r3, [r7, #2]
	HAL_UART_Transmit(&huart1, data, size,500); //send atCommand
 8001158:	887a      	ldrh	r2, [r7, #2]
 800115a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800115e:	6879      	ldr	r1, [r7, #4]
 8001160:	4803      	ldr	r0, [pc, #12]	; (8001170 <uartSend+0x24>)
 8001162:	f004 fdf0 	bl	8005d46 <HAL_UART_Transmit>
}
 8001166:	bf00      	nop
 8001168:	3708      	adds	r7, #8
 800116a:	46bd      	mov	sp, r7
 800116c:	bd80      	pop	{r7, pc}
 800116e:	bf00      	nop
 8001170:	20000280 	.word	0x20000280

08001174 <uartAvailable>:

bool uartAvailable() {
 8001174:	b480      	push	{r7}
 8001176:	af00      	add	r7, sp, #0
	if(uartReady) {
 8001178:	4b07      	ldr	r3, [pc, #28]	; (8001198 <uartAvailable+0x24>)
 800117a:	781b      	ldrb	r3, [r3, #0]
 800117c:	b2db      	uxtb	r3, r3
 800117e:	2b00      	cmp	r3, #0
 8001180:	d004      	beq.n	800118c <uartAvailable+0x18>
		uartReady=0;
 8001182:	4b05      	ldr	r3, [pc, #20]	; (8001198 <uartAvailable+0x24>)
 8001184:	2200      	movs	r2, #0
 8001186:	701a      	strb	r2, [r3, #0]
		return 1;
 8001188:	2301      	movs	r3, #1
 800118a:	e000      	b.n	800118e <uartAvailable+0x1a>
	}
	else {
		return 0;
 800118c:	2300      	movs	r3, #0
	}
}
 800118e:	4618      	mov	r0, r3
 8001190:	46bd      	mov	sp, r7
 8001192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001196:	4770      	bx	lr
 8001198:	20000324 	.word	0x20000324

0800119c <uartErrors>:

bool uartErrors() {
 800119c:	b480      	push	{r7}
 800119e:	af00      	add	r7, sp, #0
	if(uartError) {
 80011a0:	4b07      	ldr	r3, [pc, #28]	; (80011c0 <uartErrors+0x24>)
 80011a2:	781b      	ldrb	r3, [r3, #0]
 80011a4:	b2db      	uxtb	r3, r3
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d004      	beq.n	80011b4 <uartErrors+0x18>
		uartError=0;
 80011aa:	4b05      	ldr	r3, [pc, #20]	; (80011c0 <uartErrors+0x24>)
 80011ac:	2200      	movs	r2, #0
 80011ae:	701a      	strb	r2, [r3, #0]
		return 1;
 80011b0:	2301      	movs	r3, #1
 80011b2:	e000      	b.n	80011b6 <uartErrors+0x1a>
	}
	else {
		return 0;
 80011b4:	2300      	movs	r3, #0
	}
}
 80011b6:	4618      	mov	r0, r3
 80011b8:	46bd      	mov	sp, r7
 80011ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011be:	4770      	bx	lr
 80011c0:	20000325 	.word	0x20000325

080011c4 <sendAtCommand>:

bool sendAtCommand(const char* atCommand, const uint32_t timeout, const char* expectedAnswer) {
 80011c4:	b580      	push	{r7, lr}
 80011c6:	b09e      	sub	sp, #120	; 0x78
 80011c8:	af00      	add	r7, sp, #0
 80011ca:	60f8      	str	r0, [r7, #12]
 80011cc:	60b9      	str	r1, [r7, #8]
 80011ce:	607a      	str	r2, [r7, #4]

    uint32_t startTime = 0;
 80011d0:	2300      	movs	r3, #0
 80011d2:	677b      	str	r3, [r7, #116]	; 0x74
    char receiveBuffer[MAX_AT_RESPONSE]={0}; // Receive from UART Buffer
 80011d4:	2300      	movs	r3, #0
 80011d6:	613b      	str	r3, [r7, #16]
 80011d8:	f107 0314 	add.w	r3, r7, #20
 80011dc:	2260      	movs	r2, #96	; 0x60
 80011de:	2100      	movs	r1, #0
 80011e0:	4618      	mov	r0, r3
 80011e2:	f007 fd39 	bl	8008c58 <memset>

    uartSend((uint8_t *)atCommand, strlen(atCommand)); //send atCommand
 80011e6:	68f8      	ldr	r0, [r7, #12]
 80011e8:	f7ff f804 	bl	80001f4 <strlen>
 80011ec:	4603      	mov	r3, r0
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	4619      	mov	r1, r3
 80011f2:	68f8      	ldr	r0, [r7, #12]
 80011f4:	f7ff ffaa 	bl	800114c <uartSend>

    uartRead((uint8_t*)receiveBuffer, MAX_AT_RESPONSE); //start reading
 80011f8:	f107 0310 	add.w	r3, r7, #16
 80011fc:	2164      	movs	r1, #100	; 0x64
 80011fe:	4618      	mov	r0, r3
 8001200:	f7ff ff84 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 8001204:	f002 fd7c 	bl	8003d00 <HAL_GetTick>
 8001208:	6778      	str	r0, [r7, #116]	; 0x74

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 800120a:	e011      	b.n	8001230 <sendAtCommand+0x6c>
        if(uartAvailable()){
 800120c:	f7ff ffb2 	bl	8001174 <uartAvailable>
 8001210:	4603      	mov	r3, r0
 8001212:	2b00      	cmp	r3, #0
 8001214:	d00c      	beq.n	8001230 <sendAtCommand+0x6c>
                // check if the desired answer is in the response of the module
                if (strstr(receiveBuffer, expectedAnswer) != NULL) {
 8001216:	f107 0310 	add.w	r3, r7, #16
 800121a:	6879      	ldr	r1, [r7, #4]
 800121c:	4618      	mov	r0, r3
 800121e:	f009 fd42 	bl	800aca6 <strstr>
 8001222:	4603      	mov	r3, r0
 8001224:	2b00      	cmp	r3, #0
 8001226:	d001      	beq.n	800122c <sendAtCommand+0x68>
                    return 1;
 8001228:	2301      	movs	r3, #1
 800122a:	e00a      	b.n	8001242 <sendAtCommand+0x7e>
                }
				else {
					return 0;
 800122c:	2300      	movs	r3, #0
 800122e:	e008      	b.n	8001242 <sendAtCommand+0x7e>
    while( (HAL_GetTick()-startTime) < timeout ){
 8001230:	f002 fd66 	bl	8003d00 <HAL_GetTick>
 8001234:	4602      	mov	r2, r0
 8001236:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001238:	1ad3      	subs	r3, r2, r3
 800123a:	68ba      	ldr	r2, [r7, #8]
 800123c:	429a      	cmp	r2, r3
 800123e:	d8e5      	bhi.n	800120c <sendAtCommand+0x48>
				}
    	}
    }
    return 0;
 8001240:	2300      	movs	r3, #0
}
 8001242:	4618      	mov	r0, r3
 8001244:	3778      	adds	r7, #120	; 0x78
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}

0800124a <sendAtCommand2>:

bool sendAtCommand2(const char* atCommand, const uint32_t timeout, const char* expectedAnswer) {
 800124a:	b580      	push	{r7, lr}
 800124c:	b09e      	sub	sp, #120	; 0x78
 800124e:	af00      	add	r7, sp, #0
 8001250:	60f8      	str	r0, [r7, #12]
 8001252:	60b9      	str	r1, [r7, #8]
 8001254:	607a      	str	r2, [r7, #4]

    uint32_t startTime = 0;
 8001256:	2300      	movs	r3, #0
 8001258:	677b      	str	r3, [r7, #116]	; 0x74
    char receiveBuffer[MAX_AT_RESPONSE]={0}; // Receive from UART Buffer
 800125a:	2300      	movs	r3, #0
 800125c:	613b      	str	r3, [r7, #16]
 800125e:	f107 0314 	add.w	r3, r7, #20
 8001262:	2260      	movs	r2, #96	; 0x60
 8001264:	2100      	movs	r1, #0
 8001266:	4618      	mov	r0, r3
 8001268:	f007 fcf6 	bl	8008c58 <memset>

    uartSend((uint8_t *)atCommand, strlen(atCommand)); //send atCommand
 800126c:	68f8      	ldr	r0, [r7, #12]
 800126e:	f7fe ffc1 	bl	80001f4 <strlen>
 8001272:	4603      	mov	r3, r0
 8001274:	b29b      	uxth	r3, r3
 8001276:	4619      	mov	r1, r3
 8001278:	68f8      	ldr	r0, [r7, #12]
 800127a:	f7ff ff67 	bl	800114c <uartSend>

    uartRead((uint8_t*)receiveBuffer, MAX_AT_RESPONSE); //start reading
 800127e:	f107 0310 	add.w	r3, r7, #16
 8001282:	2164      	movs	r1, #100	; 0x64
 8001284:	4618      	mov	r0, r3
 8001286:	f7ff ff41 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 800128a:	f002 fd39 	bl	8003d00 <HAL_GetTick>
 800128e:	6778      	str	r0, [r7, #116]	; 0x74

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 8001290:	e029      	b.n	80012e6 <sendAtCommand2+0x9c>

    	if(uartErrors()) {
 8001292:	f7ff ff83 	bl	800119c <uartErrors>
 8001296:	4603      	mov	r3, r0
 8001298:	2b00      	cmp	r3, #0
 800129a:	d012      	beq.n	80012c2 <sendAtCommand2+0x78>
    		 memset(receiveBuffer,'\0',strlen(receiveBuffer));
 800129c:	f107 0310 	add.w	r3, r7, #16
 80012a0:	4618      	mov	r0, r3
 80012a2:	f7fe ffa7 	bl	80001f4 <strlen>
 80012a6:	4602      	mov	r2, r0
 80012a8:	f107 0310 	add.w	r3, r7, #16
 80012ac:	2100      	movs	r1, #0
 80012ae:	4618      	mov	r0, r3
 80012b0:	f007 fcd2 	bl	8008c58 <memset>
    		 uartRead((uint8_t*)receiveBuffer, MAX_AT_RESPONSE); //start reading
 80012b4:	f107 0310 	add.w	r3, r7, #16
 80012b8:	2164      	movs	r1, #100	; 0x64
 80012ba:	4618      	mov	r0, r3
 80012bc:	f7ff ff26 	bl	800110c <uartRead>
 80012c0:	e011      	b.n	80012e6 <sendAtCommand2+0x9c>
    	}
    	else {
			if(uartAvailable()){
 80012c2:	f7ff ff57 	bl	8001174 <uartAvailable>
 80012c6:	4603      	mov	r3, r0
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d00c      	beq.n	80012e6 <sendAtCommand2+0x9c>
					// check if the desired answer is in the response of the module
					if (strstr(receiveBuffer, expectedAnswer) != NULL) {
 80012cc:	f107 0310 	add.w	r3, r7, #16
 80012d0:	6879      	ldr	r1, [r7, #4]
 80012d2:	4618      	mov	r0, r3
 80012d4:	f009 fce7 	bl	800aca6 <strstr>
 80012d8:	4603      	mov	r3, r0
 80012da:	2b00      	cmp	r3, #0
 80012dc:	d001      	beq.n	80012e2 <sendAtCommand2+0x98>
						return 1;
 80012de:	2301      	movs	r3, #1
 80012e0:	e00a      	b.n	80012f8 <sendAtCommand2+0xae>
					}
					else {
						return 0;
 80012e2:	2300      	movs	r3, #0
 80012e4:	e008      	b.n	80012f8 <sendAtCommand2+0xae>
    while( (HAL_GetTick()-startTime) < timeout ){
 80012e6:	f002 fd0b 	bl	8003d00 <HAL_GetTick>
 80012ea:	4602      	mov	r2, r0
 80012ec:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80012ee:	1ad3      	subs	r3, r2, r3
 80012f0:	68ba      	ldr	r2, [r7, #8]
 80012f2:	429a      	cmp	r2, r3
 80012f4:	d8cd      	bhi.n	8001292 <sendAtCommand2+0x48>
					}
			}
    	}
    }
    return 0;
 80012f6:	2300      	movs	r3, #0
}
 80012f8:	4618      	mov	r0, r3
 80012fa:	3778      	adds	r7, #120	; 0x78
 80012fc:	46bd      	mov	sp, r7
 80012fe:	bd80      	pop	{r7, pc}

08001300 <getSerialResponse>:

bool getSerialResponse(const char* atCommand, const uint32_t timeout, const char* expectedAnswer, char* receiveBuffer , const uint16_t size) {
 8001300:	b580      	push	{r7, lr}
 8001302:	b086      	sub	sp, #24
 8001304:	af00      	add	r7, sp, #0
 8001306:	60f8      	str	r0, [r7, #12]
 8001308:	60b9      	str	r1, [r7, #8]
 800130a:	607a      	str	r2, [r7, #4]
 800130c:	603b      	str	r3, [r7, #0]

    uint32_t startTime = 0;
 800130e:	2300      	movs	r3, #0
 8001310:	617b      	str	r3, [r7, #20]

    uartSend((uint8_t *)atCommand, strlen(atCommand)); //send atCommand
 8001312:	68f8      	ldr	r0, [r7, #12]
 8001314:	f7fe ff6e 	bl	80001f4 <strlen>
 8001318:	4603      	mov	r3, r0
 800131a:	b29b      	uxth	r3, r3
 800131c:	4619      	mov	r1, r3
 800131e:	68f8      	ldr	r0, [r7, #12]
 8001320:	f7ff ff14 	bl	800114c <uartSend>

    uartRead((uint8_t*)receiveBuffer, size); //start reading
 8001324:	8c3b      	ldrh	r3, [r7, #32]
 8001326:	4619      	mov	r1, r3
 8001328:	6838      	ldr	r0, [r7, #0]
 800132a:	f7ff feef 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 800132e:	f002 fce7 	bl	8003d00 <HAL_GetTick>
 8001332:	6178      	str	r0, [r7, #20]

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 8001334:	e00f      	b.n	8001356 <getSerialResponse+0x56>
        if(uartAvailable()){
 8001336:	f7ff ff1d 	bl	8001174 <uartAvailable>
 800133a:	4603      	mov	r3, r0
 800133c:	2b00      	cmp	r3, #0
 800133e:	d00a      	beq.n	8001356 <getSerialResponse+0x56>
                // check if the desired answer is in the response of the module
                if (strstr(receiveBuffer, expectedAnswer) != NULL)
 8001340:	6879      	ldr	r1, [r7, #4]
 8001342:	6838      	ldr	r0, [r7, #0]
 8001344:	f009 fcaf 	bl	800aca6 <strstr>
 8001348:	4603      	mov	r3, r0
 800134a:	2b00      	cmp	r3, #0
 800134c:	d001      	beq.n	8001352 <getSerialResponse+0x52>
                {
                    return 1;
 800134e:	2301      	movs	r3, #1
 8001350:	e00a      	b.n	8001368 <getSerialResponse+0x68>
                }
				else {
					return 0;
 8001352:	2300      	movs	r3, #0
 8001354:	e008      	b.n	8001368 <getSerialResponse+0x68>
    while( (HAL_GetTick()-startTime) < timeout ){
 8001356:	f002 fcd3 	bl	8003d00 <HAL_GetTick>
 800135a:	4602      	mov	r2, r0
 800135c:	697b      	ldr	r3, [r7, #20]
 800135e:	1ad3      	subs	r3, r2, r3
 8001360:	68ba      	ldr	r2, [r7, #8]
 8001362:	429a      	cmp	r2, r3
 8001364:	d8e7      	bhi.n	8001336 <getSerialResponse+0x36>
				}
    	}
    }
    return 0;
 8001366:	2300      	movs	r3, #0
}
 8001368:	4618      	mov	r0, r3
 800136a:	3718      	adds	r7, #24
 800136c:	46bd      	mov	sp, r7
 800136e:	bd80      	pop	{r7, pc}

08001370 <getSerialResponse2>:

bool getSerialResponse2(const uint32_t timeout, char* receiveBuffer , const uint16_t size) {
 8001370:	b580      	push	{r7, lr}
 8001372:	b086      	sub	sp, #24
 8001374:	af00      	add	r7, sp, #0
 8001376:	60f8      	str	r0, [r7, #12]
 8001378:	60b9      	str	r1, [r7, #8]
 800137a:	4613      	mov	r3, r2
 800137c:	80fb      	strh	r3, [r7, #6]

    uint32_t startTime = 0;
 800137e:	2300      	movs	r3, #0
 8001380:	617b      	str	r3, [r7, #20]

    uartRead((uint8_t*)receiveBuffer, size); //start reading
 8001382:	88fb      	ldrh	r3, [r7, #6]
 8001384:	4619      	mov	r1, r3
 8001386:	68b8      	ldr	r0, [r7, #8]
 8001388:	f7ff fec0 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 800138c:	f002 fcb8 	bl	8003d00 <HAL_GetTick>
 8001390:	6178      	str	r0, [r7, #20]

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 8001392:	e006      	b.n	80013a2 <getSerialResponse2+0x32>
        if(uartAvailable()){
 8001394:	f7ff feee 	bl	8001174 <uartAvailable>
 8001398:	4603      	mov	r3, r0
 800139a:	2b00      	cmp	r3, #0
 800139c:	d001      	beq.n	80013a2 <getSerialResponse2+0x32>
        	return 1;
 800139e:	2301      	movs	r3, #1
 80013a0:	e008      	b.n	80013b4 <getSerialResponse2+0x44>
    while( (HAL_GetTick()-startTime) < timeout ){
 80013a2:	f002 fcad 	bl	8003d00 <HAL_GetTick>
 80013a6:	4602      	mov	r2, r0
 80013a8:	697b      	ldr	r3, [r7, #20]
 80013aa:	1ad3      	subs	r3, r2, r3
 80013ac:	68fa      	ldr	r2, [r7, #12]
 80013ae:	429a      	cmp	r2, r3
 80013b0:	d8f0      	bhi.n	8001394 <getSerialResponse2+0x24>
    	}
    }
    return 0;
 80013b2:	2300      	movs	r3, #0
}
 80013b4:	4618      	mov	r0, r3
 80013b6:	3718      	adds	r7, #24
 80013b8:	46bd      	mov	sp, r7
 80013ba:	bd80      	pop	{r7, pc}

080013bc <waitConnect>:

///////////////////////////////////

bool waitConnect(const uint8_t maxAttempts) {
 80013bc:	b580      	push	{r7, lr}
 80013be:	b084      	sub	sp, #16
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	4603      	mov	r3, r0
 80013c4:	71fb      	strb	r3, [r7, #7]
	for(int i=0; i<maxAttempts;i++) {
 80013c6:	2300      	movs	r3, #0
 80013c8:	60fb      	str	r3, [r7, #12]
 80013ca:	e00d      	b.n	80013e8 <waitConnect+0x2c>
		if (sendAtCommand("AT\r",2000,"OK"))
 80013cc:	4a0b      	ldr	r2, [pc, #44]	; (80013fc <waitConnect+0x40>)
 80013ce:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80013d2:	480b      	ldr	r0, [pc, #44]	; (8001400 <waitConnect+0x44>)
 80013d4:	f7ff fef6 	bl	80011c4 <sendAtCommand>
 80013d8:	4603      	mov	r3, r0
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d001      	beq.n	80013e2 <waitConnect+0x26>
			return 1;
 80013de:	2301      	movs	r3, #1
 80013e0:	e007      	b.n	80013f2 <waitConnect+0x36>
	for(int i=0; i<maxAttempts;i++) {
 80013e2:	68fb      	ldr	r3, [r7, #12]
 80013e4:	3301      	adds	r3, #1
 80013e6:	60fb      	str	r3, [r7, #12]
 80013e8:	79fb      	ldrb	r3, [r7, #7]
 80013ea:	68fa      	ldr	r2, [r7, #12]
 80013ec:	429a      	cmp	r2, r3
 80013ee:	dbed      	blt.n	80013cc <waitConnect+0x10>
	}
	return 0;
 80013f0:	2300      	movs	r3, #0
}
 80013f2:	4618      	mov	r0, r3
 80013f4:	3710      	adds	r7, #16
 80013f6:	46bd      	mov	sp, r7
 80013f8:	bd80      	pop	{r7, pc}
 80013fa:	bf00      	nop
 80013fc:	0800f550 	.word	0x0800f550
 8001400:	0800f554 	.word	0x0800f554

08001404 <getText>:


bool getText(char* output, const char* input, const uint32_t outputSize, const char* delimiter1, const char* delimiter2) {
 8001404:	b580      	push	{r7, lr}
 8001406:	b088      	sub	sp, #32
 8001408:	af00      	add	r7, sp, #0
 800140a:	60f8      	str	r0, [r7, #12]
 800140c:	60b9      	str	r1, [r7, #8]
 800140e:	607a      	str	r2, [r7, #4]
 8001410:	603b      	str	r3, [r7, #0]
    int delimLen = strlen(delimiter1);
 8001412:	6838      	ldr	r0, [r7, #0]
 8001414:	f7fe feee 	bl	80001f4 <strlen>
 8001418:	4603      	mov	r3, r0
 800141a:	61fb      	str	r3, [r7, #28]
    uint32_t charNum = 0;
 800141c:	2300      	movs	r3, #0
 800141e:	61bb      	str	r3, [r7, #24]
    char* p1, * p2;
    p1 = strstr(input, delimiter1);
 8001420:	6839      	ldr	r1, [r7, #0]
 8001422:	68b8      	ldr	r0, [r7, #8]
 8001424:	f009 fc3f 	bl	800aca6 <strstr>
 8001428:	6178      	str	r0, [r7, #20]
    if (p1) {
 800142a:	697b      	ldr	r3, [r7, #20]
 800142c:	2b00      	cmp	r3, #0
 800142e:	d04b      	beq.n	80014c8 <getText+0xc4>

        if (strcmp(delimiter2, "") == 0)
 8001430:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001432:	781b      	ldrb	r3, [r3, #0]
 8001434:	2b00      	cmp	r3, #0
 8001436:	d120      	bne.n	800147a <getText+0x76>
        {
            charNum = (uintptr_t)(&input[strlen(input)] - p1 - delimLen);
 8001438:	68b8      	ldr	r0, [r7, #8]
 800143a:	f7fe fedb 	bl	80001f4 <strlen>
 800143e:	4602      	mov	r2, r0
 8001440:	68bb      	ldr	r3, [r7, #8]
 8001442:	441a      	add	r2, r3
 8001444:	697b      	ldr	r3, [r7, #20]
 8001446:	1ad2      	subs	r2, r2, r3
 8001448:	69fb      	ldr	r3, [r7, #28]
 800144a:	1ad3      	subs	r3, r2, r3
 800144c:	61bb      	str	r3, [r7, #24]
            if (charNum <= outputSize - 1) { //data is not longer than outputSize-1
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	3b01      	subs	r3, #1
 8001452:	69ba      	ldr	r2, [r7, #24]
 8001454:	429a      	cmp	r2, r3
 8001456:	d80e      	bhi.n	8001476 <getText+0x72>
                strncpy(output, p1 + delimLen, charNum);
 8001458:	69fb      	ldr	r3, [r7, #28]
 800145a:	697a      	ldr	r2, [r7, #20]
 800145c:	4413      	add	r3, r2
 800145e:	69ba      	ldr	r2, [r7, #24]
 8001460:	4619      	mov	r1, r3
 8001462:	68f8      	ldr	r0, [r7, #12]
 8001464:	f009 fc0c 	bl	800ac80 <strncpy>
                output[charNum] = '\0';
 8001468:	68fa      	ldr	r2, [r7, #12]
 800146a:	69bb      	ldr	r3, [r7, #24]
 800146c:	4413      	add	r3, r2
 800146e:	2200      	movs	r2, #0
 8001470:	701a      	strb	r2, [r3, #0]
                return 1;
 8001472:	2301      	movs	r3, #1
 8001474:	e029      	b.n	80014ca <getText+0xc6>
            }
            else {
                return 0;
 8001476:	2300      	movs	r3, #0
 8001478:	e027      	b.n	80014ca <getText+0xc6>
            }
        }

        p2 = strstr(p1 + delimLen, delimiter2);
 800147a:	69fb      	ldr	r3, [r7, #28]
 800147c:	697a      	ldr	r2, [r7, #20]
 800147e:	4413      	add	r3, r2
 8001480:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001482:	4618      	mov	r0, r3
 8001484:	f009 fc0f 	bl	800aca6 <strstr>
 8001488:	6138      	str	r0, [r7, #16]
        if (p2) {
 800148a:	693b      	ldr	r3, [r7, #16]
 800148c:	2b00      	cmp	r3, #0
 800148e:	d01b      	beq.n	80014c8 <getText+0xc4>
            charNum = (uintptr_t)(p2 - p1 - delimLen);
 8001490:	693a      	ldr	r2, [r7, #16]
 8001492:	697b      	ldr	r3, [r7, #20]
 8001494:	1ad2      	subs	r2, r2, r3
 8001496:	69fb      	ldr	r3, [r7, #28]
 8001498:	1ad3      	subs	r3, r2, r3
 800149a:	61bb      	str	r3, [r7, #24]
            if (charNum <= outputSize - 1) { //data is not longer than outputSize-1
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	3b01      	subs	r3, #1
 80014a0:	69ba      	ldr	r2, [r7, #24]
 80014a2:	429a      	cmp	r2, r3
 80014a4:	d80e      	bhi.n	80014c4 <getText+0xc0>
                strncpy(output, p1 + delimLen, charNum);
 80014a6:	69fb      	ldr	r3, [r7, #28]
 80014a8:	697a      	ldr	r2, [r7, #20]
 80014aa:	4413      	add	r3, r2
 80014ac:	69ba      	ldr	r2, [r7, #24]
 80014ae:	4619      	mov	r1, r3
 80014b0:	68f8      	ldr	r0, [r7, #12]
 80014b2:	f009 fbe5 	bl	800ac80 <strncpy>
                output[charNum] = '\0';
 80014b6:	68fa      	ldr	r2, [r7, #12]
 80014b8:	69bb      	ldr	r3, [r7, #24]
 80014ba:	4413      	add	r3, r2
 80014bc:	2200      	movs	r2, #0
 80014be:	701a      	strb	r2, [r3, #0]
                return 1;
 80014c0:	2301      	movs	r3, #1
 80014c2:	e002      	b.n	80014ca <getText+0xc6>
            }
            else {
                return 0;
 80014c4:	2300      	movs	r3, #0
 80014c6:	e000      	b.n	80014ca <getText+0xc6>
            }
        }
    }
    return 0;
 80014c8:	2300      	movs	r3, #0
}
 80014ca:	4618      	mov	r0, r3
 80014cc:	3720      	adds	r7, #32
 80014ce:	46bd      	mov	sp, r7
 80014d0:	bd80      	pop	{r7, pc}
	...

080014d4 <readSmsList>:

bool readSmsList(char * smsList, const uint16_t smsListSize){
 80014d4:	b580      	push	{r7, lr}
 80014d6:	b084      	sub	sp, #16
 80014d8:	af02      	add	r7, sp, #8
 80014da:	6078      	str	r0, [r7, #4]
 80014dc:	460b      	mov	r3, r1
 80014de:	807b      	strh	r3, [r7, #2]
	return getSerialResponse("AT+CMGL=\"REC UNREAD\",1\r",20000,"+CMGL:",smsList,smsListSize);
 80014e0:	887b      	ldrh	r3, [r7, #2]
 80014e2:	9300      	str	r3, [sp, #0]
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	4a05      	ldr	r2, [pc, #20]	; (80014fc <readSmsList+0x28>)
 80014e8:	f644 6120 	movw	r1, #20000	; 0x4e20
 80014ec:	4804      	ldr	r0, [pc, #16]	; (8001500 <readSmsList+0x2c>)
 80014ee:	f7ff ff07 	bl	8001300 <getSerialResponse>
 80014f2:	4603      	mov	r3, r0
}
 80014f4:	4618      	mov	r0, r3
 80014f6:	3708      	adds	r7, #8
 80014f8:	46bd      	mov	sp, r7
 80014fa:	bd80      	pop	{r7, pc}
 80014fc:	0800f558 	.word	0x0800f558
 8001500:	0800f560 	.word	0x0800f560

08001504 <deleteSms>:

bool deleteSms(const char* index) {
 8001504:	b580      	push	{r7, lr}
 8001506:	b086      	sub	sp, #24
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
	char command[16]={0};
 800150c:	2300      	movs	r3, #0
 800150e:	60bb      	str	r3, [r7, #8]
 8001510:	f107 030c 	add.w	r3, r7, #12
 8001514:	2200      	movs	r2, #0
 8001516:	601a      	str	r2, [r3, #0]
 8001518:	605a      	str	r2, [r3, #4]
 800151a:	609a      	str	r2, [r3, #8]
    snprintf(command, sizeof(command), "AT+CMGD=%s\r", index);
 800151c:	f107 0008 	add.w	r0, r7, #8
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	4a08      	ldr	r2, [pc, #32]	; (8001544 <deleteSms+0x40>)
 8001524:	2110      	movs	r1, #16
 8001526:	f008 fd81 	bl	800a02c <sniprintf>
	return sendAtCommand(command,5000,"OK");
 800152a:	f107 0308 	add.w	r3, r7, #8
 800152e:	4a06      	ldr	r2, [pc, #24]	; (8001548 <deleteSms+0x44>)
 8001530:	f241 3188 	movw	r1, #5000	; 0x1388
 8001534:	4618      	mov	r0, r3
 8001536:	f7ff fe45 	bl	80011c4 <sendAtCommand>
 800153a:	4603      	mov	r3, r0
}
 800153c:	4618      	mov	r0, r3
 800153e:	3718      	adds	r7, #24
 8001540:	46bd      	mov	sp, r7
 8001542:	bd80      	pop	{r7, pc}
 8001544:	0800f578 	.word	0x0800f578
 8001548:	0800f550 	.word	0x0800f550

0800154c <storeSms>:


bool storeSms(const char* address,const char* message) {
 800154c:	b580      	push	{r7, lr}
 800154e:	b0aa      	sub	sp, #168	; 0xa8
 8001550:	af00      	add	r7, sp, #0
 8001552:	6078      	str	r0, [r7, #4]
 8001554:	6039      	str	r1, [r7, #0]
    char command[MAX_SMS_SIZE]={0};
 8001556:	2300      	movs	r3, #0
 8001558:	60bb      	str	r3, [r7, #8]
 800155a:	f107 030c 	add.w	r3, r7, #12
 800155e:	229c      	movs	r2, #156	; 0x9c
 8001560:	2100      	movs	r1, #0
 8001562:	4618      	mov	r0, r3
 8001564:	f007 fb78 	bl	8008c58 <memset>
    // AT+CMGW=<da><CR>text<ctrl-Z/ESC>
    sprintf(command, "AT+CMGW=\"%s\"\r", address);
 8001568:	f107 0308 	add.w	r3, r7, #8
 800156c:	687a      	ldr	r2, [r7, #4]
 800156e:	491b      	ldr	r1, [pc, #108]	; (80015dc <storeSms+0x90>)
 8001570:	4618      	mov	r0, r3
 8001572:	f008 fd8f 	bl	800a094 <siprintf>
    sendAtCommand(command,1000,">"); //init sms
 8001576:	f107 0308 	add.w	r3, r7, #8
 800157a:	4a19      	ldr	r2, [pc, #100]	; (80015e0 <storeSms+0x94>)
 800157c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001580:	4618      	mov	r0, r3
 8001582:	f7ff fe1f 	bl	80011c4 <sendAtCommand>
	memset(command,'\0',strlen(command));
 8001586:	f107 0308 	add.w	r3, r7, #8
 800158a:	4618      	mov	r0, r3
 800158c:	f7fe fe32 	bl	80001f4 <strlen>
 8001590:	4602      	mov	r2, r0
 8001592:	f107 0308 	add.w	r3, r7, #8
 8001596:	2100      	movs	r1, #0
 8001598:	4618      	mov	r0, r3
 800159a:	f007 fb5d 	bl	8008c58 <memset>
	sprintf(command, "%s%c",message,26); //store sms
 800159e:	f107 0008 	add.w	r0, r7, #8
 80015a2:	231a      	movs	r3, #26
 80015a4:	683a      	ldr	r2, [r7, #0]
 80015a6:	490f      	ldr	r1, [pc, #60]	; (80015e4 <storeSms+0x98>)
 80015a8:	f008 fd74 	bl	800a094 <siprintf>
	if ( sendAtCommand(command,5000,"OK") ) {
 80015ac:	f107 0308 	add.w	r3, r7, #8
 80015b0:	4a0d      	ldr	r2, [pc, #52]	; (80015e8 <storeSms+0x9c>)
 80015b2:	f241 3188 	movw	r1, #5000	; 0x1388
 80015b6:	4618      	mov	r0, r3
 80015b8:	f7ff fe04 	bl	80011c4 <sendAtCommand>
 80015bc:	4603      	mov	r3, r0
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d004      	beq.n	80015cc <storeSms+0x80>
		HAL_Delay(100);
 80015c2:	2064      	movs	r0, #100	; 0x64
 80015c4:	f002 fba8 	bl	8003d18 <HAL_Delay>
		return 1;
 80015c8:	2301      	movs	r3, #1
 80015ca:	e003      	b.n	80015d4 <storeSms+0x88>
	}
	else {
		HAL_Delay(100);
 80015cc:	2064      	movs	r0, #100	; 0x64
 80015ce:	f002 fba3 	bl	8003d18 <HAL_Delay>
		return 0;
 80015d2:	2300      	movs	r3, #0
	}
}
 80015d4:	4618      	mov	r0, r3
 80015d6:	37a8      	adds	r7, #168	; 0xa8
 80015d8:	46bd      	mov	sp, r7
 80015da:	bd80      	pop	{r7, pc}
 80015dc:	0800f584 	.word	0x0800f584
 80015e0:	0800f594 	.word	0x0800f594
 80015e4:	0800f598 	.word	0x0800f598
 80015e8:	0800f550 	.word	0x0800f550

080015ec <readStoredCount1>:

bool readStoredCount1(uint16_t* count) {
 80015ec:	b580      	push	{r7, lr}
 80015ee:	b09e      	sub	sp, #120	; 0x78
 80015f0:	af02      	add	r7, sp, #8
 80015f2:	6078      	str	r0, [r7, #4]

	char response[100]={0};
 80015f4:	2300      	movs	r3, #0
 80015f6:	60fb      	str	r3, [r7, #12]
 80015f8:	f107 0310 	add.w	r3, r7, #16
 80015fc:	2260      	movs	r2, #96	; 0x60
 80015fe:	2100      	movs	r1, #0
 8001600:	4618      	mov	r0, r3
 8001602:	f007 fb29 	bl	8008c58 <memset>
	uint16_t used=0;
 8001606:	2300      	movs	r3, #0
 8001608:	817b      	strh	r3, [r7, #10]

	if (!getSerialResponse("AT+CPMS?\r",20000,"OK",response,sizeof(response)))
 800160a:	f107 030c 	add.w	r3, r7, #12
 800160e:	2264      	movs	r2, #100	; 0x64
 8001610:	9200      	str	r2, [sp, #0]
 8001612:	4a11      	ldr	r2, [pc, #68]	; (8001658 <readStoredCount1+0x6c>)
 8001614:	f644 6120 	movw	r1, #20000	; 0x4e20
 8001618:	4810      	ldr	r0, [pc, #64]	; (800165c <readStoredCount1+0x70>)
 800161a:	f7ff fe71 	bl	8001300 <getSerialResponse>
 800161e:	4603      	mov	r3, r0
 8001620:	f083 0301 	eor.w	r3, r3, #1
 8001624:	b2db      	uxtb	r3, r3
 8001626:	2b00      	cmp	r3, #0
 8001628:	d001      	beq.n	800162e <readStoredCount1+0x42>
		return 0;
 800162a:	2300      	movs	r3, #0
 800162c:	e010      	b.n	8001650 <readStoredCount1+0x64>

	if (sscanf(response, "\r\n+CPMS: %*[^,],%d,%*d,%*[^,],%*d,%*d,%*[^,],%*d,%*d", &used) == 1) { //EDIT \r\n
 800162e:	f107 020a 	add.w	r2, r7, #10
 8001632:	f107 030c 	add.w	r3, r7, #12
 8001636:	490a      	ldr	r1, [pc, #40]	; (8001660 <readStoredCount1+0x74>)
 8001638:	4618      	mov	r0, r3
 800163a:	f008 fd4b 	bl	800a0d4 <siscanf>
 800163e:	4603      	mov	r3, r0
 8001640:	2b01      	cmp	r3, #1
 8001642:	d104      	bne.n	800164e <readStoredCount1+0x62>
		*count = used;
 8001644:	897a      	ldrh	r2, [r7, #10]
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	801a      	strh	r2, [r3, #0]
		return 1;
 800164a:	2301      	movs	r3, #1
 800164c:	e000      	b.n	8001650 <readStoredCount1+0x64>
	} else
		return 0;
 800164e:	2300      	movs	r3, #0

}
 8001650:	4618      	mov	r0, r3
 8001652:	3770      	adds	r7, #112	; 0x70
 8001654:	46bd      	mov	sp, r7
 8001656:	bd80      	pop	{r7, pc}
 8001658:	0800f550 	.word	0x0800f550
 800165c:	0800f5a0 	.word	0x0800f5a0
 8001660:	0800f5ac 	.word	0x0800f5ac

08001664 <readStoredCount2>:

bool readStoredCount2(uint16_t* count) {
 8001664:	b580      	push	{r7, lr}
 8001666:	b09e      	sub	sp, #120	; 0x78
 8001668:	af02      	add	r7, sp, #8
 800166a:	6078      	str	r0, [r7, #4]

	char response[100]={0};
 800166c:	2300      	movs	r3, #0
 800166e:	60fb      	str	r3, [r7, #12]
 8001670:	f107 0310 	add.w	r3, r7, #16
 8001674:	2260      	movs	r2, #96	; 0x60
 8001676:	2100      	movs	r1, #0
 8001678:	4618      	mov	r0, r3
 800167a:	f007 faed 	bl	8008c58 <memset>
	uint16_t used=0;
 800167e:	2300      	movs	r3, #0
 8001680:	817b      	strh	r3, [r7, #10]

	if (!getSerialResponse("AT+CPMS?\r",20000,"OK",response,sizeof(response)))
 8001682:	f107 030c 	add.w	r3, r7, #12
 8001686:	2264      	movs	r2, #100	; 0x64
 8001688:	9200      	str	r2, [sp, #0]
 800168a:	4a11      	ldr	r2, [pc, #68]	; (80016d0 <readStoredCount2+0x6c>)
 800168c:	f644 6120 	movw	r1, #20000	; 0x4e20
 8001690:	4810      	ldr	r0, [pc, #64]	; (80016d4 <readStoredCount2+0x70>)
 8001692:	f7ff fe35 	bl	8001300 <getSerialResponse>
 8001696:	4603      	mov	r3, r0
 8001698:	f083 0301 	eor.w	r3, r3, #1
 800169c:	b2db      	uxtb	r3, r3
 800169e:	2b00      	cmp	r3, #0
 80016a0:	d001      	beq.n	80016a6 <readStoredCount2+0x42>
		return 0;
 80016a2:	2300      	movs	r3, #0
 80016a4:	e010      	b.n	80016c8 <readStoredCount2+0x64>

	if (sscanf(response, "\r\n+CPMS: %*[^,],%*d,%*d,%*[^,],%d,%*d,%*[^,],%*d,%*d", &used) == 1) { //EDIT \r\n
 80016a6:	f107 020a 	add.w	r2, r7, #10
 80016aa:	f107 030c 	add.w	r3, r7, #12
 80016ae:	490a      	ldr	r1, [pc, #40]	; (80016d8 <readStoredCount2+0x74>)
 80016b0:	4618      	mov	r0, r3
 80016b2:	f008 fd0f 	bl	800a0d4 <siscanf>
 80016b6:	4603      	mov	r3, r0
 80016b8:	2b01      	cmp	r3, #1
 80016ba:	d104      	bne.n	80016c6 <readStoredCount2+0x62>
		*count = used;
 80016bc:	897a      	ldrh	r2, [r7, #10]
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	801a      	strh	r2, [r3, #0]
		return 1;
 80016c2:	2301      	movs	r3, #1
 80016c4:	e000      	b.n	80016c8 <readStoredCount2+0x64>
	} else
		return 0;
 80016c6:	2300      	movs	r3, #0

}
 80016c8:	4618      	mov	r0, r3
 80016ca:	3770      	adds	r7, #112	; 0x70
 80016cc:	46bd      	mov	sp, r7
 80016ce:	bd80      	pop	{r7, pc}
 80016d0:	0800f550 	.word	0x0800f550
 80016d4:	0800f5a0 	.word	0x0800f5a0
 80016d8:	0800f5e4 	.word	0x0800f5e4

080016dc <sendStoredSms>:

bool sendStoredSms() {
 80016dc:	b580      	push	{r7, lr}
 80016de:	b086      	sub	sp, #24
 80016e0:	af00      	add	r7, sp, #0

	uint16_t count=0;
 80016e2:	2300      	movs	r3, #0
 80016e4:	82bb      	strh	r3, [r7, #20]
	char command[16]={0};
 80016e6:	2300      	movs	r3, #0
 80016e8:	607b      	str	r3, [r7, #4]
 80016ea:	f107 0308 	add.w	r3, r7, #8
 80016ee:	2200      	movs	r2, #0
 80016f0:	601a      	str	r2, [r3, #0]
 80016f2:	605a      	str	r2, [r3, #4]
 80016f4:	609a      	str	r2, [r3, #8]

	if (!readStoredCount2(&count))
 80016f6:	f107 0314 	add.w	r3, r7, #20
 80016fa:	4618      	mov	r0, r3
 80016fc:	f7ff ffb2 	bl	8001664 <readStoredCount2>
 8001700:	4603      	mov	r3, r0
 8001702:	f083 0301 	eor.w	r3, r3, #1
 8001706:	b2db      	uxtb	r3, r3
 8001708:	2b00      	cmp	r3, #0
 800170a:	d001      	beq.n	8001710 <sendStoredSms+0x34>
		return 0;
 800170c:	2300      	movs	r3, #0
 800170e:	e03a      	b.n	8001786 <sendStoredSms+0xaa>

    for (uint16_t i = 0; i < count; i++) {
 8001710:	2300      	movs	r3, #0
 8001712:	82fb      	strh	r3, [r7, #22]
 8001714:	e015      	b.n	8001742 <sendStoredSms+0x66>
        snprintf(command, sizeof(command), "AT+CMSS=%d\r", i);
 8001716:	8afb      	ldrh	r3, [r7, #22]
 8001718:	1d38      	adds	r0, r7, #4
 800171a:	4a1d      	ldr	r2, [pc, #116]	; (8001790 <sendStoredSms+0xb4>)
 800171c:	2110      	movs	r1, #16
 800171e:	f008 fc85 	bl	800a02c <sniprintf>
        if (!sendAtCommand2(command,60000,"+CMSS:")) //edit
 8001722:	1d3b      	adds	r3, r7, #4
 8001724:	4a1b      	ldr	r2, [pc, #108]	; (8001794 <sendStoredSms+0xb8>)
 8001726:	f64e 2160 	movw	r1, #60000	; 0xea60
 800172a:	4618      	mov	r0, r3
 800172c:	f7ff fd8d 	bl	800124a <sendAtCommand2>
 8001730:	4603      	mov	r3, r0
 8001732:	f083 0301 	eor.w	r3, r3, #1
 8001736:	b2db      	uxtb	r3, r3
 8001738:	2b00      	cmp	r3, #0
 800173a:	d107      	bne.n	800174c <sendStoredSms+0x70>
    for (uint16_t i = 0; i < count; i++) {
 800173c:	8afb      	ldrh	r3, [r7, #22]
 800173e:	3301      	adds	r3, #1
 8001740:	82fb      	strh	r3, [r7, #22]
 8001742:	8abb      	ldrh	r3, [r7, #20]
 8001744:	8afa      	ldrh	r2, [r7, #22]
 8001746:	429a      	cmp	r2, r3
 8001748:	d3e5      	bcc.n	8001716 <sendStoredSms+0x3a>
 800174a:	e000      	b.n	800174e <sendStoredSms+0x72>
			break;
 800174c:	bf00      	nop

    }

    if (!sendAtCommand("AT+CPMS=\"ME\",\"ME\",\"SM\"\r",5000,"OK")) {
 800174e:	4a12      	ldr	r2, [pc, #72]	; (8001798 <sendStoredSms+0xbc>)
 8001750:	f241 3188 	movw	r1, #5000	; 0x1388
 8001754:	4811      	ldr	r0, [pc, #68]	; (800179c <sendStoredSms+0xc0>)
 8001756:	f7ff fd35 	bl	80011c4 <sendAtCommand>
 800175a:	4603      	mov	r3, r0
 800175c:	f083 0301 	eor.w	r3, r3, #1
 8001760:	b2db      	uxtb	r3, r3
 8001762:	2b00      	cmp	r3, #0
 8001764:	d001      	beq.n	800176a <sendStoredSms+0x8e>
    	return 0;
 8001766:	2300      	movs	r3, #0
 8001768:	e00d      	b.n	8001786 <sendStoredSms+0xaa>
    }

	snprintf(command, sizeof(command), "AT+CMGD=1,2\r");
 800176a:	1d3b      	adds	r3, r7, #4
 800176c:	4a0c      	ldr	r2, [pc, #48]	; (80017a0 <sendStoredSms+0xc4>)
 800176e:	2110      	movs	r1, #16
 8001770:	4618      	mov	r0, r3
 8001772:	f008 fc5b 	bl	800a02c <sniprintf>
    sendAtCommand(command,50000,"OK"); //delete all sent and read messages
 8001776:	1d3b      	adds	r3, r7, #4
 8001778:	4a07      	ldr	r2, [pc, #28]	; (8001798 <sendStoredSms+0xbc>)
 800177a:	f24c 3150 	movw	r1, #50000	; 0xc350
 800177e:	4618      	mov	r0, r3
 8001780:	f7ff fd20 	bl	80011c4 <sendAtCommand>
	return 1;
 8001784:	2301      	movs	r3, #1
}
 8001786:	4618      	mov	r0, r3
 8001788:	3718      	adds	r7, #24
 800178a:	46bd      	mov	sp, r7
 800178c:	bd80      	pop	{r7, pc}
 800178e:	bf00      	nop
 8001790:	0800f61c 	.word	0x0800f61c
 8001794:	0800f628 	.word	0x0800f628
 8001798:	0800f550 	.word	0x0800f550
 800179c:	0800f630 	.word	0x0800f630
 80017a0:	0800f648 	.word	0x0800f648

080017a4 <writeFile>:

bool writeFile(const char* settings) {
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b096      	sub	sp, #88	; 0x58
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]

	bool success=0;
 80017ac:	2300      	movs	r3, #0
 80017ae:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
	//AT+CFSWFILE=<index>,<filename>,<mode>,<file size>,<inputtime>
	//AT+CFSWFILE=0,"settings.txt",0,strlen(settings),9999
	char command[60]={0};
 80017b2:	2300      	movs	r3, #0
 80017b4:	61bb      	str	r3, [r7, #24]
 80017b6:	f107 031c 	add.w	r3, r7, #28
 80017ba:	2238      	movs	r2, #56	; 0x38
 80017bc:	2100      	movs	r1, #0
 80017be:	4618      	mov	r0, r3
 80017c0:	f007 fa4a 	bl	8008c58 <memset>
	snprintf(command, sizeof(command), "AT+CFSWFILE=0,\"settings.txt\",0,%d,10000\r\n", strlen(settings));
 80017c4:	6878      	ldr	r0, [r7, #4]
 80017c6:	f7fe fd15 	bl	80001f4 <strlen>
 80017ca:	4603      	mov	r3, r0
 80017cc:	f107 0018 	add.w	r0, r7, #24
 80017d0:	4a24      	ldr	r2, [pc, #144]	; (8001864 <writeFile+0xc0>)
 80017d2:	213c      	movs	r1, #60	; 0x3c
 80017d4:	f008 fc2a 	bl	800a02c <sniprintf>

	if(!sendAtCommand("AT+CFSINIT\r",2000,"OK")) //Init
 80017d8:	4a23      	ldr	r2, [pc, #140]	; (8001868 <writeFile+0xc4>)
 80017da:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80017de:	4823      	ldr	r0, [pc, #140]	; (800186c <writeFile+0xc8>)
 80017e0:	f7ff fcf0 	bl	80011c4 <sendAtCommand>
 80017e4:	4603      	mov	r3, r0
 80017e6:	f083 0301 	eor.w	r3, r3, #1
 80017ea:	b2db      	uxtb	r3, r3
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	d001      	beq.n	80017f4 <writeFile+0x50>
		return 0;
 80017f0:	2300      	movs	r3, #0
 80017f2:	e033      	b.n	800185c <writeFile+0xb8>
	uartSend((uint8_t *)command, strlen(command)); //send atCommand
 80017f4:	f107 0318 	add.w	r3, r7, #24
 80017f8:	4618      	mov	r0, r3
 80017fa:	f7fe fcfb 	bl	80001f4 <strlen>
 80017fe:	4603      	mov	r3, r0
 8001800:	b29a      	uxth	r2, r3
 8001802:	f107 0318 	add.w	r3, r7, #24
 8001806:	4611      	mov	r1, r2
 8001808:	4618      	mov	r0, r3
 800180a:	f7ff fc9f 	bl	800114c <uartSend>

	char confirm[14];
	  if (!getSerialResponse2(5000, confirm , sizeof(confirm))) {
 800180e:	f107 0308 	add.w	r3, r7, #8
 8001812:	220e      	movs	r2, #14
 8001814:	4619      	mov	r1, r3
 8001816:	f241 3088 	movw	r0, #5000	; 0x1388
 800181a:	f7ff fda9 	bl	8001370 <getSerialResponse2>
 800181e:	4603      	mov	r3, r0
 8001820:	f083 0301 	eor.w	r3, r3, #1
 8001824:	b2db      	uxtb	r3, r3
 8001826:	2b00      	cmp	r3, #0
 8001828:	d007      	beq.n	800183a <writeFile+0x96>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 800182a:	4a0f      	ldr	r2, [pc, #60]	; (8001868 <writeFile+0xc4>)
 800182c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001830:	480f      	ldr	r0, [pc, #60]	; (8001870 <writeFile+0xcc>)
 8001832:	f7ff fcc7 	bl	80011c4 <sendAtCommand>
	    return 0;
 8001836:	2300      	movs	r3, #0
 8001838:	e010      	b.n	800185c <writeFile+0xb8>
	  }

	//uartSend((uint8_t *)settings, strlen(settings)); //send atCommand
	success=sendAtCommand(settings,2000,"OK");
 800183a:	4a0b      	ldr	r2, [pc, #44]	; (8001868 <writeFile+0xc4>)
 800183c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001840:	6878      	ldr	r0, [r7, #4]
 8001842:	f7ff fcbf 	bl	80011c4 <sendAtCommand>
 8001846:	4603      	mov	r3, r0
 8001848:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
	//HAL_Delay(100);
	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 800184c:	4a06      	ldr	r2, [pc, #24]	; (8001868 <writeFile+0xc4>)
 800184e:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001852:	4807      	ldr	r0, [pc, #28]	; (8001870 <writeFile+0xcc>)
 8001854:	f7ff fcb6 	bl	80011c4 <sendAtCommand>
	return success;
 8001858:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
}
 800185c:	4618      	mov	r0, r3
 800185e:	3758      	adds	r7, #88	; 0x58
 8001860:	46bd      	mov	sp, r7
 8001862:	bd80      	pop	{r7, pc}
 8001864:	0800f658 	.word	0x0800f658
 8001868:	0800f550 	.word	0x0800f550
 800186c:	0800f684 	.word	0x0800f684
 8001870:	0800f690 	.word	0x0800f690

08001874 <readFileSize>:

bool readFileSize(uint16_t* fileSize) {
 8001874:	b580      	push	{r7, lr}
 8001876:	b08e      	sub	sp, #56	; 0x38
 8001878:	af02      	add	r7, sp, #8
 800187a:	6078      	str	r0, [r7, #4]

	char response[30]={0};
 800187c:	2300      	movs	r3, #0
 800187e:	613b      	str	r3, [r7, #16]
 8001880:	f107 0314 	add.w	r3, r7, #20
 8001884:	2200      	movs	r2, #0
 8001886:	601a      	str	r2, [r3, #0]
 8001888:	605a      	str	r2, [r3, #4]
 800188a:	609a      	str	r2, [r3, #8]
 800188c:	60da      	str	r2, [r3, #12]
 800188e:	611a      	str	r2, [r3, #16]
 8001890:	615a      	str	r2, [r3, #20]
 8001892:	831a      	strh	r2, [r3, #24]
	uint16_t fileSizeCopy=0;
 8001894:	2300      	movs	r3, #0
 8001896:	81fb      	strh	r3, [r7, #14]

	if(!sendAtCommand("AT+CFSINIT\r",2000,"OK")) //Init1
 8001898:	4a23      	ldr	r2, [pc, #140]	; (8001928 <readFileSize+0xb4>)
 800189a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800189e:	4823      	ldr	r0, [pc, #140]	; (800192c <readFileSize+0xb8>)
 80018a0:	f7ff fc90 	bl	80011c4 <sendAtCommand>
 80018a4:	4603      	mov	r3, r0
 80018a6:	f083 0301 	eor.w	r3, r3, #1
 80018aa:	b2db      	uxtb	r3, r3
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d001      	beq.n	80018b4 <readFileSize+0x40>
		return 0;
 80018b0:	2300      	movs	r3, #0
 80018b2:	e034      	b.n	800191e <readFileSize+0xaa>

	//AT+CFSGFIS=<index>,<filename>
	//AT+CFSGFIS=0,"settings.txt"
	if (!getSerialResponse("AT+CFSGFIS=0,\"settings.txt\"\r",2000,"+CFSGFIS:",response,sizeof(response))) {
 80018b4:	f107 0310 	add.w	r3, r7, #16
 80018b8:	221e      	movs	r2, #30
 80018ba:	9200      	str	r2, [sp, #0]
 80018bc:	4a1c      	ldr	r2, [pc, #112]	; (8001930 <readFileSize+0xbc>)
 80018be:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80018c2:	481c      	ldr	r0, [pc, #112]	; (8001934 <readFileSize+0xc0>)
 80018c4:	f7ff fd1c 	bl	8001300 <getSerialResponse>
 80018c8:	4603      	mov	r3, r0
 80018ca:	f083 0301 	eor.w	r3, r3, #1
 80018ce:	b2db      	uxtb	r3, r3
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	d007      	beq.n	80018e4 <readFileSize+0x70>
		sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 80018d4:	4a14      	ldr	r2, [pc, #80]	; (8001928 <readFileSize+0xb4>)
 80018d6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80018da:	4817      	ldr	r0, [pc, #92]	; (8001938 <readFileSize+0xc4>)
 80018dc:	f7ff fc72 	bl	80011c4 <sendAtCommand>
		return 0;
 80018e0:	2300      	movs	r3, #0
 80018e2:	e01c      	b.n	800191e <readFileSize+0xaa>
	}

	if (sscanf(response, "\r\n+CFSGFIS: %d", &fileSizeCopy) == 1) { // EDIT \r\n
 80018e4:	f107 020e 	add.w	r2, r7, #14
 80018e8:	f107 0310 	add.w	r3, r7, #16
 80018ec:	4913      	ldr	r1, [pc, #76]	; (800193c <readFileSize+0xc8>)
 80018ee:	4618      	mov	r0, r3
 80018f0:	f008 fbf0 	bl	800a0d4 <siscanf>
 80018f4:	4603      	mov	r3, r0
 80018f6:	2b01      	cmp	r3, #1
 80018f8:	d10a      	bne.n	8001910 <readFileSize+0x9c>
		*fileSize=fileSizeCopy;
 80018fa:	89fa      	ldrh	r2, [r7, #14]
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	801a      	strh	r2, [r3, #0]
		sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001900:	4a09      	ldr	r2, [pc, #36]	; (8001928 <readFileSize+0xb4>)
 8001902:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001906:	480c      	ldr	r0, [pc, #48]	; (8001938 <readFileSize+0xc4>)
 8001908:	f7ff fc5c 	bl	80011c4 <sendAtCommand>
		return 1;
 800190c:	2301      	movs	r3, #1
 800190e:	e006      	b.n	800191e <readFileSize+0xaa>
	} else {
		sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001910:	4a05      	ldr	r2, [pc, #20]	; (8001928 <readFileSize+0xb4>)
 8001912:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001916:	4808      	ldr	r0, [pc, #32]	; (8001938 <readFileSize+0xc4>)
 8001918:	f7ff fc54 	bl	80011c4 <sendAtCommand>
		return 0;
 800191c:	2300      	movs	r3, #0
	}

}
 800191e:	4618      	mov	r0, r3
 8001920:	3730      	adds	r7, #48	; 0x30
 8001922:	46bd      	mov	sp, r7
 8001924:	bd80      	pop	{r7, pc}
 8001926:	bf00      	nop
 8001928:	0800f550 	.word	0x0800f550
 800192c:	0800f684 	.word	0x0800f684
 8001930:	0800f69c 	.word	0x0800f69c
 8001934:	0800f6a8 	.word	0x0800f6a8
 8001938:	0800f690 	.word	0x0800f690
 800193c:	0800f6c8 	.word	0x0800f6c8

08001940 <readFile>:

bool readFile(char* settings) {
 8001940:	b5b0      	push	{r4, r5, r7, lr}
 8001942:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 8001946:	af00      	add	r7, sp, #0
 8001948:	f507 7322 	add.w	r3, r7, #648	; 0x288
 800194c:	f5a3 7321 	sub.w	r3, r3, #644	; 0x284
 8001950:	6018      	str	r0, [r3, #0]

	char command[60]={0};
 8001952:	2300      	movs	r3, #0
 8001954:	f8c7 324c 	str.w	r3, [r7, #588]	; 0x24c
 8001958:	f507 7314 	add.w	r3, r7, #592	; 0x250
 800195c:	2238      	movs	r2, #56	; 0x38
 800195e:	2100      	movs	r1, #0
 8001960:	4618      	mov	r0, r3
 8001962:	f007 f979 	bl	8008c58 <memset>
	uint16_t fileSize=0;
 8001966:	2300      	movs	r3, #0
 8001968:	f8a7 324a 	strh.w	r3, [r7, #586]	; 0x24a
	char response[MAX_FILE_LEN]={0};
 800196c:	f507 7322 	add.w	r3, r7, #648	; 0x288
 8001970:	f5a3 7317 	sub.w	r3, r3, #604	; 0x25c
 8001974:	2200      	movs	r2, #0
 8001976:	601a      	str	r2, [r3, #0]
 8001978:	3304      	adds	r3, #4
 800197a:	f240 2217 	movw	r2, #535	; 0x217
 800197e:	2100      	movs	r1, #0
 8001980:	4618      	mov	r0, r3
 8001982:	f007 f969 	bl	8008c58 <memset>

	if(!readFileSize(&fileSize)) {
 8001986:	f207 234a 	addw	r3, r7, #586	; 0x24a
 800198a:	4618      	mov	r0, r3
 800198c:	f7ff ff72 	bl	8001874 <readFileSize>
 8001990:	4603      	mov	r3, r0
 8001992:	f083 0301 	eor.w	r3, r3, #1
 8001996:	b2db      	uxtb	r3, r3
 8001998:	2b00      	cmp	r3, #0
 800199a:	d028      	beq.n	80019ee <readFile+0xae>
		char initialSettings[21]="52,19,1672527600,120";
 800199c:	f507 7322 	add.w	r3, r7, #648	; 0x288
 80019a0:	f5a3 731f 	sub.w	r3, r3, #636	; 0x27c
 80019a4:	4a4c      	ldr	r2, [pc, #304]	; (8001ad8 <readFile+0x198>)
 80019a6:	461c      	mov	r4, r3
 80019a8:	4615      	mov	r5, r2
 80019aa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80019ac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80019ae:	e895 0003 	ldmia.w	r5, {r0, r1}
 80019b2:	6020      	str	r0, [r4, #0]
 80019b4:	3404      	adds	r4, #4
 80019b6:	7021      	strb	r1, [r4, #0]
		if (writeFile(initialSettings)) { //if no file write file
 80019b8:	f107 030c 	add.w	r3, r7, #12
 80019bc:	4618      	mov	r0, r3
 80019be:	f7ff fef1 	bl	80017a4 <writeFile>
 80019c2:	4603      	mov	r3, r0
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d010      	beq.n	80019ea <readFile+0xaa>
			strncpy(settings,initialSettings,strlen(initialSettings));
 80019c8:	f107 030c 	add.w	r3, r7, #12
 80019cc:	4618      	mov	r0, r3
 80019ce:	f7fe fc11 	bl	80001f4 <strlen>
 80019d2:	4602      	mov	r2, r0
 80019d4:	f107 010c 	add.w	r1, r7, #12
 80019d8:	f507 7322 	add.w	r3, r7, #648	; 0x288
 80019dc:	f5a3 7321 	sub.w	r3, r3, #644	; 0x284
 80019e0:	6818      	ldr	r0, [r3, #0]
 80019e2:	f009 f94d 	bl	800ac80 <strncpy>
			return 1;
 80019e6:	2301      	movs	r3, #1
 80019e8:	e070      	b.n	8001acc <readFile+0x18c>
		}
		else
			return 0;
 80019ea:	2300      	movs	r3, #0
 80019ec:	e06e      	b.n	8001acc <readFile+0x18c>
	}

	//AT+CFSRFILE=<index>,<filename>,<mode>,<file size>,<position>
	//AT+CFSRFILE=0,"settings.txt",0,fileSize,0
	snprintf(command, sizeof(command), "AT+CFSRFILE=0,\"settings.txt\",0,%d,0\r", fileSize);
 80019ee:	f8b7 324a 	ldrh.w	r3, [r7, #586]	; 0x24a
 80019f2:	f507 7013 	add.w	r0, r7, #588	; 0x24c
 80019f6:	4a39      	ldr	r2, [pc, #228]	; (8001adc <readFile+0x19c>)
 80019f8:	213c      	movs	r1, #60	; 0x3c
 80019fa:	f008 fb17 	bl	800a02c <sniprintf>

	if(!sendAtCommand("AT+CFSINIT\r",2000,"OK")) //Init
 80019fe:	4a38      	ldr	r2, [pc, #224]	; (8001ae0 <readFile+0x1a0>)
 8001a00:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a04:	4837      	ldr	r0, [pc, #220]	; (8001ae4 <readFile+0x1a4>)
 8001a06:	f7ff fbdd 	bl	80011c4 <sendAtCommand>
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	f083 0301 	eor.w	r3, r3, #1
 8001a10:	b2db      	uxtb	r3, r3
 8001a12:	2b00      	cmp	r3, #0
 8001a14:	d001      	beq.n	8001a1a <readFile+0xda>
		return 0;
 8001a16:	2300      	movs	r3, #0
 8001a18:	e058      	b.n	8001acc <readFile+0x18c>

	  if (!sendAtCommand(command,10000,"+CFSRFILE:")) {
 8001a1a:	f507 7313 	add.w	r3, r7, #588	; 0x24c
 8001a1e:	4a32      	ldr	r2, [pc, #200]	; (8001ae8 <readFile+0x1a8>)
 8001a20:	f242 7110 	movw	r1, #10000	; 0x2710
 8001a24:	4618      	mov	r0, r3
 8001a26:	f7ff fbcd 	bl	80011c4 <sendAtCommand>
 8001a2a:	4603      	mov	r3, r0
 8001a2c:	f083 0301 	eor.w	r3, r3, #1
 8001a30:	b2db      	uxtb	r3, r3
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d007      	beq.n	8001a46 <readFile+0x106>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001a36:	4a2a      	ldr	r2, [pc, #168]	; (8001ae0 <readFile+0x1a0>)
 8001a38:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a3c:	482b      	ldr	r0, [pc, #172]	; (8001aec <readFile+0x1ac>)
 8001a3e:	f7ff fbc1 	bl	80011c4 <sendAtCommand>
	  	return 0;
 8001a42:	2300      	movs	r3, #0
 8001a44:	e042      	b.n	8001acc <readFile+0x18c>
	  }

	  if (!getSerialResponse2(10000, response , sizeof(response))) {
 8001a46:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001a4a:	f240 221b 	movw	r2, #539	; 0x21b
 8001a4e:	4619      	mov	r1, r3
 8001a50:	f242 7010 	movw	r0, #10000	; 0x2710
 8001a54:	f7ff fc8c 	bl	8001370 <getSerialResponse2>
 8001a58:	4603      	mov	r3, r0
 8001a5a:	f083 0301 	eor.w	r3, r3, #1
 8001a5e:	b2db      	uxtb	r3, r3
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d007      	beq.n	8001a74 <readFile+0x134>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001a64:	4a1e      	ldr	r2, [pc, #120]	; (8001ae0 <readFile+0x1a0>)
 8001a66:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a6a:	4820      	ldr	r0, [pc, #128]	; (8001aec <readFile+0x1ac>)
 8001a6c:	f7ff fbaa 	bl	80011c4 <sendAtCommand>
	    return 0;
 8001a70:	2300      	movs	r3, #0
 8001a72:	e02b      	b.n	8001acc <readFile+0x18c>
	  }
	  char confirm[8];
	  if (!getSerialResponse2(5000, confirm , sizeof(confirm))) {
 8001a74:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001a78:	2208      	movs	r2, #8
 8001a7a:	4619      	mov	r1, r3
 8001a7c:	f241 3088 	movw	r0, #5000	; 0x1388
 8001a80:	f7ff fc76 	bl	8001370 <getSerialResponse2>
 8001a84:	4603      	mov	r3, r0
 8001a86:	f083 0301 	eor.w	r3, r3, #1
 8001a8a:	b2db      	uxtb	r3, r3
 8001a8c:	2b00      	cmp	r3, #0
 8001a8e:	d007      	beq.n	8001aa0 <readFile+0x160>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001a90:	4a13      	ldr	r2, [pc, #76]	; (8001ae0 <readFile+0x1a0>)
 8001a92:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a96:	4815      	ldr	r0, [pc, #84]	; (8001aec <readFile+0x1ac>)
 8001a98:	f7ff fb94 	bl	80011c4 <sendAtCommand>
	    return 0;
 8001a9c:	2300      	movs	r3, #0
 8001a9e:	e015      	b.n	8001acc <readFile+0x18c>
	  }

	strncpy(settings,response,strlen(response));
 8001aa0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	f7fe fba5 	bl	80001f4 <strlen>
 8001aaa:	4602      	mov	r2, r0
 8001aac:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8001ab0:	f507 7322 	add.w	r3, r7, #648	; 0x288
 8001ab4:	f5a3 7321 	sub.w	r3, r3, #644	; 0x284
 8001ab8:	6818      	ldr	r0, [r3, #0]
 8001aba:	f009 f8e1 	bl	800ac80 <strncpy>
	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001abe:	4a08      	ldr	r2, [pc, #32]	; (8001ae0 <readFile+0x1a0>)
 8001ac0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001ac4:	4809      	ldr	r0, [pc, #36]	; (8001aec <readFile+0x1ac>)
 8001ac6:	f7ff fb7d 	bl	80011c4 <sendAtCommand>
	return 1;
 8001aca:	2301      	movs	r3, #1

}
 8001acc:	4618      	mov	r0, r3
 8001ace:	f507 7722 	add.w	r7, r7, #648	; 0x288
 8001ad2:	46bd      	mov	sp, r7
 8001ad4:	bdb0      	pop	{r4, r5, r7, pc}
 8001ad6:	bf00      	nop
 8001ad8:	0800f70c 	.word	0x0800f70c
 8001adc:	0800f6d8 	.word	0x0800f6d8
 8001ae0:	0800f550 	.word	0x0800f550
 8001ae4:	0800f684 	.word	0x0800f684
 8001ae8:	0800f700 	.word	0x0800f700
 8001aec:	0800f690 	.word	0x0800f690

08001af0 <setIccid>:

//setup commands//

bool setIccid(char* iccid) {
 8001af0:	b580      	push	{r7, lr}
 8001af2:	b098      	sub	sp, #96	; 0x60
 8001af4:	af02      	add	r7, sp, #8
 8001af6:	6078      	str	r0, [r7, #4]

	char response[50]={0};
 8001af8:	2300      	movs	r3, #0
 8001afa:	627b      	str	r3, [r7, #36]	; 0x24
 8001afc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001b00:	222e      	movs	r2, #46	; 0x2e
 8001b02:	2100      	movs	r1, #0
 8001b04:	4618      	mov	r0, r3
 8001b06:	f007 f8a7 	bl	8008c58 <memset>
	char iccidCopy[MAX_ICCID_LEN+1]={0};
 8001b0a:	2300      	movs	r3, #0
 8001b0c:	60fb      	str	r3, [r7, #12]
 8001b0e:	f107 0310 	add.w	r3, r7, #16
 8001b12:	2200      	movs	r2, #0
 8001b14:	601a      	str	r2, [r3, #0]
 8001b16:	605a      	str	r2, [r3, #4]
 8001b18:	609a      	str	r2, [r3, #8]
 8001b1a:	60da      	str	r2, [r3, #12]
 8001b1c:	f8c3 200f 	str.w	r2, [r3, #15]

	if (getSerialResponse("AT+CCID\r",2000,"ERROR",response,sizeof(response)))
 8001b20:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001b24:	2232      	movs	r2, #50	; 0x32
 8001b26:	9200      	str	r2, [sp, #0]
 8001b28:	4a1a      	ldr	r2, [pc, #104]	; (8001b94 <setIccid+0xa4>)
 8001b2a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001b2e:	481a      	ldr	r0, [pc, #104]	; (8001b98 <setIccid+0xa8>)
 8001b30:	f7ff fbe6 	bl	8001300 <getSerialResponse>
 8001b34:	4603      	mov	r3, r0
 8001b36:	2b00      	cmp	r3, #0
 8001b38:	d001      	beq.n	8001b3e <setIccid+0x4e>
		return 0;
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	e025      	b.n	8001b8a <setIccid+0x9a>

	if (sscanf(response, "\r\n%s", iccidCopy) == 1) { //EDIT %s
 8001b3e:	f107 020c 	add.w	r2, r7, #12
 8001b42:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001b46:	4915      	ldr	r1, [pc, #84]	; (8001b9c <setIccid+0xac>)
 8001b48:	4618      	mov	r0, r3
 8001b4a:	f008 fac3 	bl	800a0d4 <siscanf>
 8001b4e:	4603      	mov	r3, r0
 8001b50:	2b01      	cmp	r3, #1
 8001b52:	d119      	bne.n	8001b88 <setIccid+0x98>
		iccidCopy[strlen(iccidCopy)-1] = '\0'; //cut last char
 8001b54:	f107 030c 	add.w	r3, r7, #12
 8001b58:	4618      	mov	r0, r3
 8001b5a:	f7fe fb4b 	bl	80001f4 <strlen>
 8001b5e:	4603      	mov	r3, r0
 8001b60:	3b01      	subs	r3, #1
 8001b62:	3358      	adds	r3, #88	; 0x58
 8001b64:	443b      	add	r3, r7
 8001b66:	2200      	movs	r2, #0
 8001b68:	f803 2c4c 	strb.w	r2, [r3, #-76]
		strncpy(iccid,iccidCopy,strlen(iccidCopy));
 8001b6c:	f107 030c 	add.w	r3, r7, #12
 8001b70:	4618      	mov	r0, r3
 8001b72:	f7fe fb3f 	bl	80001f4 <strlen>
 8001b76:	4602      	mov	r2, r0
 8001b78:	f107 030c 	add.w	r3, r7, #12
 8001b7c:	4619      	mov	r1, r3
 8001b7e:	6878      	ldr	r0, [r7, #4]
 8001b80:	f009 f87e 	bl	800ac80 <strncpy>
		return 1;
 8001b84:	2301      	movs	r3, #1
 8001b86:	e000      	b.n	8001b8a <setIccid+0x9a>
	}
	else
		return 0;
 8001b88:	2300      	movs	r3, #0

}
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	3758      	adds	r7, #88	; 0x58
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}
 8001b92:	bf00      	nop
 8001b94:	0800f724 	.word	0x0800f724
 8001b98:	0800f72c 	.word	0x0800f72c
 8001b9c:	0800f738 	.word	0x0800f738

08001ba0 <copyDevice>:

///////////////////////////////////

struct Device* copyDevice(const struct Device* device) {
 8001ba0:	b580      	push	{r7, lr}
 8001ba2:	b084      	sub	sp, #16
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	6078      	str	r0, [r7, #4]

    struct Device* newDevice = malloc(sizeof(struct Device)); // Allocate memory for the new device struct
 8001ba8:	f44f 70cc 	mov.w	r0, #408	; 0x198
 8001bac:	f007 f836 	bl	8008c1c <malloc>
 8001bb0:	4603      	mov	r3, r0
 8001bb2:	60bb      	str	r3, [r7, #8]
    if (newDevice == NULL) {
 8001bb4:	68bb      	ldr	r3, [r7, #8]
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	d101      	bne.n	8001bbe <copyDevice+0x1e>
        return NULL; // Return NULL if memory allocation fails
 8001bba:	2300      	movs	r3, #0
 8001bbc:	e04d      	b.n	8001c5a <copyDevice+0xba>
    }
    memcpy(newDevice, device, sizeof(struct Device)); // Copy the device struct members to the new memory location
 8001bbe:	f44f 72cc 	mov.w	r2, #408	; 0x198
 8001bc2:	6879      	ldr	r1, [r7, #4]
 8001bc4:	68b8      	ldr	r0, [r7, #8]
 8001bc6:	f007 f839 	bl	8008c3c <memcpy>
    newDevice->count = device->count; // Copy the subscribers array to the new memory location
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 8001bd0:	68bb      	ldr	r3, [r7, #8]
 8001bd2:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
    for (int i = 0; i < device->count; i++) {
 8001bd6:	2300      	movs	r3, #0
 8001bd8:	60fb      	str	r3, [r7, #12]
 8001bda:	e02d      	b.n	8001c38 <copyDevice+0x98>
        strcpy(newDevice->subscribers[i].address, device->subscribers[i].address);
 8001bdc:	68fa      	ldr	r2, [r7, #12]
 8001bde:	4613      	mov	r3, r2
 8001be0:	00db      	lsls	r3, r3, #3
 8001be2:	4413      	add	r3, r2
 8001be4:	009b      	lsls	r3, r3, #2
 8001be6:	3310      	adds	r3, #16
 8001be8:	68ba      	ldr	r2, [r7, #8]
 8001bea:	4413      	add	r3, r2
 8001bec:	1d18      	adds	r0, r3, #4
 8001bee:	68fa      	ldr	r2, [r7, #12]
 8001bf0:	4613      	mov	r3, r2
 8001bf2:	00db      	lsls	r3, r3, #3
 8001bf4:	4413      	add	r3, r2
 8001bf6:	009b      	lsls	r3, r3, #2
 8001bf8:	3310      	adds	r3, #16
 8001bfa:	687a      	ldr	r2, [r7, #4]
 8001bfc:	4413      	add	r3, r2
 8001bfe:	3304      	adds	r3, #4
 8001c00:	4619      	mov	r1, r3
 8001c02:	f008 fae7 	bl	800a1d4 <strcpy>
        memcpy(newDevice->subscribers[i].circle, device->subscribers[i].circle, sizeof(float) * 3);
 8001c06:	68fa      	ldr	r2, [r7, #12]
 8001c08:	4613      	mov	r3, r2
 8001c0a:	00db      	lsls	r3, r3, #3
 8001c0c:	4413      	add	r3, r2
 8001c0e:	009b      	lsls	r3, r3, #2
 8001c10:	3328      	adds	r3, #40	; 0x28
 8001c12:	68ba      	ldr	r2, [r7, #8]
 8001c14:	4413      	add	r3, r2
 8001c16:	1d18      	adds	r0, r3, #4
 8001c18:	68fa      	ldr	r2, [r7, #12]
 8001c1a:	4613      	mov	r3, r2
 8001c1c:	00db      	lsls	r3, r3, #3
 8001c1e:	4413      	add	r3, r2
 8001c20:	009b      	lsls	r3, r3, #2
 8001c22:	3328      	adds	r3, #40	; 0x28
 8001c24:	687a      	ldr	r2, [r7, #4]
 8001c26:	4413      	add	r3, r2
 8001c28:	3304      	adds	r3, #4
 8001c2a:	220c      	movs	r2, #12
 8001c2c:	4619      	mov	r1, r3
 8001c2e:	f007 f805 	bl	8008c3c <memcpy>
    for (int i = 0; i < device->count; i++) {
 8001c32:	68fb      	ldr	r3, [r7, #12]
 8001c34:	3301      	adds	r3, #1
 8001c36:	60fb      	str	r3, [r7, #12]
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8001c3e:	68fa      	ldr	r2, [r7, #12]
 8001c40:	429a      	cmp	r2, r3
 8001c42:	dbcb      	blt.n	8001bdc <copyDevice+0x3c>
    }
    strcpy(newDevice->iccid, device->iccid);     // Copy the iccid string to the new memory location
 8001c44:	68bb      	ldr	r3, [r7, #8]
 8001c46:	f503 72c0 	add.w	r2, r3, #384	; 0x180
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8001c50:	4619      	mov	r1, r3
 8001c52:	4610      	mov	r0, r2
 8001c54:	f008 fabe 	bl	800a1d4 <strcpy>

    return newDevice;
 8001c58:	68bb      	ldr	r3, [r7, #8]
}
 8001c5a:	4618      	mov	r0, r3
 8001c5c:	3710      	adds	r7, #16
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bd80      	pop	{r7, pc}
	...

08001c64 <structToString>:

void structToString(char* str, const struct Device* device) {
 8001c64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c68:	b097      	sub	sp, #92	; 0x5c
 8001c6a:	af06      	add	r7, sp, #24
 8001c6c:	60f8      	str	r0, [r7, #12]
 8001c6e:	60b9      	str	r1, [r7, #8]
    for (int i = 0; i < device->count; i++) {
 8001c70:	2300      	movs	r3, #0
 8001c72:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001c74:	e052      	b.n	8001d1c <structToString+0xb8>
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001c76:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001c78:	4613      	mov	r3, r2
 8001c7a:	00db      	lsls	r3, r3, #3
 8001c7c:	4413      	add	r3, r2
 8001c7e:	009b      	lsls	r3, r3, #2
 8001c80:	3310      	adds	r3, #16
 8001c82:	68ba      	ldr	r2, [r7, #8]
 8001c84:	4413      	add	r3, r2
 8001c86:	1d1e      	adds	r6, r3, #4
 8001c88:	68b9      	ldr	r1, [r7, #8]
 8001c8a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001c8c:	4613      	mov	r3, r2
 8001c8e:	00db      	lsls	r3, r3, #3
 8001c90:	4413      	add	r3, r2
 8001c92:	009b      	lsls	r3, r3, #2
 8001c94:	440b      	add	r3, r1
 8001c96:	3328      	adds	r3, #40	; 0x28
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	607b      	str	r3, [r7, #4]
            device->subscribers[i].circle[0], device->subscribers[i].circle[1], device->subscribers[i].circle[2]);
 8001c9c:	68b9      	ldr	r1, [r7, #8]
 8001c9e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001ca0:	4613      	mov	r3, r2
 8001ca2:	00db      	lsls	r3, r3, #3
 8001ca4:	4413      	add	r3, r2
 8001ca6:	009b      	lsls	r3, r3, #2
 8001ca8:	440b      	add	r3, r1
 8001caa:	332c      	adds	r3, #44	; 0x2c
 8001cac:	681b      	ldr	r3, [r3, #0]
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001cae:	4618      	mov	r0, r3
 8001cb0:	f7fe fc62 	bl	8000578 <__aeabi_f2d>
 8001cb4:	4604      	mov	r4, r0
 8001cb6:	460d      	mov	r5, r1
            device->subscribers[i].circle[0], device->subscribers[i].circle[1], device->subscribers[i].circle[2]);
 8001cb8:	68b9      	ldr	r1, [r7, #8]
 8001cba:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001cbc:	4613      	mov	r3, r2
 8001cbe:	00db      	lsls	r3, r3, #3
 8001cc0:	4413      	add	r3, r2
 8001cc2:	009b      	lsls	r3, r3, #2
 8001cc4:	440b      	add	r3, r1
 8001cc6:	3330      	adds	r3, #48	; 0x30
 8001cc8:	681b      	ldr	r3, [r3, #0]
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001cca:	4618      	mov	r0, r3
 8001ccc:	f7fe fc54 	bl	8000578 <__aeabi_f2d>
 8001cd0:	4680      	mov	r8, r0
 8001cd2:	4689      	mov	r9, r1
            device->subscribers[i].circle[0], device->subscribers[i].circle[1], device->subscribers[i].circle[2]);
 8001cd4:	68b9      	ldr	r1, [r7, #8]
 8001cd6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001cd8:	4613      	mov	r3, r2
 8001cda:	00db      	lsls	r3, r3, #3
 8001cdc:	4413      	add	r3, r2
 8001cde:	009b      	lsls	r3, r3, #2
 8001ce0:	440b      	add	r3, r1
 8001ce2:	3334      	adds	r3, #52	; 0x34
 8001ce4:	681b      	ldr	r3, [r3, #0]
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001ce6:	4618      	mov	r0, r3
 8001ce8:	f7fe fc46 	bl	8000578 <__aeabi_f2d>
 8001cec:	4602      	mov	r2, r0
 8001cee:	460b      	mov	r3, r1
 8001cf0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001cf4:	e9cd 8902 	strd	r8, r9, [sp, #8]
 8001cf8:	e9cd 4500 	strd	r4, r5, [sp]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	4632      	mov	r2, r6
 8001d00:	4923      	ldr	r1, [pc, #140]	; (8001d90 <structToString+0x12c>)
 8001d02:	68f8      	ldr	r0, [r7, #12]
 8001d04:	f008 f9c6 	bl	800a094 <siprintf>
        str += strlen(str);
 8001d08:	68f8      	ldr	r0, [r7, #12]
 8001d0a:	f7fe fa73 	bl	80001f4 <strlen>
 8001d0e:	4602      	mov	r2, r0
 8001d10:	68fb      	ldr	r3, [r7, #12]
 8001d12:	4413      	add	r3, r2
 8001d14:	60fb      	str	r3, [r7, #12]
    for (int i = 0; i < device->count; i++) {
 8001d16:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001d18:	3301      	adds	r3, #1
 8001d1a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001d1c:	68bb      	ldr	r3, [r7, #8]
 8001d1e:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8001d22:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001d24:	429a      	cmp	r2, r3
 8001d26:	dba6      	blt.n	8001c76 <structToString+0x12>
    }
    char deviceData[40] = { 0 };
 8001d28:	2300      	movs	r3, #0
 8001d2a:	617b      	str	r3, [r7, #20]
 8001d2c:	f107 0318 	add.w	r3, r7, #24
 8001d30:	2224      	movs	r2, #36	; 0x24
 8001d32:	2100      	movs	r1, #0
 8001d34:	4618      	mov	r0, r3
 8001d36:	f006 ff8f 	bl	8008c58 <memset>
    sprintf(deviceData, "%.6f,%.6f,%d,%d", device->position[0], device->position[1], (int)(device->unixTime), device->interval);
 8001d3a:	68bb      	ldr	r3, [r7, #8]
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	4618      	mov	r0, r3
 8001d40:	f7fe fc1a 	bl	8000578 <__aeabi_f2d>
 8001d44:	4604      	mov	r4, r0
 8001d46:	460d      	mov	r5, r1
 8001d48:	68bb      	ldr	r3, [r7, #8]
 8001d4a:	685b      	ldr	r3, [r3, #4]
 8001d4c:	4618      	mov	r0, r3
 8001d4e:	f7fe fc13 	bl	8000578 <__aeabi_f2d>
 8001d52:	4602      	mov	r2, r0
 8001d54:	460b      	mov	r3, r1
 8001d56:	68b9      	ldr	r1, [r7, #8]
 8001d58:	e9d1 0102 	ldrd	r0, r1, [r1, #8]
 8001d5c:	4606      	mov	r6, r0
 8001d5e:	68b9      	ldr	r1, [r7, #8]
 8001d60:	6909      	ldr	r1, [r1, #16]
 8001d62:	f107 0014 	add.w	r0, r7, #20
 8001d66:	9103      	str	r1, [sp, #12]
 8001d68:	9602      	str	r6, [sp, #8]
 8001d6a:	e9cd 2300 	strd	r2, r3, [sp]
 8001d6e:	4622      	mov	r2, r4
 8001d70:	462b      	mov	r3, r5
 8001d72:	4908      	ldr	r1, [pc, #32]	; (8001d94 <structToString+0x130>)
 8001d74:	f008 f98e 	bl	800a094 <siprintf>
    strcat(str, deviceData);
 8001d78:	f107 0314 	add.w	r3, r7, #20
 8001d7c:	4619      	mov	r1, r3
 8001d7e:	68f8      	ldr	r0, [r7, #12]
 8001d80:	f008 fa19 	bl	800a1b6 <strcat>

}
 8001d84:	bf00      	nop
 8001d86:	3744      	adds	r7, #68	; 0x44
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d8e:	bf00      	nop
 8001d90:	0800f740 	.word	0x0800f740
 8001d94:	0800f758 	.word	0x0800f758

08001d98 <stringToStruct>:

void stringToStruct(const char* str, struct Device* device) {
 8001d98:	b5b0      	push	{r4, r5, r7, lr}
 8001d9a:	b08a      	sub	sp, #40	; 0x28
 8001d9c:	af04      	add	r7, sp, #16
 8001d9e:	6078      	str	r0, [r7, #4]
 8001da0:	6039      	str	r1, [r7, #0]
    char* endLine = strstr(str, "\r\n");
 8001da2:	4936      	ldr	r1, [pc, #216]	; (8001e7c <stringToStruct+0xe4>)
 8001da4:	6878      	ldr	r0, [r7, #4]
 8001da6:	f008 ff7e 	bl	800aca6 <strstr>
 8001daa:	6178      	str	r0, [r7, #20]
    int i = 0;
 8001dac:	2300      	movs	r3, #0
 8001dae:	613b      	str	r3, [r7, #16]
    int readCount = 0;
 8001db0:	2300      	movs	r3, #0
 8001db2:	60fb      	str	r3, [r7, #12]

    while (i < MAX_PHONES && endLine) {
 8001db4:	e044      	b.n	8001e40 <stringToStruct+0xa8>
        sscanf(str, "%[^,],%d,%f,%f,%f\r\n", device->subscribers[i].address, &(device->subscribers[i].state),
 8001db6:	693a      	ldr	r2, [r7, #16]
 8001db8:	4613      	mov	r3, r2
 8001dba:	00db      	lsls	r3, r3, #3
 8001dbc:	4413      	add	r3, r2
 8001dbe:	009b      	lsls	r3, r3, #2
 8001dc0:	3310      	adds	r3, #16
 8001dc2:	683a      	ldr	r2, [r7, #0]
 8001dc4:	4413      	add	r3, r2
 8001dc6:	1d1c      	adds	r4, r3, #4
 8001dc8:	693a      	ldr	r2, [r7, #16]
 8001dca:	4613      	mov	r3, r2
 8001dcc:	00db      	lsls	r3, r3, #3
 8001dce:	4413      	add	r3, r2
 8001dd0:	009b      	lsls	r3, r3, #2
 8001dd2:	3320      	adds	r3, #32
 8001dd4:	683a      	ldr	r2, [r7, #0]
 8001dd6:	4413      	add	r3, r2
 8001dd8:	f103 0508 	add.w	r5, r3, #8
 8001ddc:	693a      	ldr	r2, [r7, #16]
 8001dde:	4613      	mov	r3, r2
 8001de0:	00db      	lsls	r3, r3, #3
 8001de2:	4413      	add	r3, r2
 8001de4:	009b      	lsls	r3, r3, #2
 8001de6:	3328      	adds	r3, #40	; 0x28
 8001de8:	683a      	ldr	r2, [r7, #0]
 8001dea:	4413      	add	r3, r2
 8001dec:	1d19      	adds	r1, r3, #4
 8001dee:	693a      	ldr	r2, [r7, #16]
 8001df0:	4613      	mov	r3, r2
 8001df2:	00db      	lsls	r3, r3, #3
 8001df4:	4413      	add	r3, r2
 8001df6:	009b      	lsls	r3, r3, #2
 8001df8:	332c      	adds	r3, #44	; 0x2c
 8001dfa:	683a      	ldr	r2, [r7, #0]
 8001dfc:	4413      	add	r3, r2
 8001dfe:	1d18      	adds	r0, r3, #4
 8001e00:	693a      	ldr	r2, [r7, #16]
 8001e02:	4613      	mov	r3, r2
 8001e04:	00db      	lsls	r3, r3, #3
 8001e06:	4413      	add	r3, r2
 8001e08:	009b      	lsls	r3, r3, #2
 8001e0a:	3330      	adds	r3, #48	; 0x30
 8001e0c:	683a      	ldr	r2, [r7, #0]
 8001e0e:	4413      	add	r3, r2
 8001e10:	3304      	adds	r3, #4
 8001e12:	9302      	str	r3, [sp, #8]
 8001e14:	9001      	str	r0, [sp, #4]
 8001e16:	9100      	str	r1, [sp, #0]
 8001e18:	462b      	mov	r3, r5
 8001e1a:	4622      	mov	r2, r4
 8001e1c:	4918      	ldr	r1, [pc, #96]	; (8001e80 <stringToStruct+0xe8>)
 8001e1e:	6878      	ldr	r0, [r7, #4]
 8001e20:	f008 f958 	bl	800a0d4 <siscanf>
            &(device->subscribers[i].circle[0]), &(device->subscribers[i].circle[1]), &(device->subscribers[i].circle[2]));
        readCount++;
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	3301      	adds	r3, #1
 8001e28:	60fb      	str	r3, [r7, #12]
        i++;
 8001e2a:	693b      	ldr	r3, [r7, #16]
 8001e2c:	3301      	adds	r3, #1
 8001e2e:	613b      	str	r3, [r7, #16]
        str = endLine + 2;
 8001e30:	697b      	ldr	r3, [r7, #20]
 8001e32:	3302      	adds	r3, #2
 8001e34:	607b      	str	r3, [r7, #4]
        endLine = strstr(str, "\r\n");
 8001e36:	4911      	ldr	r1, [pc, #68]	; (8001e7c <stringToStruct+0xe4>)
 8001e38:	6878      	ldr	r0, [r7, #4]
 8001e3a:	f008 ff34 	bl	800aca6 <strstr>
 8001e3e:	6178      	str	r0, [r7, #20]
    while (i < MAX_PHONES && endLine) {
 8001e40:	693b      	ldr	r3, [r7, #16]
 8001e42:	2b09      	cmp	r3, #9
 8001e44:	dc02      	bgt.n	8001e4c <stringToStruct+0xb4>
 8001e46:	697b      	ldr	r3, [r7, #20]
 8001e48:	2b00      	cmp	r3, #0
 8001e4a:	d1b4      	bne.n	8001db6 <stringToStruct+0x1e>
    }
    (device->count) = readCount;
 8001e4c:	683b      	ldr	r3, [r7, #0]
 8001e4e:	68fa      	ldr	r2, [r7, #12]
 8001e50:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c

    sscanf(str, "%f,%f,%d,%d", &(device->position[0]), &(device->position[1]), (int*)&(device->unixTime), &(device->interval) );
 8001e54:	6839      	ldr	r1, [r7, #0]
 8001e56:	683b      	ldr	r3, [r7, #0]
 8001e58:	1d18      	adds	r0, r3, #4
 8001e5a:	683b      	ldr	r3, [r7, #0]
 8001e5c:	3308      	adds	r3, #8
 8001e5e:	683a      	ldr	r2, [r7, #0]
 8001e60:	3210      	adds	r2, #16
 8001e62:	9201      	str	r2, [sp, #4]
 8001e64:	9300      	str	r3, [sp, #0]
 8001e66:	4603      	mov	r3, r0
 8001e68:	460a      	mov	r2, r1
 8001e6a:	4906      	ldr	r1, [pc, #24]	; (8001e84 <stringToStruct+0xec>)
 8001e6c:	6878      	ldr	r0, [r7, #4]
 8001e6e:	f008 f931 	bl	800a0d4 <siscanf>

}
 8001e72:	bf00      	nop
 8001e74:	3718      	adds	r7, #24
 8001e76:	46bd      	mov	sp, r7
 8001e78:	bdb0      	pop	{r4, r5, r7, pc}
 8001e7a:	bf00      	nop
 8001e7c:	0800f768 	.word	0x0800f768
 8001e80:	0800f76c 	.word	0x0800f76c
 8001e84:	0800f780 	.word	0x0800f780

08001e88 <handleReadFile>:
bool handleReadFile(struct Device* device) {
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
 8001e8e:	af00      	add	r7, sp, #0
 8001e90:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001e94:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001e98:	6018      	str	r0, [r3, #0]

    //char settings[MAX_FILE_LEN + 1] = "+852348467,0,-50.446896,-18.838770,6371000\r\n+48346765889,0,-50.446896,-18.838770,6371000\r\n+9946765889,0,-50.446896,-18.838770,6371000\r\n21,37,1234567890,144";
    //char settings[MAX_FILE_LEN + 1] = "21,37,1234567890,144";
    char settings[MAX_FILE_LEN + 1] = { 0 };
 8001e9a:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001e9e:	f5a3 7307 	sub.w	r3, r3, #540	; 0x21c
 8001ea2:	2200      	movs	r2, #0
 8001ea4:	601a      	str	r2, [r3, #0]
 8001ea6:	3304      	adds	r3, #4
 8001ea8:	f44f 7206 	mov.w	r2, #536	; 0x218
 8001eac:	2100      	movs	r1, #0
 8001eae:	4618      	mov	r0, r3
 8001eb0:	f006 fed2 	bl	8008c58 <memset>

    if (!readFile(settings))
 8001eb4:	f107 030c 	add.w	r3, r7, #12
 8001eb8:	4618      	mov	r0, r3
 8001eba:	f7ff fd41 	bl	8001940 <readFile>
 8001ebe:	4603      	mov	r3, r0
 8001ec0:	f083 0301 	eor.w	r3, r3, #1
 8001ec4:	b2db      	uxtb	r3, r3
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	d001      	beq.n	8001ece <handleReadFile+0x46>
        return 0;
 8001eca:	2300      	movs	r3, #0
 8001ecc:	e00a      	b.n	8001ee4 <handleReadFile+0x5c>

    stringToStruct(settings, device);
 8001ece:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001ed2:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001ed6:	f107 020c 	add.w	r2, r7, #12
 8001eda:	6819      	ldr	r1, [r3, #0]
 8001edc:	4610      	mov	r0, r2
 8001ede:	f7ff ff5b 	bl	8001d98 <stringToStruct>
    return 1;
 8001ee2:	2301      	movs	r3, #1

}
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	f507 770a 	add.w	r7, r7, #552	; 0x228
 8001eea:	46bd      	mov	sp, r7
 8001eec:	bd80      	pop	{r7, pc}

08001eee <handleWriteFile>:

//EditFile pracuje na kopii struktury aby zachować poprzednie dane w przypadku wystąpienia problemu z zapisem do pliku
bool handleWriteFile(const struct Device* device) {
 8001eee:	b580      	push	{r7, lr}
 8001ef0:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001efa:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001efe:	6018      	str	r0, [r3, #0]

    char settings[MAX_FILE_LEN + 1] = { 0 };
 8001f00:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001f04:	f5a3 7307 	sub.w	r3, r3, #540	; 0x21c
 8001f08:	2200      	movs	r2, #0
 8001f0a:	601a      	str	r2, [r3, #0]
 8001f0c:	3304      	adds	r3, #4
 8001f0e:	f44f 7206 	mov.w	r2, #536	; 0x218
 8001f12:	2100      	movs	r1, #0
 8001f14:	4618      	mov	r0, r3
 8001f16:	f006 fe9f 	bl	8008c58 <memset>
    structToString(settings, device);
 8001f1a:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001f1e:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001f22:	f107 020c 	add.w	r2, r7, #12
 8001f26:	6819      	ldr	r1, [r3, #0]
 8001f28:	4610      	mov	r0, r2
 8001f2a:	f7ff fe9b 	bl	8001c64 <structToString>
    //printf("structToString:%s", settings);

    return writeFile(settings);
 8001f2e:	f107 030c 	add.w	r3, r7, #12
 8001f32:	4618      	mov	r0, r3
 8001f34:	f7ff fc36 	bl	80017a4 <writeFile>
 8001f38:	4603      	mov	r3, r0

}
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	f507 770a 	add.w	r7, r7, #552	; 0x228
 8001f40:	46bd      	mov	sp, r7
 8001f42:	bd80      	pop	{r7, pc}

08001f44 <findSubscriber>:

bool findSubscriber(int * index, const struct Subscriber* subscribersArr, const int* count, const char* address) {
 8001f44:	b580      	push	{r7, lr}
 8001f46:	b086      	sub	sp, #24
 8001f48:	af00      	add	r7, sp, #0
 8001f4a:	60f8      	str	r0, [r7, #12]
 8001f4c:	60b9      	str	r1, [r7, #8]
 8001f4e:	607a      	str	r2, [r7, #4]
 8001f50:	603b      	str	r3, [r7, #0]
    int i = 0;
 8001f52:	2300      	movs	r3, #0
 8001f54:	617b      	str	r3, [r7, #20]
    for (i = 0; i < *count; i++) {
 8001f56:	2300      	movs	r3, #0
 8001f58:	617b      	str	r3, [r7, #20]
 8001f5a:	e016      	b.n	8001f8a <findSubscriber+0x46>
        if (strcmp(subscribersArr[i].address, address) == 0) {
 8001f5c:	697a      	ldr	r2, [r7, #20]
 8001f5e:	4613      	mov	r3, r2
 8001f60:	00db      	lsls	r3, r3, #3
 8001f62:	4413      	add	r3, r2
 8001f64:	009b      	lsls	r3, r3, #2
 8001f66:	461a      	mov	r2, r3
 8001f68:	68bb      	ldr	r3, [r7, #8]
 8001f6a:	4413      	add	r3, r2
 8001f6c:	6839      	ldr	r1, [r7, #0]
 8001f6e:	4618      	mov	r0, r3
 8001f70:	f7fe f936 	bl	80001e0 <strcmp>
 8001f74:	4603      	mov	r3, r0
 8001f76:	2b00      	cmp	r3, #0
 8001f78:	d104      	bne.n	8001f84 <findSubscriber+0x40>
            *index = i;
 8001f7a:	68fb      	ldr	r3, [r7, #12]
 8001f7c:	697a      	ldr	r2, [r7, #20]
 8001f7e:	601a      	str	r2, [r3, #0]
            return 1;
 8001f80:	2301      	movs	r3, #1
 8001f82:	e00c      	b.n	8001f9e <findSubscriber+0x5a>
    for (i = 0; i < *count; i++) {
 8001f84:	697b      	ldr	r3, [r7, #20]
 8001f86:	3301      	adds	r3, #1
 8001f88:	617b      	str	r3, [r7, #20]
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	697a      	ldr	r2, [r7, #20]
 8001f90:	429a      	cmp	r2, r3
 8001f92:	dbe3      	blt.n	8001f5c <findSubscriber+0x18>
        }
    }
    *index = i-1;
 8001f94:	697b      	ldr	r3, [r7, #20]
 8001f96:	1e5a      	subs	r2, r3, #1
 8001f98:	68fb      	ldr	r3, [r7, #12]
 8001f9a:	601a      	str	r2, [r3, #0]
    return 0;
 8001f9c:	2300      	movs	r3, #0
}
 8001f9e:	4618      	mov	r0, r3
 8001fa0:	3718      	adds	r7, #24
 8001fa2:	46bd      	mov	sp, r7
 8001fa4:	bd80      	pop	{r7, pc}

08001fa6 <subscribe>:

bool subscribe(struct Device * device, struct Subscriber* newSubscriber) {
 8001fa6:	b5b0      	push	{r4, r5, r7, lr}
 8001fa8:	b086      	sub	sp, #24
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	6078      	str	r0, [r7, #4]
 8001fae:	6039      	str	r1, [r7, #0]

    int i = 0;
 8001fb0:	2300      	movs	r3, #0
 8001fb2:	60fb      	str	r3, [r7, #12]
    bool exist = 0;
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	75fb      	strb	r3, [r7, #23]
    struct Device* deviceCopy = copyDevice(device); //deepCopy as temporary device struct
 8001fb8:	6878      	ldr	r0, [r7, #4]
 8001fba:	f7ff fdf1 	bl	8001ba0 <copyDevice>
 8001fbe:	6138      	str	r0, [r7, #16]

    exist = findSubscriber(&i, deviceCopy->subscribers, &(deviceCopy->count), newSubscriber->address);
 8001fc0:	693b      	ldr	r3, [r7, #16]
 8001fc2:	f103 0114 	add.w	r1, r3, #20
 8001fc6:	693b      	ldr	r3, [r7, #16]
 8001fc8:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 8001fcc:	683b      	ldr	r3, [r7, #0]
 8001fce:	f107 000c 	add.w	r0, r7, #12
 8001fd2:	f7ff ffb7 	bl	8001f44 <findSubscriber>
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	75fb      	strb	r3, [r7, #23]
    if (exist) {
 8001fda:	7dfb      	ldrb	r3, [r7, #23]
 8001fdc:	2b00      	cmp	r3, #0
 8001fde:	d011      	beq.n	8002004 <subscribe+0x5e>
        deviceCopy->subscribers[i] = *newSubscriber; //edit existing subscriber
 8001fe0:	68fa      	ldr	r2, [r7, #12]
 8001fe2:	6939      	ldr	r1, [r7, #16]
 8001fe4:	4613      	mov	r3, r2
 8001fe6:	00db      	lsls	r3, r3, #3
 8001fe8:	4413      	add	r3, r2
 8001fea:	009b      	lsls	r3, r3, #2
 8001fec:	440b      	add	r3, r1
 8001fee:	3310      	adds	r3, #16
 8001ff0:	683a      	ldr	r2, [r7, #0]
 8001ff2:	1d1c      	adds	r4, r3, #4
 8001ff4:	4615      	mov	r5, r2
 8001ff6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001ff8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001ffa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001ffc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001ffe:	682b      	ldr	r3, [r5, #0]
 8002000:	6023      	str	r3, [r4, #0]
 8002002:	e021      	b.n	8002048 <subscribe+0xa2>
    }
    else if (i < MAX_PHONES-1) {
 8002004:	68fb      	ldr	r3, [r7, #12]
 8002006:	2b08      	cmp	r3, #8
 8002008:	dc19      	bgt.n	800203e <subscribe+0x98>
        deviceCopy->subscribers[i+1] = *newSubscriber; //add new subscriber
 800200a:	68fb      	ldr	r3, [r7, #12]
 800200c:	1c5a      	adds	r2, r3, #1
 800200e:	6939      	ldr	r1, [r7, #16]
 8002010:	4613      	mov	r3, r2
 8002012:	00db      	lsls	r3, r3, #3
 8002014:	4413      	add	r3, r2
 8002016:	009b      	lsls	r3, r3, #2
 8002018:	440b      	add	r3, r1
 800201a:	3310      	adds	r3, #16
 800201c:	683a      	ldr	r2, [r7, #0]
 800201e:	1d1c      	adds	r4, r3, #4
 8002020:	4615      	mov	r5, r2
 8002022:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002024:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002026:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002028:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800202a:	682b      	ldr	r3, [r5, #0]
 800202c:	6023      	str	r3, [r4, #0]
        (deviceCopy->count)++; //add 1 to count
 800202e:	693b      	ldr	r3, [r7, #16]
 8002030:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8002034:	1c5a      	adds	r2, r3, #1
 8002036:	693b      	ldr	r3, [r7, #16]
 8002038:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
 800203c:	e004      	b.n	8002048 <subscribe+0xa2>
    }
    else {
       free(deviceCopy);
 800203e:	6938      	ldr	r0, [r7, #16]
 8002040:	f006 fdf4 	bl	8008c2c <free>
       return 0;
 8002044:	2300      	movs	r3, #0
 8002046:	e014      	b.n	8002072 <subscribe+0xcc>
    }

    if (handleWriteFile(deviceCopy)) {
 8002048:	6938      	ldr	r0, [r7, #16]
 800204a:	f7ff ff50 	bl	8001eee <handleWriteFile>
 800204e:	4603      	mov	r3, r0
 8002050:	2b00      	cmp	r3, #0
 8002052:	d00a      	beq.n	800206a <subscribe+0xc4>
        memcpy(device, deviceCopy, sizeof(struct Device));
 8002054:	f44f 72cc 	mov.w	r2, #408	; 0x198
 8002058:	6939      	ldr	r1, [r7, #16]
 800205a:	6878      	ldr	r0, [r7, #4]
 800205c:	f006 fdee 	bl	8008c3c <memcpy>
        free(deviceCopy);
 8002060:	6938      	ldr	r0, [r7, #16]
 8002062:	f006 fde3 	bl	8008c2c <free>
        return 1;
 8002066:	2301      	movs	r3, #1
 8002068:	e003      	b.n	8002072 <subscribe+0xcc>
    }
    else {
        free(deviceCopy);
 800206a:	6938      	ldr	r0, [r7, #16]
 800206c:	f006 fdde 	bl	8008c2c <free>
        return 0;
 8002070:	2300      	movs	r3, #0
    }

}
 8002072:	4618      	mov	r0, r3
 8002074:	3718      	adds	r7, #24
 8002076:	46bd      	mov	sp, r7
 8002078:	bdb0      	pop	{r4, r5, r7, pc}

0800207a <unsubscribe>:

bool unsubscribe(struct Device* device, const char* address) {
 800207a:	b580      	push	{r7, lr}
 800207c:	b086      	sub	sp, #24
 800207e:	af00      	add	r7, sp, #0
 8002080:	6078      	str	r0, [r7, #4]
 8002082:	6039      	str	r1, [r7, #0]
    int i = 0;
 8002084:	2300      	movs	r3, #0
 8002086:	60bb      	str	r3, [r7, #8]
    int j = 0;
 8002088:	2300      	movs	r3, #0
 800208a:	617b      	str	r3, [r7, #20]
    bool exist = 0;
 800208c:	2300      	movs	r3, #0
 800208e:	74fb      	strb	r3, [r7, #19]
    struct Device* deviceCopy = copyDevice(device); //deepCopy as temporary device struct
 8002090:	6878      	ldr	r0, [r7, #4]
 8002092:	f7ff fd85 	bl	8001ba0 <copyDevice>
 8002096:	60f8      	str	r0, [r7, #12]

    exist = findSubscriber(&i, deviceCopy->subscribers, &(deviceCopy->count), address);
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	f103 0114 	add.w	r1, r3, #20
 800209e:	68fb      	ldr	r3, [r7, #12]
 80020a0:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 80020a4:	f107 0008 	add.w	r0, r7, #8
 80020a8:	683b      	ldr	r3, [r7, #0]
 80020aa:	f7ff ff4b 	bl	8001f44 <findSubscriber>
 80020ae:	4603      	mov	r3, r0
 80020b0:	74fb      	strb	r3, [r7, #19]

    if (exist) {
 80020b2:	7cfb      	ldrb	r3, [r7, #19]
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	d031      	beq.n	800211c <unsubscribe+0xa2>
        for (j = i; j < deviceCopy->count - 1; j++) {
 80020b8:	68bb      	ldr	r3, [r7, #8]
 80020ba:	617b      	str	r3, [r7, #20]
 80020bc:	e019      	b.n	80020f2 <unsubscribe+0x78>
            memcpy(&(deviceCopy->subscribers[j]), &(deviceCopy->subscribers[j+1]), sizeof(struct Subscriber)); // Shift all elements after index i by 1 pos
 80020be:	697a      	ldr	r2, [r7, #20]
 80020c0:	4613      	mov	r3, r2
 80020c2:	00db      	lsls	r3, r3, #3
 80020c4:	4413      	add	r3, r2
 80020c6:	009b      	lsls	r3, r3, #2
 80020c8:	3310      	adds	r3, #16
 80020ca:	68fa      	ldr	r2, [r7, #12]
 80020cc:	4413      	add	r3, r2
 80020ce:	1d18      	adds	r0, r3, #4
 80020d0:	697b      	ldr	r3, [r7, #20]
 80020d2:	1c5a      	adds	r2, r3, #1
 80020d4:	4613      	mov	r3, r2
 80020d6:	00db      	lsls	r3, r3, #3
 80020d8:	4413      	add	r3, r2
 80020da:	009b      	lsls	r3, r3, #2
 80020dc:	3310      	adds	r3, #16
 80020de:	68fa      	ldr	r2, [r7, #12]
 80020e0:	4413      	add	r3, r2
 80020e2:	3304      	adds	r3, #4
 80020e4:	2224      	movs	r2, #36	; 0x24
 80020e6:	4619      	mov	r1, r3
 80020e8:	f006 fda8 	bl	8008c3c <memcpy>
        for (j = i; j < deviceCopy->count - 1; j++) {
 80020ec:	697b      	ldr	r3, [r7, #20]
 80020ee:	3301      	adds	r3, #1
 80020f0:	617b      	str	r3, [r7, #20]
 80020f2:	68fb      	ldr	r3, [r7, #12]
 80020f4:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 80020f8:	3b01      	subs	r3, #1
 80020fa:	697a      	ldr	r2, [r7, #20]
 80020fc:	429a      	cmp	r2, r3
 80020fe:	dbde      	blt.n	80020be <unsubscribe+0x44>
        }
        (deviceCopy->count)--; // Decrement the count
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8002106:	1e5a      	subs	r2, r3, #1
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
    else {
        free(deviceCopy);
        return 0;
    }

    if (handleWriteFile(deviceCopy)) {
 800210e:	68f8      	ldr	r0, [r7, #12]
 8002110:	f7ff feed 	bl	8001eee <handleWriteFile>
 8002114:	4603      	mov	r3, r0
 8002116:	2b00      	cmp	r3, #0
 8002118:	d010      	beq.n	800213c <unsubscribe+0xc2>
 800211a:	e004      	b.n	8002126 <unsubscribe+0xac>
        free(deviceCopy);
 800211c:	68f8      	ldr	r0, [r7, #12]
 800211e:	f006 fd85 	bl	8008c2c <free>
        return 0;
 8002122:	2300      	movs	r3, #0
 8002124:	e00e      	b.n	8002144 <unsubscribe+0xca>
        memcpy(device, deviceCopy, sizeof(struct Device));
 8002126:	f44f 72cc 	mov.w	r2, #408	; 0x198
 800212a:	68f9      	ldr	r1, [r7, #12]
 800212c:	6878      	ldr	r0, [r7, #4]
 800212e:	f006 fd85 	bl	8008c3c <memcpy>
        free(deviceCopy);
 8002132:	68f8      	ldr	r0, [r7, #12]
 8002134:	f006 fd7a 	bl	8008c2c <free>
        return 1;
 8002138:	2301      	movs	r3, #1
 800213a:	e003      	b.n	8002144 <unsubscribe+0xca>
    }
    else {
        free(deviceCopy);
 800213c:	68f8      	ldr	r0, [r7, #12]
 800213e:	f006 fd75 	bl	8008c2c <free>
        return 0;
 8002142:	2300      	movs	r3, #0
    }

}
 8002144:	4618      	mov	r0, r3
 8002146:	3718      	adds	r7, #24
 8002148:	46bd      	mov	sp, r7
 800214a:	bd80      	pop	{r7, pc}

0800214c <fillUnixTime>:

void fillUnixTime(time_t* unixTime, const char* str) {
 800214c:	b580      	push	{r7, lr}
 800214e:	b096      	sub	sp, #88	; 0x58
 8002150:	af04      	add	r7, sp, #16
 8002152:	6078      	str	r0, [r7, #4]
 8002154:	6039      	str	r1, [r7, #0]
    struct tm tm_time = { 0 };
 8002156:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800215a:	2224      	movs	r2, #36	; 0x24
 800215c:	2100      	movs	r1, #0
 800215e:	4618      	mov	r0, r3
 8002160:	f006 fd7a 	bl	8008c58 <memset>
    int year, month, day, hour, minute, second;

    sscanf(str, "%4d%2d%2d%2d%2d%2d", &year, &month, &day, &hour, &minute, &second);
 8002164:	f107 011c 	add.w	r1, r7, #28
 8002168:	f107 0220 	add.w	r2, r7, #32
 800216c:	f107 030c 	add.w	r3, r7, #12
 8002170:	9303      	str	r3, [sp, #12]
 8002172:	f107 0310 	add.w	r3, r7, #16
 8002176:	9302      	str	r3, [sp, #8]
 8002178:	f107 0314 	add.w	r3, r7, #20
 800217c:	9301      	str	r3, [sp, #4]
 800217e:	f107 0318 	add.w	r3, r7, #24
 8002182:	9300      	str	r3, [sp, #0]
 8002184:	460b      	mov	r3, r1
 8002186:	4910      	ldr	r1, [pc, #64]	; (80021c8 <fillUnixTime+0x7c>)
 8002188:	6838      	ldr	r0, [r7, #0]
 800218a:	f007 ffa3 	bl	800a0d4 <siscanf>

    tm_time.tm_year = year - 1900;
 800218e:	6a3b      	ldr	r3, [r7, #32]
 8002190:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
 8002194:	63bb      	str	r3, [r7, #56]	; 0x38
    tm_time.tm_mon = month - 1;
 8002196:	69fb      	ldr	r3, [r7, #28]
 8002198:	3b01      	subs	r3, #1
 800219a:	637b      	str	r3, [r7, #52]	; 0x34
    tm_time.tm_mday = day;
 800219c:	69bb      	ldr	r3, [r7, #24]
 800219e:	633b      	str	r3, [r7, #48]	; 0x30
    tm_time.tm_hour = hour;
 80021a0:	697b      	ldr	r3, [r7, #20]
 80021a2:	62fb      	str	r3, [r7, #44]	; 0x2c
    tm_time.tm_min = minute;
 80021a4:	693b      	ldr	r3, [r7, #16]
 80021a6:	62bb      	str	r3, [r7, #40]	; 0x28
    tm_time.tm_sec = second;
 80021a8:	68fb      	ldr	r3, [r7, #12]
 80021aa:	627b      	str	r3, [r7, #36]	; 0x24

    *unixTime = mktime(&tm_time);
 80021ac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021b0:	4618      	mov	r0, r3
 80021b2:	f006 fe31 	bl	8008e18 <mktime>
 80021b6:	4602      	mov	r2, r0
 80021b8:	460b      	mov	r3, r1
 80021ba:	6879      	ldr	r1, [r7, #4]
 80021bc:	e9c1 2300 	strd	r2, r3, [r1]
}
 80021c0:	bf00      	nop
 80021c2:	3748      	adds	r7, #72	; 0x48
 80021c4:	46bd      	mov	sp, r7
 80021c6:	bd80      	pop	{r7, pc}
 80021c8:	0800f78c 	.word	0x0800f78c

080021cc <unixTimeToString>:

void unixTimeToString(char* str, const time_t* unixTime) {
 80021cc:	b5b0      	push	{r4, r5, r7, lr}
 80021ce:	b08c      	sub	sp, #48	; 0x30
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	6078      	str	r0, [r7, #4]
 80021d4:	6039      	str	r1, [r7, #0]
    struct tm timeinfo = *localtime(unixTime);
 80021d6:	6838      	ldr	r0, [r7, #0]
 80021d8:	f006 fc0e 	bl	80089f8 <localtime>
 80021dc:	4603      	mov	r3, r0
 80021de:	f107 040c 	add.w	r4, r7, #12
 80021e2:	461d      	mov	r5, r3
 80021e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80021e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80021e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80021ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80021ec:	682b      	ldr	r3, [r5, #0]
 80021ee:	6023      	str	r3, [r4, #0]
    strftime(str, FORMATTED_TIME_LEN, "%d.%m.%Y %H:%M:%S", &timeinfo);
 80021f0:	f107 030c 	add.w	r3, r7, #12
 80021f4:	4a04      	ldr	r2, [pc, #16]	; (8002208 <unixTimeToString+0x3c>)
 80021f6:	2114      	movs	r1, #20
 80021f8:	6878      	ldr	r0, [r7, #4]
 80021fa:	f008 fd2b 	bl	800ac54 <strftime>
}
 80021fe:	bf00      	nop
 8002200:	3730      	adds	r7, #48	; 0x30
 8002202:	46bd      	mov	sp, r7
 8002204:	bdb0      	pop	{r4, r5, r7, pc}
 8002206:	bf00      	nop
 8002208:	0800f7a0 	.word	0x0800f7a0

0800220c <setPositionAndTime>:

bool setPositionAndTime(float* position,time_t* unixTime, const char* gpsBuffer) {
 800220c:	b580      	push	{r7, lr}
 800220e:	b08c      	sub	sp, #48	; 0x30
 8002210:	af02      	add	r7, sp, #8
 8002212:	60f8      	str	r0, [r7, #12]
 8002214:	60b9      	str	r1, [r7, #8]
 8002216:	607a      	str	r2, [r7, #4]

    char timeString[MAX_TIME_LEN + 1] = { 0 };
 8002218:	2300      	movs	r3, #0
 800221a:	61bb      	str	r3, [r7, #24]
 800221c:	f107 031c 	add.w	r3, r7, #28
 8002220:	2200      	movs	r2, #0
 8002222:	601a      	str	r2, [r3, #0]
 8002224:	605a      	str	r2, [r3, #4]
 8002226:	f8c3 2007 	str.w	r2, [r3, #7]
    float lat, lng;
    if (sscanf(gpsBuffer, "\r\n+CGNSINF: %*d,%*d,%[^.].%*[0-9],%f,%f", timeString, &lat, &lng) == 3) { //Edit \r\n
 800222a:	f107 0114 	add.w	r1, r7, #20
 800222e:	f107 0218 	add.w	r2, r7, #24
 8002232:	f107 0310 	add.w	r3, r7, #16
 8002236:	9300      	str	r3, [sp, #0]
 8002238:	460b      	mov	r3, r1
 800223a:	490d      	ldr	r1, [pc, #52]	; (8002270 <setPositionAndTime+0x64>)
 800223c:	6878      	ldr	r0, [r7, #4]
 800223e:	f007 ff49 	bl	800a0d4 <siscanf>
 8002242:	4603      	mov	r3, r0
 8002244:	2b03      	cmp	r3, #3
 8002246:	d10e      	bne.n	8002266 <setPositionAndTime+0x5a>
        fillUnixTime(unixTime, timeString);
 8002248:	f107 0318 	add.w	r3, r7, #24
 800224c:	4619      	mov	r1, r3
 800224e:	68b8      	ldr	r0, [r7, #8]
 8002250:	f7ff ff7c 	bl	800214c <fillUnixTime>
        position[0] = lat;
 8002254:	697a      	ldr	r2, [r7, #20]
 8002256:	68fb      	ldr	r3, [r7, #12]
 8002258:	601a      	str	r2, [r3, #0]
        position[1] = lng;
 800225a:	68fb      	ldr	r3, [r7, #12]
 800225c:	3304      	adds	r3, #4
 800225e:	693a      	ldr	r2, [r7, #16]
 8002260:	601a      	str	r2, [r3, #0]
        //printf("Time: %s, Latitude: %.6f, Longitude: %.6f\n", timeString, lat, lng);
        return 1;
 8002262:	2301      	movs	r3, #1
 8002264:	e000      	b.n	8002268 <setPositionAndTime+0x5c>
    }
    else {
        return 0;
 8002266:	2300      	movs	r3, #0
    }

}
 8002268:	4618      	mov	r0, r3
 800226a:	3728      	adds	r7, #40	; 0x28
 800226c:	46bd      	mov	sp, r7
 800226e:	bd80      	pop	{r7, pc}
 8002270:	0800f7b4 	.word	0x0800f7b4

08002274 <gpsPositioning>:

bool gpsPositioning(struct Device* device, const uint32_t timeout){
 8002274:	b580      	push	{r7, lr}
 8002276:	b0a4      	sub	sp, #144	; 0x90
 8002278:	af02      	add	r7, sp, #8
 800227a:	6078      	str	r0, [r7, #4]
 800227c:	6039      	str	r1, [r7, #0]

	uint32_t startTime = 0;
 800227e:	2300      	movs	r3, #0
 8002280:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    bool answer = 0;
 8002284:	2300      	movs	r3, #0
 8002286:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
	char response[MAX_GPS_RESPONSE]={0};
 800228a:	2300      	movs	r3, #0
 800228c:	60bb      	str	r3, [r7, #8]
 800228e:	f107 030c 	add.w	r3, r7, #12
 8002292:	2274      	movs	r2, #116	; 0x74
 8002294:	2100      	movs	r1, #0
 8002296:	4618      	mov	r0, r3
 8002298:	f006 fcde 	bl	8008c58 <memset>


    if(!sendAtCommand("AT+CGNSPWR=1\r",2000,"OK"))    //Turn on the GNSS power.
 800229c:	4a3b      	ldr	r2, [pc, #236]	; (800238c <gpsPositioning+0x118>)
 800229e:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80022a2:	483b      	ldr	r0, [pc, #236]	; (8002390 <gpsPositioning+0x11c>)
 80022a4:	f7fe ff8e 	bl	80011c4 <sendAtCommand>
 80022a8:	4603      	mov	r3, r0
 80022aa:	f083 0301 	eor.w	r3, r3, #1
 80022ae:	b2db      	uxtb	r3, r3
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d001      	beq.n	80022b8 <gpsPositioning+0x44>
		return 0;
 80022b4:	2300      	movs	r3, #0
 80022b6:	e064      	b.n	8002382 <gpsPositioning+0x10e>

    startTime = HAL_GetTick();
 80022b8:	f001 fd22 	bl	8003d00 <HAL_GetTick>
 80022bc:	f8c7 0080 	str.w	r0, [r7, #128]	; 0x80

    // this loop waits for the answer
    while( answer == 0 && ((HAL_GetTick()-startTime) < timeout) ) {
 80022c0:	e03a      	b.n	8002338 <gpsPositioning+0xc4>
        if(getSerialResponse("AT+CGNSINF\r",2000,"OK",response,sizeof(response))) {
 80022c2:	f107 0308 	add.w	r3, r7, #8
 80022c6:	2278      	movs	r2, #120	; 0x78
 80022c8:	9200      	str	r2, [sp, #0]
 80022ca:	4a30      	ldr	r2, [pc, #192]	; (800238c <gpsPositioning+0x118>)
 80022cc:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80022d0:	4830      	ldr	r0, [pc, #192]	; (8002394 <gpsPositioning+0x120>)
 80022d2:	f7ff f815 	bl	8001300 <getSerialResponse>
 80022d6:	4603      	mov	r3, r0
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d01d      	beq.n	8002318 <gpsPositioning+0xa4>
			if(strstr(response,",,,,,") == NULL) {
 80022dc:	f107 0308 	add.w	r3, r7, #8
 80022e0:	492d      	ldr	r1, [pc, #180]	; (8002398 <gpsPositioning+0x124>)
 80022e2:	4618      	mov	r0, r3
 80022e4:	f008 fcdf 	bl	800aca6 <strstr>
 80022e8:	4603      	mov	r3, r0
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	d103      	bne.n	80022f6 <gpsPositioning+0x82>
            	answer = 1;
 80022ee:	2301      	movs	r3, #1
 80022f0:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 80022f4:	e020      	b.n	8002338 <gpsPositioning+0xc4>
            }
            else {
            	memset(response,'\0',strlen(response));
 80022f6:	f107 0308 	add.w	r3, r7, #8
 80022fa:	4618      	mov	r0, r3
 80022fc:	f7fd ff7a 	bl	80001f4 <strlen>
 8002300:	4602      	mov	r2, r0
 8002302:	f107 0308 	add.w	r3, r7, #8
 8002306:	2100      	movs	r1, #0
 8002308:	4618      	mov	r0, r3
 800230a:	f006 fca5 	bl	8008c58 <memset>
            	HAL_Delay(1000);
 800230e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002312:	f001 fd01 	bl	8003d18 <HAL_Delay>
 8002316:	e00f      	b.n	8002338 <gpsPositioning+0xc4>
            }
        }
        else {
            memset(response,'\0',strlen(response));
 8002318:	f107 0308 	add.w	r3, r7, #8
 800231c:	4618      	mov	r0, r3
 800231e:	f7fd ff69 	bl	80001f4 <strlen>
 8002322:	4602      	mov	r2, r0
 8002324:	f107 0308 	add.w	r3, r7, #8
 8002328:	2100      	movs	r1, #0
 800232a:	4618      	mov	r0, r3
 800232c:	f006 fc94 	bl	8008c58 <memset>
            HAL_Delay(1000);
 8002330:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002334:	f001 fcf0 	bl	8003d18 <HAL_Delay>
    while( answer == 0 && ((HAL_GetTick()-startTime) < timeout) ) {
 8002338:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 800233c:	f083 0301 	eor.w	r3, r3, #1
 8002340:	b2db      	uxtb	r3, r3
 8002342:	2b00      	cmp	r3, #0
 8002344:	d008      	beq.n	8002358 <gpsPositioning+0xe4>
 8002346:	f001 fcdb 	bl	8003d00 <HAL_GetTick>
 800234a:	4602      	mov	r2, r0
 800234c:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002350:	1ad3      	subs	r3, r2, r3
 8002352:	683a      	ldr	r2, [r7, #0]
 8002354:	429a      	cmp	r2, r3
 8002356:	d8b4      	bhi.n	80022c2 <gpsPositioning+0x4e>
            }
        }

	sendAtCommand("AT+CGNSPWR=0\r",2000,"OK"); //Turn off the GNSS power
 8002358:	4a0c      	ldr	r2, [pc, #48]	; (800238c <gpsPositioning+0x118>)
 800235a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800235e:	480f      	ldr	r0, [pc, #60]	; (800239c <gpsPositioning+0x128>)
 8002360:	f7fe ff30 	bl	80011c4 <sendAtCommand>

	if (answer) {
 8002364:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 8002368:	2b00      	cmp	r3, #0
 800236a:	d009      	beq.n	8002380 <gpsPositioning+0x10c>
		return setPositionAndTime(device->position,&(device->unixTime),response);
 800236c:	6878      	ldr	r0, [r7, #4]
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	3308      	adds	r3, #8
 8002372:	f107 0208 	add.w	r2, r7, #8
 8002376:	4619      	mov	r1, r3
 8002378:	f7ff ff48 	bl	800220c <setPositionAndTime>
 800237c:	4603      	mov	r3, r0
 800237e:	e000      	b.n	8002382 <gpsPositioning+0x10e>
	}
	else {
		return 0;
 8002380:	2300      	movs	r3, #0
	}

}
 8002382:	4618      	mov	r0, r3
 8002384:	3788      	adds	r7, #136	; 0x88
 8002386:	46bd      	mov	sp, r7
 8002388:	bd80      	pop	{r7, pc}
 800238a:	bf00      	nop
 800238c:	0800f550 	.word	0x0800f550
 8002390:	0800f7dc 	.word	0x0800f7dc
 8002394:	0800f7ec 	.word	0x0800f7ec
 8002398:	0800f7f8 	.word	0x0800f7f8
 800239c:	0800f800 	.word	0x0800f800

080023a0 <prefix>:

bool prefix(const char* str, const char* pre)
{
 80023a0:	b580      	push	{r7, lr}
 80023a2:	b082      	sub	sp, #8
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
 80023a8:	6039      	str	r1, [r7, #0]
    return strncmp(str, pre, strlen(pre)) == 0;
 80023aa:	6838      	ldr	r0, [r7, #0]
 80023ac:	f7fd ff22 	bl	80001f4 <strlen>
 80023b0:	4603      	mov	r3, r0
 80023b2:	461a      	mov	r2, r3
 80023b4:	6839      	ldr	r1, [r7, #0]
 80023b6:	6878      	ldr	r0, [r7, #4]
 80023b8:	f008 fc4e 	bl	800ac58 <strncmp>
 80023bc:	4603      	mov	r3, r0
 80023be:	2b00      	cmp	r3, #0
 80023c0:	bf0c      	ite	eq
 80023c2:	2301      	moveq	r3, #1
 80023c4:	2300      	movne	r3, #0
 80023c6:	b2db      	uxtb	r3, r3
}
 80023c8:	4618      	mov	r0, r3
 80023ca:	3708      	adds	r7, #8
 80023cc:	46bd      	mov	sp, r7
 80023ce:	bd80      	pop	{r7, pc}

080023d0 <findLength>:

int findLength(const char* input) {
 80023d0:	b580      	push	{r7, lr}
 80023d2:	b088      	sub	sp, #32
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
    char temp[4] = { 0 };
 80023d8:	2300      	movs	r3, #0
 80023da:	60fb      	str	r3, [r7, #12]
    char reve[4] = { 0 };
 80023dc:	2300      	movs	r3, #0
 80023de:	60bb      	str	r3, [r7, #8]
    char ch = 0;
 80023e0:	2300      	movs	r3, #0
 80023e2:	74fb      	strb	r3, [r7, #19]
    for (int i = 1;i < 4; ++i) {
 80023e4:	2301      	movs	r3, #1
 80023e6:	61fb      	str	r3, [r7, #28]
 80023e8:	e015      	b.n	8002416 <findLength+0x46>
        ch = *(input - i);
 80023ea:	69fb      	ldr	r3, [r7, #28]
 80023ec:	425b      	negs	r3, r3
 80023ee:	687a      	ldr	r2, [r7, #4]
 80023f0:	4413      	add	r3, r2
 80023f2:	781b      	ldrb	r3, [r3, #0]
 80023f4:	74fb      	strb	r3, [r7, #19]
        if (ch < '0' || ch > '9')
 80023f6:	7cfb      	ldrb	r3, [r7, #19]
 80023f8:	2b2f      	cmp	r3, #47	; 0x2f
 80023fa:	d90f      	bls.n	800241c <findLength+0x4c>
 80023fc:	7cfb      	ldrb	r3, [r7, #19]
 80023fe:	2b39      	cmp	r3, #57	; 0x39
 8002400:	d80c      	bhi.n	800241c <findLength+0x4c>
            break;
        temp[i - 1] = ch;
 8002402:	69fb      	ldr	r3, [r7, #28]
 8002404:	3b01      	subs	r3, #1
 8002406:	3320      	adds	r3, #32
 8002408:	443b      	add	r3, r7
 800240a:	7cfa      	ldrb	r2, [r7, #19]
 800240c:	f803 2c14 	strb.w	r2, [r3, #-20]
    for (int i = 1;i < 4; ++i) {
 8002410:	69fb      	ldr	r3, [r7, #28]
 8002412:	3301      	adds	r3, #1
 8002414:	61fb      	str	r3, [r7, #28]
 8002416:	69fb      	ldr	r3, [r7, #28]
 8002418:	2b03      	cmp	r3, #3
 800241a:	dde6      	ble.n	80023ea <findLength+0x1a>

    }
    int j = strlen(temp) - 1;
 800241c:	f107 030c 	add.w	r3, r7, #12
 8002420:	4618      	mov	r0, r3
 8002422:	f7fd fee7 	bl	80001f4 <strlen>
 8002426:	4603      	mov	r3, r0
 8002428:	3b01      	subs	r3, #1
 800242a:	61bb      	str	r3, [r7, #24]
    for (int i = 0; i < strlen(temp); ++i)
 800242c:	2300      	movs	r3, #0
 800242e:	617b      	str	r3, [r7, #20]
 8002430:	e010      	b.n	8002454 <findLength+0x84>
    {
        reve[i] = temp[j];
 8002432:	f107 020c 	add.w	r2, r7, #12
 8002436:	69bb      	ldr	r3, [r7, #24]
 8002438:	4413      	add	r3, r2
 800243a:	7819      	ldrb	r1, [r3, #0]
 800243c:	f107 0208 	add.w	r2, r7, #8
 8002440:	697b      	ldr	r3, [r7, #20]
 8002442:	4413      	add	r3, r2
 8002444:	460a      	mov	r2, r1
 8002446:	701a      	strb	r2, [r3, #0]
        --j;
 8002448:	69bb      	ldr	r3, [r7, #24]
 800244a:	3b01      	subs	r3, #1
 800244c:	61bb      	str	r3, [r7, #24]
    for (int i = 0; i < strlen(temp); ++i)
 800244e:	697b      	ldr	r3, [r7, #20]
 8002450:	3301      	adds	r3, #1
 8002452:	617b      	str	r3, [r7, #20]
 8002454:	f107 030c 	add.w	r3, r7, #12
 8002458:	4618      	mov	r0, r3
 800245a:	f7fd fecb 	bl	80001f4 <strlen>
 800245e:	4602      	mov	r2, r0
 8002460:	697b      	ldr	r3, [r7, #20]
 8002462:	429a      	cmp	r2, r3
 8002464:	d8e5      	bhi.n	8002432 <findLength+0x62>

    }
    return atoi(reve);
 8002466:	f107 0308 	add.w	r3, r7, #8
 800246a:	4618      	mov	r0, r3
 800246c:	f006 fa96 	bl	800899c <atoi>
 8002470:	4603      	mov	r3, r0
}
 8002472:	4618      	mov	r0, r3
 8002474:	3720      	adds	r7, #32
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}
	...

0800247c <splitText>:

uint16_t splitText(char* input) {
 800247c:	b580      	push	{r7, lr}
 800247e:	b086      	sub	sp, #24
 8002480:	af00      	add	r7, sp, #0
 8002482:	6078      	str	r0, [r7, #4]
    char* p, * m;
    uint8_t delimLen = 2; //\r\n
 8002484:	2302      	movs	r3, #2
 8002486:	737b      	strb	r3, [r7, #13]
    int messageLen = 0;
 8002488:	2300      	movs	r3, #0
 800248a:	613b      	str	r3, [r7, #16]
    uint16_t count = 0;
 800248c:	2300      	movs	r3, #0
 800248e:	81fb      	strh	r3, [r7, #14]

    p = strstr(input, "\r\n");
 8002490:	4919      	ldr	r1, [pc, #100]	; (80024f8 <splitText+0x7c>)
 8002492:	6878      	ldr	r0, [r7, #4]
 8002494:	f008 fc07 	bl	800aca6 <strstr>
 8002498:	6178      	str	r0, [r7, #20]
    messageLen = findLength(p);
 800249a:	6978      	ldr	r0, [r7, #20]
 800249c:	f7ff ff98 	bl	80023d0 <findLength>
 80024a0:	6138      	str	r0, [r7, #16]
    m = input;
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	60bb      	str	r3, [r7, #8]

    while (p && messageLen) {
 80024a6:	e01b      	b.n	80024e0 <splitText+0x64>
        m = p + delimLen + messageLen;
 80024a8:	7b7a      	ldrb	r2, [r7, #13]
 80024aa:	693b      	ldr	r3, [r7, #16]
 80024ac:	4413      	add	r3, r2
 80024ae:	697a      	ldr	r2, [r7, #20]
 80024b0:	4413      	add	r3, r2
 80024b2:	60bb      	str	r3, [r7, #8]
        *m = '\0';
 80024b4:	68bb      	ldr	r3, [r7, #8]
 80024b6:	2200      	movs	r2, #0
 80024b8:	701a      	strb	r2, [r3, #0]
        m += delimLen;
 80024ba:	7b7b      	ldrb	r3, [r7, #13]
 80024bc:	68ba      	ldr	r2, [r7, #8]
 80024be:	4413      	add	r3, r2
 80024c0:	60bb      	str	r3, [r7, #8]
        //printf("%d\n",count);
        p = strstr(m, "\r\n");
 80024c2:	490d      	ldr	r1, [pc, #52]	; (80024f8 <splitText+0x7c>)
 80024c4:	68b8      	ldr	r0, [r7, #8]
 80024c6:	f008 fbee 	bl	800aca6 <strstr>
 80024ca:	6178      	str	r0, [r7, #20]
        if (p) {
 80024cc:	697b      	ldr	r3, [r7, #20]
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d003      	beq.n	80024da <splitText+0x5e>
            messageLen = findLength(p);
 80024d2:	6978      	ldr	r0, [r7, #20]
 80024d4:	f7ff ff7c 	bl	80023d0 <findLength>
 80024d8:	6138      	str	r0, [r7, #16]
            //printf("%d\r\n", messageLen);
        }
        ++count;
 80024da:	89fb      	ldrh	r3, [r7, #14]
 80024dc:	3301      	adds	r3, #1
 80024de:	81fb      	strh	r3, [r7, #14]
    while (p && messageLen) {
 80024e0:	697b      	ldr	r3, [r7, #20]
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d002      	beq.n	80024ec <splitText+0x70>
 80024e6:	693b      	ldr	r3, [r7, #16]
 80024e8:	2b00      	cmp	r3, #0
 80024ea:	d1dd      	bne.n	80024a8 <splitText+0x2c>
        //printf("%d\r\n", messageLen);
        //printf("%d",count);
    }
    return count;
 80024ec:	89fb      	ldrh	r3, [r7, #14]
}
 80024ee:	4618      	mov	r0, r3
 80024f0:	3718      	adds	r7, #24
 80024f2:	46bd      	mov	sp, r7
 80024f4:	bd80      	pop	{r7, pc}
 80024f6:	bf00      	nop
 80024f8:	0800f768 	.word	0x0800f768
 80024fc:	00000000 	.word	0x00000000

08002500 <haversine>:

double haversine(double lat1,double lng1,double lat2,double lng2)
{
 8002500:	b5b0      	push	{r4, r5, r7, lr}
 8002502:	b08e      	sub	sp, #56	; 0x38
 8002504:	af00      	add	r7, sp, #0
 8002506:	ed87 0b06 	vstr	d0, [r7, #24]
 800250a:	ed87 1b04 	vstr	d1, [r7, #16]
 800250e:	ed87 2b02 	vstr	d2, [r7, #8]
 8002512:	ed87 3b00 	vstr	d3, [r7]
    //printf("%f,%f,%f,%f\n", lat1, lng1, lat2, lng2);

    double dx, dy, dz;
    lng1 -= lng2;
 8002516:	e9d7 2300 	ldrd	r2, r3, [r7]
 800251a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800251e:	f7fd fecb 	bl	80002b8 <__aeabi_dsub>
 8002522:	4602      	mov	r2, r0
 8002524:	460b      	mov	r3, r1
 8002526:	e9c7 2304 	strd	r2, r3, [r7, #16]
    lng1 *= (3.14159265358979323846 / 180);
 800252a:	a363      	add	r3, pc, #396	; (adr r3, 80026b8 <haversine+0x1b8>)
 800252c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002530:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002534:	f7fe f878 	bl	8000628 <__aeabi_dmul>
 8002538:	4602      	mov	r2, r0
 800253a:	460b      	mov	r3, r1
 800253c:	e9c7 2304 	strd	r2, r3, [r7, #16]
    lat1 *= (3.14159265358979323846 / 180);
 8002540:	a35d      	add	r3, pc, #372	; (adr r3, 80026b8 <haversine+0x1b8>)
 8002542:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002546:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800254a:	f7fe f86d 	bl	8000628 <__aeabi_dmul>
 800254e:	4602      	mov	r2, r0
 8002550:	460b      	mov	r3, r1
 8002552:	e9c7 2306 	strd	r2, r3, [r7, #24]
    lat2 *= (3.14159265358979323846 / 180);
 8002556:	a358      	add	r3, pc, #352	; (adr r3, 80026b8 <haversine+0x1b8>)
 8002558:	e9d3 2300 	ldrd	r2, r3, [r3]
 800255c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002560:	f7fe f862 	bl	8000628 <__aeabi_dmul>
 8002564:	4602      	mov	r2, r0
 8002566:	460b      	mov	r3, r1
 8002568:	e9c7 2302 	strd	r2, r3, [r7, #8]

    dz = sin(lat1) - sin(lat2);
 800256c:	ed97 0b06 	vldr	d0, [r7, #24]
 8002570:	f004 fe9a 	bl	80072a8 <sin>
 8002574:	ec55 4b10 	vmov	r4, r5, d0
 8002578:	ed97 0b02 	vldr	d0, [r7, #8]
 800257c:	f004 fe94 	bl	80072a8 <sin>
 8002580:	ec53 2b10 	vmov	r2, r3, d0
 8002584:	4620      	mov	r0, r4
 8002586:	4629      	mov	r1, r5
 8002588:	f7fd fe96 	bl	80002b8 <__aeabi_dsub>
 800258c:	4602      	mov	r2, r0
 800258e:	460b      	mov	r3, r1
 8002590:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
    dx = cos(lng1) * cos(lat1) - cos(lat2);
 8002594:	ed97 0b04 	vldr	d0, [r7, #16]
 8002598:	f004 fe32 	bl	8007200 <cos>
 800259c:	ec55 4b10 	vmov	r4, r5, d0
 80025a0:	ed97 0b06 	vldr	d0, [r7, #24]
 80025a4:	f004 fe2c 	bl	8007200 <cos>
 80025a8:	ec53 2b10 	vmov	r2, r3, d0
 80025ac:	4620      	mov	r0, r4
 80025ae:	4629      	mov	r1, r5
 80025b0:	f7fe f83a 	bl	8000628 <__aeabi_dmul>
 80025b4:	4602      	mov	r2, r0
 80025b6:	460b      	mov	r3, r1
 80025b8:	4614      	mov	r4, r2
 80025ba:	461d      	mov	r5, r3
 80025bc:	ed97 0b02 	vldr	d0, [r7, #8]
 80025c0:	f004 fe1e 	bl	8007200 <cos>
 80025c4:	ec53 2b10 	vmov	r2, r3, d0
 80025c8:	4620      	mov	r0, r4
 80025ca:	4629      	mov	r1, r5
 80025cc:	f7fd fe74 	bl	80002b8 <__aeabi_dsub>
 80025d0:	4602      	mov	r2, r0
 80025d2:	460b      	mov	r3, r1
 80025d4:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    dy = sin(lng1) * cos(lat1);
 80025d8:	ed97 0b04 	vldr	d0, [r7, #16]
 80025dc:	f004 fe64 	bl	80072a8 <sin>
 80025e0:	ec55 4b10 	vmov	r4, r5, d0
 80025e4:	ed97 0b06 	vldr	d0, [r7, #24]
 80025e8:	f004 fe0a 	bl	8007200 <cos>
 80025ec:	ec53 2b10 	vmov	r2, r3, d0
 80025f0:	4620      	mov	r0, r4
 80025f2:	4629      	mov	r1, r5
 80025f4:	f7fe f818 	bl	8000628 <__aeabi_dmul>
 80025f8:	4602      	mov	r2, r0
 80025fa:	460b      	mov	r3, r1
 80025fc:	e9c7 2308 	strd	r2, r3, [r7, #32]

    return asin(sqrt(dx * dx + dy * dy + dz * dz) / 2) * 2 * 6371000;
 8002600:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002604:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002608:	f7fe f80e 	bl	8000628 <__aeabi_dmul>
 800260c:	4602      	mov	r2, r0
 800260e:	460b      	mov	r3, r1
 8002610:	4614      	mov	r4, r2
 8002612:	461d      	mov	r5, r3
 8002614:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8002618:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800261c:	f7fe f804 	bl	8000628 <__aeabi_dmul>
 8002620:	4602      	mov	r2, r0
 8002622:	460b      	mov	r3, r1
 8002624:	4620      	mov	r0, r4
 8002626:	4629      	mov	r1, r5
 8002628:	f7fd fe48 	bl	80002bc <__adddf3>
 800262c:	4602      	mov	r2, r0
 800262e:	460b      	mov	r3, r1
 8002630:	4614      	mov	r4, r2
 8002632:	461d      	mov	r5, r3
 8002634:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8002638:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800263c:	f7fd fff4 	bl	8000628 <__aeabi_dmul>
 8002640:	4602      	mov	r2, r0
 8002642:	460b      	mov	r3, r1
 8002644:	4620      	mov	r0, r4
 8002646:	4629      	mov	r1, r5
 8002648:	f7fd fe38 	bl	80002bc <__adddf3>
 800264c:	4602      	mov	r2, r0
 800264e:	460b      	mov	r3, r1
 8002650:	ec43 2b17 	vmov	d7, r2, r3
 8002654:	eeb0 0a47 	vmov.f32	s0, s14
 8002658:	eef0 0a67 	vmov.f32	s1, s15
 800265c:	f004 feb0 	bl	80073c0 <sqrt>
 8002660:	ec51 0b10 	vmov	r0, r1, d0
 8002664:	f04f 0200 	mov.w	r2, #0
 8002668:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800266c:	f7fe f906 	bl	800087c <__aeabi_ddiv>
 8002670:	4602      	mov	r2, r0
 8002672:	460b      	mov	r3, r1
 8002674:	ec43 2b17 	vmov	d7, r2, r3
 8002678:	eeb0 0a47 	vmov.f32	s0, s14
 800267c:	eef0 0a67 	vmov.f32	s1, s15
 8002680:	f004 fe6a 	bl	8007358 <asin>
 8002684:	ec51 0b10 	vmov	r0, r1, d0
 8002688:	4602      	mov	r2, r0
 800268a:	460b      	mov	r3, r1
 800268c:	f7fd fe16 	bl	80002bc <__adddf3>
 8002690:	4602      	mov	r2, r0
 8002692:	460b      	mov	r3, r1
 8002694:	4610      	mov	r0, r2
 8002696:	4619      	mov	r1, r3
 8002698:	a309      	add	r3, pc, #36	; (adr r3, 80026c0 <haversine+0x1c0>)
 800269a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800269e:	f7fd ffc3 	bl	8000628 <__aeabi_dmul>
 80026a2:	4602      	mov	r2, r0
 80026a4:	460b      	mov	r3, r1
 80026a6:	ec43 2b17 	vmov	d7, r2, r3
}
 80026aa:	eeb0 0a47 	vmov.f32	s0, s14
 80026ae:	eef0 0a67 	vmov.f32	s1, s15
 80026b2:	3738      	adds	r7, #56	; 0x38
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bdb0      	pop	{r4, r5, r7, pc}
 80026b8:	a2529d39 	.word	0xa2529d39
 80026bc:	3f91df46 	.word	0x3f91df46
 80026c0:	00000000 	.word	0x00000000
 80026c4:	41584dae 	.word	0x41584dae

080026c8 <circleToString>:


bool circleToString(char * str, struct Subscriber* subscribersArr, int* count, const char* address) {
 80026c8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80026cc:	b08a      	sub	sp, #40	; 0x28
 80026ce:	af04      	add	r7, sp, #16
 80026d0:	60f8      	str	r0, [r7, #12]
 80026d2:	60b9      	str	r1, [r7, #8]
 80026d4:	607a      	str	r2, [r7, #4]
 80026d6:	603b      	str	r3, [r7, #0]

    for (int i = 0; i < *count; i++) {
 80026d8:	2300      	movs	r3, #0
 80026da:	617b      	str	r3, [r7, #20]
 80026dc:	e047      	b.n	800276e <circleToString+0xa6>
        if (strcmp(subscribersArr[i].address, address) == 0) {
 80026de:	697a      	ldr	r2, [r7, #20]
 80026e0:	4613      	mov	r3, r2
 80026e2:	00db      	lsls	r3, r3, #3
 80026e4:	4413      	add	r3, r2
 80026e6:	009b      	lsls	r3, r3, #2
 80026e8:	461a      	mov	r2, r3
 80026ea:	68bb      	ldr	r3, [r7, #8]
 80026ec:	4413      	add	r3, r2
 80026ee:	6839      	ldr	r1, [r7, #0]
 80026f0:	4618      	mov	r0, r3
 80026f2:	f7fd fd75 	bl	80001e0 <strcmp>
 80026f6:	4603      	mov	r3, r0
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d135      	bne.n	8002768 <circleToString+0xa0>
            sprintf(str, "%.6f,%.6f,%.0f", subscribersArr[i].circle[0], subscribersArr[i].circle[1], subscribersArr[i].circle[2]);
 80026fc:	697a      	ldr	r2, [r7, #20]
 80026fe:	4613      	mov	r3, r2
 8002700:	00db      	lsls	r3, r3, #3
 8002702:	4413      	add	r3, r2
 8002704:	009b      	lsls	r3, r3, #2
 8002706:	461a      	mov	r2, r3
 8002708:	68bb      	ldr	r3, [r7, #8]
 800270a:	4413      	add	r3, r2
 800270c:	699b      	ldr	r3, [r3, #24]
 800270e:	4618      	mov	r0, r3
 8002710:	f7fd ff32 	bl	8000578 <__aeabi_f2d>
 8002714:	4680      	mov	r8, r0
 8002716:	4689      	mov	r9, r1
 8002718:	697a      	ldr	r2, [r7, #20]
 800271a:	4613      	mov	r3, r2
 800271c:	00db      	lsls	r3, r3, #3
 800271e:	4413      	add	r3, r2
 8002720:	009b      	lsls	r3, r3, #2
 8002722:	461a      	mov	r2, r3
 8002724:	68bb      	ldr	r3, [r7, #8]
 8002726:	4413      	add	r3, r2
 8002728:	69db      	ldr	r3, [r3, #28]
 800272a:	4618      	mov	r0, r3
 800272c:	f7fd ff24 	bl	8000578 <__aeabi_f2d>
 8002730:	4604      	mov	r4, r0
 8002732:	460d      	mov	r5, r1
 8002734:	697a      	ldr	r2, [r7, #20]
 8002736:	4613      	mov	r3, r2
 8002738:	00db      	lsls	r3, r3, #3
 800273a:	4413      	add	r3, r2
 800273c:	009b      	lsls	r3, r3, #2
 800273e:	461a      	mov	r2, r3
 8002740:	68bb      	ldr	r3, [r7, #8]
 8002742:	4413      	add	r3, r2
 8002744:	6a1b      	ldr	r3, [r3, #32]
 8002746:	4618      	mov	r0, r3
 8002748:	f7fd ff16 	bl	8000578 <__aeabi_f2d>
 800274c:	4602      	mov	r2, r0
 800274e:	460b      	mov	r3, r1
 8002750:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002754:	e9cd 4500 	strd	r4, r5, [sp]
 8002758:	4642      	mov	r2, r8
 800275a:	464b      	mov	r3, r9
 800275c:	4909      	ldr	r1, [pc, #36]	; (8002784 <circleToString+0xbc>)
 800275e:	68f8      	ldr	r0, [r7, #12]
 8002760:	f007 fc98 	bl	800a094 <siprintf>
            return 1;
 8002764:	2301      	movs	r3, #1
 8002766:	e008      	b.n	800277a <circleToString+0xb2>
    for (int i = 0; i < *count; i++) {
 8002768:	697b      	ldr	r3, [r7, #20]
 800276a:	3301      	adds	r3, #1
 800276c:	617b      	str	r3, [r7, #20]
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	697a      	ldr	r2, [r7, #20]
 8002774:	429a      	cmp	r2, r3
 8002776:	dbb2      	blt.n	80026de <circleToString+0x16>
        }
    }
    return 0;
 8002778:	2300      	movs	r3, #0
}
 800277a:	4618      	mov	r0, r3
 800277c:	3718      	adds	r7, #24
 800277e:	46bd      	mov	sp, r7
 8002780:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002784:	0800f810 	.word	0x0800f810

08002788 <checkCircles>:

//return true if any state changed
bool checkCircles(struct Device* device) {
 8002788:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800278c:	b0ba      	sub	sp, #232	; 0xe8
 800278e:	af06      	add	r7, sp, #24
 8002790:	6078      	str	r0, [r7, #4]
    bool change = 0;
 8002792:	2300      	movs	r3, #0
 8002794:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
    double distance = 0;
 8002798:	f04f 0200 	mov.w	r2, #0
 800279c:	f04f 0300 	mov.w	r3, #0
 80027a0:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
    for (int i = 0; i < device->count; i++) {
 80027a4:	2300      	movs	r3, #0
 80027a6:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80027aa:	e0fd      	b.n	80029a8 <checkCircles+0x220>

        distance = haversine((device->position[0]), (device->position[1]),
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4618      	mov	r0, r3
 80027b2:	f7fd fee1 	bl	8000578 <__aeabi_f2d>
 80027b6:	4604      	mov	r4, r0
 80027b8:	460d      	mov	r5, r1
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	685b      	ldr	r3, [r3, #4]
 80027be:	4618      	mov	r0, r3
 80027c0:	f7fd feda 	bl	8000578 <__aeabi_f2d>
 80027c4:	4680      	mov	r8, r0
 80027c6:	4689      	mov	r9, r1
            (device->subscribers[i].circle[0]), (device->subscribers[i].circle[1]) );
 80027c8:	6879      	ldr	r1, [r7, #4]
 80027ca:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80027ce:	4613      	mov	r3, r2
 80027d0:	00db      	lsls	r3, r3, #3
 80027d2:	4413      	add	r3, r2
 80027d4:	009b      	lsls	r3, r3, #2
 80027d6:	440b      	add	r3, r1
 80027d8:	332c      	adds	r3, #44	; 0x2c
 80027da:	681b      	ldr	r3, [r3, #0]
        distance = haversine((device->position[0]), (device->position[1]),
 80027dc:	4618      	mov	r0, r3
 80027de:	f7fd fecb 	bl	8000578 <__aeabi_f2d>
 80027e2:	4682      	mov	sl, r0
 80027e4:	468b      	mov	fp, r1
            (device->subscribers[i].circle[0]), (device->subscribers[i].circle[1]) );
 80027e6:	6879      	ldr	r1, [r7, #4]
 80027e8:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80027ec:	4613      	mov	r3, r2
 80027ee:	00db      	lsls	r3, r3, #3
 80027f0:	4413      	add	r3, r2
 80027f2:	009b      	lsls	r3, r3, #2
 80027f4:	440b      	add	r3, r1
 80027f6:	3330      	adds	r3, #48	; 0x30
 80027f8:	681b      	ldr	r3, [r3, #0]
        distance = haversine((device->position[0]), (device->position[1]),
 80027fa:	4618      	mov	r0, r3
 80027fc:	f7fd febc 	bl	8000578 <__aeabi_f2d>
 8002800:	4602      	mov	r2, r0
 8002802:	460b      	mov	r3, r1
 8002804:	ec43 2b13 	vmov	d3, r2, r3
 8002808:	ec4b ab12 	vmov	d2, sl, fp
 800280c:	ec49 8b11 	vmov	d1, r8, r9
 8002810:	ec45 4b10 	vmov	d0, r4, r5
 8002814:	f7ff fe74 	bl	8002500 <haversine>
 8002818:	ed87 0b30 	vstr	d0, [r7, #192]	; 0xc0
        //printf("dist: %f m subscriber: [%d]\n", distance , i);

        if (distance > device->subscribers[i].circle[2] && !device->subscribers[i].state) {
 800281c:	6879      	ldr	r1, [r7, #4]
 800281e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002822:	4613      	mov	r3, r2
 8002824:	00db      	lsls	r3, r3, #3
 8002826:	4413      	add	r3, r2
 8002828:	009b      	lsls	r3, r3, #2
 800282a:	440b      	add	r3, r1
 800282c:	3334      	adds	r3, #52	; 0x34
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	4618      	mov	r0, r3
 8002832:	f7fd fea1 	bl	8000578 <__aeabi_f2d>
 8002836:	4602      	mov	r2, r0
 8002838:	460b      	mov	r3, r1
 800283a:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800283e:	f7fe f983 	bl	8000b48 <__aeabi_dcmpgt>
 8002842:	4603      	mov	r3, r0
 8002844:	2b00      	cmp	r3, #0
 8002846:	d07a      	beq.n	800293e <checkCircles+0x1b6>
 8002848:	6879      	ldr	r1, [r7, #4]
 800284a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800284e:	4613      	mov	r3, r2
 8002850:	00db      	lsls	r3, r3, #3
 8002852:	4413      	add	r3, r2
 8002854:	009b      	lsls	r3, r3, #2
 8002856:	440b      	add	r3, r1
 8002858:	3328      	adds	r3, #40	; 0x28
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	2b00      	cmp	r3, #0
 800285e:	d16e      	bne.n	800293e <checkCircles+0x1b6>

            char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002860:	2300      	movs	r3, #0
 8002862:	60bb      	str	r3, [r7, #8]
 8002864:	f107 030c 	add.w	r3, r7, #12
 8002868:	229c      	movs	r2, #156	; 0x9c
 800286a:	2100      	movs	r1, #0
 800286c:	4618      	mov	r0, r3
 800286e:	f006 f9f3 	bl	8008c58 <memset>
            char time[FORMATTED_TIME_LEN + 1] = { 0 };
 8002872:	2300      	movs	r3, #0
 8002874:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8002878:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800287c:	2200      	movs	r2, #0
 800287e:	601a      	str	r2, [r3, #0]
 8002880:	605a      	str	r2, [r3, #4]
 8002882:	609a      	str	r2, [r3, #8]
 8002884:	60da      	str	r2, [r3, #12]
 8002886:	741a      	strb	r2, [r3, #16]
            unixTimeToString(time, &(device->unixTime) );
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	f103 0208 	add.w	r2, r3, #8
 800288e:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002892:	4611      	mov	r1, r2
 8002894:	4618      	mov	r0, r3
 8002896:	f7ff fc99 	bl	80021cc <unixTimeToString>
            sprintf(response, "Zone exceeded by %.1fm\r\nPosition:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\n", distance - device->subscribers[i].circle[2],
 800289a:	6879      	ldr	r1, [r7, #4]
 800289c:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80028a0:	4613      	mov	r3, r2
 80028a2:	00db      	lsls	r3, r3, #3
 80028a4:	4413      	add	r3, r2
 80028a6:	009b      	lsls	r3, r3, #2
 80028a8:	440b      	add	r3, r1
 80028aa:	3334      	adds	r3, #52	; 0x34
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	4618      	mov	r0, r3
 80028b0:	f7fd fe62 	bl	8000578 <__aeabi_f2d>
 80028b4:	4602      	mov	r2, r0
 80028b6:	460b      	mov	r3, r1
 80028b8:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 80028bc:	f7fd fcfc 	bl	80002b8 <__aeabi_dsub>
 80028c0:	4602      	mov	r2, r0
 80028c2:	460b      	mov	r3, r1
 80028c4:	4690      	mov	r8, r2
 80028c6:	4699      	mov	r9, r3
                device->position[0], device->position[1], time);
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	681b      	ldr	r3, [r3, #0]
            sprintf(response, "Zone exceeded by %.1fm\r\nPosition:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\n", distance - device->subscribers[i].circle[2],
 80028cc:	4618      	mov	r0, r3
 80028ce:	f7fd fe53 	bl	8000578 <__aeabi_f2d>
 80028d2:	4604      	mov	r4, r0
 80028d4:	460d      	mov	r5, r1
                device->position[0], device->position[1], time);
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	685b      	ldr	r3, [r3, #4]
            sprintf(response, "Zone exceeded by %.1fm\r\nPosition:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\n", distance - device->subscribers[i].circle[2],
 80028da:	4618      	mov	r0, r3
 80028dc:	f7fd fe4c 	bl	8000578 <__aeabi_f2d>
 80028e0:	4602      	mov	r2, r0
 80028e2:	460b      	mov	r3, r1
 80028e4:	f107 0008 	add.w	r0, r7, #8
 80028e8:	f107 01a8 	add.w	r1, r7, #168	; 0xa8
 80028ec:	9104      	str	r1, [sp, #16]
 80028ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80028f2:	e9cd 4500 	strd	r4, r5, [sp]
 80028f6:	4642      	mov	r2, r8
 80028f8:	464b      	mov	r3, r9
 80028fa:	4933      	ldr	r1, [pc, #204]	; (80029c8 <checkCircles+0x240>)
 80028fc:	f007 fbca 	bl	800a094 <siprintf>

            //printf("Response:\r\n%s", response);
            storeSms(device->subscribers[i].address, response);
 8002900:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002904:	4613      	mov	r3, r2
 8002906:	00db      	lsls	r3, r3, #3
 8002908:	4413      	add	r3, r2
 800290a:	009b      	lsls	r3, r3, #2
 800290c:	3310      	adds	r3, #16
 800290e:	687a      	ldr	r2, [r7, #4]
 8002910:	4413      	add	r3, r2
 8002912:	3304      	adds	r3, #4
 8002914:	f107 0208 	add.w	r2, r7, #8
 8002918:	4611      	mov	r1, r2
 800291a:	4618      	mov	r0, r3
 800291c:	f7fe fe16 	bl	800154c <storeSms>

            device->subscribers[i].state = 1;    //setState and send notification
 8002920:	6879      	ldr	r1, [r7, #4]
 8002922:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002926:	4613      	mov	r3, r2
 8002928:	00db      	lsls	r3, r3, #3
 800292a:	4413      	add	r3, r2
 800292c:	009b      	lsls	r3, r3, #2
 800292e:	440b      	add	r3, r1
 8002930:	3328      	adds	r3, #40	; 0x28
 8002932:	2201      	movs	r2, #1
 8002934:	601a      	str	r2, [r3, #0]
            change = 1;
 8002936:	2301      	movs	r3, #1
 8002938:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
        if (distance > device->subscribers[i].circle[2] && !device->subscribers[i].state) {
 800293c:	e02f      	b.n	800299e <checkCircles+0x216>
        }
        else if (distance < device->subscribers[i].circle[2] && device->subscribers[i].state) {
 800293e:	6879      	ldr	r1, [r7, #4]
 8002940:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002944:	4613      	mov	r3, r2
 8002946:	00db      	lsls	r3, r3, #3
 8002948:	4413      	add	r3, r2
 800294a:	009b      	lsls	r3, r3, #2
 800294c:	440b      	add	r3, r1
 800294e:	3334      	adds	r3, #52	; 0x34
 8002950:	681b      	ldr	r3, [r3, #0]
 8002952:	4618      	mov	r0, r3
 8002954:	f7fd fe10 	bl	8000578 <__aeabi_f2d>
 8002958:	4602      	mov	r2, r0
 800295a:	460b      	mov	r3, r1
 800295c:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 8002960:	f7fe f8d4 	bl	8000b0c <__aeabi_dcmplt>
 8002964:	4603      	mov	r3, r0
 8002966:	2b00      	cmp	r3, #0
 8002968:	d019      	beq.n	800299e <checkCircles+0x216>
 800296a:	6879      	ldr	r1, [r7, #4]
 800296c:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002970:	4613      	mov	r3, r2
 8002972:	00db      	lsls	r3, r3, #3
 8002974:	4413      	add	r3, r2
 8002976:	009b      	lsls	r3, r3, #2
 8002978:	440b      	add	r3, r1
 800297a:	3328      	adds	r3, #40	; 0x28
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	2b00      	cmp	r3, #0
 8002980:	d00d      	beq.n	800299e <checkCircles+0x216>
            device->subscribers[i].state = 0; //Reset state
 8002982:	6879      	ldr	r1, [r7, #4]
 8002984:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002988:	4613      	mov	r3, r2
 800298a:	00db      	lsls	r3, r3, #3
 800298c:	4413      	add	r3, r2
 800298e:	009b      	lsls	r3, r3, #2
 8002990:	440b      	add	r3, r1
 8002992:	3328      	adds	r3, #40	; 0x28
 8002994:	2200      	movs	r2, #0
 8002996:	601a      	str	r2, [r3, #0]
            change = 1;
 8002998:	2301      	movs	r3, #1
 800299a:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
    for (int i = 0; i < device->count; i++) {
 800299e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80029a2:	3301      	adds	r3, #1
 80029a4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 80029ae:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80029b2:	429a      	cmp	r2, r3
 80029b4:	f6ff aefa 	blt.w	80027ac <checkCircles+0x24>
        }
    }
    return change; //return change 0 if state did not change and 1 if any state changed
 80029b8:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
}
 80029bc:	4618      	mov	r0, r3
 80029be:	37d0      	adds	r7, #208	; 0xd0
 80029c0:	46bd      	mov	sp, r7
 80029c2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80029c6:	bf00      	nop
 80029c8:	0800f820 	.word	0x0800f820

080029cc <handleNotifications>:

void handleNotifications(struct Device* device) {
 80029cc:	b580      	push	{r7, lr}
 80029ce:	b084      	sub	sp, #16
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	6078      	str	r0, [r7, #4]

    struct Device* deviceCopy = copyDevice(device); //deepCopy as temporary device struct
 80029d4:	6878      	ldr	r0, [r7, #4]
 80029d6:	f7ff f8e3 	bl	8001ba0 <copyDevice>
 80029da:	60f8      	str	r0, [r7, #12]

    if (checkCircles(deviceCopy)) {
 80029dc:	68f8      	ldr	r0, [r7, #12]
 80029de:	f7ff fed3 	bl	8002788 <checkCircles>
 80029e2:	4603      	mov	r3, r0
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d013      	beq.n	8002a10 <handleNotifications+0x44>
        if (handleWriteFile(deviceCopy)) {
 80029e8:	68f8      	ldr	r0, [r7, #12]
 80029ea:	f7ff fa80 	bl	8001eee <handleWriteFile>
 80029ee:	4603      	mov	r3, r0
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d009      	beq.n	8002a08 <handleNotifications+0x3c>
            memcpy(device, deviceCopy, sizeof(struct Device));
 80029f4:	f44f 72cc 	mov.w	r2, #408	; 0x198
 80029f8:	68f9      	ldr	r1, [r7, #12]
 80029fa:	6878      	ldr	r0, [r7, #4]
 80029fc:	f006 f91e 	bl	8008c3c <memcpy>
            free(deviceCopy); // Deallocate
 8002a00:	68f8      	ldr	r0, [r7, #12]
 8002a02:	f006 f913 	bl	8008c2c <free>
        else
            free(deviceCopy); // Deallocate
    }
    else
        free(deviceCopy); // Deallocate
}
 8002a06:	e006      	b.n	8002a16 <handleNotifications+0x4a>
            free(deviceCopy); // Deallocate
 8002a08:	68f8      	ldr	r0, [r7, #12]
 8002a0a:	f006 f90f 	bl	8008c2c <free>
}
 8002a0e:	e002      	b.n	8002a16 <handleNotifications+0x4a>
        free(deviceCopy); // Deallocate
 8002a10:	68f8      	ldr	r0, [r7, #12]
 8002a12:	f006 f90b 	bl	8008c2c <free>
}
 8002a16:	bf00      	nop
 8002a18:	3710      	adds	r7, #16
 8002a1a:	46bd      	mov	sp, r7
 8002a1c:	bd80      	pop	{r7, pc}

08002a1e <validNum>:

bool validNum(float number, float min, float max) {
 8002a1e:	b480      	push	{r7}
 8002a20:	b085      	sub	sp, #20
 8002a22:	af00      	add	r7, sp, #0
 8002a24:	ed87 0a03 	vstr	s0, [r7, #12]
 8002a28:	edc7 0a02 	vstr	s1, [r7, #8]
 8002a2c:	ed87 1a01 	vstr	s2, [r7, #4]
    if ((number >= min) && (number <= max))  //if ((min ? number >= min : true) && max ? (number <= max) : true)
 8002a30:	ed97 7a03 	vldr	s14, [r7, #12]
 8002a34:	edd7 7a02 	vldr	s15, [r7, #8]
 8002a38:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002a3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a40:	db0a      	blt.n	8002a58 <validNum+0x3a>
 8002a42:	ed97 7a03 	vldr	s14, [r7, #12]
 8002a46:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a4a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002a4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a52:	d801      	bhi.n	8002a58 <validNum+0x3a>
        return 1;
 8002a54:	2301      	movs	r3, #1
 8002a56:	e000      	b.n	8002a5a <validNum+0x3c>
    else
        return 0;
 8002a58:	2300      	movs	r3, #0
}
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	3714      	adds	r7, #20
 8002a5e:	46bd      	mov	sp, r7
 8002a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a64:	4770      	bx	lr
	...

08002a68 <appResponse>:

bool appResponse(struct Device* device, const char* address, const char* requestId, const int responseCode) {
 8002a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a6a:	b0c1      	sub	sp, #260	; 0x104
 8002a6c:	af08      	add	r7, sp, #32
 8002a6e:	6178      	str	r0, [r7, #20]
 8002a70:	6139      	str	r1, [r7, #16]
 8002a72:	60fa      	str	r2, [r7, #12]
 8002a74:	60bb      	str	r3, [r7, #8]

    char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002a76:	2300      	movs	r3, #0
 8002a78:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002a7a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8002a7e:	229c      	movs	r2, #156	; 0x9c
 8002a80:	2100      	movs	r1, #0
 8002a82:	4618      	mov	r0, r3
 8002a84:	f006 f8e8 	bl	8008c58 <memset>
    char circle[MAX_CIRCLE_LEN + 1] = { 0 };
 8002a88:	2300      	movs	r3, #0
 8002a8a:	61fb      	str	r3, [r7, #28]
 8002a8c:	f107 0320 	add.w	r3, r7, #32
 8002a90:	2200      	movs	r2, #0
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	605a      	str	r2, [r3, #4]
 8002a96:	609a      	str	r2, [r3, #8]
 8002a98:	60da      	str	r2, [r3, #12]
 8002a9a:	611a      	str	r2, [r3, #16]
 8002a9c:	615a      	str	r2, [r3, #20]
 8002a9e:	831a      	strh	r2, [r3, #24]
    bool hasCircle = circleToString(circle, (device->subscribers), &(device->count), address);
 8002aa0:	697b      	ldr	r3, [r7, #20]
 8002aa2:	f103 0114 	add.w	r1, r3, #20
 8002aa6:	697b      	ldr	r3, [r7, #20]
 8002aa8:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 8002aac:	f107 001c 	add.w	r0, r7, #28
 8002ab0:	693b      	ldr	r3, [r7, #16]
 8002ab2:	f7ff fe09 	bl	80026c8 <circleToString>
 8002ab6:	4603      	mov	r3, r0
 8002ab8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf

    if ( responseCode>=0 && responseCode<10 ) {
 8002abc:	68bb      	ldr	r3, [r7, #8]
 8002abe:	2b00      	cmp	r3, #0
 8002ac0:	db2f      	blt.n	8002b22 <appResponse+0xba>
 8002ac2:	68bb      	ldr	r3, [r7, #8]
 8002ac4:	2b09      	cmp	r3, #9
 8002ac6:	dc2c      	bgt.n	8002b22 <appResponse+0xba>
    	sprintf(response, "resp=%s,%d,%.6f,%.6f,%d,%s,%d", requestId, responseCode, device->position[0], device->position[1],
 8002ac8:	697b      	ldr	r3, [r7, #20]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	4618      	mov	r0, r3
 8002ace:	f7fd fd53 	bl	8000578 <__aeabi_f2d>
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	460d      	mov	r5, r1
 8002ad6:	697b      	ldr	r3, [r7, #20]
 8002ad8:	685b      	ldr	r3, [r3, #4]
 8002ada:	4618      	mov	r0, r3
 8002adc:	f7fd fd4c 	bl	8000578 <__aeabi_f2d>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	460b      	mov	r3, r1
    		(int)(device->unixTime), hasCircle ? circle : "52,19,0", device->interval);
 8002ae4:	6979      	ldr	r1, [r7, #20]
 8002ae6:	e9d1 0102 	ldrd	r0, r1, [r1, #8]
    	sprintf(response, "resp=%s,%d,%.6f,%.6f,%d,%s,%d", requestId, responseCode, device->position[0], device->position[1],
 8002aea:	6078      	str	r0, [r7, #4]
 8002aec:	f897 10df 	ldrb.w	r1, [r7, #223]	; 0xdf
 8002af0:	2900      	cmp	r1, #0
 8002af2:	d002      	beq.n	8002afa <appResponse+0x92>
 8002af4:	f107 011c 	add.w	r1, r7, #28
 8002af8:	e000      	b.n	8002afc <appResponse+0x94>
 8002afa:	4913      	ldr	r1, [pc, #76]	; (8002b48 <appResponse+0xe0>)
 8002afc:	6978      	ldr	r0, [r7, #20]
 8002afe:	6900      	ldr	r0, [r0, #16]
 8002b00:	f107 063c 	add.w	r6, r7, #60	; 0x3c
 8002b04:	9006      	str	r0, [sp, #24]
 8002b06:	9105      	str	r1, [sp, #20]
 8002b08:	6879      	ldr	r1, [r7, #4]
 8002b0a:	9104      	str	r1, [sp, #16]
 8002b0c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b10:	e9cd 4500 	strd	r4, r5, [sp]
 8002b14:	68bb      	ldr	r3, [r7, #8]
 8002b16:	68fa      	ldr	r2, [r7, #12]
 8002b18:	490c      	ldr	r1, [pc, #48]	; (8002b4c <appResponse+0xe4>)
 8002b1a:	4630      	mov	r0, r6
 8002b1c:	f007 faba 	bl	800a094 <siprintf>
 8002b20:	e006      	b.n	8002b30 <appResponse+0xc8>
    } else {
	sprintf(response, "resp=%s,%d", requestId, responseCode);
 8002b22:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 8002b26:	68bb      	ldr	r3, [r7, #8]
 8002b28:	68fa      	ldr	r2, [r7, #12]
 8002b2a:	4909      	ldr	r1, [pc, #36]	; (8002b50 <appResponse+0xe8>)
 8002b2c:	f007 fab2 	bl	800a094 <siprintf>
    }
	//printf("Response:\r\n%s", response);
	storeSms(address, response);
 8002b30:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8002b34:	4619      	mov	r1, r3
 8002b36:	6938      	ldr	r0, [r7, #16]
 8002b38:	f7fe fd08 	bl	800154c <storeSms>

	return 1;
 8002b3c:	2301      	movs	r3, #1
}
 8002b3e:	4618      	mov	r0, r3
 8002b40:	37e4      	adds	r7, #228	; 0xe4
 8002b42:	46bd      	mov	sp, r7
 8002b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b46:	bf00      	nop
 8002b48:	0800f85c 	.word	0x0800f85c
 8002b4c:	0800f864 	.word	0x0800f864
 8002b50:	0800f884 	.word	0x0800f884

08002b54 <processMessageByCommand>:

bool processMessageByCommand(const char* message, const char* address, struct Device* device, const char* command) {
 8002b54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b58:	b0e3      	sub	sp, #396	; 0x18c
 8002b5a:	af06      	add	r7, sp, #24
 8002b5c:	f507 74b8 	add.w	r4, r7, #368	; 0x170
 8002b60:	f5a4 74b2 	sub.w	r4, r4, #356	; 0x164
 8002b64:	6020      	str	r0, [r4, #0]
 8002b66:	f507 70b8 	add.w	r0, r7, #368	; 0x170
 8002b6a:	f5a0 70b4 	sub.w	r0, r0, #360	; 0x168
 8002b6e:	6001      	str	r1, [r0, #0]
 8002b70:	f507 71b8 	add.w	r1, r7, #368	; 0x170
 8002b74:	f5a1 71b6 	sub.w	r1, r1, #364	; 0x16c
 8002b78:	600a      	str	r2, [r1, #0]
 8002b7a:	f507 72b8 	add.w	r2, r7, #368	; 0x170
 8002b7e:	f5a2 72b8 	sub.w	r2, r2, #368	; 0x170
 8002b82:	6013      	str	r3, [r2, #0]
    switch (*command) {
 8002b84:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002b88:	f5a3 73b8 	sub.w	r3, r3, #368	; 0x170
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	781b      	ldrb	r3, [r3, #0]
 8002b90:	2b70      	cmp	r3, #112	; 0x70
 8002b92:	f000 8112 	beq.w	8002dba <processMessageByCommand+0x266>
 8002b96:	2b70      	cmp	r3, #112	; 0x70
 8002b98:	f300 8337 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002b9c:	2b64      	cmp	r3, #100	; 0x64
 8002b9e:	f000 8196 	beq.w	8002ece <processMessageByCommand+0x37a>
 8002ba2:	2b64      	cmp	r3, #100	; 0x64
 8002ba4:	f300 8331 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002ba8:	2b61      	cmp	r3, #97	; 0x61
 8002baa:	d00f      	beq.n	8002bcc <processMessageByCommand+0x78>
 8002bac:	2b61      	cmp	r3, #97	; 0x61
 8002bae:	f300 832c 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002bb2:	2b32      	cmp	r3, #50	; 0x32
 8002bb4:	f000 820d 	beq.w	8002fd2 <processMessageByCommand+0x47e>
 8002bb8:	2b32      	cmp	r3, #50	; 0x32
 8002bba:	f300 8326 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002bbe:	2b30      	cmp	r3, #48	; 0x30
 8002bc0:	f000 81d6 	beq.w	8002f70 <processMessageByCommand+0x41c>
 8002bc4:	2b31      	cmp	r3, #49	; 0x31
 8002bc6:	f000 824d 	beq.w	8003064 <processMessageByCommand+0x510>
 8002bca:	e31e      	b.n	800320a <processMessageByCommand+0x6b6>
    case 'a': //Subscribe -> setCircle / editCircle
    {
        float circle[3] = { 0,0,0 }; //parameters included in  sms message [rad/interval,lat,lng]
 8002bcc:	f04f 0300 	mov.w	r3, #0
 8002bd0:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
 8002bd4:	f04f 0300 	mov.w	r3, #0
 8002bd8:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8002bdc:	f04f 0300 	mov.w	r3, #0
 8002be0:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154

        if (sscanf(message, "%f,%f,%f", &circle[0], &circle[1], &circle[2]) != 3) {
 8002be4:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 8002be8:	1d19      	adds	r1, r3, #4
 8002bea:	f507 72a6 	add.w	r2, r7, #332	; 0x14c
 8002bee:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002bf2:	f5a3 70b2 	sub.w	r0, r3, #356	; 0x164
 8002bf6:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 8002bfa:	3308      	adds	r3, #8
 8002bfc:	9300      	str	r3, [sp, #0]
 8002bfe:	460b      	mov	r3, r1
 8002c00:	49c6      	ldr	r1, [pc, #792]	; (8002f1c <processMessageByCommand+0x3c8>)
 8002c02:	6800      	ldr	r0, [r0, #0]
 8002c04:	f007 fa66 	bl	800a0d4 <siscanf>
 8002c08:	4603      	mov	r3, r0
 8002c0a:	2b03      	cmp	r3, #3
 8002c0c:	d001      	beq.n	8002c12 <processMessageByCommand+0xbe>
            return 0;
 8002c0e:	2300      	movs	r3, #0
 8002c10:	e2fc      	b.n	800320c <processMessageByCommand+0x6b8>
        }

        if (!(validNum(circle[0], LATITUDE_MIN, LATITUDE_MAX) && validNum(circle[1], LONGITUDE_MIN, LONGITUDE_MAX) && validNum(circle[2], RADIUS_MIN, RADIUS_MAX)))
 8002c12:	edd7 7a53 	vldr	s15, [r7, #332]	; 0x14c
 8002c16:	ed9f 1ac2 	vldr	s2, [pc, #776]	; 8002f20 <processMessageByCommand+0x3cc>
 8002c1a:	eddf 0ac2 	vldr	s1, [pc, #776]	; 8002f24 <processMessageByCommand+0x3d0>
 8002c1e:	eeb0 0a67 	vmov.f32	s0, s15
 8002c22:	f7ff fefc 	bl	8002a1e <validNum>
 8002c26:	4603      	mov	r3, r0
 8002c28:	f083 0301 	eor.w	r3, r3, #1
 8002c2c:	b2db      	uxtb	r3, r3
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d11f      	bne.n	8002c72 <processMessageByCommand+0x11e>
 8002c32:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 8002c36:	ed9f 1abc 	vldr	s2, [pc, #752]	; 8002f28 <processMessageByCommand+0x3d4>
 8002c3a:	eddf 0abc 	vldr	s1, [pc, #752]	; 8002f2c <processMessageByCommand+0x3d8>
 8002c3e:	eeb0 0a67 	vmov.f32	s0, s15
 8002c42:	f7ff feec 	bl	8002a1e <validNum>
 8002c46:	4603      	mov	r3, r0
 8002c48:	f083 0301 	eor.w	r3, r3, #1
 8002c4c:	b2db      	uxtb	r3, r3
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d10f      	bne.n	8002c72 <processMessageByCommand+0x11e>
 8002c52:	edd7 7a55 	vldr	s15, [r7, #340]	; 0x154
 8002c56:	ed9f 1ab6 	vldr	s2, [pc, #728]	; 8002f30 <processMessageByCommand+0x3dc>
 8002c5a:	eddf 0ab6 	vldr	s1, [pc, #728]	; 8002f34 <processMessageByCommand+0x3e0>
 8002c5e:	eeb0 0a67 	vmov.f32	s0, s15
 8002c62:	f7ff fedc 	bl	8002a1e <validNum>
 8002c66:	4603      	mov	r3, r0
 8002c68:	f083 0301 	eor.w	r3, r3, #1
 8002c6c:	b2db      	uxtb	r3, r3
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d001      	beq.n	8002c76 <processMessageByCommand+0x122>
            return 0;
 8002c72:	2300      	movs	r3, #0
 8002c74:	e2ca      	b.n	800320c <processMessageByCommand+0x6b8>

        struct Subscriber newSubscriber = { "", 0, { circle[0], circle[1], circle[2] } }; //Create element based on message
 8002c76:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002c7a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002c7e:	2200      	movs	r2, #0
 8002c80:	601a      	str	r2, [r3, #0]
 8002c82:	3304      	adds	r3, #4
 8002c84:	2200      	movs	r2, #0
 8002c86:	601a      	str	r2, [r3, #0]
 8002c88:	605a      	str	r2, [r3, #4]
 8002c8a:	609a      	str	r2, [r3, #8]
 8002c8c:	731a      	strb	r2, [r3, #12]
 8002c8e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002c92:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002c96:	2200      	movs	r2, #0
 8002c98:	615a      	str	r2, [r3, #20]
 8002c9a:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 8002c9e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ca2:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002ca6:	619a      	str	r2, [r3, #24]
 8002ca8:	f8d7 2150 	ldr.w	r2, [r7, #336]	; 0x150
 8002cac:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cb0:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002cb4:	61da      	str	r2, [r3, #28]
 8002cb6:	f8d7 2154 	ldr.w	r2, [r7, #340]	; 0x154
 8002cba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cbe:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002cc2:	621a      	str	r2, [r3, #32]
        strncpy(newSubscriber.address, address, strlen(address)); //Fill element based on message
 8002cc4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cc8:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002ccc:	6818      	ldr	r0, [r3, #0]
 8002cce:	f7fd fa91 	bl	80001f4 <strlen>
 8002cd2:	4602      	mov	r2, r0
 8002cd4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cd8:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002cdc:	f107 0014 	add.w	r0, r7, #20
 8002ce0:	6819      	ldr	r1, [r3, #0]
 8002ce2:	f007 ffcd 	bl	800ac80 <strncpy>
        bool success = subscribe(device, &newSubscriber);
 8002ce6:	f107 0214 	add.w	r2, r7, #20
 8002cea:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cee:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002cf2:	4611      	mov	r1, r2
 8002cf4:	6818      	ldr	r0, [r3, #0]
 8002cf6:	f7ff f956 	bl	8001fa6 <subscribe>
 8002cfa:	4603      	mov	r3, r0
 8002cfc:	f887 316d 	strb.w	r3, [r7, #365]	; 0x16d


		char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002d00:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002d04:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8002d08:	2200      	movs	r2, #0
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	3304      	adds	r3, #4
 8002d0e:	229c      	movs	r2, #156	; 0x9c
 8002d10:	2100      	movs	r1, #0
 8002d12:	4618      	mov	r0, r3
 8002d14:	f005 ffa0 	bl	8008c58 <memset>
        if (success) {
 8002d18:	f897 316d 	ldrb.w	r3, [r7, #365]	; 0x16d
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d020      	beq.n	8002d62 <processMessageByCommand+0x20e>
            sprintf(response, "Subscribed:\r\n%.6f,%.6f,%.0f", circle[0], circle[1], circle[2]);
 8002d20:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8002d24:	4618      	mov	r0, r3
 8002d26:	f7fd fc27 	bl	8000578 <__aeabi_f2d>
 8002d2a:	4680      	mov	r8, r0
 8002d2c:	4689      	mov	r9, r1
 8002d2e:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 8002d32:	4618      	mov	r0, r3
 8002d34:	f7fd fc20 	bl	8000578 <__aeabi_f2d>
 8002d38:	4604      	mov	r4, r0
 8002d3a:	460d      	mov	r5, r1
 8002d3c:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8002d40:	4618      	mov	r0, r3
 8002d42:	f7fd fc19 	bl	8000578 <__aeabi_f2d>
 8002d46:	4602      	mov	r2, r0
 8002d48:	460b      	mov	r3, r1
 8002d4a:	f107 0038 	add.w	r0, r7, #56	; 0x38
 8002d4e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d52:	e9cd 4500 	strd	r4, r5, [sp]
 8002d56:	4642      	mov	r2, r8
 8002d58:	464b      	mov	r3, r9
 8002d5a:	4977      	ldr	r1, [pc, #476]	; (8002f38 <processMessageByCommand+0x3e4>)
 8002d5c:	f007 f99a 	bl	800a094 <siprintf>
 8002d60:	e01f      	b.n	8002da2 <processMessageByCommand+0x24e>
        }
        else {
            sprintf(response, "Subscription failed:\r\n%.6f,%.6f,%.0f", circle[0], circle[1], circle[2]);
 8002d62:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8002d66:	4618      	mov	r0, r3
 8002d68:	f7fd fc06 	bl	8000578 <__aeabi_f2d>
 8002d6c:	4680      	mov	r8, r0
 8002d6e:	4689      	mov	r9, r1
 8002d70:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 8002d74:	4618      	mov	r0, r3
 8002d76:	f7fd fbff 	bl	8000578 <__aeabi_f2d>
 8002d7a:	4604      	mov	r4, r0
 8002d7c:	460d      	mov	r5, r1
 8002d7e:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8002d82:	4618      	mov	r0, r3
 8002d84:	f7fd fbf8 	bl	8000578 <__aeabi_f2d>
 8002d88:	4602      	mov	r2, r0
 8002d8a:	460b      	mov	r3, r1
 8002d8c:	f107 0038 	add.w	r0, r7, #56	; 0x38
 8002d90:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d94:	e9cd 4500 	strd	r4, r5, [sp]
 8002d98:	4642      	mov	r2, r8
 8002d9a:	464b      	mov	r3, r9
 8002d9c:	4967      	ldr	r1, [pc, #412]	; (8002f3c <processMessageByCommand+0x3e8>)
 8002d9e:	f007 f979 	bl	800a094 <siprintf>
        }

        //printf("Response:\r\n%s", response);
        storeSms(address, response);
 8002da2:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002da6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002daa:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002dae:	4611      	mov	r1, r2
 8002db0:	6818      	ldr	r0, [r3, #0]
 8002db2:	f7fe fbcb 	bl	800154c <storeSms>

        return 1;
 8002db6:	2301      	movs	r3, #1
 8002db8:	e228      	b.n	800320c <processMessageByCommand+0x6b8>
    }
    case 'p': //getPosition sms
    {
        //resp=50.446896,18.838770,1678729041,50.446896,18.838770,50000
        char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002dba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002dbe:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8002dc2:	2200      	movs	r2, #0
 8002dc4:	601a      	str	r2, [r3, #0]
 8002dc6:	3304      	adds	r3, #4
 8002dc8:	229c      	movs	r2, #156	; 0x9c
 8002dca:	2100      	movs	r1, #0
 8002dcc:	4618      	mov	r0, r3
 8002dce:	f005 ff43 	bl	8008c58 <memset>
        char circle[MAX_CIRCLE_LEN + 1] = { 0 };
 8002dd2:	2300      	movs	r3, #0
 8002dd4:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8002dd8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8002ddc:	2200      	movs	r2, #0
 8002dde:	601a      	str	r2, [r3, #0]
 8002de0:	605a      	str	r2, [r3, #4]
 8002de2:	609a      	str	r2, [r3, #8]
 8002de4:	60da      	str	r2, [r3, #12]
 8002de6:	611a      	str	r2, [r3, #16]
 8002de8:	615a      	str	r2, [r3, #20]
 8002dea:	831a      	strh	r2, [r3, #24]
        bool hasCircle = circleToString(circle, (device->subscribers), &(device->count), address);
 8002dec:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002df0:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	f103 0114 	add.w	r1, r3, #20
 8002dfa:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002dfe:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 8002e08:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e0c:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002e10:	f507 7096 	add.w	r0, r7, #300	; 0x12c
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	f7ff fc57 	bl	80026c8 <circleToString>
 8002e1a:	4603      	mov	r3, r0
 8002e1c:	f887 316f 	strb.w	r3, [r7, #367]	; 0x16f
        char time[FORMATTED_TIME_LEN + 1] = { 0 };
 8002e20:	2300      	movs	r3, #0
 8002e22:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8002e26:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8002e2a:	2200      	movs	r2, #0
 8002e2c:	601a      	str	r2, [r3, #0]
 8002e2e:	605a      	str	r2, [r3, #4]
 8002e30:	609a      	str	r2, [r3, #8]
 8002e32:	60da      	str	r2, [r3, #12]
 8002e34:	741a      	strb	r2, [r3, #16]

        unixTimeToString(time, &(device->unixTime));
 8002e36:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e3a:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	f103 0208 	add.w	r2, r3, #8
 8002e44:	f507 738a 	add.w	r3, r7, #276	; 0x114
 8002e48:	4611      	mov	r1, r2
 8002e4a:	4618      	mov	r0, r3
 8002e4c:	f7ff f9be 	bl	80021cc <unixTimeToString>
        sprintf(response, "Position:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\nZone:\r\n%s\r\nInterval:\r\n%d", device->position[0], device->position[1],
 8002e50:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e54:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	f7fd fb8b 	bl	8000578 <__aeabi_f2d>
 8002e62:	4604      	mov	r4, r0
 8002e64:	460d      	mov	r5, r1
 8002e66:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e6a:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	685b      	ldr	r3, [r3, #4]
 8002e72:	4618      	mov	r0, r3
 8002e74:	f7fd fb80 	bl	8000578 <__aeabi_f2d>
 8002e78:	4602      	mov	r2, r0
 8002e7a:	460b      	mov	r3, r1
 8002e7c:	f897 116f 	ldrb.w	r1, [r7, #367]	; 0x16f
 8002e80:	2900      	cmp	r1, #0
 8002e82:	d002      	beq.n	8002e8a <processMessageByCommand+0x336>
 8002e84:	f507 7196 	add.w	r1, r7, #300	; 0x12c
 8002e88:	e000      	b.n	8002e8c <processMessageByCommand+0x338>
 8002e8a:	492d      	ldr	r1, [pc, #180]	; (8002f40 <processMessageByCommand+0x3ec>)
 8002e8c:	f507 70b8 	add.w	r0, r7, #368	; 0x170
 8002e90:	f5a0 70b6 	sub.w	r0, r0, #364	; 0x16c
 8002e94:	6800      	ldr	r0, [r0, #0]
 8002e96:	6900      	ldr	r0, [r0, #16]
 8002e98:	f107 0638 	add.w	r6, r7, #56	; 0x38
 8002e9c:	9004      	str	r0, [sp, #16]
 8002e9e:	9103      	str	r1, [sp, #12]
 8002ea0:	f507 718a 	add.w	r1, r7, #276	; 0x114
 8002ea4:	9102      	str	r1, [sp, #8]
 8002ea6:	e9cd 2300 	strd	r2, r3, [sp]
 8002eaa:	4622      	mov	r2, r4
 8002eac:	462b      	mov	r3, r5
 8002eae:	4925      	ldr	r1, [pc, #148]	; (8002f44 <processMessageByCommand+0x3f0>)
 8002eb0:	4630      	mov	r0, r6
 8002eb2:	f007 f8ef 	bl	800a094 <siprintf>
            time, hasCircle ? circle : "not subscribed", device->interval);

        //printf("Response:\r\n%s", response);
        storeSms(address, response);
 8002eb6:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002eba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ebe:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002ec2:	4611      	mov	r1, r2
 8002ec4:	6818      	ldr	r0, [r3, #0]
 8002ec6:	f7fe fb41 	bl	800154c <storeSms>

        return 1;
 8002eca:	2301      	movs	r3, #1
 8002ecc:	e19e      	b.n	800320c <processMessageByCommand+0x6b8>
    }
    case 'd': //Unsubscribe
    {
        bool success = unsubscribe(device, address);
 8002ece:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ed2:	f5a3 72b4 	sub.w	r2, r3, #360	; 0x168
 8002ed6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002eda:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002ede:	6811      	ldr	r1, [r2, #0]
 8002ee0:	6818      	ldr	r0, [r3, #0]
 8002ee2:	f7ff f8ca 	bl	800207a <unsubscribe>
 8002ee6:	4603      	mov	r3, r0
 8002ee8:	f887 316e 	strb.w	r3, [r7, #366]	; 0x16e
        char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002eec:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ef0:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8002ef4:	2200      	movs	r2, #0
 8002ef6:	601a      	str	r2, [r3, #0]
 8002ef8:	3304      	adds	r3, #4
 8002efa:	229c      	movs	r2, #156	; 0x9c
 8002efc:	2100      	movs	r1, #0
 8002efe:	4618      	mov	r0, r3
 8002f00:	f005 feaa 	bl	8008c58 <memset>
        if (success) {
 8002f04:	f897 316e 	ldrb.w	r3, [r7, #366]	; 0x16e
 8002f08:	2b00      	cmp	r3, #0
 8002f0a:	d01f      	beq.n	8002f4c <processMessageByCommand+0x3f8>
            sprintf(response, "Unsubscribed");
 8002f0c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002f10:	490d      	ldr	r1, [pc, #52]	; (8002f48 <processMessageByCommand+0x3f4>)
 8002f12:	4618      	mov	r0, r3
 8002f14:	f007 f8be 	bl	800a094 <siprintf>
 8002f18:	e01e      	b.n	8002f58 <processMessageByCommand+0x404>
 8002f1a:	bf00      	nop
 8002f1c:	0800f890 	.word	0x0800f890
 8002f20:	42b40000 	.word	0x42b40000
 8002f24:	c2b40000 	.word	0xc2b40000
 8002f28:	43340000 	.word	0x43340000
 8002f2c:	c3340000 	.word	0xc3340000
 8002f30:	4ac26d70 	.word	0x4ac26d70
 8002f34:	42480000 	.word	0x42480000
 8002f38:	0800f89c 	.word	0x0800f89c
 8002f3c:	0800f8b8 	.word	0x0800f8b8
 8002f40:	0800f8e0 	.word	0x0800f8e0
 8002f44:	0800f8f0 	.word	0x0800f8f0
 8002f48:	0800f92c 	.word	0x0800f92c
        }
        else {
            sprintf(response, "Unsubscription failed");
 8002f4c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002f50:	49b1      	ldr	r1, [pc, #708]	; (8003218 <processMessageByCommand+0x6c4>)
 8002f52:	4618      	mov	r0, r3
 8002f54:	f007 f89e 	bl	800a094 <siprintf>
        }

        //printf("Response:\r\n%s", response);
        storeSms(address, response);
 8002f58:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002f5c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002f60:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002f64:	4611      	mov	r1, r2
 8002f66:	6818      	ldr	r0, [r3, #0]
 8002f68:	f7fe faf0 	bl	800154c <storeSms>

        return 1;
 8002f6c:	2301      	movs	r3, #1
 8002f6e:	e14d      	b.n	800320c <processMessageByCommand+0x6b8>
        return 1;
    }
    */
	case '0': //Position
    {
		char requestId[REQUEST_ID_LEN+1] = {0};
 8002f70:	2300      	movs	r3, #0
 8002f72:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8002f76:	f507 7384 	add.w	r3, r7, #264	; 0x108
 8002f7a:	2200      	movs	r2, #0
 8002f7c:	601a      	str	r2, [r3, #0]
 8002f7e:	605a      	str	r2, [r3, #4]
 8002f80:	f8c3 2007 	str.w	r2, [r3, #7]
		int responseCode = 0;
 8002f84:	2300      	movs	r3, #0
 8002f86:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158

		if (sscanf(message, "%14s", requestId) != 1)
 8002f8a:	f507 7282 	add.w	r2, r7, #260	; 0x104
 8002f8e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002f92:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 8002f96:	49a1      	ldr	r1, [pc, #644]	; (800321c <processMessageByCommand+0x6c8>)
 8002f98:	6818      	ldr	r0, [r3, #0]
 8002f9a:	f007 f89b 	bl	800a0d4 <siscanf>
 8002f9e:	4603      	mov	r3, r0
 8002fa0:	2b01      	cmp	r3, #1
 8002fa2:	d001      	beq.n	8002fa8 <processMessageByCommand+0x454>
			return 0;
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	e131      	b.n	800320c <processMessageByCommand+0x6b8>

		responseCode = 1;
 8002fa8:	2301      	movs	r3, #1
 8002faa:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
		return appResponse(device,address,requestId,responseCode);
 8002fae:	f507 7282 	add.w	r2, r7, #260	; 0x104
 8002fb2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002fb6:	f5a3 71b4 	sub.w	r1, r3, #360	; 0x168
 8002fba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002fbe:	f5a3 70b6 	sub.w	r0, r3, #364	; 0x16c
 8002fc2:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002fc6:	6809      	ldr	r1, [r1, #0]
 8002fc8:	6800      	ldr	r0, [r0, #0]
 8002fca:	f7ff fd4d 	bl	8002a68 <appResponse>
 8002fce:	4603      	mov	r3, r0
 8002fd0:	e11c      	b.n	800320c <processMessageByCommand+0x6b8>
    }

		case '2': //Unsubscribe
    {
		char requestId[REQUEST_ID_LEN+1] = {0};
 8002fd2:	2300      	movs	r3, #0
 8002fd4:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8002fd8:	f107 03f8 	add.w	r3, r7, #248	; 0xf8
 8002fdc:	2200      	movs	r2, #0
 8002fde:	601a      	str	r2, [r3, #0]
 8002fe0:	605a      	str	r2, [r3, #4]
 8002fe2:	f8c3 2007 	str.w	r2, [r3, #7]
		int responseCode = 0;
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
		bool unsubscribeSuccess = 0;
 8002fec:	2300      	movs	r3, #0
 8002fee:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167

		if (sscanf(message, "%14s", requestId) != 1)
 8002ff2:	f107 02f4 	add.w	r2, r7, #244	; 0xf4
 8002ff6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ffa:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 8002ffe:	4987      	ldr	r1, [pc, #540]	; (800321c <processMessageByCommand+0x6c8>)
 8003000:	6818      	ldr	r0, [r3, #0]
 8003002:	f007 f867 	bl	800a0d4 <siscanf>
 8003006:	4603      	mov	r3, r0
 8003008:	2b01      	cmp	r3, #1
 800300a:	d001      	beq.n	8003010 <processMessageByCommand+0x4bc>
			return 0;
 800300c:	2300      	movs	r3, #0
 800300e:	e0fd      	b.n	800320c <processMessageByCommand+0x6b8>

		unsubscribeSuccess = unsubscribe(device, address);
 8003010:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003014:	f5a3 72b4 	sub.w	r2, r3, #360	; 0x168
 8003018:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800301c:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8003020:	6811      	ldr	r1, [r2, #0]
 8003022:	6818      	ldr	r0, [r3, #0]
 8003024:	f7ff f829 	bl	800207a <unsubscribe>
 8003028:	4603      	mov	r3, r0
 800302a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167

		responseCode = unsubscribeSuccess ? 21 : 20;
 800302e:	f897 3167 	ldrb.w	r3, [r7, #359]	; 0x167
 8003032:	2b00      	cmp	r3, #0
 8003034:	d001      	beq.n	800303a <processMessageByCommand+0x4e6>
 8003036:	2315      	movs	r3, #21
 8003038:	e000      	b.n	800303c <processMessageByCommand+0x4e8>
 800303a:	2314      	movs	r3, #20
 800303c:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
		return appResponse(device,address,requestId,responseCode);
 8003040:	f107 02f4 	add.w	r2, r7, #244	; 0xf4
 8003044:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003048:	f5a3 71b4 	sub.w	r1, r3, #360	; 0x168
 800304c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003050:	f5a3 70b6 	sub.w	r0, r3, #364	; 0x16c
 8003054:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
 8003058:	6809      	ldr	r1, [r1, #0]
 800305a:	6800      	ldr	r0, [r0, #0]
 800305c:	f7ff fd04 	bl	8002a68 <appResponse>
 8003060:	4603      	mov	r3, r0
 8003062:	e0d3      	b.n	800320c <processMessageByCommand+0x6b8>
    }

	case '1': //Subscribe
	{
		char requestId[REQUEST_ID_LEN+1] = {0};
 8003064:	2300      	movs	r3, #0
 8003066:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800306a:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 800306e:	2200      	movs	r2, #0
 8003070:	601a      	str	r2, [r3, #0]
 8003072:	605a      	str	r2, [r3, #4]
 8003074:	f8c3 2007 	str.w	r2, [r3, #7]
		int responseCode = 0;
 8003078:	2300      	movs	r3, #0
 800307a:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
        float circle[3] = { 0,0,0 };
 800307e:	f04f 0300 	mov.w	r3, #0
 8003082:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003086:	f04f 0300 	mov.w	r3, #0
 800308a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800308e:	f04f 0300 	mov.w	r3, #0
 8003092:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
		int subscribeSuccess = 0;
 8003096:	2300      	movs	r3, #0
 8003098:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c

		if (sscanf(message, "%14[^,],%f,%f,%f", requestId, &circle[0], &circle[1], &circle[2]) != 4)
 800309c:	f107 01d8 	add.w	r1, r7, #216	; 0xd8
 80030a0:	f107 02e4 	add.w	r2, r7, #228	; 0xe4
 80030a4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80030a8:	f5a3 70b2 	sub.w	r0, r3, #356	; 0x164
 80030ac:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 80030b0:	3308      	adds	r3, #8
 80030b2:	9301      	str	r3, [sp, #4]
 80030b4:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 80030b8:	3304      	adds	r3, #4
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	460b      	mov	r3, r1
 80030be:	4958      	ldr	r1, [pc, #352]	; (8003220 <processMessageByCommand+0x6cc>)
 80030c0:	6800      	ldr	r0, [r0, #0]
 80030c2:	f007 f807 	bl	800a0d4 <siscanf>
 80030c6:	4603      	mov	r3, r0
 80030c8:	2b04      	cmp	r3, #4
 80030ca:	d001      	beq.n	80030d0 <processMessageByCommand+0x57c>
			return 0;
 80030cc:	2300      	movs	r3, #0
 80030ce:	e09d      	b.n	800320c <processMessageByCommand+0x6b8>
		if (!( validNum(circle[0], LATITUDE_MIN, LATITUDE_MAX) && validNum(circle[1], LONGITUDE_MIN, LONGITUDE_MAX) && validNum(circle[2], RADIUS_MIN, RADIUS_MAX)))
 80030d0:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 80030d4:	ed9f 1a53 	vldr	s2, [pc, #332]	; 8003224 <processMessageByCommand+0x6d0>
 80030d8:	eddf 0a53 	vldr	s1, [pc, #332]	; 8003228 <processMessageByCommand+0x6d4>
 80030dc:	eeb0 0a67 	vmov.f32	s0, s15
 80030e0:	f7ff fc9d 	bl	8002a1e <validNum>
 80030e4:	4603      	mov	r3, r0
 80030e6:	f083 0301 	eor.w	r3, r3, #1
 80030ea:	b2db      	uxtb	r3, r3
 80030ec:	2b00      	cmp	r3, #0
 80030ee:	d11f      	bne.n	8003130 <processMessageByCommand+0x5dc>
 80030f0:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 80030f4:	ed9f 1a4d 	vldr	s2, [pc, #308]	; 800322c <processMessageByCommand+0x6d8>
 80030f8:	eddf 0a4d 	vldr	s1, [pc, #308]	; 8003230 <processMessageByCommand+0x6dc>
 80030fc:	eeb0 0a67 	vmov.f32	s0, s15
 8003100:	f7ff fc8d 	bl	8002a1e <validNum>
 8003104:	4603      	mov	r3, r0
 8003106:	f083 0301 	eor.w	r3, r3, #1
 800310a:	b2db      	uxtb	r3, r3
 800310c:	2b00      	cmp	r3, #0
 800310e:	d10f      	bne.n	8003130 <processMessageByCommand+0x5dc>
 8003110:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 8003114:	ed9f 1a47 	vldr	s2, [pc, #284]	; 8003234 <processMessageByCommand+0x6e0>
 8003118:	eddf 0a47 	vldr	s1, [pc, #284]	; 8003238 <processMessageByCommand+0x6e4>
 800311c:	eeb0 0a67 	vmov.f32	s0, s15
 8003120:	f7ff fc7d 	bl	8002a1e <validNum>
 8003124:	4603      	mov	r3, r0
 8003126:	f083 0301 	eor.w	r3, r3, #1
 800312a:	b2db      	uxtb	r3, r3
 800312c:	2b00      	cmp	r3, #0
 800312e:	d001      	beq.n	8003134 <processMessageByCommand+0x5e0>
			return 0;
 8003130:	2300      	movs	r3, #0
 8003132:	e06b      	b.n	800320c <processMessageByCommand+0x6b8>

        struct Subscriber newSubscriber = { "", 0, { circle[0], circle[1], circle[2] } }; //Create element based on message
 8003134:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003138:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 800313c:	2200      	movs	r2, #0
 800313e:	601a      	str	r2, [r3, #0]
 8003140:	3304      	adds	r3, #4
 8003142:	2200      	movs	r2, #0
 8003144:	601a      	str	r2, [r3, #0]
 8003146:	605a      	str	r2, [r3, #4]
 8003148:	609a      	str	r2, [r3, #8]
 800314a:	731a      	strb	r2, [r3, #12]
 800314c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003150:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003154:	2200      	movs	r2, #0
 8003156:	615a      	str	r2, [r3, #20]
 8003158:	f8d7 20d8 	ldr.w	r2, [r7, #216]	; 0xd8
 800315c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003160:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003164:	619a      	str	r2, [r3, #24]
 8003166:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800316a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800316e:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003172:	61da      	str	r2, [r3, #28]
 8003174:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8003178:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800317c:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003180:	621a      	str	r2, [r3, #32]
        strncpy(newSubscriber.address, address, strlen(address)); //Fill element based on message
 8003182:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003186:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 800318a:	6818      	ldr	r0, [r3, #0]
 800318c:	f7fd f832 	bl	80001f4 <strlen>
 8003190:	4602      	mov	r2, r0
 8003192:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003196:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 800319a:	f107 0038 	add.w	r0, r7, #56	; 0x38
 800319e:	6819      	ldr	r1, [r3, #0]
 80031a0:	f007 fd6e 	bl	800ac80 <strncpy>
        subscribeSuccess = subscribe(device, &newSubscriber);
 80031a4:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80031a8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031ac:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 80031b0:	4611      	mov	r1, r2
 80031b2:	6818      	ldr	r0, [r3, #0]
 80031b4:	f7fe fef7 	bl	8001fa6 <subscribe>
 80031b8:	4603      	mov	r3, r0
 80031ba:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c

        responseCode =  subscribeSuccess ? 11 : (device->count<MAX_PHONES ? 10 : 12);
 80031be:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d10c      	bne.n	80031e0 <processMessageByCommand+0x68c>
 80031c6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031ca:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 80031d4:	2b09      	cmp	r3, #9
 80031d6:	dc01      	bgt.n	80031dc <processMessageByCommand+0x688>
 80031d8:	230a      	movs	r3, #10
 80031da:	e002      	b.n	80031e2 <processMessageByCommand+0x68e>
 80031dc:	230c      	movs	r3, #12
 80031de:	e000      	b.n	80031e2 <processMessageByCommand+0x68e>
 80031e0:	230b      	movs	r3, #11
 80031e2:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
        return appResponse(device,address,requestId,responseCode);
 80031e6:	f107 02e4 	add.w	r2, r7, #228	; 0xe4
 80031ea:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031ee:	f5a3 71b4 	sub.w	r1, r3, #360	; 0x168
 80031f2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031f6:	f5a3 70b6 	sub.w	r0, r3, #364	; 0x16c
 80031fa:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 80031fe:	6809      	ldr	r1, [r1, #0]
 8003200:	6800      	ldr	r0, [r0, #0]
 8003202:	f7ff fc31 	bl	8002a68 <appResponse>
 8003206:	4603      	mov	r3, r0
 8003208:	e000      	b.n	800320c <processMessageByCommand+0x6b8>
		return appResponse(device,address,requestTime,responseCode);

    }
    */
    default:
        return 0;
 800320a:	2300      	movs	r3, #0
    }
}
 800320c:	4618      	mov	r0, r3
 800320e:	f507 77ba 	add.w	r7, r7, #372	; 0x174
 8003212:	46bd      	mov	sp, r7
 8003214:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003218:	0800f93c 	.word	0x0800f93c
 800321c:	0800f954 	.word	0x0800f954
 8003220:	0800f95c 	.word	0x0800f95c
 8003224:	42b40000 	.word	0x42b40000
 8003228:	c2b40000 	.word	0xc2b40000
 800322c:	43340000 	.word	0x43340000
 8003230:	c3340000 	.word	0xc3340000
 8003234:	4ac26d70 	.word	0x4ac26d70
 8003238:	42480000 	.word	0x42480000

0800323c <processMessage>:

bool processMessage(const char* message, const char* address, struct Device* device) {
 800323c:	b580      	push	{r7, lr}
 800323e:	b08c      	sub	sp, #48	; 0x30
 8003240:	af00      	add	r7, sp, #0
 8003242:	60f8      	str	r0, [r7, #12]
 8003244:	60b9      	str	r1, [r7, #8]
 8003246:	607a      	str	r2, [r7, #4]

    char prefixStr[MAX_ICCID_LEN + 2] = ""; //+2 for ",\0"
 8003248:	2300      	movs	r3, #0
 800324a:	61bb      	str	r3, [r7, #24]
 800324c:	f107 031c 	add.w	r3, r7, #28
 8003250:	2200      	movs	r2, #0
 8003252:	601a      	str	r2, [r3, #0]
 8003254:	605a      	str	r2, [r3, #4]
 8003256:	609a      	str	r2, [r3, #8]
 8003258:	60da      	str	r2, [r3, #12]
 800325a:	611a      	str	r2, [r3, #16]
    sprintf(prefixStr, "%s,", device->iccid);
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	f503 72c0 	add.w	r2, r3, #384	; 0x180
 8003262:	f107 0318 	add.w	r3, r7, #24
 8003266:	4921      	ldr	r1, [pc, #132]	; (80032ec <processMessage+0xb0>)
 8003268:	4618      	mov	r0, r3
 800326a:	f006 ff13 	bl	800a094 <siprintf>

    if (!prefix(message, prefixStr)) {
 800326e:	f107 0318 	add.w	r3, r7, #24
 8003272:	4619      	mov	r1, r3
 8003274:	68f8      	ldr	r0, [r7, #12]
 8003276:	f7ff f893 	bl	80023a0 <prefix>
 800327a:	4603      	mov	r3, r0
 800327c:	f083 0301 	eor.w	r3, r3, #1
 8003280:	b2db      	uxtb	r3, r3
 8003282:	2b00      	cmp	r3, #0
 8003284:	d001      	beq.n	800328a <processMessage+0x4e>
        return 0;
 8003286:	2300      	movs	r3, #0
 8003288:	e02b      	b.n	80032e2 <processMessage+0xa6>
    }
    message += strlen(prefixStr); //printf("%s\n", message);
 800328a:	f107 0318 	add.w	r3, r7, #24
 800328e:	4618      	mov	r0, r3
 8003290:	f7fc ffb0 	bl	80001f4 <strlen>
 8003294:	4602      	mov	r2, r0
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	4413      	add	r3, r2
 800329a:	60fb      	str	r3, [r7, #12]

    char command[3] = { 0 };
 800329c:	4b14      	ldr	r3, [pc, #80]	; (80032f0 <processMessage+0xb4>)
 800329e:	881b      	ldrh	r3, [r3, #0]
 80032a0:	82bb      	strh	r3, [r7, #20]
 80032a2:	2300      	movs	r3, #0
 80032a4:	75bb      	strb	r3, [r7, #22]
    strncpy(command, message, 2);
 80032a6:	f107 0314 	add.w	r3, r7, #20
 80032aa:	2202      	movs	r2, #2
 80032ac:	68f9      	ldr	r1, [r7, #12]
 80032ae:	4618      	mov	r0, r3
 80032b0:	f007 fce6 	bl	800ac80 <strncpy>
    if (!((command[0] != 0 && command[1] == 0) || (command[0] != 0 && command[1] == ',')))
 80032b4:	7d3b      	ldrb	r3, [r7, #20]
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	d002      	beq.n	80032c0 <processMessage+0x84>
 80032ba:	7d7b      	ldrb	r3, [r7, #21]
 80032bc:	2b00      	cmp	r3, #0
 80032be:	d007      	beq.n	80032d0 <processMessage+0x94>
 80032c0:	7d3b      	ldrb	r3, [r7, #20]
 80032c2:	2b00      	cmp	r3, #0
 80032c4:	d002      	beq.n	80032cc <processMessage+0x90>
 80032c6:	7d7b      	ldrb	r3, [r7, #21]
 80032c8:	2b2c      	cmp	r3, #44	; 0x2c
 80032ca:	d001      	beq.n	80032d0 <processMessage+0x94>
    {
        return 0;
 80032cc:	2300      	movs	r3, #0
 80032ce:	e008      	b.n	80032e2 <processMessage+0xa6>
    }

    return processMessageByCommand(message + 2, address, device, &command[0]);
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	1c98      	adds	r0, r3, #2
 80032d4:	f107 0314 	add.w	r3, r7, #20
 80032d8:	687a      	ldr	r2, [r7, #4]
 80032da:	68b9      	ldr	r1, [r7, #8]
 80032dc:	f7ff fc3a 	bl	8002b54 <processMessageByCommand>
 80032e0:	4603      	mov	r3, r0
}
 80032e2:	4618      	mov	r0, r3
 80032e4:	3730      	adds	r7, #48	; 0x30
 80032e6:	46bd      	mov	sp, r7
 80032e8:	bd80      	pop	{r7, pc}
 80032ea:	bf00      	nop
 80032ec:	0800f970 	.word	0x0800f970
 80032f0:	0800f974 	.word	0x0800f974

080032f4 <handleMessages>:

void handleMessages(struct Device* device) {
 80032f4:	b580      	push	{r7, lr}
 80032f6:	b0b8      	sub	sp, #224	; 0xe0
 80032f8:	af02      	add	r7, sp, #8
 80032fa:	6078      	str	r0, [r7, #4]

    char body[MAX_SMS_SIZE] = { 0 }; //sms body
 80032fc:	2300      	movs	r3, #0
 80032fe:	62bb      	str	r3, [r7, #40]	; 0x28
 8003300:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003304:	229c      	movs	r2, #156	; 0x9c
 8003306:	2100      	movs	r1, #0
 8003308:	4618      	mov	r0, r3
 800330a:	f005 fca5 	bl	8008c58 <memset>
    char address[MAX_PHONE_LEN + 1] = { 0 }; //sms sender
 800330e:	2300      	movs	r3, #0
 8003310:	617b      	str	r3, [r7, #20]
 8003312:	f107 0318 	add.w	r3, r7, #24
 8003316:	2200      	movs	r2, #0
 8003318:	601a      	str	r2, [r3, #0]
 800331a:	605a      	str	r2, [r3, #4]
 800331c:	609a      	str	r2, [r3, #8]
 800331e:	731a      	strb	r2, [r3, #12]
    char index[MAX_INDEX_LEN + 1] = { 0 }; //sms index
 8003320:	2300      	movs	r3, #0
 8003322:	60fb      	str	r3, [r7, #12]
 8003324:	2300      	movs	r3, #0
 8003326:	823b      	strh	r3, [r7, #16]

    uint16_t storedCount = 0;
 8003328:	2300      	movs	r3, #0
 800332a:	817b      	strh	r3, [r7, #10]
    if (!readStoredCount1(&storedCount))
 800332c:	f107 030a 	add.w	r3, r7, #10
 8003330:	4618      	mov	r0, r3
 8003332:	f7fe f95b 	bl	80015ec <readStoredCount1>
 8003336:	4603      	mov	r3, r0
 8003338:	f083 0301 	eor.w	r3, r3, #1
 800333c:	b2db      	uxtb	r3, r3
 800333e:	2b00      	cmp	r3, #0
 8003340:	f040 8083 	bne.w	800344a <handleMessages+0x156>
       return;

    if ( storedCount < 1 ) //exit if no messages
 8003344:	897b      	ldrh	r3, [r7, #10]
 8003346:	2b00      	cmp	r3, #0
 8003348:	f000 8081 	beq.w	800344e <handleMessages+0x15a>
    	return;

    if (storedCount > 128) //ram limits
 800334c:	897b      	ldrh	r3, [r7, #10]
 800334e:	2b80      	cmp	r3, #128	; 0x80
 8003350:	d901      	bls.n	8003356 <handleMessages+0x62>
    	storedCount=128;
 8003352:	2380      	movs	r3, #128	; 0x80
 8003354:	817b      	strh	r3, [r7, #10]

    char* smsList = (char*)malloc(storedCount * MAX_CMGL_RECORD_SIZE);
 8003356:	897b      	ldrh	r3, [r7, #10]
 8003358:	461a      	mov	r2, r3
 800335a:	4613      	mov	r3, r2
 800335c:	019b      	lsls	r3, r3, #6
 800335e:	4413      	add	r3, r2
 8003360:	009b      	lsls	r3, r3, #2
 8003362:	4618      	mov	r0, r3
 8003364:	f005 fc5a 	bl	8008c1c <malloc>
 8003368:	4603      	mov	r3, r0
 800336a:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    //strcpy(smsList,"+CMGL: 0,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:32:05+08\",145,46\r\n891004234814455936,a,50.446896,18.838770,50000\r\n+CMGL: 1,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:32:30+08\",145,20\r\n891004234814455936,0\r\n+CMGL: 2,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:32:58+08\",145,7\r\nTEXT123\r\n+CMGL: 3,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:33:19+08\",145,8\r\nTEXT1234\r\n+CMGL: 4,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:34:03+08\",145,9\r\nTEXT12345\r\n\r\nOK\r\n");
    if (!readSmsList(smsList, storedCount * MAX_CMGL_RECORD_SIZE)) {
 800336e:	897b      	ldrh	r3, [r7, #10]
 8003370:	461a      	mov	r2, r3
 8003372:	0192      	lsls	r2, r2, #6
 8003374:	4413      	add	r3, r2
 8003376:	009b      	lsls	r3, r3, #2
 8003378:	b29b      	uxth	r3, r3
 800337a:	4619      	mov	r1, r3
 800337c:	f8d7 00cc 	ldr.w	r0, [r7, #204]	; 0xcc
 8003380:	f7fe f8a8 	bl	80014d4 <readSmsList>
 8003384:	4603      	mov	r3, r0
 8003386:	f083 0301 	eor.w	r3, r3, #1
 800338a:	b2db      	uxtb	r3, r3
 800338c:	2b00      	cmp	r3, #0
 800338e:	d004      	beq.n	800339a <handleMessages+0xa6>
    	free(smsList);
 8003390:	f8d7 00cc 	ldr.w	r0, [r7, #204]	; 0xcc
 8003394:	f005 fc4a 	bl	8008c2c <free>
    	return;
 8003398:	e05a      	b.n	8003450 <handleMessages+0x15c>
    }

    uint16_t unreadCount = splitText(smsList+2);
 800339a:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800339e:	3302      	adds	r3, #2
 80033a0:	4618      	mov	r0, r3
 80033a2:	f7ff f86b 	bl	800247c <splitText>
 80033a6:	4603      	mov	r3, r0
 80033a8:	f8a7 30ca 	strh.w	r3, [r7, #202]	; 0xca

    char* msg = smsList+2;
 80033ac:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 80033b0:	3302      	adds	r3, #2
 80033b2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    for (uint16_t i = 0; i < unreadCount; i++) {
 80033b6:	2300      	movs	r3, #0
 80033b8:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
 80033bc:	e03a      	b.n	8003434 <handleMessages+0x140>

        //printf("[%d]%s", i, msg);
        getText(body, msg, MAX_SMS_SIZE, "\r\n", "");
 80033be:	f107 0028 	add.w	r0, r7, #40	; 0x28
 80033c2:	4b25      	ldr	r3, [pc, #148]	; (8003458 <handleMessages+0x164>)
 80033c4:	9300      	str	r3, [sp, #0]
 80033c6:	4b25      	ldr	r3, [pc, #148]	; (800345c <handleMessages+0x168>)
 80033c8:	22a0      	movs	r2, #160	; 0xa0
 80033ca:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 80033ce:	f7fe f819 	bl	8001404 <getText>
        getText(address, msg, MAX_PHONE_LEN + 1, "UNREAD\",\"", "\"");
 80033d2:	f107 0014 	add.w	r0, r7, #20
 80033d6:	4b22      	ldr	r3, [pc, #136]	; (8003460 <handleMessages+0x16c>)
 80033d8:	9300      	str	r3, [sp, #0]
 80033da:	4b22      	ldr	r3, [pc, #136]	; (8003464 <handleMessages+0x170>)
 80033dc:	2211      	movs	r2, #17
 80033de:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 80033e2:	f7fe f80f 	bl	8001404 <getText>
        getText(index, msg, MAX_INDEX_LEN + 1, "+CMGL: ", ",");
 80033e6:	f107 000c 	add.w	r0, r7, #12
 80033ea:	4b1f      	ldr	r3, [pc, #124]	; (8003468 <handleMessages+0x174>)
 80033ec:	9300      	str	r3, [sp, #0]
 80033ee:	4b1f      	ldr	r3, [pc, #124]	; (800346c <handleMessages+0x178>)
 80033f0:	2206      	movs	r2, #6
 80033f2:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 80033f6:	f7fe f805 	bl	8001404 <getText>
        processMessage(body, address, device);
 80033fa:	f107 0114 	add.w	r1, r7, #20
 80033fe:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8003402:	687a      	ldr	r2, [r7, #4]
 8003404:	4618      	mov	r0, r3
 8003406:	f7ff ff19 	bl	800323c <processMessage>
        deleteSms(index);  //
 800340a:	f107 030c 	add.w	r3, r7, #12
 800340e:	4618      	mov	r0, r3
 8003410:	f7fe f878 	bl	8001504 <deleteSms>

        msg += strlen(msg) + 2;
 8003414:	f8d7 00d4 	ldr.w	r0, [r7, #212]	; 0xd4
 8003418:	f7fc feec 	bl	80001f4 <strlen>
 800341c:	4603      	mov	r3, r0
 800341e:	3302      	adds	r3, #2
 8003420:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 8003424:	4413      	add	r3, r2
 8003426:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    for (uint16_t i = 0; i < unreadCount; i++) {
 800342a:	f8b7 30d2 	ldrh.w	r3, [r7, #210]	; 0xd2
 800342e:	3301      	adds	r3, #1
 8003430:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
 8003434:	f8b7 20d2 	ldrh.w	r2, [r7, #210]	; 0xd2
 8003438:	f8b7 30ca 	ldrh.w	r3, [r7, #202]	; 0xca
 800343c:	429a      	cmp	r2, r3
 800343e:	d3be      	bcc.n	80033be <handleMessages+0xca>
    }

    free(smsList);
 8003440:	f8d7 00cc 	ldr.w	r0, [r7, #204]	; 0xcc
 8003444:	f005 fbf2 	bl	8008c2c <free>
 8003448:	e002      	b.n	8003450 <handleMessages+0x15c>
       return;
 800344a:	bf00      	nop
 800344c:	e000      	b.n	8003450 <handleMessages+0x15c>
    	return;
 800344e:	bf00      	nop
}
 8003450:	37d8      	adds	r7, #216	; 0xd8
 8003452:	46bd      	mov	sp, r7
 8003454:	bd80      	pop	{r7, pc}
 8003456:	bf00      	nop
 8003458:	0800f978 	.word	0x0800f978
 800345c:	0800f768 	.word	0x0800f768
 8003460:	0800f988 	.word	0x0800f988
 8003464:	0800f97c 	.word	0x0800f97c
 8003468:	0800f994 	.word	0x0800f994
 800346c:	0800f98c 	.word	0x0800f98c

08003470 <serviceCycle>:

void serviceCycle(struct Device* device) {
 8003470:	b580      	push	{r7, lr}
 8003472:	b082      	sub	sp, #8
 8003474:	af00      	add	r7, sp, #0
 8003476:	6078      	str	r0, [r7, #4]

	if (!waitConnect(5))
 8003478:	2005      	movs	r0, #5
 800347a:	f7fd ff9f 	bl	80013bc <waitConnect>
 800347e:	4603      	mov	r3, r0
 8003480:	f083 0301 	eor.w	r3, r3, #1
 8003484:	b2db      	uxtb	r3, r3
 8003486:	2b00      	cmp	r3, #0
 8003488:	d15d      	bne.n	8003546 <serviceCycle+0xd6>
		return;

	sendAtCommand("ATE0\r",2000,"OK");
 800348a:	4a37      	ldr	r2, [pc, #220]	; (8003568 <serviceCycle+0xf8>)
 800348c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8003490:	4836      	ldr	r0, [pc, #216]	; (800356c <serviceCycle+0xfc>)
 8003492:	f7fd fe97 	bl	80011c4 <sendAtCommand>

    if (!sendAtCommand("AT+CMGF=1\r",2000,"OK"))
 8003496:	4a34      	ldr	r2, [pc, #208]	; (8003568 <serviceCycle+0xf8>)
 8003498:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800349c:	4834      	ldr	r0, [pc, #208]	; (8003570 <serviceCycle+0x100>)
 800349e:	f7fd fe91 	bl	80011c4 <sendAtCommand>
 80034a2:	4603      	mov	r3, r0
 80034a4:	f083 0301 	eor.w	r3, r3, #1
 80034a8:	b2db      	uxtb	r3, r3
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d14d      	bne.n	800354a <serviceCycle+0xda>
        return;

    if (!sendAtCommand("AT+CSDH=1\r",2000,"OK"))
 80034ae:	4a2e      	ldr	r2, [pc, #184]	; (8003568 <serviceCycle+0xf8>)
 80034b0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80034b4:	482f      	ldr	r0, [pc, #188]	; (8003574 <serviceCycle+0x104>)
 80034b6:	f7fd fe85 	bl	80011c4 <sendAtCommand>
 80034ba:	4603      	mov	r3, r0
 80034bc:	f083 0301 	eor.w	r3, r3, #1
 80034c0:	b2db      	uxtb	r3, r3
 80034c2:	2b00      	cmp	r3, #0
 80034c4:	d143      	bne.n	800354e <serviceCycle+0xde>
        return;

    if (!sendAtCommand("AT+CNMI=2,0,0,0,0\r",2000,"OK"))
 80034c6:	4a28      	ldr	r2, [pc, #160]	; (8003568 <serviceCycle+0xf8>)
 80034c8:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80034cc:	482a      	ldr	r0, [pc, #168]	; (8003578 <serviceCycle+0x108>)
 80034ce:	f7fd fe79 	bl	80011c4 <sendAtCommand>
 80034d2:	4603      	mov	r3, r0
 80034d4:	f083 0301 	eor.w	r3, r3, #1
 80034d8:	b2db      	uxtb	r3, r3
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d139      	bne.n	8003552 <serviceCycle+0xe2>
    	return;

    if (!sendAtCommand("AT+CPMS=\"SM\",\"ME\",\"SM\"\r",5000,"OK"))
 80034de:	4a22      	ldr	r2, [pc, #136]	; (8003568 <serviceCycle+0xf8>)
 80034e0:	f241 3188 	movw	r1, #5000	; 0x1388
 80034e4:	4825      	ldr	r0, [pc, #148]	; (800357c <serviceCycle+0x10c>)
 80034e6:	f7fd fe6d 	bl	80011c4 <sendAtCommand>
 80034ea:	4603      	mov	r3, r0
 80034ec:	f083 0301 	eor.w	r3, r3, #1
 80034f0:	b2db      	uxtb	r3, r3
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	d12f      	bne.n	8003556 <serviceCycle+0xe6>
    	return;

    if (!handleReadFile(device))
 80034f6:	6878      	ldr	r0, [r7, #4]
 80034f8:	f7fe fcc6 	bl	8001e88 <handleReadFile>
 80034fc:	4603      	mov	r3, r0
 80034fe:	f083 0301 	eor.w	r3, r3, #1
 8003502:	b2db      	uxtb	r3, r3
 8003504:	2b00      	cmp	r3, #0
 8003506:	d128      	bne.n	800355a <serviceCycle+0xea>
        return;

    if (gpsPositioning(device,90000)) {
 8003508:	491d      	ldr	r1, [pc, #116]	; (8003580 <serviceCycle+0x110>)
 800350a:	6878      	ldr	r0, [r7, #4]
 800350c:	f7fe feb2 	bl	8002274 <gpsPositioning>
 8003510:	4603      	mov	r3, r0
 8003512:	2b00      	cmp	r3, #0
 8003514:	d005      	beq.n	8003522 <serviceCycle+0xb2>
        handleWriteFile(device);
 8003516:	6878      	ldr	r0, [r7, #4]
 8003518:	f7fe fce9 	bl	8001eee <handleWriteFile>
        handleNotifications(device);
 800351c:	6878      	ldr	r0, [r7, #4]
 800351e:	f7ff fa55 	bl	80029cc <handleNotifications>
   }

    if (!setIccid(device->iccid))
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8003528:	4618      	mov	r0, r3
 800352a:	f7fe fae1 	bl	8001af0 <setIccid>
 800352e:	4603      	mov	r3, r0
 8003530:	f083 0301 	eor.w	r3, r3, #1
 8003534:	b2db      	uxtb	r3, r3
 8003536:	2b00      	cmp	r3, #0
 8003538:	d111      	bne.n	800355e <serviceCycle+0xee>
    	return;

    handleMessages(device);
 800353a:	6878      	ldr	r0, [r7, #4]
 800353c:	f7ff feda 	bl	80032f4 <handleMessages>

    sendStoredSms();
 8003540:	f7fe f8cc 	bl	80016dc <sendStoredSms>
 8003544:	e00c      	b.n	8003560 <serviceCycle+0xf0>
		return;
 8003546:	bf00      	nop
 8003548:	e00a      	b.n	8003560 <serviceCycle+0xf0>
        return;
 800354a:	bf00      	nop
 800354c:	e008      	b.n	8003560 <serviceCycle+0xf0>
        return;
 800354e:	bf00      	nop
 8003550:	e006      	b.n	8003560 <serviceCycle+0xf0>
    	return;
 8003552:	bf00      	nop
 8003554:	e004      	b.n	8003560 <serviceCycle+0xf0>
    	return;
 8003556:	bf00      	nop
 8003558:	e002      	b.n	8003560 <serviceCycle+0xf0>
        return;
 800355a:	bf00      	nop
 800355c:	e000      	b.n	8003560 <serviceCycle+0xf0>
    	return;
 800355e:	bf00      	nop

}
 8003560:	3708      	adds	r7, #8
 8003562:	46bd      	mov	sp, r7
 8003564:	bd80      	pop	{r7, pc}
 8003566:	bf00      	nop
 8003568:	0800f550 	.word	0x0800f550
 800356c:	0800f998 	.word	0x0800f998
 8003570:	0800f9a0 	.word	0x0800f9a0
 8003574:	0800f9ac 	.word	0x0800f9ac
 8003578:	0800f9b8 	.word	0x0800f9b8
 800357c:	0800f9cc 	.word	0x0800f9cc
 8003580:	00015f90 	.word	0x00015f90

08003584 <enterSleep>:

void enterSleep(const int* interval) {
 8003584:	b580      	push	{r7, lr}
 8003586:	b082      	sub	sp, #8
 8003588:	af00      	add	r7, sp, #0
 800358a:	6078      	str	r0, [r7, #4]
	/* Set STOP/LOWPOWER mode */
    HAL_SuspendTick();
 800358c:	f000 fbe8 	bl	8003d60 <HAL_SuspendTick>
    HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, *interval , RTC_WAKEUPCLOCK_CK_SPRE_16BITS);
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	2204      	movs	r2, #4
 8003596:	4619      	mov	r1, r3
 8003598:	4808      	ldr	r0, [pc, #32]	; (80035bc <enterSleep+0x38>)
 800359a:	f002 fa41 	bl	8005a20 <HAL_RTCEx_SetWakeUpTimer_IT>
    /* Enter STOP/LOWPOWER mode */
    HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);
 800359e:	2101      	movs	r1, #1
 80035a0:	2001      	movs	r0, #1
 80035a2:	f001 fa95 	bl	8004ad0 <HAL_PWR_EnterSTOPMode>
    HAL_RTCEx_DeactivateWakeUpTimer(&hrtc);
 80035a6:	4805      	ldr	r0, [pc, #20]	; (80035bc <enterSleep+0x38>)
 80035a8:	f002 fafa 	bl	8005ba0 <HAL_RTCEx_DeactivateWakeUpTimer>
    SystemClock_Config();
 80035ac:	f000 f83c 	bl	8003628 <SystemClock_Config>
    HAL_ResumeTick();
 80035b0:	f000 fbe6 	bl	8003d80 <HAL_ResumeTick>
}
 80035b4:	bf00      	nop
 80035b6:	3708      	adds	r7, #8
 80035b8:	46bd      	mov	sp, r7
 80035ba:	bd80      	pop	{r7, pc}
 80035bc:	20000260 	.word	0x20000260

080035c0 <workCycle>:

void workCycle() {
 80035c0:	b580      	push	{r7, lr}
 80035c2:	b0e6      	sub	sp, #408	; 0x198
 80035c4:	af00      	add	r7, sp, #0

	struct Device device = {0}; //struct Device device = { {52,19}, 1672527600, 120, { 0 } , 0 , {0} };
 80035c6:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 80035ca:	f5a3 73cc 	sub.w	r3, r3, #408	; 0x198
 80035ce:	4618      	mov	r0, r3
 80035d0:	f44f 73cc 	mov.w	r3, #408	; 0x198
 80035d4:	461a      	mov	r2, r3
 80035d6:	2100      	movs	r1, #0
 80035d8:	f005 fb3e 	bl	8008c58 <memset>

	device.interval = 120; //factory interval in s
 80035dc:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 80035e0:	f5a3 73cc 	sub.w	r3, r3, #408	; 0x198
 80035e4:	2278      	movs	r2, #120	; 0x78
 80035e6:	611a      	str	r2, [r3, #16]

	serviceCycle(&device);
 80035e8:	463b      	mov	r3, r7
 80035ea:	4618      	mov	r0, r3
 80035ec:	f7ff ff40 	bl	8003470 <serviceCycle>

	enterSleep(&(device.interval));
 80035f0:	463b      	mov	r3, r7
 80035f2:	3310      	adds	r3, #16
 80035f4:	4618      	mov	r0, r3
 80035f6:	f7ff ffc5 	bl	8003584 <enterSleep>

}
 80035fa:	bf00      	nop
 80035fc:	f507 77cc 	add.w	r7, r7, #408	; 0x198
 8003600:	46bd      	mov	sp, r7
 8003602:	bd80      	pop	{r7, pc}

08003604 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003604:	b580      	push	{r7, lr}
 8003606:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003608:	f000 fb14 	bl	8003c34 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800360c:	f000 f80c 	bl	8003628 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003610:	f000 f924 	bl	800385c <MX_GPIO_Init>
  MX_DMA_Init();
 8003614:	f000 f902 	bl	800381c <MX_DMA_Init>
  MX_USART1_UART_Init();
 8003618:	f000 f8d6 	bl	80037c8 <MX_USART1_UART_Init>
  MX_RTC_Init();
 800361c:	f000 f870 	bl	8003700 <MX_RTC_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  //loop
	  workCycle();
 8003620:	f7ff ffce 	bl	80035c0 <workCycle>
 8003624:	e7fc      	b.n	8003620 <main+0x1c>
	...

08003628 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003628:	b580      	push	{r7, lr}
 800362a:	b094      	sub	sp, #80	; 0x50
 800362c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800362e:	f107 0320 	add.w	r3, r7, #32
 8003632:	2230      	movs	r2, #48	; 0x30
 8003634:	2100      	movs	r1, #0
 8003636:	4618      	mov	r0, r3
 8003638:	f005 fb0e 	bl	8008c58 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800363c:	f107 030c 	add.w	r3, r7, #12
 8003640:	2200      	movs	r2, #0
 8003642:	601a      	str	r2, [r3, #0]
 8003644:	605a      	str	r2, [r3, #4]
 8003646:	609a      	str	r2, [r3, #8]
 8003648:	60da      	str	r2, [r3, #12]
 800364a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800364c:	2300      	movs	r3, #0
 800364e:	60bb      	str	r3, [r7, #8]
 8003650:	4b29      	ldr	r3, [pc, #164]	; (80036f8 <SystemClock_Config+0xd0>)
 8003652:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003654:	4a28      	ldr	r2, [pc, #160]	; (80036f8 <SystemClock_Config+0xd0>)
 8003656:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800365a:	6413      	str	r3, [r2, #64]	; 0x40
 800365c:	4b26      	ldr	r3, [pc, #152]	; (80036f8 <SystemClock_Config+0xd0>)
 800365e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003660:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003664:	60bb      	str	r3, [r7, #8]
 8003666:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8003668:	2300      	movs	r3, #0
 800366a:	607b      	str	r3, [r7, #4]
 800366c:	4b23      	ldr	r3, [pc, #140]	; (80036fc <SystemClock_Config+0xd4>)
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003674:	4a21      	ldr	r2, [pc, #132]	; (80036fc <SystemClock_Config+0xd4>)
 8003676:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800367a:	6013      	str	r3, [r2, #0]
 800367c:	4b1f      	ldr	r3, [pc, #124]	; (80036fc <SystemClock_Config+0xd4>)
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003684:	607b      	str	r3, [r7, #4]
 8003686:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 8003688:	230a      	movs	r3, #10
 800368a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800368c:	2301      	movs	r3, #1
 800368e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003690:	2310      	movs	r3, #16
 8003692:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8003694:	2301      	movs	r3, #1
 8003696:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003698:	2302      	movs	r3, #2
 800369a:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800369c:	2300      	movs	r3, #0
 800369e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 80036a0:	2308      	movs	r3, #8
 80036a2:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 80;
 80036a4:	2350      	movs	r3, #80	; 0x50
 80036a6:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80036a8:	2302      	movs	r3, #2
 80036aa:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80036ac:	2304      	movs	r3, #4
 80036ae:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80036b0:	f107 0320 	add.w	r3, r7, #32
 80036b4:	4618      	mov	r0, r3
 80036b6:	f001 fa37 	bl	8004b28 <HAL_RCC_OscConfig>
 80036ba:	4603      	mov	r3, r0
 80036bc:	2b00      	cmp	r3, #0
 80036be:	d001      	beq.n	80036c4 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80036c0:	f000 f950 	bl	8003964 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80036c4:	230f      	movs	r3, #15
 80036c6:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80036c8:	2302      	movs	r3, #2
 80036ca:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 80036cc:	2390      	movs	r3, #144	; 0x90
 80036ce:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80036d0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80036d4:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80036d6:	2300      	movs	r3, #0
 80036d8:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80036da:	f107 030c 	add.w	r3, r7, #12
 80036de:	2100      	movs	r1, #0
 80036e0:	4618      	mov	r0, r3
 80036e2:	f001 fc99 	bl	8005018 <HAL_RCC_ClockConfig>
 80036e6:	4603      	mov	r3, r0
 80036e8:	2b00      	cmp	r3, #0
 80036ea:	d001      	beq.n	80036f0 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 80036ec:	f000 f93a 	bl	8003964 <Error_Handler>
  }
}
 80036f0:	bf00      	nop
 80036f2:	3750      	adds	r7, #80	; 0x50
 80036f4:	46bd      	mov	sp, r7
 80036f6:	bd80      	pop	{r7, pc}
 80036f8:	40023800 	.word	0x40023800
 80036fc:	40007000 	.word	0x40007000

08003700 <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 8003700:	b580      	push	{r7, lr}
 8003702:	b086      	sub	sp, #24
 8003704:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 8003706:	1d3b      	adds	r3, r7, #4
 8003708:	2200      	movs	r2, #0
 800370a:	601a      	str	r2, [r3, #0]
 800370c:	605a      	str	r2, [r3, #4]
 800370e:	609a      	str	r2, [r3, #8]
 8003710:	60da      	str	r2, [r3, #12]
 8003712:	611a      	str	r2, [r3, #16]
  RTC_DateTypeDef sDate = {0};
 8003714:	2300      	movs	r3, #0
 8003716:	603b      	str	r3, [r7, #0]

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8003718:	4b29      	ldr	r3, [pc, #164]	; (80037c0 <MX_RTC_Init+0xc0>)
 800371a:	4a2a      	ldr	r2, [pc, #168]	; (80037c4 <MX_RTC_Init+0xc4>)
 800371c:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 800371e:	4b28      	ldr	r3, [pc, #160]	; (80037c0 <MX_RTC_Init+0xc0>)
 8003720:	2200      	movs	r2, #0
 8003722:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 8003724:	4b26      	ldr	r3, [pc, #152]	; (80037c0 <MX_RTC_Init+0xc0>)
 8003726:	227f      	movs	r2, #127	; 0x7f
 8003728:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 800372a:	4b25      	ldr	r3, [pc, #148]	; (80037c0 <MX_RTC_Init+0xc0>)
 800372c:	22ff      	movs	r2, #255	; 0xff
 800372e:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8003730:	4b23      	ldr	r3, [pc, #140]	; (80037c0 <MX_RTC_Init+0xc0>)
 8003732:	2200      	movs	r2, #0
 8003734:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8003736:	4b22      	ldr	r3, [pc, #136]	; (80037c0 <MX_RTC_Init+0xc0>)
 8003738:	2200      	movs	r2, #0
 800373a:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 800373c:	4b20      	ldr	r3, [pc, #128]	; (80037c0 <MX_RTC_Init+0xc0>)
 800373e:	2200      	movs	r2, #0
 8003740:	619a      	str	r2, [r3, #24]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8003742:	481f      	ldr	r0, [pc, #124]	; (80037c0 <MX_RTC_Init+0xc0>)
 8003744:	f001 ff36 	bl	80055b4 <HAL_RTC_Init>
 8003748:	4603      	mov	r3, r0
 800374a:	2b00      	cmp	r3, #0
 800374c:	d001      	beq.n	8003752 <MX_RTC_Init+0x52>
  {
    Error_Handler();
 800374e:	f000 f909 	bl	8003964 <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 8003752:	2300      	movs	r3, #0
 8003754:	713b      	strb	r3, [r7, #4]
  sTime.Minutes = 0x0;
 8003756:	2300      	movs	r3, #0
 8003758:	717b      	strb	r3, [r7, #5]
  sTime.Seconds = 0x0;
 800375a:	2300      	movs	r3, #0
 800375c:	71bb      	strb	r3, [r7, #6]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 800375e:	2300      	movs	r3, #0
 8003760:	613b      	str	r3, [r7, #16]
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8003762:	2300      	movs	r3, #0
 8003764:	617b      	str	r3, [r7, #20]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8003766:	1d3b      	adds	r3, r7, #4
 8003768:	2201      	movs	r2, #1
 800376a:	4619      	mov	r1, r3
 800376c:	4814      	ldr	r0, [pc, #80]	; (80037c0 <MX_RTC_Init+0xc0>)
 800376e:	f001 ff97 	bl	80056a0 <HAL_RTC_SetTime>
 8003772:	4603      	mov	r3, r0
 8003774:	2b00      	cmp	r3, #0
 8003776:	d001      	beq.n	800377c <MX_RTC_Init+0x7c>
  {
    Error_Handler();
 8003778:	f000 f8f4 	bl	8003964 <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 800377c:	2301      	movs	r3, #1
 800377e:	703b      	strb	r3, [r7, #0]
  sDate.Month = RTC_MONTH_JANUARY;
 8003780:	2301      	movs	r3, #1
 8003782:	707b      	strb	r3, [r7, #1]
  sDate.Date = 0x1;
 8003784:	2301      	movs	r3, #1
 8003786:	70bb      	strb	r3, [r7, #2]
  sDate.Year = 0x0;
 8003788:	2300      	movs	r3, #0
 800378a:	70fb      	strb	r3, [r7, #3]

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 800378c:	463b      	mov	r3, r7
 800378e:	2201      	movs	r2, #1
 8003790:	4619      	mov	r1, r3
 8003792:	480b      	ldr	r0, [pc, #44]	; (80037c0 <MX_RTC_Init+0xc0>)
 8003794:	f002 f81e 	bl	80057d4 <HAL_RTC_SetDate>
 8003798:	4603      	mov	r3, r0
 800379a:	2b00      	cmp	r3, #0
 800379c:	d001      	beq.n	80037a2 <MX_RTC_Init+0xa2>
  {
    Error_Handler();
 800379e:	f000 f8e1 	bl	8003964 <Error_Handler>
  }

  /** Enable the WakeUp
  */
  if (HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, 300, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)
 80037a2:	2204      	movs	r2, #4
 80037a4:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80037a8:	4805      	ldr	r0, [pc, #20]	; (80037c0 <MX_RTC_Init+0xc0>)
 80037aa:	f002 f939 	bl	8005a20 <HAL_RTCEx_SetWakeUpTimer_IT>
 80037ae:	4603      	mov	r3, r0
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	d001      	beq.n	80037b8 <MX_RTC_Init+0xb8>
  {
    Error_Handler();
 80037b4:	f000 f8d6 	bl	8003964 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 80037b8:	bf00      	nop
 80037ba:	3718      	adds	r7, #24
 80037bc:	46bd      	mov	sp, r7
 80037be:	bd80      	pop	{r7, pc}
 80037c0:	20000260 	.word	0x20000260
 80037c4:	40002800 	.word	0x40002800

080037c8 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80037c8:	b580      	push	{r7, lr}
 80037ca:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80037cc:	4b11      	ldr	r3, [pc, #68]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037ce:	4a12      	ldr	r2, [pc, #72]	; (8003818 <MX_USART1_UART_Init+0x50>)
 80037d0:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80037d2:	4b10      	ldr	r3, [pc, #64]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037d4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80037d8:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80037da:	4b0e      	ldr	r3, [pc, #56]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037dc:	2200      	movs	r2, #0
 80037de:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80037e0:	4b0c      	ldr	r3, [pc, #48]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037e2:	2200      	movs	r2, #0
 80037e4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80037e6:	4b0b      	ldr	r3, [pc, #44]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037e8:	2200      	movs	r2, #0
 80037ea:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80037ec:	4b09      	ldr	r3, [pc, #36]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037ee:	220c      	movs	r2, #12
 80037f0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80037f2:	4b08      	ldr	r3, [pc, #32]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037f4:	2200      	movs	r2, #0
 80037f6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80037f8:	4b06      	ldr	r3, [pc, #24]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 80037fa:	2200      	movs	r2, #0
 80037fc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80037fe:	4805      	ldr	r0, [pc, #20]	; (8003814 <MX_USART1_UART_Init+0x4c>)
 8003800:	f002 fa54 	bl	8005cac <HAL_UART_Init>
 8003804:	4603      	mov	r3, r0
 8003806:	2b00      	cmp	r3, #0
 8003808:	d001      	beq.n	800380e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800380a:	f000 f8ab 	bl	8003964 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800380e:	bf00      	nop
 8003810:	bd80      	pop	{r7, pc}
 8003812:	bf00      	nop
 8003814:	20000280 	.word	0x20000280
 8003818:	40011000 	.word	0x40011000

0800381c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800381c:	b580      	push	{r7, lr}
 800381e:	b082      	sub	sp, #8
 8003820:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8003822:	2300      	movs	r3, #0
 8003824:	607b      	str	r3, [r7, #4]
 8003826:	4b0c      	ldr	r3, [pc, #48]	; (8003858 <MX_DMA_Init+0x3c>)
 8003828:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800382a:	4a0b      	ldr	r2, [pc, #44]	; (8003858 <MX_DMA_Init+0x3c>)
 800382c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003830:	6313      	str	r3, [r2, #48]	; 0x30
 8003832:	4b09      	ldr	r3, [pc, #36]	; (8003858 <MX_DMA_Init+0x3c>)
 8003834:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003836:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800383a:	607b      	str	r3, [r7, #4]
 800383c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 800383e:	2200      	movs	r2, #0
 8003840:	2100      	movs	r1, #0
 8003842:	203a      	movs	r0, #58	; 0x3a
 8003844:	f000 fb87 	bl	8003f56 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8003848:	203a      	movs	r0, #58	; 0x3a
 800384a:	f000 fba0 	bl	8003f8e <HAL_NVIC_EnableIRQ>

}
 800384e:	bf00      	nop
 8003850:	3708      	adds	r7, #8
 8003852:	46bd      	mov	sp, r7
 8003854:	bd80      	pop	{r7, pc}
 8003856:	bf00      	nop
 8003858:	40023800 	.word	0x40023800

0800385c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800385c:	b580      	push	{r7, lr}
 800385e:	b08a      	sub	sp, #40	; 0x28
 8003860:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003862:	f107 0314 	add.w	r3, r7, #20
 8003866:	2200      	movs	r2, #0
 8003868:	601a      	str	r2, [r3, #0]
 800386a:	605a      	str	r2, [r3, #4]
 800386c:	609a      	str	r2, [r3, #8]
 800386e:	60da      	str	r2, [r3, #12]
 8003870:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003872:	2300      	movs	r3, #0
 8003874:	613b      	str	r3, [r7, #16]
 8003876:	4b36      	ldr	r3, [pc, #216]	; (8003950 <MX_GPIO_Init+0xf4>)
 8003878:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800387a:	4a35      	ldr	r2, [pc, #212]	; (8003950 <MX_GPIO_Init+0xf4>)
 800387c:	f043 0304 	orr.w	r3, r3, #4
 8003880:	6313      	str	r3, [r2, #48]	; 0x30
 8003882:	4b33      	ldr	r3, [pc, #204]	; (8003950 <MX_GPIO_Init+0xf4>)
 8003884:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003886:	f003 0304 	and.w	r3, r3, #4
 800388a:	613b      	str	r3, [r7, #16]
 800388c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800388e:	2300      	movs	r3, #0
 8003890:	60fb      	str	r3, [r7, #12]
 8003892:	4b2f      	ldr	r3, [pc, #188]	; (8003950 <MX_GPIO_Init+0xf4>)
 8003894:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003896:	4a2e      	ldr	r2, [pc, #184]	; (8003950 <MX_GPIO_Init+0xf4>)
 8003898:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800389c:	6313      	str	r3, [r2, #48]	; 0x30
 800389e:	4b2c      	ldr	r3, [pc, #176]	; (8003950 <MX_GPIO_Init+0xf4>)
 80038a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80038a6:	60fb      	str	r3, [r7, #12]
 80038a8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80038aa:	2300      	movs	r3, #0
 80038ac:	60bb      	str	r3, [r7, #8]
 80038ae:	4b28      	ldr	r3, [pc, #160]	; (8003950 <MX_GPIO_Init+0xf4>)
 80038b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038b2:	4a27      	ldr	r2, [pc, #156]	; (8003950 <MX_GPIO_Init+0xf4>)
 80038b4:	f043 0301 	orr.w	r3, r3, #1
 80038b8:	6313      	str	r3, [r2, #48]	; 0x30
 80038ba:	4b25      	ldr	r3, [pc, #148]	; (8003950 <MX_GPIO_Init+0xf4>)
 80038bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038be:	f003 0301 	and.w	r3, r3, #1
 80038c2:	60bb      	str	r3, [r7, #8]
 80038c4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80038c6:	2300      	movs	r3, #0
 80038c8:	607b      	str	r3, [r7, #4]
 80038ca:	4b21      	ldr	r3, [pc, #132]	; (8003950 <MX_GPIO_Init+0xf4>)
 80038cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038ce:	4a20      	ldr	r2, [pc, #128]	; (8003950 <MX_GPIO_Init+0xf4>)
 80038d0:	f043 0302 	orr.w	r3, r3, #2
 80038d4:	6313      	str	r3, [r2, #48]	; 0x30
 80038d6:	4b1e      	ldr	r3, [pc, #120]	; (8003950 <MX_GPIO_Init+0xf4>)
 80038d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038da:	f003 0302 	and.w	r3, r3, #2
 80038de:	607b      	str	r3, [r7, #4]
 80038e0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pins : PC13 PC14 PC15 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 80038e2:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 80038e6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80038e8:	2303      	movs	r3, #3
 80038ea:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80038ec:	2300      	movs	r3, #0
 80038ee:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80038f0:	f107 0314 	add.w	r3, r7, #20
 80038f4:	4619      	mov	r1, r3
 80038f6:	4817      	ldr	r0, [pc, #92]	; (8003954 <MX_GPIO_Init+0xf8>)
 80038f8:	f000 ff66 	bl	80047c8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PH0 PH1 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80038fc:	2303      	movs	r3, #3
 80038fe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8003900:	2303      	movs	r3, #3
 8003902:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003904:	2300      	movs	r3, #0
 8003906:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8003908:	f107 0314 	add.w	r3, r7, #20
 800390c:	4619      	mov	r1, r3
 800390e:	4812      	ldr	r0, [pc, #72]	; (8003958 <MX_GPIO_Init+0xfc>)
 8003910:	f000 ff5a 	bl	80047c8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 PA2 PA3
                           PA4 PA5 PA6 PA7
                           PA8 PA9 PA10 PA11
                           PA12 PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8003914:	f649 73ff 	movw	r3, #40959	; 0x9fff
 8003918:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
                          |GPIO_PIN_12|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800391a:	2303      	movs	r3, #3
 800391c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800391e:	2300      	movs	r3, #0
 8003920:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003922:	f107 0314 	add.w	r3, r7, #20
 8003926:	4619      	mov	r1, r3
 8003928:	480c      	ldr	r0, [pc, #48]	; (800395c <MX_GPIO_Init+0x100>)
 800392a:	f000 ff4d 	bl	80047c8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB0 PB1 PB2 PB10
                           PB12 PB13 PB14 PB15
                           PB4 PB5 PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 800392e:	f24f 7337 	movw	r3, #63287	; 0xf737
 8003932:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8003934:	2303      	movs	r3, #3
 8003936:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003938:	2300      	movs	r3, #0
 800393a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800393c:	f107 0314 	add.w	r3, r7, #20
 8003940:	4619      	mov	r1, r3
 8003942:	4807      	ldr	r0, [pc, #28]	; (8003960 <MX_GPIO_Init+0x104>)
 8003944:	f000 ff40 	bl	80047c8 <HAL_GPIO_Init>

}
 8003948:	bf00      	nop
 800394a:	3728      	adds	r7, #40	; 0x28
 800394c:	46bd      	mov	sp, r7
 800394e:	bd80      	pop	{r7, pc}
 8003950:	40023800 	.word	0x40023800
 8003954:	40020800 	.word	0x40020800
 8003958:	40021c00 	.word	0x40021c00
 800395c:	40020000 	.word	0x40020000
 8003960:	40020400 	.word	0x40020400

08003964 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003964:	b480      	push	{r7}
 8003966:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003968:	b672      	cpsid	i
}
 800396a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800396c:	e7fe      	b.n	800396c <Error_Handler+0x8>
	...

08003970 <HAL_MspInit>:
 8003970:	b480      	push	{r7}
 8003972:	b083      	sub	sp, #12
 8003974:	af00      	add	r7, sp, #0
 8003976:	2300      	movs	r3, #0
 8003978:	607b      	str	r3, [r7, #4]
 800397a:	4b10      	ldr	r3, [pc, #64]	; (80039bc <HAL_MspInit+0x4c>)
 800397c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800397e:	4a0f      	ldr	r2, [pc, #60]	; (80039bc <HAL_MspInit+0x4c>)
 8003980:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003984:	6453      	str	r3, [r2, #68]	; 0x44
 8003986:	4b0d      	ldr	r3, [pc, #52]	; (80039bc <HAL_MspInit+0x4c>)
 8003988:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800398a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800398e:	607b      	str	r3, [r7, #4]
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	2300      	movs	r3, #0
 8003994:	603b      	str	r3, [r7, #0]
 8003996:	4b09      	ldr	r3, [pc, #36]	; (80039bc <HAL_MspInit+0x4c>)
 8003998:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800399a:	4a08      	ldr	r2, [pc, #32]	; (80039bc <HAL_MspInit+0x4c>)
 800399c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80039a0:	6413      	str	r3, [r2, #64]	; 0x40
 80039a2:	4b06      	ldr	r3, [pc, #24]	; (80039bc <HAL_MspInit+0x4c>)
 80039a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80039aa:	603b      	str	r3, [r7, #0]
 80039ac:	683b      	ldr	r3, [r7, #0]
 80039ae:	bf00      	nop
 80039b0:	370c      	adds	r7, #12
 80039b2:	46bd      	mov	sp, r7
 80039b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039b8:	4770      	bx	lr
 80039ba:	bf00      	nop
 80039bc:	40023800 	.word	0x40023800

080039c0 <HAL_RTC_MspInit>:
 80039c0:	b580      	push	{r7, lr}
 80039c2:	b088      	sub	sp, #32
 80039c4:	af00      	add	r7, sp, #0
 80039c6:	6078      	str	r0, [r7, #4]
 80039c8:	f107 030c 	add.w	r3, r7, #12
 80039cc:	2200      	movs	r2, #0
 80039ce:	601a      	str	r2, [r3, #0]
 80039d0:	605a      	str	r2, [r3, #4]
 80039d2:	609a      	str	r2, [r3, #8]
 80039d4:	60da      	str	r2, [r3, #12]
 80039d6:	611a      	str	r2, [r3, #16]
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	4a10      	ldr	r2, [pc, #64]	; (8003a20 <HAL_RTC_MspInit+0x60>)
 80039de:	4293      	cmp	r3, r2
 80039e0:	d119      	bne.n	8003a16 <HAL_RTC_MspInit+0x56>
 80039e2:	2302      	movs	r3, #2
 80039e4:	60fb      	str	r3, [r7, #12]
 80039e6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80039ea:	61bb      	str	r3, [r7, #24]
 80039ec:	f107 030c 	add.w	r3, r7, #12
 80039f0:	4618      	mov	r0, r3
 80039f2:	f001 fcf1 	bl	80053d8 <HAL_RCCEx_PeriphCLKConfig>
 80039f6:	4603      	mov	r3, r0
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d001      	beq.n	8003a00 <HAL_RTC_MspInit+0x40>
 80039fc:	f7ff ffb2 	bl	8003964 <Error_Handler>
 8003a00:	4b08      	ldr	r3, [pc, #32]	; (8003a24 <HAL_RTC_MspInit+0x64>)
 8003a02:	2201      	movs	r2, #1
 8003a04:	601a      	str	r2, [r3, #0]
 8003a06:	2200      	movs	r2, #0
 8003a08:	2100      	movs	r1, #0
 8003a0a:	2003      	movs	r0, #3
 8003a0c:	f000 faa3 	bl	8003f56 <HAL_NVIC_SetPriority>
 8003a10:	2003      	movs	r0, #3
 8003a12:	f000 fabc 	bl	8003f8e <HAL_NVIC_EnableIRQ>
 8003a16:	bf00      	nop
 8003a18:	3720      	adds	r7, #32
 8003a1a:	46bd      	mov	sp, r7
 8003a1c:	bd80      	pop	{r7, pc}
 8003a1e:	bf00      	nop
 8003a20:	40002800 	.word	0x40002800
 8003a24:	42470e3c 	.word	0x42470e3c

08003a28 <HAL_UART_MspInit>:
 8003a28:	b580      	push	{r7, lr}
 8003a2a:	b08a      	sub	sp, #40	; 0x28
 8003a2c:	af00      	add	r7, sp, #0
 8003a2e:	6078      	str	r0, [r7, #4]
 8003a30:	f107 0314 	add.w	r3, r7, #20
 8003a34:	2200      	movs	r2, #0
 8003a36:	601a      	str	r2, [r3, #0]
 8003a38:	605a      	str	r2, [r3, #4]
 8003a3a:	609a      	str	r2, [r3, #8]
 8003a3c:	60da      	str	r2, [r3, #12]
 8003a3e:	611a      	str	r2, [r3, #16]
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	4a34      	ldr	r2, [pc, #208]	; (8003b18 <HAL_UART_MspInit+0xf0>)
 8003a46:	4293      	cmp	r3, r2
 8003a48:	d161      	bne.n	8003b0e <HAL_UART_MspInit+0xe6>
 8003a4a:	2300      	movs	r3, #0
 8003a4c:	613b      	str	r3, [r7, #16]
 8003a4e:	4b33      	ldr	r3, [pc, #204]	; (8003b1c <HAL_UART_MspInit+0xf4>)
 8003a50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a52:	4a32      	ldr	r2, [pc, #200]	; (8003b1c <HAL_UART_MspInit+0xf4>)
 8003a54:	f043 0310 	orr.w	r3, r3, #16
 8003a58:	6453      	str	r3, [r2, #68]	; 0x44
 8003a5a:	4b30      	ldr	r3, [pc, #192]	; (8003b1c <HAL_UART_MspInit+0xf4>)
 8003a5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a5e:	f003 0310 	and.w	r3, r3, #16
 8003a62:	613b      	str	r3, [r7, #16]
 8003a64:	693b      	ldr	r3, [r7, #16]
 8003a66:	2300      	movs	r3, #0
 8003a68:	60fb      	str	r3, [r7, #12]
 8003a6a:	4b2c      	ldr	r3, [pc, #176]	; (8003b1c <HAL_UART_MspInit+0xf4>)
 8003a6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a6e:	4a2b      	ldr	r2, [pc, #172]	; (8003b1c <HAL_UART_MspInit+0xf4>)
 8003a70:	f043 0302 	orr.w	r3, r3, #2
 8003a74:	6313      	str	r3, [r2, #48]	; 0x30
 8003a76:	4b29      	ldr	r3, [pc, #164]	; (8003b1c <HAL_UART_MspInit+0xf4>)
 8003a78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a7a:	f003 0302 	and.w	r3, r3, #2
 8003a7e:	60fb      	str	r3, [r7, #12]
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	23c0      	movs	r3, #192	; 0xc0
 8003a84:	617b      	str	r3, [r7, #20]
 8003a86:	2302      	movs	r3, #2
 8003a88:	61bb      	str	r3, [r7, #24]
 8003a8a:	2300      	movs	r3, #0
 8003a8c:	61fb      	str	r3, [r7, #28]
 8003a8e:	2300      	movs	r3, #0
 8003a90:	623b      	str	r3, [r7, #32]
 8003a92:	2307      	movs	r3, #7
 8003a94:	627b      	str	r3, [r7, #36]	; 0x24
 8003a96:	f107 0314 	add.w	r3, r7, #20
 8003a9a:	4619      	mov	r1, r3
 8003a9c:	4820      	ldr	r0, [pc, #128]	; (8003b20 <HAL_UART_MspInit+0xf8>)
 8003a9e:	f000 fe93 	bl	80047c8 <HAL_GPIO_Init>
 8003aa2:	4b20      	ldr	r3, [pc, #128]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003aa4:	4a20      	ldr	r2, [pc, #128]	; (8003b28 <HAL_UART_MspInit+0x100>)
 8003aa6:	601a      	str	r2, [r3, #0]
 8003aa8:	4b1e      	ldr	r3, [pc, #120]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003aaa:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003aae:	605a      	str	r2, [r3, #4]
 8003ab0:	4b1c      	ldr	r3, [pc, #112]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	609a      	str	r2, [r3, #8]
 8003ab6:	4b1b      	ldr	r3, [pc, #108]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003ab8:	2200      	movs	r2, #0
 8003aba:	60da      	str	r2, [r3, #12]
 8003abc:	4b19      	ldr	r3, [pc, #100]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003abe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003ac2:	611a      	str	r2, [r3, #16]
 8003ac4:	4b17      	ldr	r3, [pc, #92]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	615a      	str	r2, [r3, #20]
 8003aca:	4b16      	ldr	r3, [pc, #88]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003acc:	2200      	movs	r2, #0
 8003ace:	619a      	str	r2, [r3, #24]
 8003ad0:	4b14      	ldr	r3, [pc, #80]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003ad2:	2200      	movs	r2, #0
 8003ad4:	61da      	str	r2, [r3, #28]
 8003ad6:	4b13      	ldr	r3, [pc, #76]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003ad8:	2200      	movs	r2, #0
 8003ada:	621a      	str	r2, [r3, #32]
 8003adc:	4b11      	ldr	r3, [pc, #68]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003ade:	2200      	movs	r2, #0
 8003ae0:	625a      	str	r2, [r3, #36]	; 0x24
 8003ae2:	4810      	ldr	r0, [pc, #64]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003ae4:	f000 fa6e 	bl	8003fc4 <HAL_DMA_Init>
 8003ae8:	4603      	mov	r3, r0
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d001      	beq.n	8003af2 <HAL_UART_MspInit+0xca>
 8003aee:	f7ff ff39 	bl	8003964 <Error_Handler>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	4a0b      	ldr	r2, [pc, #44]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003af6:	639a      	str	r2, [r3, #56]	; 0x38
 8003af8:	4a0a      	ldr	r2, [pc, #40]	; (8003b24 <HAL_UART_MspInit+0xfc>)
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	6393      	str	r3, [r2, #56]	; 0x38
 8003afe:	2200      	movs	r2, #0
 8003b00:	2100      	movs	r1, #0
 8003b02:	2025      	movs	r0, #37	; 0x25
 8003b04:	f000 fa27 	bl	8003f56 <HAL_NVIC_SetPriority>
 8003b08:	2025      	movs	r0, #37	; 0x25
 8003b0a:	f000 fa40 	bl	8003f8e <HAL_NVIC_EnableIRQ>
 8003b0e:	bf00      	nop
 8003b10:	3728      	adds	r7, #40	; 0x28
 8003b12:	46bd      	mov	sp, r7
 8003b14:	bd80      	pop	{r7, pc}
 8003b16:	bf00      	nop
 8003b18:	40011000 	.word	0x40011000
 8003b1c:	40023800 	.word	0x40023800
 8003b20:	40020400 	.word	0x40020400
 8003b24:	200002c4 	.word	0x200002c4
 8003b28:	40026440 	.word	0x40026440

08003b2c <NMI_Handler>:
 8003b2c:	b480      	push	{r7}
 8003b2e:	af00      	add	r7, sp, #0
 8003b30:	e7fe      	b.n	8003b30 <NMI_Handler+0x4>

08003b32 <HardFault_Handler>:
 8003b32:	b480      	push	{r7}
 8003b34:	af00      	add	r7, sp, #0
 8003b36:	e7fe      	b.n	8003b36 <HardFault_Handler+0x4>

08003b38 <MemManage_Handler>:
 8003b38:	b480      	push	{r7}
 8003b3a:	af00      	add	r7, sp, #0
 8003b3c:	e7fe      	b.n	8003b3c <MemManage_Handler+0x4>

08003b3e <BusFault_Handler>:
 8003b3e:	b480      	push	{r7}
 8003b40:	af00      	add	r7, sp, #0
 8003b42:	e7fe      	b.n	8003b42 <BusFault_Handler+0x4>

08003b44 <UsageFault_Handler>:
 8003b44:	b480      	push	{r7}
 8003b46:	af00      	add	r7, sp, #0
 8003b48:	e7fe      	b.n	8003b48 <UsageFault_Handler+0x4>

08003b4a <SVC_Handler>:
 8003b4a:	b480      	push	{r7}
 8003b4c:	af00      	add	r7, sp, #0
 8003b4e:	bf00      	nop
 8003b50:	46bd      	mov	sp, r7
 8003b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b56:	4770      	bx	lr

08003b58 <DebugMon_Handler>:
 8003b58:	b480      	push	{r7}
 8003b5a:	af00      	add	r7, sp, #0
 8003b5c:	bf00      	nop
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b64:	4770      	bx	lr

08003b66 <PendSV_Handler>:
 8003b66:	b480      	push	{r7}
 8003b68:	af00      	add	r7, sp, #0
 8003b6a:	bf00      	nop
 8003b6c:	46bd      	mov	sp, r7
 8003b6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b72:	4770      	bx	lr

08003b74 <SysTick_Handler>:
 8003b74:	b580      	push	{r7, lr}
 8003b76:	af00      	add	r7, sp, #0
 8003b78:	f000 f8ae 	bl	8003cd8 <HAL_IncTick>
 8003b7c:	bf00      	nop
 8003b7e:	bd80      	pop	{r7, pc}

08003b80 <RTC_WKUP_IRQHandler>:
 8003b80:	b580      	push	{r7, lr}
 8003b82:	af00      	add	r7, sp, #0
 8003b84:	4802      	ldr	r0, [pc, #8]	; (8003b90 <RTC_WKUP_IRQHandler+0x10>)
 8003b86:	f002 f863 	bl	8005c50 <HAL_RTCEx_WakeUpTimerIRQHandler>
 8003b8a:	bf00      	nop
 8003b8c:	bd80      	pop	{r7, pc}
 8003b8e:	bf00      	nop
 8003b90:	20000260 	.word	0x20000260

08003b94 <USART1_IRQHandler>:
 8003b94:	b580      	push	{r7, lr}
 8003b96:	af00      	add	r7, sp, #0
 8003b98:	4802      	ldr	r0, [pc, #8]	; (8003ba4 <USART1_IRQHandler+0x10>)
 8003b9a:	f002 fa4b 	bl	8006034 <HAL_UART_IRQHandler>
 8003b9e:	bf00      	nop
 8003ba0:	bd80      	pop	{r7, pc}
 8003ba2:	bf00      	nop
 8003ba4:	20000280 	.word	0x20000280

08003ba8 <DMA2_Stream2_IRQHandler>:
 8003ba8:	b580      	push	{r7, lr}
 8003baa:	af00      	add	r7, sp, #0
 8003bac:	4802      	ldr	r0, [pc, #8]	; (8003bb8 <DMA2_Stream2_IRQHandler+0x10>)
 8003bae:	f000 fba1 	bl	80042f4 <HAL_DMA_IRQHandler>
 8003bb2:	bf00      	nop
 8003bb4:	bd80      	pop	{r7, pc}
 8003bb6:	bf00      	nop
 8003bb8:	200002c4 	.word	0x200002c4

08003bbc <SystemInit>:
 8003bbc:	b480      	push	{r7}
 8003bbe:	af00      	add	r7, sp, #0
 8003bc0:	4b06      	ldr	r3, [pc, #24]	; (8003bdc <SystemInit+0x20>)
 8003bc2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003bc6:	4a05      	ldr	r2, [pc, #20]	; (8003bdc <SystemInit+0x20>)
 8003bc8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003bcc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003bd0:	bf00      	nop
 8003bd2:	46bd      	mov	sp, r7
 8003bd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bd8:	4770      	bx	lr
 8003bda:	bf00      	nop
 8003bdc:	e000ed00 	.word	0xe000ed00

08003be0 <Reset_Handler>:
 8003be0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003c18 <LoopFillZerobss+0x12>
 8003be4:	480d      	ldr	r0, [pc, #52]	; (8003c1c <LoopFillZerobss+0x16>)
 8003be6:	490e      	ldr	r1, [pc, #56]	; (8003c20 <LoopFillZerobss+0x1a>)
 8003be8:	4a0e      	ldr	r2, [pc, #56]	; (8003c24 <LoopFillZerobss+0x1e>)
 8003bea:	2300      	movs	r3, #0
 8003bec:	e002      	b.n	8003bf4 <LoopCopyDataInit>

08003bee <CopyDataInit>:
 8003bee:	58d4      	ldr	r4, [r2, r3]
 8003bf0:	50c4      	str	r4, [r0, r3]
 8003bf2:	3304      	adds	r3, #4

08003bf4 <LoopCopyDataInit>:
 8003bf4:	18c4      	adds	r4, r0, r3
 8003bf6:	428c      	cmp	r4, r1
 8003bf8:	d3f9      	bcc.n	8003bee <CopyDataInit>
 8003bfa:	4a0b      	ldr	r2, [pc, #44]	; (8003c28 <LoopFillZerobss+0x22>)
 8003bfc:	4c0b      	ldr	r4, [pc, #44]	; (8003c2c <LoopFillZerobss+0x26>)
 8003bfe:	2300      	movs	r3, #0
 8003c00:	e001      	b.n	8003c06 <LoopFillZerobss>

08003c02 <FillZerobss>:
 8003c02:	6013      	str	r3, [r2, #0]
 8003c04:	3204      	adds	r2, #4

08003c06 <LoopFillZerobss>:
 8003c06:	42a2      	cmp	r2, r4
 8003c08:	d3fb      	bcc.n	8003c02 <FillZerobss>
 8003c0a:	f7ff ffd7 	bl	8003bbc <SystemInit>
 8003c0e:	f004 fecf 	bl	80089b0 <__libc_init_array>
 8003c12:	f7ff fcf7 	bl	8003604 <main>
 8003c16:	4770      	bx	lr
 8003c18:	20010000 	.word	0x20010000
 8003c1c:	20000000 	.word	0x20000000
 8003c20:	20000244 	.word	0x20000244
 8003c24:	08010488 	.word	0x08010488
 8003c28:	20000244 	.word	0x20000244
 8003c2c:	2000036c 	.word	0x2000036c

08003c30 <ADC_IRQHandler>:
 8003c30:	e7fe      	b.n	8003c30 <ADC_IRQHandler>
	...

08003c34 <HAL_Init>:
 8003c34:	b580      	push	{r7, lr}
 8003c36:	af00      	add	r7, sp, #0
 8003c38:	4b0e      	ldr	r3, [pc, #56]	; (8003c74 <HAL_Init+0x40>)
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	4a0d      	ldr	r2, [pc, #52]	; (8003c74 <HAL_Init+0x40>)
 8003c3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003c42:	6013      	str	r3, [r2, #0]
 8003c44:	4b0b      	ldr	r3, [pc, #44]	; (8003c74 <HAL_Init+0x40>)
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	4a0a      	ldr	r2, [pc, #40]	; (8003c74 <HAL_Init+0x40>)
 8003c4a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003c4e:	6013      	str	r3, [r2, #0]
 8003c50:	4b08      	ldr	r3, [pc, #32]	; (8003c74 <HAL_Init+0x40>)
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	4a07      	ldr	r2, [pc, #28]	; (8003c74 <HAL_Init+0x40>)
 8003c56:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003c5a:	6013      	str	r3, [r2, #0]
 8003c5c:	2003      	movs	r0, #3
 8003c5e:	f000 f96f 	bl	8003f40 <HAL_NVIC_SetPriorityGrouping>
 8003c62:	200f      	movs	r0, #15
 8003c64:	f000 f808 	bl	8003c78 <HAL_InitTick>
 8003c68:	f7ff fe82 	bl	8003970 <HAL_MspInit>
 8003c6c:	2300      	movs	r3, #0
 8003c6e:	4618      	mov	r0, r3
 8003c70:	bd80      	pop	{r7, pc}
 8003c72:	bf00      	nop
 8003c74:	40023c00 	.word	0x40023c00

08003c78 <HAL_InitTick>:
 8003c78:	b580      	push	{r7, lr}
 8003c7a:	b082      	sub	sp, #8
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	6078      	str	r0, [r7, #4]
 8003c80:	4b12      	ldr	r3, [pc, #72]	; (8003ccc <HAL_InitTick+0x54>)
 8003c82:	681a      	ldr	r2, [r3, #0]
 8003c84:	4b12      	ldr	r3, [pc, #72]	; (8003cd0 <HAL_InitTick+0x58>)
 8003c86:	781b      	ldrb	r3, [r3, #0]
 8003c88:	4619      	mov	r1, r3
 8003c8a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003c8e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003c92:	fbb2 f3f3 	udiv	r3, r2, r3
 8003c96:	4618      	mov	r0, r3
 8003c98:	f000 f987 	bl	8003faa <HAL_SYSTICK_Config>
 8003c9c:	4603      	mov	r3, r0
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	d001      	beq.n	8003ca6 <HAL_InitTick+0x2e>
 8003ca2:	2301      	movs	r3, #1
 8003ca4:	e00e      	b.n	8003cc4 <HAL_InitTick+0x4c>
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	2b0f      	cmp	r3, #15
 8003caa:	d80a      	bhi.n	8003cc2 <HAL_InitTick+0x4a>
 8003cac:	2200      	movs	r2, #0
 8003cae:	6879      	ldr	r1, [r7, #4]
 8003cb0:	f04f 30ff 	mov.w	r0, #4294967295
 8003cb4:	f000 f94f 	bl	8003f56 <HAL_NVIC_SetPriority>
 8003cb8:	4a06      	ldr	r2, [pc, #24]	; (8003cd4 <HAL_InitTick+0x5c>)
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	6013      	str	r3, [r2, #0]
 8003cbe:	2300      	movs	r3, #0
 8003cc0:	e000      	b.n	8003cc4 <HAL_InitTick+0x4c>
 8003cc2:	2301      	movs	r3, #1
 8003cc4:	4618      	mov	r0, r3
 8003cc6:	3708      	adds	r7, #8
 8003cc8:	46bd      	mov	sp, r7
 8003cca:	bd80      	pop	{r7, pc}
 8003ccc:	20000000 	.word	0x20000000
 8003cd0:	20000008 	.word	0x20000008
 8003cd4:	20000004 	.word	0x20000004

08003cd8 <HAL_IncTick>:
 8003cd8:	b480      	push	{r7}
 8003cda:	af00      	add	r7, sp, #0
 8003cdc:	4b06      	ldr	r3, [pc, #24]	; (8003cf8 <HAL_IncTick+0x20>)
 8003cde:	781b      	ldrb	r3, [r3, #0]
 8003ce0:	461a      	mov	r2, r3
 8003ce2:	4b06      	ldr	r3, [pc, #24]	; (8003cfc <HAL_IncTick+0x24>)
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	4413      	add	r3, r2
 8003ce8:	4a04      	ldr	r2, [pc, #16]	; (8003cfc <HAL_IncTick+0x24>)
 8003cea:	6013      	str	r3, [r2, #0]
 8003cec:	bf00      	nop
 8003cee:	46bd      	mov	sp, r7
 8003cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cf4:	4770      	bx	lr
 8003cf6:	bf00      	nop
 8003cf8:	20000008 	.word	0x20000008
 8003cfc:	20000328 	.word	0x20000328

08003d00 <HAL_GetTick>:
 8003d00:	b480      	push	{r7}
 8003d02:	af00      	add	r7, sp, #0
 8003d04:	4b03      	ldr	r3, [pc, #12]	; (8003d14 <HAL_GetTick+0x14>)
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	4618      	mov	r0, r3
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d10:	4770      	bx	lr
 8003d12:	bf00      	nop
 8003d14:	20000328 	.word	0x20000328

08003d18 <HAL_Delay>:
 8003d18:	b580      	push	{r7, lr}
 8003d1a:	b084      	sub	sp, #16
 8003d1c:	af00      	add	r7, sp, #0
 8003d1e:	6078      	str	r0, [r7, #4]
 8003d20:	f7ff ffee 	bl	8003d00 <HAL_GetTick>
 8003d24:	60b8      	str	r0, [r7, #8]
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	60fb      	str	r3, [r7, #12]
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003d30:	d005      	beq.n	8003d3e <HAL_Delay+0x26>
 8003d32:	4b0a      	ldr	r3, [pc, #40]	; (8003d5c <HAL_Delay+0x44>)
 8003d34:	781b      	ldrb	r3, [r3, #0]
 8003d36:	461a      	mov	r2, r3
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	4413      	add	r3, r2
 8003d3c:	60fb      	str	r3, [r7, #12]
 8003d3e:	bf00      	nop
 8003d40:	f7ff ffde 	bl	8003d00 <HAL_GetTick>
 8003d44:	4602      	mov	r2, r0
 8003d46:	68bb      	ldr	r3, [r7, #8]
 8003d48:	1ad3      	subs	r3, r2, r3
 8003d4a:	68fa      	ldr	r2, [r7, #12]
 8003d4c:	429a      	cmp	r2, r3
 8003d4e:	d8f7      	bhi.n	8003d40 <HAL_Delay+0x28>
 8003d50:	bf00      	nop
 8003d52:	bf00      	nop
 8003d54:	3710      	adds	r7, #16
 8003d56:	46bd      	mov	sp, r7
 8003d58:	bd80      	pop	{r7, pc}
 8003d5a:	bf00      	nop
 8003d5c:	20000008 	.word	0x20000008

08003d60 <HAL_SuspendTick>:
 8003d60:	b480      	push	{r7}
 8003d62:	af00      	add	r7, sp, #0
 8003d64:	4b05      	ldr	r3, [pc, #20]	; (8003d7c <HAL_SuspendTick+0x1c>)
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	4a04      	ldr	r2, [pc, #16]	; (8003d7c <HAL_SuspendTick+0x1c>)
 8003d6a:	f023 0302 	bic.w	r3, r3, #2
 8003d6e:	6013      	str	r3, [r2, #0]
 8003d70:	bf00      	nop
 8003d72:	46bd      	mov	sp, r7
 8003d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d78:	4770      	bx	lr
 8003d7a:	bf00      	nop
 8003d7c:	e000e010 	.word	0xe000e010

08003d80 <HAL_ResumeTick>:
 8003d80:	b480      	push	{r7}
 8003d82:	af00      	add	r7, sp, #0
 8003d84:	4b05      	ldr	r3, [pc, #20]	; (8003d9c <HAL_ResumeTick+0x1c>)
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	4a04      	ldr	r2, [pc, #16]	; (8003d9c <HAL_ResumeTick+0x1c>)
 8003d8a:	f043 0302 	orr.w	r3, r3, #2
 8003d8e:	6013      	str	r3, [r2, #0]
 8003d90:	bf00      	nop
 8003d92:	46bd      	mov	sp, r7
 8003d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d98:	4770      	bx	lr
 8003d9a:	bf00      	nop
 8003d9c:	e000e010 	.word	0xe000e010

08003da0 <__NVIC_SetPriorityGrouping>:
 8003da0:	b480      	push	{r7}
 8003da2:	b085      	sub	sp, #20
 8003da4:	af00      	add	r7, sp, #0
 8003da6:	6078      	str	r0, [r7, #4]
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	f003 0307 	and.w	r3, r3, #7
 8003dae:	60fb      	str	r3, [r7, #12]
 8003db0:	4b0c      	ldr	r3, [pc, #48]	; (8003de4 <__NVIC_SetPriorityGrouping+0x44>)
 8003db2:	68db      	ldr	r3, [r3, #12]
 8003db4:	60bb      	str	r3, [r7, #8]
 8003db6:	68ba      	ldr	r2, [r7, #8]
 8003db8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003dbc:	4013      	ands	r3, r2
 8003dbe:	60bb      	str	r3, [r7, #8]
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	021a      	lsls	r2, r3, #8
 8003dc4:	68bb      	ldr	r3, [r7, #8]
 8003dc6:	4313      	orrs	r3, r2
 8003dc8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003dcc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003dd0:	60bb      	str	r3, [r7, #8]
 8003dd2:	4a04      	ldr	r2, [pc, #16]	; (8003de4 <__NVIC_SetPriorityGrouping+0x44>)
 8003dd4:	68bb      	ldr	r3, [r7, #8]
 8003dd6:	60d3      	str	r3, [r2, #12]
 8003dd8:	bf00      	nop
 8003dda:	3714      	adds	r7, #20
 8003ddc:	46bd      	mov	sp, r7
 8003dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003de2:	4770      	bx	lr
 8003de4:	e000ed00 	.word	0xe000ed00

08003de8 <__NVIC_GetPriorityGrouping>:
 8003de8:	b480      	push	{r7}
 8003dea:	af00      	add	r7, sp, #0
 8003dec:	4b04      	ldr	r3, [pc, #16]	; (8003e00 <__NVIC_GetPriorityGrouping+0x18>)
 8003dee:	68db      	ldr	r3, [r3, #12]
 8003df0:	0a1b      	lsrs	r3, r3, #8
 8003df2:	f003 0307 	and.w	r3, r3, #7
 8003df6:	4618      	mov	r0, r3
 8003df8:	46bd      	mov	sp, r7
 8003dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dfe:	4770      	bx	lr
 8003e00:	e000ed00 	.word	0xe000ed00

08003e04 <__NVIC_EnableIRQ>:
 8003e04:	b480      	push	{r7}
 8003e06:	b083      	sub	sp, #12
 8003e08:	af00      	add	r7, sp, #0
 8003e0a:	4603      	mov	r3, r0
 8003e0c:	71fb      	strb	r3, [r7, #7]
 8003e0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	db0b      	blt.n	8003e2e <__NVIC_EnableIRQ+0x2a>
 8003e16:	79fb      	ldrb	r3, [r7, #7]
 8003e18:	f003 021f 	and.w	r2, r3, #31
 8003e1c:	4907      	ldr	r1, [pc, #28]	; (8003e3c <__NVIC_EnableIRQ+0x38>)
 8003e1e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e22:	095b      	lsrs	r3, r3, #5
 8003e24:	2001      	movs	r0, #1
 8003e26:	fa00 f202 	lsl.w	r2, r0, r2
 8003e2a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003e2e:	bf00      	nop
 8003e30:	370c      	adds	r7, #12
 8003e32:	46bd      	mov	sp, r7
 8003e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e38:	4770      	bx	lr
 8003e3a:	bf00      	nop
 8003e3c:	e000e100 	.word	0xe000e100

08003e40 <__NVIC_SetPriority>:
 8003e40:	b480      	push	{r7}
 8003e42:	b083      	sub	sp, #12
 8003e44:	af00      	add	r7, sp, #0
 8003e46:	4603      	mov	r3, r0
 8003e48:	6039      	str	r1, [r7, #0]
 8003e4a:	71fb      	strb	r3, [r7, #7]
 8003e4c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	db0a      	blt.n	8003e6a <__NVIC_SetPriority+0x2a>
 8003e54:	683b      	ldr	r3, [r7, #0]
 8003e56:	b2da      	uxtb	r2, r3
 8003e58:	490c      	ldr	r1, [pc, #48]	; (8003e8c <__NVIC_SetPriority+0x4c>)
 8003e5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e5e:	0112      	lsls	r2, r2, #4
 8003e60:	b2d2      	uxtb	r2, r2
 8003e62:	440b      	add	r3, r1
 8003e64:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003e68:	e00a      	b.n	8003e80 <__NVIC_SetPriority+0x40>
 8003e6a:	683b      	ldr	r3, [r7, #0]
 8003e6c:	b2da      	uxtb	r2, r3
 8003e6e:	4908      	ldr	r1, [pc, #32]	; (8003e90 <__NVIC_SetPriority+0x50>)
 8003e70:	79fb      	ldrb	r3, [r7, #7]
 8003e72:	f003 030f 	and.w	r3, r3, #15
 8003e76:	3b04      	subs	r3, #4
 8003e78:	0112      	lsls	r2, r2, #4
 8003e7a:	b2d2      	uxtb	r2, r2
 8003e7c:	440b      	add	r3, r1
 8003e7e:	761a      	strb	r2, [r3, #24]
 8003e80:	bf00      	nop
 8003e82:	370c      	adds	r7, #12
 8003e84:	46bd      	mov	sp, r7
 8003e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e8a:	4770      	bx	lr
 8003e8c:	e000e100 	.word	0xe000e100
 8003e90:	e000ed00 	.word	0xe000ed00

08003e94 <NVIC_EncodePriority>:
 8003e94:	b480      	push	{r7}
 8003e96:	b089      	sub	sp, #36	; 0x24
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	60f8      	str	r0, [r7, #12]
 8003e9c:	60b9      	str	r1, [r7, #8]
 8003e9e:	607a      	str	r2, [r7, #4]
 8003ea0:	68fb      	ldr	r3, [r7, #12]
 8003ea2:	f003 0307 	and.w	r3, r3, #7
 8003ea6:	61fb      	str	r3, [r7, #28]
 8003ea8:	69fb      	ldr	r3, [r7, #28]
 8003eaa:	f1c3 0307 	rsb	r3, r3, #7
 8003eae:	2b04      	cmp	r3, #4
 8003eb0:	bf28      	it	cs
 8003eb2:	2304      	movcs	r3, #4
 8003eb4:	61bb      	str	r3, [r7, #24]
 8003eb6:	69fb      	ldr	r3, [r7, #28]
 8003eb8:	3304      	adds	r3, #4
 8003eba:	2b06      	cmp	r3, #6
 8003ebc:	d902      	bls.n	8003ec4 <NVIC_EncodePriority+0x30>
 8003ebe:	69fb      	ldr	r3, [r7, #28]
 8003ec0:	3b03      	subs	r3, #3
 8003ec2:	e000      	b.n	8003ec6 <NVIC_EncodePriority+0x32>
 8003ec4:	2300      	movs	r3, #0
 8003ec6:	617b      	str	r3, [r7, #20]
 8003ec8:	f04f 32ff 	mov.w	r2, #4294967295
 8003ecc:	69bb      	ldr	r3, [r7, #24]
 8003ece:	fa02 f303 	lsl.w	r3, r2, r3
 8003ed2:	43da      	mvns	r2, r3
 8003ed4:	68bb      	ldr	r3, [r7, #8]
 8003ed6:	401a      	ands	r2, r3
 8003ed8:	697b      	ldr	r3, [r7, #20]
 8003eda:	409a      	lsls	r2, r3
 8003edc:	f04f 31ff 	mov.w	r1, #4294967295
 8003ee0:	697b      	ldr	r3, [r7, #20]
 8003ee2:	fa01 f303 	lsl.w	r3, r1, r3
 8003ee6:	43d9      	mvns	r1, r3
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	400b      	ands	r3, r1
 8003eec:	4313      	orrs	r3, r2
 8003eee:	4618      	mov	r0, r3
 8003ef0:	3724      	adds	r7, #36	; 0x24
 8003ef2:	46bd      	mov	sp, r7
 8003ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ef8:	4770      	bx	lr
	...

08003efc <SysTick_Config>:
 8003efc:	b580      	push	{r7, lr}
 8003efe:	b082      	sub	sp, #8
 8003f00:	af00      	add	r7, sp, #0
 8003f02:	6078      	str	r0, [r7, #4]
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	3b01      	subs	r3, #1
 8003f08:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003f0c:	d301      	bcc.n	8003f12 <SysTick_Config+0x16>
 8003f0e:	2301      	movs	r3, #1
 8003f10:	e00f      	b.n	8003f32 <SysTick_Config+0x36>
 8003f12:	4a0a      	ldr	r2, [pc, #40]	; (8003f3c <SysTick_Config+0x40>)
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	3b01      	subs	r3, #1
 8003f18:	6053      	str	r3, [r2, #4]
 8003f1a:	210f      	movs	r1, #15
 8003f1c:	f04f 30ff 	mov.w	r0, #4294967295
 8003f20:	f7ff ff8e 	bl	8003e40 <__NVIC_SetPriority>
 8003f24:	4b05      	ldr	r3, [pc, #20]	; (8003f3c <SysTick_Config+0x40>)
 8003f26:	2200      	movs	r2, #0
 8003f28:	609a      	str	r2, [r3, #8]
 8003f2a:	4b04      	ldr	r3, [pc, #16]	; (8003f3c <SysTick_Config+0x40>)
 8003f2c:	2207      	movs	r2, #7
 8003f2e:	601a      	str	r2, [r3, #0]
 8003f30:	2300      	movs	r3, #0
 8003f32:	4618      	mov	r0, r3
 8003f34:	3708      	adds	r7, #8
 8003f36:	46bd      	mov	sp, r7
 8003f38:	bd80      	pop	{r7, pc}
 8003f3a:	bf00      	nop
 8003f3c:	e000e010 	.word	0xe000e010

08003f40 <HAL_NVIC_SetPriorityGrouping>:
 8003f40:	b580      	push	{r7, lr}
 8003f42:	b082      	sub	sp, #8
 8003f44:	af00      	add	r7, sp, #0
 8003f46:	6078      	str	r0, [r7, #4]
 8003f48:	6878      	ldr	r0, [r7, #4]
 8003f4a:	f7ff ff29 	bl	8003da0 <__NVIC_SetPriorityGrouping>
 8003f4e:	bf00      	nop
 8003f50:	3708      	adds	r7, #8
 8003f52:	46bd      	mov	sp, r7
 8003f54:	bd80      	pop	{r7, pc}

08003f56 <HAL_NVIC_SetPriority>:
 8003f56:	b580      	push	{r7, lr}
 8003f58:	b086      	sub	sp, #24
 8003f5a:	af00      	add	r7, sp, #0
 8003f5c:	4603      	mov	r3, r0
 8003f5e:	60b9      	str	r1, [r7, #8]
 8003f60:	607a      	str	r2, [r7, #4]
 8003f62:	73fb      	strb	r3, [r7, #15]
 8003f64:	2300      	movs	r3, #0
 8003f66:	617b      	str	r3, [r7, #20]
 8003f68:	f7ff ff3e 	bl	8003de8 <__NVIC_GetPriorityGrouping>
 8003f6c:	6178      	str	r0, [r7, #20]
 8003f6e:	687a      	ldr	r2, [r7, #4]
 8003f70:	68b9      	ldr	r1, [r7, #8]
 8003f72:	6978      	ldr	r0, [r7, #20]
 8003f74:	f7ff ff8e 	bl	8003e94 <NVIC_EncodePriority>
 8003f78:	4602      	mov	r2, r0
 8003f7a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003f7e:	4611      	mov	r1, r2
 8003f80:	4618      	mov	r0, r3
 8003f82:	f7ff ff5d 	bl	8003e40 <__NVIC_SetPriority>
 8003f86:	bf00      	nop
 8003f88:	3718      	adds	r7, #24
 8003f8a:	46bd      	mov	sp, r7
 8003f8c:	bd80      	pop	{r7, pc}

08003f8e <HAL_NVIC_EnableIRQ>:
 8003f8e:	b580      	push	{r7, lr}
 8003f90:	b082      	sub	sp, #8
 8003f92:	af00      	add	r7, sp, #0
 8003f94:	4603      	mov	r3, r0
 8003f96:	71fb      	strb	r3, [r7, #7]
 8003f98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003f9c:	4618      	mov	r0, r3
 8003f9e:	f7ff ff31 	bl	8003e04 <__NVIC_EnableIRQ>
 8003fa2:	bf00      	nop
 8003fa4:	3708      	adds	r7, #8
 8003fa6:	46bd      	mov	sp, r7
 8003fa8:	bd80      	pop	{r7, pc}

08003faa <HAL_SYSTICK_Config>:
 8003faa:	b580      	push	{r7, lr}
 8003fac:	b082      	sub	sp, #8
 8003fae:	af00      	add	r7, sp, #0
 8003fb0:	6078      	str	r0, [r7, #4]
 8003fb2:	6878      	ldr	r0, [r7, #4]
 8003fb4:	f7ff ffa2 	bl	8003efc <SysTick_Config>
 8003fb8:	4603      	mov	r3, r0
 8003fba:	4618      	mov	r0, r3
 8003fbc:	3708      	adds	r7, #8
 8003fbe:	46bd      	mov	sp, r7
 8003fc0:	bd80      	pop	{r7, pc}
	...

08003fc4 <HAL_DMA_Init>:
 8003fc4:	b580      	push	{r7, lr}
 8003fc6:	b086      	sub	sp, #24
 8003fc8:	af00      	add	r7, sp, #0
 8003fca:	6078      	str	r0, [r7, #4]
 8003fcc:	2300      	movs	r3, #0
 8003fce:	617b      	str	r3, [r7, #20]
 8003fd0:	f7ff fe96 	bl	8003d00 <HAL_GetTick>
 8003fd4:	6138      	str	r0, [r7, #16]
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	2b00      	cmp	r3, #0
 8003fda:	d101      	bne.n	8003fe0 <HAL_DMA_Init+0x1c>
 8003fdc:	2301      	movs	r3, #1
 8003fde:	e099      	b.n	8004114 <HAL_DMA_Init+0x150>
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	2202      	movs	r2, #2
 8003fe4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	2200      	movs	r2, #0
 8003fec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	681a      	ldr	r2, [r3, #0]
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	f022 0201 	bic.w	r2, r2, #1
 8003ffe:	601a      	str	r2, [r3, #0]
 8004000:	e00f      	b.n	8004022 <HAL_DMA_Init+0x5e>
 8004002:	f7ff fe7d 	bl	8003d00 <HAL_GetTick>
 8004006:	4602      	mov	r2, r0
 8004008:	693b      	ldr	r3, [r7, #16]
 800400a:	1ad3      	subs	r3, r2, r3
 800400c:	2b05      	cmp	r3, #5
 800400e:	d908      	bls.n	8004022 <HAL_DMA_Init+0x5e>
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	2220      	movs	r2, #32
 8004014:	655a      	str	r2, [r3, #84]	; 0x54
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	2203      	movs	r2, #3
 800401a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800401e:	2303      	movs	r3, #3
 8004020:	e078      	b.n	8004114 <HAL_DMA_Init+0x150>
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	f003 0301 	and.w	r3, r3, #1
 800402c:	2b00      	cmp	r3, #0
 800402e:	d1e8      	bne.n	8004002 <HAL_DMA_Init+0x3e>
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	617b      	str	r3, [r7, #20]
 8004038:	697a      	ldr	r2, [r7, #20]
 800403a:	4b38      	ldr	r3, [pc, #224]	; (800411c <HAL_DMA_Init+0x158>)
 800403c:	4013      	ands	r3, r2
 800403e:	617b      	str	r3, [r7, #20]
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	685a      	ldr	r2, [r3, #4]
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	689b      	ldr	r3, [r3, #8]
 8004048:	431a      	orrs	r2, r3
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	68db      	ldr	r3, [r3, #12]
 800404e:	431a      	orrs	r2, r3
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	691b      	ldr	r3, [r3, #16]
 8004054:	431a      	orrs	r2, r3
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	695b      	ldr	r3, [r3, #20]
 800405a:	431a      	orrs	r2, r3
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	699b      	ldr	r3, [r3, #24]
 8004060:	431a      	orrs	r2, r3
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	69db      	ldr	r3, [r3, #28]
 8004066:	431a      	orrs	r2, r3
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	6a1b      	ldr	r3, [r3, #32]
 800406c:	4313      	orrs	r3, r2
 800406e:	697a      	ldr	r2, [r7, #20]
 8004070:	4313      	orrs	r3, r2
 8004072:	617b      	str	r3, [r7, #20]
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004078:	2b04      	cmp	r3, #4
 800407a:	d107      	bne.n	800408c <HAL_DMA_Init+0xc8>
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004084:	4313      	orrs	r3, r2
 8004086:	697a      	ldr	r2, [r7, #20]
 8004088:	4313      	orrs	r3, r2
 800408a:	617b      	str	r3, [r7, #20]
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	697a      	ldr	r2, [r7, #20]
 8004092:	601a      	str	r2, [r3, #0]
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	695b      	ldr	r3, [r3, #20]
 800409a:	617b      	str	r3, [r7, #20]
 800409c:	697b      	ldr	r3, [r7, #20]
 800409e:	f023 0307 	bic.w	r3, r3, #7
 80040a2:	617b      	str	r3, [r7, #20]
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040a8:	697a      	ldr	r2, [r7, #20]
 80040aa:	4313      	orrs	r3, r2
 80040ac:	617b      	str	r3, [r7, #20]
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040b2:	2b04      	cmp	r3, #4
 80040b4:	d117      	bne.n	80040e6 <HAL_DMA_Init+0x122>
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80040ba:	697a      	ldr	r2, [r7, #20]
 80040bc:	4313      	orrs	r3, r2
 80040be:	617b      	str	r3, [r7, #20]
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040c4:	2b00      	cmp	r3, #0
 80040c6:	d00e      	beq.n	80040e6 <HAL_DMA_Init+0x122>
 80040c8:	6878      	ldr	r0, [r7, #4]
 80040ca:	f000 fb01 	bl	80046d0 <DMA_CheckFifoParam>
 80040ce:	4603      	mov	r3, r0
 80040d0:	2b00      	cmp	r3, #0
 80040d2:	d008      	beq.n	80040e6 <HAL_DMA_Init+0x122>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	2240      	movs	r2, #64	; 0x40
 80040d8:	655a      	str	r2, [r3, #84]	; 0x54
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	2201      	movs	r2, #1
 80040de:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80040e2:	2301      	movs	r3, #1
 80040e4:	e016      	b.n	8004114 <HAL_DMA_Init+0x150>
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	697a      	ldr	r2, [r7, #20]
 80040ec:	615a      	str	r2, [r3, #20]
 80040ee:	6878      	ldr	r0, [r7, #4]
 80040f0:	f000 fab8 	bl	8004664 <DMA_CalcBaseAndBitshift>
 80040f4:	4603      	mov	r3, r0
 80040f6:	60fb      	str	r3, [r7, #12]
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80040fc:	223f      	movs	r2, #63	; 0x3f
 80040fe:	409a      	lsls	r2, r3
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	609a      	str	r2, [r3, #8]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	2200      	movs	r2, #0
 8004108:	655a      	str	r2, [r3, #84]	; 0x54
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	2201      	movs	r2, #1
 800410e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004112:	2300      	movs	r3, #0
 8004114:	4618      	mov	r0, r3
 8004116:	3718      	adds	r7, #24
 8004118:	46bd      	mov	sp, r7
 800411a:	bd80      	pop	{r7, pc}
 800411c:	f010803f 	.word	0xf010803f

08004120 <HAL_DMA_Start_IT>:
 8004120:	b580      	push	{r7, lr}
 8004122:	b086      	sub	sp, #24
 8004124:	af00      	add	r7, sp, #0
 8004126:	60f8      	str	r0, [r7, #12]
 8004128:	60b9      	str	r1, [r7, #8]
 800412a:	607a      	str	r2, [r7, #4]
 800412c:	603b      	str	r3, [r7, #0]
 800412e:	2300      	movs	r3, #0
 8004130:	75fb      	strb	r3, [r7, #23]
 8004132:	68fb      	ldr	r3, [r7, #12]
 8004134:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004136:	613b      	str	r3, [r7, #16]
 8004138:	68fb      	ldr	r3, [r7, #12]
 800413a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800413e:	2b01      	cmp	r3, #1
 8004140:	d101      	bne.n	8004146 <HAL_DMA_Start_IT+0x26>
 8004142:	2302      	movs	r3, #2
 8004144:	e040      	b.n	80041c8 <HAL_DMA_Start_IT+0xa8>
 8004146:	68fb      	ldr	r3, [r7, #12]
 8004148:	2201      	movs	r2, #1
 800414a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800414e:	68fb      	ldr	r3, [r7, #12]
 8004150:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004154:	b2db      	uxtb	r3, r3
 8004156:	2b01      	cmp	r3, #1
 8004158:	d12f      	bne.n	80041ba <HAL_DMA_Start_IT+0x9a>
 800415a:	68fb      	ldr	r3, [r7, #12]
 800415c:	2202      	movs	r2, #2
 800415e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004162:	68fb      	ldr	r3, [r7, #12]
 8004164:	2200      	movs	r2, #0
 8004166:	655a      	str	r2, [r3, #84]	; 0x54
 8004168:	683b      	ldr	r3, [r7, #0]
 800416a:	687a      	ldr	r2, [r7, #4]
 800416c:	68b9      	ldr	r1, [r7, #8]
 800416e:	68f8      	ldr	r0, [r7, #12]
 8004170:	f000 fa4a 	bl	8004608 <DMA_SetConfig>
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004178:	223f      	movs	r2, #63	; 0x3f
 800417a:	409a      	lsls	r2, r3
 800417c:	693b      	ldr	r3, [r7, #16]
 800417e:	609a      	str	r2, [r3, #8]
 8004180:	68fb      	ldr	r3, [r7, #12]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	681a      	ldr	r2, [r3, #0]
 8004186:	68fb      	ldr	r3, [r7, #12]
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	f042 0216 	orr.w	r2, r2, #22
 800418e:	601a      	str	r2, [r3, #0]
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004194:	2b00      	cmp	r3, #0
 8004196:	d007      	beq.n	80041a8 <HAL_DMA_Start_IT+0x88>
 8004198:	68fb      	ldr	r3, [r7, #12]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	681a      	ldr	r2, [r3, #0]
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	f042 0208 	orr.w	r2, r2, #8
 80041a6:	601a      	str	r2, [r3, #0]
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	681a      	ldr	r2, [r3, #0]
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	f042 0201 	orr.w	r2, r2, #1
 80041b6:	601a      	str	r2, [r3, #0]
 80041b8:	e005      	b.n	80041c6 <HAL_DMA_Start_IT+0xa6>
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	2200      	movs	r2, #0
 80041be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80041c2:	2302      	movs	r3, #2
 80041c4:	75fb      	strb	r3, [r7, #23]
 80041c6:	7dfb      	ldrb	r3, [r7, #23]
 80041c8:	4618      	mov	r0, r3
 80041ca:	3718      	adds	r7, #24
 80041cc:	46bd      	mov	sp, r7
 80041ce:	bd80      	pop	{r7, pc}

080041d0 <HAL_DMA_Abort>:
 80041d0:	b580      	push	{r7, lr}
 80041d2:	b084      	sub	sp, #16
 80041d4:	af00      	add	r7, sp, #0
 80041d6:	6078      	str	r0, [r7, #4]
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80041dc:	60fb      	str	r3, [r7, #12]
 80041de:	f7ff fd8f 	bl	8003d00 <HAL_GetTick>
 80041e2:	60b8      	str	r0, [r7, #8]
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80041ea:	b2db      	uxtb	r3, r3
 80041ec:	2b02      	cmp	r3, #2
 80041ee:	d008      	beq.n	8004202 <HAL_DMA_Abort+0x32>
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	2280      	movs	r2, #128	; 0x80
 80041f4:	655a      	str	r2, [r3, #84]	; 0x54
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	2200      	movs	r2, #0
 80041fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80041fe:	2301      	movs	r3, #1
 8004200:	e052      	b.n	80042a8 <HAL_DMA_Abort+0xd8>
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	681a      	ldr	r2, [r3, #0]
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	f022 0216 	bic.w	r2, r2, #22
 8004210:	601a      	str	r2, [r3, #0]
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	695a      	ldr	r2, [r3, #20]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004220:	615a      	str	r2, [r3, #20]
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004226:	2b00      	cmp	r3, #0
 8004228:	d103      	bne.n	8004232 <HAL_DMA_Abort+0x62>
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800422e:	2b00      	cmp	r3, #0
 8004230:	d007      	beq.n	8004242 <HAL_DMA_Abort+0x72>
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	681a      	ldr	r2, [r3, #0]
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	f022 0208 	bic.w	r2, r2, #8
 8004240:	601a      	str	r2, [r3, #0]
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	681a      	ldr	r2, [r3, #0]
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	f022 0201 	bic.w	r2, r2, #1
 8004250:	601a      	str	r2, [r3, #0]
 8004252:	e013      	b.n	800427c <HAL_DMA_Abort+0xac>
 8004254:	f7ff fd54 	bl	8003d00 <HAL_GetTick>
 8004258:	4602      	mov	r2, r0
 800425a:	68bb      	ldr	r3, [r7, #8]
 800425c:	1ad3      	subs	r3, r2, r3
 800425e:	2b05      	cmp	r3, #5
 8004260:	d90c      	bls.n	800427c <HAL_DMA_Abort+0xac>
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	2220      	movs	r2, #32
 8004266:	655a      	str	r2, [r3, #84]	; 0x54
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	2203      	movs	r2, #3
 800426c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	2200      	movs	r2, #0
 8004274:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004278:	2303      	movs	r3, #3
 800427a:	e015      	b.n	80042a8 <HAL_DMA_Abort+0xd8>
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	f003 0301 	and.w	r3, r3, #1
 8004286:	2b00      	cmp	r3, #0
 8004288:	d1e4      	bne.n	8004254 <HAL_DMA_Abort+0x84>
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800428e:	223f      	movs	r2, #63	; 0x3f
 8004290:	409a      	lsls	r2, r3
 8004292:	68fb      	ldr	r3, [r7, #12]
 8004294:	609a      	str	r2, [r3, #8]
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	2201      	movs	r2, #1
 800429a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	2200      	movs	r2, #0
 80042a2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80042a6:	2300      	movs	r3, #0
 80042a8:	4618      	mov	r0, r3
 80042aa:	3710      	adds	r7, #16
 80042ac:	46bd      	mov	sp, r7
 80042ae:	bd80      	pop	{r7, pc}

080042b0 <HAL_DMA_Abort_IT>:
 80042b0:	b480      	push	{r7}
 80042b2:	b083      	sub	sp, #12
 80042b4:	af00      	add	r7, sp, #0
 80042b6:	6078      	str	r0, [r7, #4]
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80042be:	b2db      	uxtb	r3, r3
 80042c0:	2b02      	cmp	r3, #2
 80042c2:	d004      	beq.n	80042ce <HAL_DMA_Abort_IT+0x1e>
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	2280      	movs	r2, #128	; 0x80
 80042c8:	655a      	str	r2, [r3, #84]	; 0x54
 80042ca:	2301      	movs	r3, #1
 80042cc:	e00c      	b.n	80042e8 <HAL_DMA_Abort_IT+0x38>
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	2205      	movs	r2, #5
 80042d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	681a      	ldr	r2, [r3, #0]
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	f022 0201 	bic.w	r2, r2, #1
 80042e4:	601a      	str	r2, [r3, #0]
 80042e6:	2300      	movs	r3, #0
 80042e8:	4618      	mov	r0, r3
 80042ea:	370c      	adds	r7, #12
 80042ec:	46bd      	mov	sp, r7
 80042ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f2:	4770      	bx	lr

080042f4 <HAL_DMA_IRQHandler>:
 80042f4:	b580      	push	{r7, lr}
 80042f6:	b086      	sub	sp, #24
 80042f8:	af00      	add	r7, sp, #0
 80042fa:	6078      	str	r0, [r7, #4]
 80042fc:	2300      	movs	r3, #0
 80042fe:	60bb      	str	r3, [r7, #8]
 8004300:	4b8e      	ldr	r3, [pc, #568]	; (800453c <HAL_DMA_IRQHandler+0x248>)
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	4a8e      	ldr	r2, [pc, #568]	; (8004540 <HAL_DMA_IRQHandler+0x24c>)
 8004306:	fba2 2303 	umull	r2, r3, r2, r3
 800430a:	0a9b      	lsrs	r3, r3, #10
 800430c:	617b      	str	r3, [r7, #20]
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004312:	613b      	str	r3, [r7, #16]
 8004314:	693b      	ldr	r3, [r7, #16]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	60fb      	str	r3, [r7, #12]
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800431e:	2208      	movs	r2, #8
 8004320:	409a      	lsls	r2, r3
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	4013      	ands	r3, r2
 8004326:	2b00      	cmp	r3, #0
 8004328:	d01a      	beq.n	8004360 <HAL_DMA_IRQHandler+0x6c>
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	f003 0304 	and.w	r3, r3, #4
 8004334:	2b00      	cmp	r3, #0
 8004336:	d013      	beq.n	8004360 <HAL_DMA_IRQHandler+0x6c>
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	681a      	ldr	r2, [r3, #0]
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	f022 0204 	bic.w	r2, r2, #4
 8004346:	601a      	str	r2, [r3, #0]
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800434c:	2208      	movs	r2, #8
 800434e:	409a      	lsls	r2, r3
 8004350:	693b      	ldr	r3, [r7, #16]
 8004352:	609a      	str	r2, [r3, #8]
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004358:	f043 0201 	orr.w	r2, r3, #1
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	655a      	str	r2, [r3, #84]	; 0x54
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004364:	2201      	movs	r2, #1
 8004366:	409a      	lsls	r2, r3
 8004368:	68fb      	ldr	r3, [r7, #12]
 800436a:	4013      	ands	r3, r2
 800436c:	2b00      	cmp	r3, #0
 800436e:	d012      	beq.n	8004396 <HAL_DMA_IRQHandler+0xa2>
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	695b      	ldr	r3, [r3, #20]
 8004376:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800437a:	2b00      	cmp	r3, #0
 800437c:	d00b      	beq.n	8004396 <HAL_DMA_IRQHandler+0xa2>
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004382:	2201      	movs	r2, #1
 8004384:	409a      	lsls	r2, r3
 8004386:	693b      	ldr	r3, [r7, #16]
 8004388:	609a      	str	r2, [r3, #8]
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800438e:	f043 0202 	orr.w	r2, r3, #2
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	655a      	str	r2, [r3, #84]	; 0x54
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800439a:	2204      	movs	r2, #4
 800439c:	409a      	lsls	r2, r3
 800439e:	68fb      	ldr	r3, [r7, #12]
 80043a0:	4013      	ands	r3, r2
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	d012      	beq.n	80043cc <HAL_DMA_IRQHandler+0xd8>
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	681b      	ldr	r3, [r3, #0]
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	f003 0302 	and.w	r3, r3, #2
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d00b      	beq.n	80043cc <HAL_DMA_IRQHandler+0xd8>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043b8:	2204      	movs	r2, #4
 80043ba:	409a      	lsls	r2, r3
 80043bc:	693b      	ldr	r3, [r7, #16]
 80043be:	609a      	str	r2, [r3, #8]
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80043c4:	f043 0204 	orr.w	r2, r3, #4
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	655a      	str	r2, [r3, #84]	; 0x54
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043d0:	2210      	movs	r2, #16
 80043d2:	409a      	lsls	r2, r3
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	4013      	ands	r3, r2
 80043d8:	2b00      	cmp	r3, #0
 80043da:	d043      	beq.n	8004464 <HAL_DMA_IRQHandler+0x170>
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	f003 0308 	and.w	r3, r3, #8
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d03c      	beq.n	8004464 <HAL_DMA_IRQHandler+0x170>
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043ee:	2210      	movs	r2, #16
 80043f0:	409a      	lsls	r2, r3
 80043f2:	693b      	ldr	r3, [r7, #16]
 80043f4:	609a      	str	r2, [r3, #8]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004400:	2b00      	cmp	r3, #0
 8004402:	d018      	beq.n	8004436 <HAL_DMA_IRQHandler+0x142>
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800440e:	2b00      	cmp	r3, #0
 8004410:	d108      	bne.n	8004424 <HAL_DMA_IRQHandler+0x130>
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004416:	2b00      	cmp	r3, #0
 8004418:	d024      	beq.n	8004464 <HAL_DMA_IRQHandler+0x170>
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800441e:	6878      	ldr	r0, [r7, #4]
 8004420:	4798      	blx	r3
 8004422:	e01f      	b.n	8004464 <HAL_DMA_IRQHandler+0x170>
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004428:	2b00      	cmp	r3, #0
 800442a:	d01b      	beq.n	8004464 <HAL_DMA_IRQHandler+0x170>
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004430:	6878      	ldr	r0, [r7, #4]
 8004432:	4798      	blx	r3
 8004434:	e016      	b.n	8004464 <HAL_DMA_IRQHandler+0x170>
 8004436:	687b      	ldr	r3, [r7, #4]
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	681b      	ldr	r3, [r3, #0]
 800443c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004440:	2b00      	cmp	r3, #0
 8004442:	d107      	bne.n	8004454 <HAL_DMA_IRQHandler+0x160>
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	681a      	ldr	r2, [r3, #0]
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	f022 0208 	bic.w	r2, r2, #8
 8004452:	601a      	str	r2, [r3, #0]
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004458:	2b00      	cmp	r3, #0
 800445a:	d003      	beq.n	8004464 <HAL_DMA_IRQHandler+0x170>
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004460:	6878      	ldr	r0, [r7, #4]
 8004462:	4798      	blx	r3
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004468:	2220      	movs	r2, #32
 800446a:	409a      	lsls	r2, r3
 800446c:	68fb      	ldr	r3, [r7, #12]
 800446e:	4013      	ands	r3, r2
 8004470:	2b00      	cmp	r3, #0
 8004472:	f000 808f 	beq.w	8004594 <HAL_DMA_IRQHandler+0x2a0>
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	681b      	ldr	r3, [r3, #0]
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	f003 0310 	and.w	r3, r3, #16
 8004480:	2b00      	cmp	r3, #0
 8004482:	f000 8087 	beq.w	8004594 <HAL_DMA_IRQHandler+0x2a0>
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800448a:	2220      	movs	r2, #32
 800448c:	409a      	lsls	r2, r3
 800448e:	693b      	ldr	r3, [r7, #16]
 8004490:	609a      	str	r2, [r3, #8]
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004498:	b2db      	uxtb	r3, r3
 800449a:	2b05      	cmp	r3, #5
 800449c:	d136      	bne.n	800450c <HAL_DMA_IRQHandler+0x218>
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	681a      	ldr	r2, [r3, #0]
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	f022 0216 	bic.w	r2, r2, #22
 80044ac:	601a      	str	r2, [r3, #0]
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	695a      	ldr	r2, [r3, #20]
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	681b      	ldr	r3, [r3, #0]
 80044b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80044bc:	615a      	str	r2, [r3, #20]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	d103      	bne.n	80044ce <HAL_DMA_IRQHandler+0x1da>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80044ca:	2b00      	cmp	r3, #0
 80044cc:	d007      	beq.n	80044de <HAL_DMA_IRQHandler+0x1ea>
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	681a      	ldr	r2, [r3, #0]
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	f022 0208 	bic.w	r2, r2, #8
 80044dc:	601a      	str	r2, [r3, #0]
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80044e2:	223f      	movs	r2, #63	; 0x3f
 80044e4:	409a      	lsls	r2, r3
 80044e6:	693b      	ldr	r3, [r7, #16]
 80044e8:	609a      	str	r2, [r3, #8]
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	2201      	movs	r2, #1
 80044ee:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	2200      	movs	r2, #0
 80044f6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80044fe:	2b00      	cmp	r3, #0
 8004500:	d07e      	beq.n	8004600 <HAL_DMA_IRQHandler+0x30c>
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004506:	6878      	ldr	r0, [r7, #4]
 8004508:	4798      	blx	r3
 800450a:	e079      	b.n	8004600 <HAL_DMA_IRQHandler+0x30c>
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	681b      	ldr	r3, [r3, #0]
 8004512:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004516:	2b00      	cmp	r3, #0
 8004518:	d01d      	beq.n	8004556 <HAL_DMA_IRQHandler+0x262>
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004524:	2b00      	cmp	r3, #0
 8004526:	d10d      	bne.n	8004544 <HAL_DMA_IRQHandler+0x250>
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800452c:	2b00      	cmp	r3, #0
 800452e:	d031      	beq.n	8004594 <HAL_DMA_IRQHandler+0x2a0>
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004534:	6878      	ldr	r0, [r7, #4]
 8004536:	4798      	blx	r3
 8004538:	e02c      	b.n	8004594 <HAL_DMA_IRQHandler+0x2a0>
 800453a:	bf00      	nop
 800453c:	20000000 	.word	0x20000000
 8004540:	1b4e81b5 	.word	0x1b4e81b5
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004548:	2b00      	cmp	r3, #0
 800454a:	d023      	beq.n	8004594 <HAL_DMA_IRQHandler+0x2a0>
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004550:	6878      	ldr	r0, [r7, #4]
 8004552:	4798      	blx	r3
 8004554:	e01e      	b.n	8004594 <HAL_DMA_IRQHandler+0x2a0>
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004560:	2b00      	cmp	r3, #0
 8004562:	d10f      	bne.n	8004584 <HAL_DMA_IRQHandler+0x290>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	681a      	ldr	r2, [r3, #0]
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	f022 0210 	bic.w	r2, r2, #16
 8004572:	601a      	str	r2, [r3, #0]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	2201      	movs	r2, #1
 8004578:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	2200      	movs	r2, #0
 8004580:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004588:	2b00      	cmp	r3, #0
 800458a:	d003      	beq.n	8004594 <HAL_DMA_IRQHandler+0x2a0>
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004590:	6878      	ldr	r0, [r7, #4]
 8004592:	4798      	blx	r3
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004598:	2b00      	cmp	r3, #0
 800459a:	d032      	beq.n	8004602 <HAL_DMA_IRQHandler+0x30e>
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045a0:	f003 0301 	and.w	r3, r3, #1
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d022      	beq.n	80045ee <HAL_DMA_IRQHandler+0x2fa>
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	2205      	movs	r2, #5
 80045ac:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	681a      	ldr	r2, [r3, #0]
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	f022 0201 	bic.w	r2, r2, #1
 80045be:	601a      	str	r2, [r3, #0]
 80045c0:	68bb      	ldr	r3, [r7, #8]
 80045c2:	3301      	adds	r3, #1
 80045c4:	60bb      	str	r3, [r7, #8]
 80045c6:	697a      	ldr	r2, [r7, #20]
 80045c8:	429a      	cmp	r2, r3
 80045ca:	d307      	bcc.n	80045dc <HAL_DMA_IRQHandler+0x2e8>
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	f003 0301 	and.w	r3, r3, #1
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d1f2      	bne.n	80045c0 <HAL_DMA_IRQHandler+0x2cc>
 80045da:	e000      	b.n	80045de <HAL_DMA_IRQHandler+0x2ea>
 80045dc:	bf00      	nop
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	2201      	movs	r2, #1
 80045e2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	2200      	movs	r2, #0
 80045ea:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d005      	beq.n	8004602 <HAL_DMA_IRQHandler+0x30e>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80045fa:	6878      	ldr	r0, [r7, #4]
 80045fc:	4798      	blx	r3
 80045fe:	e000      	b.n	8004602 <HAL_DMA_IRQHandler+0x30e>
 8004600:	bf00      	nop
 8004602:	3718      	adds	r7, #24
 8004604:	46bd      	mov	sp, r7
 8004606:	bd80      	pop	{r7, pc}

08004608 <DMA_SetConfig>:
 8004608:	b480      	push	{r7}
 800460a:	b085      	sub	sp, #20
 800460c:	af00      	add	r7, sp, #0
 800460e:	60f8      	str	r0, [r7, #12]
 8004610:	60b9      	str	r1, [r7, #8]
 8004612:	607a      	str	r2, [r7, #4]
 8004614:	603b      	str	r3, [r7, #0]
 8004616:	68fb      	ldr	r3, [r7, #12]
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	681a      	ldr	r2, [r3, #0]
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004624:	601a      	str	r2, [r3, #0]
 8004626:	68fb      	ldr	r3, [r7, #12]
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	683a      	ldr	r2, [r7, #0]
 800462c:	605a      	str	r2, [r3, #4]
 800462e:	68fb      	ldr	r3, [r7, #12]
 8004630:	689b      	ldr	r3, [r3, #8]
 8004632:	2b40      	cmp	r3, #64	; 0x40
 8004634:	d108      	bne.n	8004648 <DMA_SetConfig+0x40>
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	687a      	ldr	r2, [r7, #4]
 800463c:	609a      	str	r2, [r3, #8]
 800463e:	68fb      	ldr	r3, [r7, #12]
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	68ba      	ldr	r2, [r7, #8]
 8004644:	60da      	str	r2, [r3, #12]
 8004646:	e007      	b.n	8004658 <DMA_SetConfig+0x50>
 8004648:	68fb      	ldr	r3, [r7, #12]
 800464a:	681b      	ldr	r3, [r3, #0]
 800464c:	68ba      	ldr	r2, [r7, #8]
 800464e:	609a      	str	r2, [r3, #8]
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	687a      	ldr	r2, [r7, #4]
 8004656:	60da      	str	r2, [r3, #12]
 8004658:	bf00      	nop
 800465a:	3714      	adds	r7, #20
 800465c:	46bd      	mov	sp, r7
 800465e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004662:	4770      	bx	lr

08004664 <DMA_CalcBaseAndBitshift>:
 8004664:	b480      	push	{r7}
 8004666:	b085      	sub	sp, #20
 8004668:	af00      	add	r7, sp, #0
 800466a:	6078      	str	r0, [r7, #4]
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	681b      	ldr	r3, [r3, #0]
 8004670:	b2db      	uxtb	r3, r3
 8004672:	3b10      	subs	r3, #16
 8004674:	4a14      	ldr	r2, [pc, #80]	; (80046c8 <DMA_CalcBaseAndBitshift+0x64>)
 8004676:	fba2 2303 	umull	r2, r3, r2, r3
 800467a:	091b      	lsrs	r3, r3, #4
 800467c:	60fb      	str	r3, [r7, #12]
 800467e:	4a13      	ldr	r2, [pc, #76]	; (80046cc <DMA_CalcBaseAndBitshift+0x68>)
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	4413      	add	r3, r2
 8004684:	781b      	ldrb	r3, [r3, #0]
 8004686:	461a      	mov	r2, r3
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	65da      	str	r2, [r3, #92]	; 0x5c
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	2b03      	cmp	r3, #3
 8004690:	d909      	bls.n	80046a6 <DMA_CalcBaseAndBitshift+0x42>
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800469a:	f023 0303 	bic.w	r3, r3, #3
 800469e:	1d1a      	adds	r2, r3, #4
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	659a      	str	r2, [r3, #88]	; 0x58
 80046a4:	e007      	b.n	80046b6 <DMA_CalcBaseAndBitshift+0x52>
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80046ae:	f023 0303 	bic.w	r3, r3, #3
 80046b2:	687a      	ldr	r2, [r7, #4]
 80046b4:	6593      	str	r3, [r2, #88]	; 0x58
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80046ba:	4618      	mov	r0, r3
 80046bc:	3714      	adds	r7, #20
 80046be:	46bd      	mov	sp, r7
 80046c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046c4:	4770      	bx	lr
 80046c6:	bf00      	nop
 80046c8:	aaaaaaab 	.word	0xaaaaaaab
 80046cc:	0800fa08 	.word	0x0800fa08

080046d0 <DMA_CheckFifoParam>:
 80046d0:	b480      	push	{r7}
 80046d2:	b085      	sub	sp, #20
 80046d4:	af00      	add	r7, sp, #0
 80046d6:	6078      	str	r0, [r7, #4]
 80046d8:	2300      	movs	r3, #0
 80046da:	73fb      	strb	r3, [r7, #15]
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80046e0:	60bb      	str	r3, [r7, #8]
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	699b      	ldr	r3, [r3, #24]
 80046e6:	2b00      	cmp	r3, #0
 80046e8:	d11f      	bne.n	800472a <DMA_CheckFifoParam+0x5a>
 80046ea:	68bb      	ldr	r3, [r7, #8]
 80046ec:	2b03      	cmp	r3, #3
 80046ee:	d856      	bhi.n	800479e <DMA_CheckFifoParam+0xce>
 80046f0:	a201      	add	r2, pc, #4	; (adr r2, 80046f8 <DMA_CheckFifoParam+0x28>)
 80046f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80046f6:	bf00      	nop
 80046f8:	08004709 	.word	0x08004709
 80046fc:	0800471b 	.word	0x0800471b
 8004700:	08004709 	.word	0x08004709
 8004704:	0800479f 	.word	0x0800479f
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800470c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004710:	2b00      	cmp	r3, #0
 8004712:	d046      	beq.n	80047a2 <DMA_CheckFifoParam+0xd2>
 8004714:	2301      	movs	r3, #1
 8004716:	73fb      	strb	r3, [r7, #15]
 8004718:	e043      	b.n	80047a2 <DMA_CheckFifoParam+0xd2>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800471e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004722:	d140      	bne.n	80047a6 <DMA_CheckFifoParam+0xd6>
 8004724:	2301      	movs	r3, #1
 8004726:	73fb      	strb	r3, [r7, #15]
 8004728:	e03d      	b.n	80047a6 <DMA_CheckFifoParam+0xd6>
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	699b      	ldr	r3, [r3, #24]
 800472e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004732:	d121      	bne.n	8004778 <DMA_CheckFifoParam+0xa8>
 8004734:	68bb      	ldr	r3, [r7, #8]
 8004736:	2b03      	cmp	r3, #3
 8004738:	d837      	bhi.n	80047aa <DMA_CheckFifoParam+0xda>
 800473a:	a201      	add	r2, pc, #4	; (adr r2, 8004740 <DMA_CheckFifoParam+0x70>)
 800473c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004740:	08004751 	.word	0x08004751
 8004744:	08004757 	.word	0x08004757
 8004748:	08004751 	.word	0x08004751
 800474c:	08004769 	.word	0x08004769
 8004750:	2301      	movs	r3, #1
 8004752:	73fb      	strb	r3, [r7, #15]
 8004754:	e030      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800475a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800475e:	2b00      	cmp	r3, #0
 8004760:	d025      	beq.n	80047ae <DMA_CheckFifoParam+0xde>
 8004762:	2301      	movs	r3, #1
 8004764:	73fb      	strb	r3, [r7, #15]
 8004766:	e022      	b.n	80047ae <DMA_CheckFifoParam+0xde>
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800476c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004770:	d11f      	bne.n	80047b2 <DMA_CheckFifoParam+0xe2>
 8004772:	2301      	movs	r3, #1
 8004774:	73fb      	strb	r3, [r7, #15]
 8004776:	e01c      	b.n	80047b2 <DMA_CheckFifoParam+0xe2>
 8004778:	68bb      	ldr	r3, [r7, #8]
 800477a:	2b02      	cmp	r3, #2
 800477c:	d903      	bls.n	8004786 <DMA_CheckFifoParam+0xb6>
 800477e:	68bb      	ldr	r3, [r7, #8]
 8004780:	2b03      	cmp	r3, #3
 8004782:	d003      	beq.n	800478c <DMA_CheckFifoParam+0xbc>
 8004784:	e018      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 8004786:	2301      	movs	r3, #1
 8004788:	73fb      	strb	r3, [r7, #15]
 800478a:	e015      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004790:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004794:	2b00      	cmp	r3, #0
 8004796:	d00e      	beq.n	80047b6 <DMA_CheckFifoParam+0xe6>
 8004798:	2301      	movs	r3, #1
 800479a:	73fb      	strb	r3, [r7, #15]
 800479c:	e00b      	b.n	80047b6 <DMA_CheckFifoParam+0xe6>
 800479e:	bf00      	nop
 80047a0:	e00a      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 80047a2:	bf00      	nop
 80047a4:	e008      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 80047a6:	bf00      	nop
 80047a8:	e006      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 80047aa:	bf00      	nop
 80047ac:	e004      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 80047ae:	bf00      	nop
 80047b0:	e002      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 80047b2:	bf00      	nop
 80047b4:	e000      	b.n	80047b8 <DMA_CheckFifoParam+0xe8>
 80047b6:	bf00      	nop
 80047b8:	7bfb      	ldrb	r3, [r7, #15]
 80047ba:	4618      	mov	r0, r3
 80047bc:	3714      	adds	r7, #20
 80047be:	46bd      	mov	sp, r7
 80047c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047c4:	4770      	bx	lr
 80047c6:	bf00      	nop

080047c8 <HAL_GPIO_Init>:
 80047c8:	b480      	push	{r7}
 80047ca:	b089      	sub	sp, #36	; 0x24
 80047cc:	af00      	add	r7, sp, #0
 80047ce:	6078      	str	r0, [r7, #4]
 80047d0:	6039      	str	r1, [r7, #0]
 80047d2:	2300      	movs	r3, #0
 80047d4:	617b      	str	r3, [r7, #20]
 80047d6:	2300      	movs	r3, #0
 80047d8:	613b      	str	r3, [r7, #16]
 80047da:	2300      	movs	r3, #0
 80047dc:	61bb      	str	r3, [r7, #24]
 80047de:	2300      	movs	r3, #0
 80047e0:	61fb      	str	r3, [r7, #28]
 80047e2:	e159      	b.n	8004a98 <HAL_GPIO_Init+0x2d0>
 80047e4:	2201      	movs	r2, #1
 80047e6:	69fb      	ldr	r3, [r7, #28]
 80047e8:	fa02 f303 	lsl.w	r3, r2, r3
 80047ec:	617b      	str	r3, [r7, #20]
 80047ee:	683b      	ldr	r3, [r7, #0]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	697a      	ldr	r2, [r7, #20]
 80047f4:	4013      	ands	r3, r2
 80047f6:	613b      	str	r3, [r7, #16]
 80047f8:	693a      	ldr	r2, [r7, #16]
 80047fa:	697b      	ldr	r3, [r7, #20]
 80047fc:	429a      	cmp	r2, r3
 80047fe:	f040 8148 	bne.w	8004a92 <HAL_GPIO_Init+0x2ca>
 8004802:	683b      	ldr	r3, [r7, #0]
 8004804:	685b      	ldr	r3, [r3, #4]
 8004806:	f003 0303 	and.w	r3, r3, #3
 800480a:	2b01      	cmp	r3, #1
 800480c:	d005      	beq.n	800481a <HAL_GPIO_Init+0x52>
 800480e:	683b      	ldr	r3, [r7, #0]
 8004810:	685b      	ldr	r3, [r3, #4]
 8004812:	f003 0303 	and.w	r3, r3, #3
 8004816:	2b02      	cmp	r3, #2
 8004818:	d130      	bne.n	800487c <HAL_GPIO_Init+0xb4>
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	689b      	ldr	r3, [r3, #8]
 800481e:	61bb      	str	r3, [r7, #24]
 8004820:	69fb      	ldr	r3, [r7, #28]
 8004822:	005b      	lsls	r3, r3, #1
 8004824:	2203      	movs	r2, #3
 8004826:	fa02 f303 	lsl.w	r3, r2, r3
 800482a:	43db      	mvns	r3, r3
 800482c:	69ba      	ldr	r2, [r7, #24]
 800482e:	4013      	ands	r3, r2
 8004830:	61bb      	str	r3, [r7, #24]
 8004832:	683b      	ldr	r3, [r7, #0]
 8004834:	68da      	ldr	r2, [r3, #12]
 8004836:	69fb      	ldr	r3, [r7, #28]
 8004838:	005b      	lsls	r3, r3, #1
 800483a:	fa02 f303 	lsl.w	r3, r2, r3
 800483e:	69ba      	ldr	r2, [r7, #24]
 8004840:	4313      	orrs	r3, r2
 8004842:	61bb      	str	r3, [r7, #24]
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	69ba      	ldr	r2, [r7, #24]
 8004848:	609a      	str	r2, [r3, #8]
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	685b      	ldr	r3, [r3, #4]
 800484e:	61bb      	str	r3, [r7, #24]
 8004850:	2201      	movs	r2, #1
 8004852:	69fb      	ldr	r3, [r7, #28]
 8004854:	fa02 f303 	lsl.w	r3, r2, r3
 8004858:	43db      	mvns	r3, r3
 800485a:	69ba      	ldr	r2, [r7, #24]
 800485c:	4013      	ands	r3, r2
 800485e:	61bb      	str	r3, [r7, #24]
 8004860:	683b      	ldr	r3, [r7, #0]
 8004862:	685b      	ldr	r3, [r3, #4]
 8004864:	091b      	lsrs	r3, r3, #4
 8004866:	f003 0201 	and.w	r2, r3, #1
 800486a:	69fb      	ldr	r3, [r7, #28]
 800486c:	fa02 f303 	lsl.w	r3, r2, r3
 8004870:	69ba      	ldr	r2, [r7, #24]
 8004872:	4313      	orrs	r3, r2
 8004874:	61bb      	str	r3, [r7, #24]
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	69ba      	ldr	r2, [r7, #24]
 800487a:	605a      	str	r2, [r3, #4]
 800487c:	683b      	ldr	r3, [r7, #0]
 800487e:	685b      	ldr	r3, [r3, #4]
 8004880:	f003 0303 	and.w	r3, r3, #3
 8004884:	2b03      	cmp	r3, #3
 8004886:	d017      	beq.n	80048b8 <HAL_GPIO_Init+0xf0>
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	68db      	ldr	r3, [r3, #12]
 800488c:	61bb      	str	r3, [r7, #24]
 800488e:	69fb      	ldr	r3, [r7, #28]
 8004890:	005b      	lsls	r3, r3, #1
 8004892:	2203      	movs	r2, #3
 8004894:	fa02 f303 	lsl.w	r3, r2, r3
 8004898:	43db      	mvns	r3, r3
 800489a:	69ba      	ldr	r2, [r7, #24]
 800489c:	4013      	ands	r3, r2
 800489e:	61bb      	str	r3, [r7, #24]
 80048a0:	683b      	ldr	r3, [r7, #0]
 80048a2:	689a      	ldr	r2, [r3, #8]
 80048a4:	69fb      	ldr	r3, [r7, #28]
 80048a6:	005b      	lsls	r3, r3, #1
 80048a8:	fa02 f303 	lsl.w	r3, r2, r3
 80048ac:	69ba      	ldr	r2, [r7, #24]
 80048ae:	4313      	orrs	r3, r2
 80048b0:	61bb      	str	r3, [r7, #24]
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	69ba      	ldr	r2, [r7, #24]
 80048b6:	60da      	str	r2, [r3, #12]
 80048b8:	683b      	ldr	r3, [r7, #0]
 80048ba:	685b      	ldr	r3, [r3, #4]
 80048bc:	f003 0303 	and.w	r3, r3, #3
 80048c0:	2b02      	cmp	r3, #2
 80048c2:	d123      	bne.n	800490c <HAL_GPIO_Init+0x144>
 80048c4:	69fb      	ldr	r3, [r7, #28]
 80048c6:	08da      	lsrs	r2, r3, #3
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	3208      	adds	r2, #8
 80048cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80048d0:	61bb      	str	r3, [r7, #24]
 80048d2:	69fb      	ldr	r3, [r7, #28]
 80048d4:	f003 0307 	and.w	r3, r3, #7
 80048d8:	009b      	lsls	r3, r3, #2
 80048da:	220f      	movs	r2, #15
 80048dc:	fa02 f303 	lsl.w	r3, r2, r3
 80048e0:	43db      	mvns	r3, r3
 80048e2:	69ba      	ldr	r2, [r7, #24]
 80048e4:	4013      	ands	r3, r2
 80048e6:	61bb      	str	r3, [r7, #24]
 80048e8:	683b      	ldr	r3, [r7, #0]
 80048ea:	691a      	ldr	r2, [r3, #16]
 80048ec:	69fb      	ldr	r3, [r7, #28]
 80048ee:	f003 0307 	and.w	r3, r3, #7
 80048f2:	009b      	lsls	r3, r3, #2
 80048f4:	fa02 f303 	lsl.w	r3, r2, r3
 80048f8:	69ba      	ldr	r2, [r7, #24]
 80048fa:	4313      	orrs	r3, r2
 80048fc:	61bb      	str	r3, [r7, #24]
 80048fe:	69fb      	ldr	r3, [r7, #28]
 8004900:	08da      	lsrs	r2, r3, #3
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	3208      	adds	r2, #8
 8004906:	69b9      	ldr	r1, [r7, #24]
 8004908:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	61bb      	str	r3, [r7, #24]
 8004912:	69fb      	ldr	r3, [r7, #28]
 8004914:	005b      	lsls	r3, r3, #1
 8004916:	2203      	movs	r2, #3
 8004918:	fa02 f303 	lsl.w	r3, r2, r3
 800491c:	43db      	mvns	r3, r3
 800491e:	69ba      	ldr	r2, [r7, #24]
 8004920:	4013      	ands	r3, r2
 8004922:	61bb      	str	r3, [r7, #24]
 8004924:	683b      	ldr	r3, [r7, #0]
 8004926:	685b      	ldr	r3, [r3, #4]
 8004928:	f003 0203 	and.w	r2, r3, #3
 800492c:	69fb      	ldr	r3, [r7, #28]
 800492e:	005b      	lsls	r3, r3, #1
 8004930:	fa02 f303 	lsl.w	r3, r2, r3
 8004934:	69ba      	ldr	r2, [r7, #24]
 8004936:	4313      	orrs	r3, r2
 8004938:	61bb      	str	r3, [r7, #24]
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	69ba      	ldr	r2, [r7, #24]
 800493e:	601a      	str	r2, [r3, #0]
 8004940:	683b      	ldr	r3, [r7, #0]
 8004942:	685b      	ldr	r3, [r3, #4]
 8004944:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004948:	2b00      	cmp	r3, #0
 800494a:	f000 80a2 	beq.w	8004a92 <HAL_GPIO_Init+0x2ca>
 800494e:	2300      	movs	r3, #0
 8004950:	60fb      	str	r3, [r7, #12]
 8004952:	4b57      	ldr	r3, [pc, #348]	; (8004ab0 <HAL_GPIO_Init+0x2e8>)
 8004954:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004956:	4a56      	ldr	r2, [pc, #344]	; (8004ab0 <HAL_GPIO_Init+0x2e8>)
 8004958:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800495c:	6453      	str	r3, [r2, #68]	; 0x44
 800495e:	4b54      	ldr	r3, [pc, #336]	; (8004ab0 <HAL_GPIO_Init+0x2e8>)
 8004960:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004962:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004966:	60fb      	str	r3, [r7, #12]
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	4a52      	ldr	r2, [pc, #328]	; (8004ab4 <HAL_GPIO_Init+0x2ec>)
 800496c:	69fb      	ldr	r3, [r7, #28]
 800496e:	089b      	lsrs	r3, r3, #2
 8004970:	3302      	adds	r3, #2
 8004972:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004976:	61bb      	str	r3, [r7, #24]
 8004978:	69fb      	ldr	r3, [r7, #28]
 800497a:	f003 0303 	and.w	r3, r3, #3
 800497e:	009b      	lsls	r3, r3, #2
 8004980:	220f      	movs	r2, #15
 8004982:	fa02 f303 	lsl.w	r3, r2, r3
 8004986:	43db      	mvns	r3, r3
 8004988:	69ba      	ldr	r2, [r7, #24]
 800498a:	4013      	ands	r3, r2
 800498c:	61bb      	str	r3, [r7, #24]
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	4a49      	ldr	r2, [pc, #292]	; (8004ab8 <HAL_GPIO_Init+0x2f0>)
 8004992:	4293      	cmp	r3, r2
 8004994:	d019      	beq.n	80049ca <HAL_GPIO_Init+0x202>
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	4a48      	ldr	r2, [pc, #288]	; (8004abc <HAL_GPIO_Init+0x2f4>)
 800499a:	4293      	cmp	r3, r2
 800499c:	d013      	beq.n	80049c6 <HAL_GPIO_Init+0x1fe>
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	4a47      	ldr	r2, [pc, #284]	; (8004ac0 <HAL_GPIO_Init+0x2f8>)
 80049a2:	4293      	cmp	r3, r2
 80049a4:	d00d      	beq.n	80049c2 <HAL_GPIO_Init+0x1fa>
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	4a46      	ldr	r2, [pc, #280]	; (8004ac4 <HAL_GPIO_Init+0x2fc>)
 80049aa:	4293      	cmp	r3, r2
 80049ac:	d007      	beq.n	80049be <HAL_GPIO_Init+0x1f6>
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	4a45      	ldr	r2, [pc, #276]	; (8004ac8 <HAL_GPIO_Init+0x300>)
 80049b2:	4293      	cmp	r3, r2
 80049b4:	d101      	bne.n	80049ba <HAL_GPIO_Init+0x1f2>
 80049b6:	2304      	movs	r3, #4
 80049b8:	e008      	b.n	80049cc <HAL_GPIO_Init+0x204>
 80049ba:	2307      	movs	r3, #7
 80049bc:	e006      	b.n	80049cc <HAL_GPIO_Init+0x204>
 80049be:	2303      	movs	r3, #3
 80049c0:	e004      	b.n	80049cc <HAL_GPIO_Init+0x204>
 80049c2:	2302      	movs	r3, #2
 80049c4:	e002      	b.n	80049cc <HAL_GPIO_Init+0x204>
 80049c6:	2301      	movs	r3, #1
 80049c8:	e000      	b.n	80049cc <HAL_GPIO_Init+0x204>
 80049ca:	2300      	movs	r3, #0
 80049cc:	69fa      	ldr	r2, [r7, #28]
 80049ce:	f002 0203 	and.w	r2, r2, #3
 80049d2:	0092      	lsls	r2, r2, #2
 80049d4:	4093      	lsls	r3, r2
 80049d6:	69ba      	ldr	r2, [r7, #24]
 80049d8:	4313      	orrs	r3, r2
 80049da:	61bb      	str	r3, [r7, #24]
 80049dc:	4935      	ldr	r1, [pc, #212]	; (8004ab4 <HAL_GPIO_Init+0x2ec>)
 80049de:	69fb      	ldr	r3, [r7, #28]
 80049e0:	089b      	lsrs	r3, r3, #2
 80049e2:	3302      	adds	r3, #2
 80049e4:	69ba      	ldr	r2, [r7, #24]
 80049e6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80049ea:	4b38      	ldr	r3, [pc, #224]	; (8004acc <HAL_GPIO_Init+0x304>)
 80049ec:	689b      	ldr	r3, [r3, #8]
 80049ee:	61bb      	str	r3, [r7, #24]
 80049f0:	693b      	ldr	r3, [r7, #16]
 80049f2:	43db      	mvns	r3, r3
 80049f4:	69ba      	ldr	r2, [r7, #24]
 80049f6:	4013      	ands	r3, r2
 80049f8:	61bb      	str	r3, [r7, #24]
 80049fa:	683b      	ldr	r3, [r7, #0]
 80049fc:	685b      	ldr	r3, [r3, #4]
 80049fe:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004a02:	2b00      	cmp	r3, #0
 8004a04:	d003      	beq.n	8004a0e <HAL_GPIO_Init+0x246>
 8004a06:	69ba      	ldr	r2, [r7, #24]
 8004a08:	693b      	ldr	r3, [r7, #16]
 8004a0a:	4313      	orrs	r3, r2
 8004a0c:	61bb      	str	r3, [r7, #24]
 8004a0e:	4a2f      	ldr	r2, [pc, #188]	; (8004acc <HAL_GPIO_Init+0x304>)
 8004a10:	69bb      	ldr	r3, [r7, #24]
 8004a12:	6093      	str	r3, [r2, #8]
 8004a14:	4b2d      	ldr	r3, [pc, #180]	; (8004acc <HAL_GPIO_Init+0x304>)
 8004a16:	68db      	ldr	r3, [r3, #12]
 8004a18:	61bb      	str	r3, [r7, #24]
 8004a1a:	693b      	ldr	r3, [r7, #16]
 8004a1c:	43db      	mvns	r3, r3
 8004a1e:	69ba      	ldr	r2, [r7, #24]
 8004a20:	4013      	ands	r3, r2
 8004a22:	61bb      	str	r3, [r7, #24]
 8004a24:	683b      	ldr	r3, [r7, #0]
 8004a26:	685b      	ldr	r3, [r3, #4]
 8004a28:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004a2c:	2b00      	cmp	r3, #0
 8004a2e:	d003      	beq.n	8004a38 <HAL_GPIO_Init+0x270>
 8004a30:	69ba      	ldr	r2, [r7, #24]
 8004a32:	693b      	ldr	r3, [r7, #16]
 8004a34:	4313      	orrs	r3, r2
 8004a36:	61bb      	str	r3, [r7, #24]
 8004a38:	4a24      	ldr	r2, [pc, #144]	; (8004acc <HAL_GPIO_Init+0x304>)
 8004a3a:	69bb      	ldr	r3, [r7, #24]
 8004a3c:	60d3      	str	r3, [r2, #12]
 8004a3e:	4b23      	ldr	r3, [pc, #140]	; (8004acc <HAL_GPIO_Init+0x304>)
 8004a40:	685b      	ldr	r3, [r3, #4]
 8004a42:	61bb      	str	r3, [r7, #24]
 8004a44:	693b      	ldr	r3, [r7, #16]
 8004a46:	43db      	mvns	r3, r3
 8004a48:	69ba      	ldr	r2, [r7, #24]
 8004a4a:	4013      	ands	r3, r2
 8004a4c:	61bb      	str	r3, [r7, #24]
 8004a4e:	683b      	ldr	r3, [r7, #0]
 8004a50:	685b      	ldr	r3, [r3, #4]
 8004a52:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	d003      	beq.n	8004a62 <HAL_GPIO_Init+0x29a>
 8004a5a:	69ba      	ldr	r2, [r7, #24]
 8004a5c:	693b      	ldr	r3, [r7, #16]
 8004a5e:	4313      	orrs	r3, r2
 8004a60:	61bb      	str	r3, [r7, #24]
 8004a62:	4a1a      	ldr	r2, [pc, #104]	; (8004acc <HAL_GPIO_Init+0x304>)
 8004a64:	69bb      	ldr	r3, [r7, #24]
 8004a66:	6053      	str	r3, [r2, #4]
 8004a68:	4b18      	ldr	r3, [pc, #96]	; (8004acc <HAL_GPIO_Init+0x304>)
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	61bb      	str	r3, [r7, #24]
 8004a6e:	693b      	ldr	r3, [r7, #16]
 8004a70:	43db      	mvns	r3, r3
 8004a72:	69ba      	ldr	r2, [r7, #24]
 8004a74:	4013      	ands	r3, r2
 8004a76:	61bb      	str	r3, [r7, #24]
 8004a78:	683b      	ldr	r3, [r7, #0]
 8004a7a:	685b      	ldr	r3, [r3, #4]
 8004a7c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004a80:	2b00      	cmp	r3, #0
 8004a82:	d003      	beq.n	8004a8c <HAL_GPIO_Init+0x2c4>
 8004a84:	69ba      	ldr	r2, [r7, #24]
 8004a86:	693b      	ldr	r3, [r7, #16]
 8004a88:	4313      	orrs	r3, r2
 8004a8a:	61bb      	str	r3, [r7, #24]
 8004a8c:	4a0f      	ldr	r2, [pc, #60]	; (8004acc <HAL_GPIO_Init+0x304>)
 8004a8e:	69bb      	ldr	r3, [r7, #24]
 8004a90:	6013      	str	r3, [r2, #0]
 8004a92:	69fb      	ldr	r3, [r7, #28]
 8004a94:	3301      	adds	r3, #1
 8004a96:	61fb      	str	r3, [r7, #28]
 8004a98:	69fb      	ldr	r3, [r7, #28]
 8004a9a:	2b0f      	cmp	r3, #15
 8004a9c:	f67f aea2 	bls.w	80047e4 <HAL_GPIO_Init+0x1c>
 8004aa0:	bf00      	nop
 8004aa2:	bf00      	nop
 8004aa4:	3724      	adds	r7, #36	; 0x24
 8004aa6:	46bd      	mov	sp, r7
 8004aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aac:	4770      	bx	lr
 8004aae:	bf00      	nop
 8004ab0:	40023800 	.word	0x40023800
 8004ab4:	40013800 	.word	0x40013800
 8004ab8:	40020000 	.word	0x40020000
 8004abc:	40020400 	.word	0x40020400
 8004ac0:	40020800 	.word	0x40020800
 8004ac4:	40020c00 	.word	0x40020c00
 8004ac8:	40021000 	.word	0x40021000
 8004acc:	40013c00 	.word	0x40013c00

08004ad0 <HAL_PWR_EnterSTOPMode>:
 8004ad0:	b480      	push	{r7}
 8004ad2:	b083      	sub	sp, #12
 8004ad4:	af00      	add	r7, sp, #0
 8004ad6:	6078      	str	r0, [r7, #4]
 8004ad8:	460b      	mov	r3, r1
 8004ada:	70fb      	strb	r3, [r7, #3]
 8004adc:	4b10      	ldr	r3, [pc, #64]	; (8004b20 <HAL_PWR_EnterSTOPMode+0x50>)
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	f023 0203 	bic.w	r2, r3, #3
 8004ae4:	490e      	ldr	r1, [pc, #56]	; (8004b20 <HAL_PWR_EnterSTOPMode+0x50>)
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	4313      	orrs	r3, r2
 8004aea:	600b      	str	r3, [r1, #0]
 8004aec:	4b0d      	ldr	r3, [pc, #52]	; (8004b24 <HAL_PWR_EnterSTOPMode+0x54>)
 8004aee:	691b      	ldr	r3, [r3, #16]
 8004af0:	4a0c      	ldr	r2, [pc, #48]	; (8004b24 <HAL_PWR_EnterSTOPMode+0x54>)
 8004af2:	f043 0304 	orr.w	r3, r3, #4
 8004af6:	6113      	str	r3, [r2, #16]
 8004af8:	78fb      	ldrb	r3, [r7, #3]
 8004afa:	2b01      	cmp	r3, #1
 8004afc:	d101      	bne.n	8004b02 <HAL_PWR_EnterSTOPMode+0x32>
 8004afe:	bf30      	wfi
 8004b00:	e002      	b.n	8004b08 <HAL_PWR_EnterSTOPMode+0x38>
 8004b02:	bf40      	sev
 8004b04:	bf20      	wfe
 8004b06:	bf20      	wfe
 8004b08:	4b06      	ldr	r3, [pc, #24]	; (8004b24 <HAL_PWR_EnterSTOPMode+0x54>)
 8004b0a:	691b      	ldr	r3, [r3, #16]
 8004b0c:	4a05      	ldr	r2, [pc, #20]	; (8004b24 <HAL_PWR_EnterSTOPMode+0x54>)
 8004b0e:	f023 0304 	bic.w	r3, r3, #4
 8004b12:	6113      	str	r3, [r2, #16]
 8004b14:	bf00      	nop
 8004b16:	370c      	adds	r7, #12
 8004b18:	46bd      	mov	sp, r7
 8004b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b1e:	4770      	bx	lr
 8004b20:	40007000 	.word	0x40007000
 8004b24:	e000ed00 	.word	0xe000ed00

08004b28 <HAL_RCC_OscConfig>:
 8004b28:	b580      	push	{r7, lr}
 8004b2a:	b086      	sub	sp, #24
 8004b2c:	af00      	add	r7, sp, #0
 8004b2e:	6078      	str	r0, [r7, #4]
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d101      	bne.n	8004b3a <HAL_RCC_OscConfig+0x12>
 8004b36:	2301      	movs	r3, #1
 8004b38:	e267      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	681b      	ldr	r3, [r3, #0]
 8004b3e:	f003 0301 	and.w	r3, r3, #1
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d075      	beq.n	8004c32 <HAL_RCC_OscConfig+0x10a>
 8004b46:	4b88      	ldr	r3, [pc, #544]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004b48:	689b      	ldr	r3, [r3, #8]
 8004b4a:	f003 030c 	and.w	r3, r3, #12
 8004b4e:	2b04      	cmp	r3, #4
 8004b50:	d00c      	beq.n	8004b6c <HAL_RCC_OscConfig+0x44>
 8004b52:	4b85      	ldr	r3, [pc, #532]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004b54:	689b      	ldr	r3, [r3, #8]
 8004b56:	f003 030c 	and.w	r3, r3, #12
 8004b5a:	2b08      	cmp	r3, #8
 8004b5c:	d112      	bne.n	8004b84 <HAL_RCC_OscConfig+0x5c>
 8004b5e:	4b82      	ldr	r3, [pc, #520]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004b60:	685b      	ldr	r3, [r3, #4]
 8004b62:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004b66:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004b6a:	d10b      	bne.n	8004b84 <HAL_RCC_OscConfig+0x5c>
 8004b6c:	4b7e      	ldr	r3, [pc, #504]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b74:	2b00      	cmp	r3, #0
 8004b76:	d05b      	beq.n	8004c30 <HAL_RCC_OscConfig+0x108>
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	685b      	ldr	r3, [r3, #4]
 8004b7c:	2b00      	cmp	r3, #0
 8004b7e:	d157      	bne.n	8004c30 <HAL_RCC_OscConfig+0x108>
 8004b80:	2301      	movs	r3, #1
 8004b82:	e242      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	685b      	ldr	r3, [r3, #4]
 8004b88:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004b8c:	d106      	bne.n	8004b9c <HAL_RCC_OscConfig+0x74>
 8004b8e:	4b76      	ldr	r3, [pc, #472]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	4a75      	ldr	r2, [pc, #468]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004b94:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004b98:	6013      	str	r3, [r2, #0]
 8004b9a:	e01d      	b.n	8004bd8 <HAL_RCC_OscConfig+0xb0>
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	685b      	ldr	r3, [r3, #4]
 8004ba0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004ba4:	d10c      	bne.n	8004bc0 <HAL_RCC_OscConfig+0x98>
 8004ba6:	4b70      	ldr	r3, [pc, #448]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004ba8:	681b      	ldr	r3, [r3, #0]
 8004baa:	4a6f      	ldr	r2, [pc, #444]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bac:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004bb0:	6013      	str	r3, [r2, #0]
 8004bb2:	4b6d      	ldr	r3, [pc, #436]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bb4:	681b      	ldr	r3, [r3, #0]
 8004bb6:	4a6c      	ldr	r2, [pc, #432]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bb8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004bbc:	6013      	str	r3, [r2, #0]
 8004bbe:	e00b      	b.n	8004bd8 <HAL_RCC_OscConfig+0xb0>
 8004bc0:	4b69      	ldr	r3, [pc, #420]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	4a68      	ldr	r2, [pc, #416]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bc6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004bca:	6013      	str	r3, [r2, #0]
 8004bcc:	4b66      	ldr	r3, [pc, #408]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	4a65      	ldr	r2, [pc, #404]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bd2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004bd6:	6013      	str	r3, [r2, #0]
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	685b      	ldr	r3, [r3, #4]
 8004bdc:	2b00      	cmp	r3, #0
 8004bde:	d013      	beq.n	8004c08 <HAL_RCC_OscConfig+0xe0>
 8004be0:	f7ff f88e 	bl	8003d00 <HAL_GetTick>
 8004be4:	6138      	str	r0, [r7, #16]
 8004be6:	e008      	b.n	8004bfa <HAL_RCC_OscConfig+0xd2>
 8004be8:	f7ff f88a 	bl	8003d00 <HAL_GetTick>
 8004bec:	4602      	mov	r2, r0
 8004bee:	693b      	ldr	r3, [r7, #16]
 8004bf0:	1ad3      	subs	r3, r2, r3
 8004bf2:	2b64      	cmp	r3, #100	; 0x64
 8004bf4:	d901      	bls.n	8004bfa <HAL_RCC_OscConfig+0xd2>
 8004bf6:	2303      	movs	r3, #3
 8004bf8:	e207      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004bfa:	4b5b      	ldr	r3, [pc, #364]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c02:	2b00      	cmp	r3, #0
 8004c04:	d0f0      	beq.n	8004be8 <HAL_RCC_OscConfig+0xc0>
 8004c06:	e014      	b.n	8004c32 <HAL_RCC_OscConfig+0x10a>
 8004c08:	f7ff f87a 	bl	8003d00 <HAL_GetTick>
 8004c0c:	6138      	str	r0, [r7, #16]
 8004c0e:	e008      	b.n	8004c22 <HAL_RCC_OscConfig+0xfa>
 8004c10:	f7ff f876 	bl	8003d00 <HAL_GetTick>
 8004c14:	4602      	mov	r2, r0
 8004c16:	693b      	ldr	r3, [r7, #16]
 8004c18:	1ad3      	subs	r3, r2, r3
 8004c1a:	2b64      	cmp	r3, #100	; 0x64
 8004c1c:	d901      	bls.n	8004c22 <HAL_RCC_OscConfig+0xfa>
 8004c1e:	2303      	movs	r3, #3
 8004c20:	e1f3      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004c22:	4b51      	ldr	r3, [pc, #324]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004c24:	681b      	ldr	r3, [r3, #0]
 8004c26:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c2a:	2b00      	cmp	r3, #0
 8004c2c:	d1f0      	bne.n	8004c10 <HAL_RCC_OscConfig+0xe8>
 8004c2e:	e000      	b.n	8004c32 <HAL_RCC_OscConfig+0x10a>
 8004c30:	bf00      	nop
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	f003 0302 	and.w	r3, r3, #2
 8004c3a:	2b00      	cmp	r3, #0
 8004c3c:	d063      	beq.n	8004d06 <HAL_RCC_OscConfig+0x1de>
 8004c3e:	4b4a      	ldr	r3, [pc, #296]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004c40:	689b      	ldr	r3, [r3, #8]
 8004c42:	f003 030c 	and.w	r3, r3, #12
 8004c46:	2b00      	cmp	r3, #0
 8004c48:	d00b      	beq.n	8004c62 <HAL_RCC_OscConfig+0x13a>
 8004c4a:	4b47      	ldr	r3, [pc, #284]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004c4c:	689b      	ldr	r3, [r3, #8]
 8004c4e:	f003 030c 	and.w	r3, r3, #12
 8004c52:	2b08      	cmp	r3, #8
 8004c54:	d11c      	bne.n	8004c90 <HAL_RCC_OscConfig+0x168>
 8004c56:	4b44      	ldr	r3, [pc, #272]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004c58:	685b      	ldr	r3, [r3, #4]
 8004c5a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d116      	bne.n	8004c90 <HAL_RCC_OscConfig+0x168>
 8004c62:	4b41      	ldr	r3, [pc, #260]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	f003 0302 	and.w	r3, r3, #2
 8004c6a:	2b00      	cmp	r3, #0
 8004c6c:	d005      	beq.n	8004c7a <HAL_RCC_OscConfig+0x152>
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	68db      	ldr	r3, [r3, #12]
 8004c72:	2b01      	cmp	r3, #1
 8004c74:	d001      	beq.n	8004c7a <HAL_RCC_OscConfig+0x152>
 8004c76:	2301      	movs	r3, #1
 8004c78:	e1c7      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004c7a:	4b3b      	ldr	r3, [pc, #236]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	691b      	ldr	r3, [r3, #16]
 8004c86:	00db      	lsls	r3, r3, #3
 8004c88:	4937      	ldr	r1, [pc, #220]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004c8a:	4313      	orrs	r3, r2
 8004c8c:	600b      	str	r3, [r1, #0]
 8004c8e:	e03a      	b.n	8004d06 <HAL_RCC_OscConfig+0x1de>
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	68db      	ldr	r3, [r3, #12]
 8004c94:	2b00      	cmp	r3, #0
 8004c96:	d020      	beq.n	8004cda <HAL_RCC_OscConfig+0x1b2>
 8004c98:	4b34      	ldr	r3, [pc, #208]	; (8004d6c <HAL_RCC_OscConfig+0x244>)
 8004c9a:	2201      	movs	r2, #1
 8004c9c:	601a      	str	r2, [r3, #0]
 8004c9e:	f7ff f82f 	bl	8003d00 <HAL_GetTick>
 8004ca2:	6138      	str	r0, [r7, #16]
 8004ca4:	e008      	b.n	8004cb8 <HAL_RCC_OscConfig+0x190>
 8004ca6:	f7ff f82b 	bl	8003d00 <HAL_GetTick>
 8004caa:	4602      	mov	r2, r0
 8004cac:	693b      	ldr	r3, [r7, #16]
 8004cae:	1ad3      	subs	r3, r2, r3
 8004cb0:	2b02      	cmp	r3, #2
 8004cb2:	d901      	bls.n	8004cb8 <HAL_RCC_OscConfig+0x190>
 8004cb4:	2303      	movs	r3, #3
 8004cb6:	e1a8      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004cb8:	4b2b      	ldr	r3, [pc, #172]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	f003 0302 	and.w	r3, r3, #2
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	d0f0      	beq.n	8004ca6 <HAL_RCC_OscConfig+0x17e>
 8004cc4:	4b28      	ldr	r3, [pc, #160]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004cc6:	681b      	ldr	r3, [r3, #0]
 8004cc8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	691b      	ldr	r3, [r3, #16]
 8004cd0:	00db      	lsls	r3, r3, #3
 8004cd2:	4925      	ldr	r1, [pc, #148]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004cd4:	4313      	orrs	r3, r2
 8004cd6:	600b      	str	r3, [r1, #0]
 8004cd8:	e015      	b.n	8004d06 <HAL_RCC_OscConfig+0x1de>
 8004cda:	4b24      	ldr	r3, [pc, #144]	; (8004d6c <HAL_RCC_OscConfig+0x244>)
 8004cdc:	2200      	movs	r2, #0
 8004cde:	601a      	str	r2, [r3, #0]
 8004ce0:	f7ff f80e 	bl	8003d00 <HAL_GetTick>
 8004ce4:	6138      	str	r0, [r7, #16]
 8004ce6:	e008      	b.n	8004cfa <HAL_RCC_OscConfig+0x1d2>
 8004ce8:	f7ff f80a 	bl	8003d00 <HAL_GetTick>
 8004cec:	4602      	mov	r2, r0
 8004cee:	693b      	ldr	r3, [r7, #16]
 8004cf0:	1ad3      	subs	r3, r2, r3
 8004cf2:	2b02      	cmp	r3, #2
 8004cf4:	d901      	bls.n	8004cfa <HAL_RCC_OscConfig+0x1d2>
 8004cf6:	2303      	movs	r3, #3
 8004cf8:	e187      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004cfa:	4b1b      	ldr	r3, [pc, #108]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004cfc:	681b      	ldr	r3, [r3, #0]
 8004cfe:	f003 0302 	and.w	r3, r3, #2
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d1f0      	bne.n	8004ce8 <HAL_RCC_OscConfig+0x1c0>
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	f003 0308 	and.w	r3, r3, #8
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d036      	beq.n	8004d80 <HAL_RCC_OscConfig+0x258>
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	695b      	ldr	r3, [r3, #20]
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d016      	beq.n	8004d48 <HAL_RCC_OscConfig+0x220>
 8004d1a:	4b15      	ldr	r3, [pc, #84]	; (8004d70 <HAL_RCC_OscConfig+0x248>)
 8004d1c:	2201      	movs	r2, #1
 8004d1e:	601a      	str	r2, [r3, #0]
 8004d20:	f7fe ffee 	bl	8003d00 <HAL_GetTick>
 8004d24:	6138      	str	r0, [r7, #16]
 8004d26:	e008      	b.n	8004d3a <HAL_RCC_OscConfig+0x212>
 8004d28:	f7fe ffea 	bl	8003d00 <HAL_GetTick>
 8004d2c:	4602      	mov	r2, r0
 8004d2e:	693b      	ldr	r3, [r7, #16]
 8004d30:	1ad3      	subs	r3, r2, r3
 8004d32:	2b02      	cmp	r3, #2
 8004d34:	d901      	bls.n	8004d3a <HAL_RCC_OscConfig+0x212>
 8004d36:	2303      	movs	r3, #3
 8004d38:	e167      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004d3a:	4b0b      	ldr	r3, [pc, #44]	; (8004d68 <HAL_RCC_OscConfig+0x240>)
 8004d3c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004d3e:	f003 0302 	and.w	r3, r3, #2
 8004d42:	2b00      	cmp	r3, #0
 8004d44:	d0f0      	beq.n	8004d28 <HAL_RCC_OscConfig+0x200>
 8004d46:	e01b      	b.n	8004d80 <HAL_RCC_OscConfig+0x258>
 8004d48:	4b09      	ldr	r3, [pc, #36]	; (8004d70 <HAL_RCC_OscConfig+0x248>)
 8004d4a:	2200      	movs	r2, #0
 8004d4c:	601a      	str	r2, [r3, #0]
 8004d4e:	f7fe ffd7 	bl	8003d00 <HAL_GetTick>
 8004d52:	6138      	str	r0, [r7, #16]
 8004d54:	e00e      	b.n	8004d74 <HAL_RCC_OscConfig+0x24c>
 8004d56:	f7fe ffd3 	bl	8003d00 <HAL_GetTick>
 8004d5a:	4602      	mov	r2, r0
 8004d5c:	693b      	ldr	r3, [r7, #16]
 8004d5e:	1ad3      	subs	r3, r2, r3
 8004d60:	2b02      	cmp	r3, #2
 8004d62:	d907      	bls.n	8004d74 <HAL_RCC_OscConfig+0x24c>
 8004d64:	2303      	movs	r3, #3
 8004d66:	e150      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004d68:	40023800 	.word	0x40023800
 8004d6c:	42470000 	.word	0x42470000
 8004d70:	42470e80 	.word	0x42470e80
 8004d74:	4b88      	ldr	r3, [pc, #544]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004d76:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004d78:	f003 0302 	and.w	r3, r3, #2
 8004d7c:	2b00      	cmp	r3, #0
 8004d7e:	d1ea      	bne.n	8004d56 <HAL_RCC_OscConfig+0x22e>
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	f003 0304 	and.w	r3, r3, #4
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	f000 8097 	beq.w	8004ebc <HAL_RCC_OscConfig+0x394>
 8004d8e:	2300      	movs	r3, #0
 8004d90:	75fb      	strb	r3, [r7, #23]
 8004d92:	4b81      	ldr	r3, [pc, #516]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004d94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004d9a:	2b00      	cmp	r3, #0
 8004d9c:	d10f      	bne.n	8004dbe <HAL_RCC_OscConfig+0x296>
 8004d9e:	2300      	movs	r3, #0
 8004da0:	60bb      	str	r3, [r7, #8]
 8004da2:	4b7d      	ldr	r3, [pc, #500]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004da6:	4a7c      	ldr	r2, [pc, #496]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004da8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004dac:	6413      	str	r3, [r2, #64]	; 0x40
 8004dae:	4b7a      	ldr	r3, [pc, #488]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004db0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004db2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004db6:	60bb      	str	r3, [r7, #8]
 8004db8:	68bb      	ldr	r3, [r7, #8]
 8004dba:	2301      	movs	r3, #1
 8004dbc:	75fb      	strb	r3, [r7, #23]
 8004dbe:	4b77      	ldr	r3, [pc, #476]	; (8004f9c <HAL_RCC_OscConfig+0x474>)
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	d118      	bne.n	8004dfc <HAL_RCC_OscConfig+0x2d4>
 8004dca:	4b74      	ldr	r3, [pc, #464]	; (8004f9c <HAL_RCC_OscConfig+0x474>)
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	4a73      	ldr	r2, [pc, #460]	; (8004f9c <HAL_RCC_OscConfig+0x474>)
 8004dd0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004dd4:	6013      	str	r3, [r2, #0]
 8004dd6:	f7fe ff93 	bl	8003d00 <HAL_GetTick>
 8004dda:	6138      	str	r0, [r7, #16]
 8004ddc:	e008      	b.n	8004df0 <HAL_RCC_OscConfig+0x2c8>
 8004dde:	f7fe ff8f 	bl	8003d00 <HAL_GetTick>
 8004de2:	4602      	mov	r2, r0
 8004de4:	693b      	ldr	r3, [r7, #16]
 8004de6:	1ad3      	subs	r3, r2, r3
 8004de8:	2b02      	cmp	r3, #2
 8004dea:	d901      	bls.n	8004df0 <HAL_RCC_OscConfig+0x2c8>
 8004dec:	2303      	movs	r3, #3
 8004dee:	e10c      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004df0:	4b6a      	ldr	r3, [pc, #424]	; (8004f9c <HAL_RCC_OscConfig+0x474>)
 8004df2:	681b      	ldr	r3, [r3, #0]
 8004df4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004df8:	2b00      	cmp	r3, #0
 8004dfa:	d0f0      	beq.n	8004dde <HAL_RCC_OscConfig+0x2b6>
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	689b      	ldr	r3, [r3, #8]
 8004e00:	2b01      	cmp	r3, #1
 8004e02:	d106      	bne.n	8004e12 <HAL_RCC_OscConfig+0x2ea>
 8004e04:	4b64      	ldr	r3, [pc, #400]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e06:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e08:	4a63      	ldr	r2, [pc, #396]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e0a:	f043 0301 	orr.w	r3, r3, #1
 8004e0e:	6713      	str	r3, [r2, #112]	; 0x70
 8004e10:	e01c      	b.n	8004e4c <HAL_RCC_OscConfig+0x324>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	689b      	ldr	r3, [r3, #8]
 8004e16:	2b05      	cmp	r3, #5
 8004e18:	d10c      	bne.n	8004e34 <HAL_RCC_OscConfig+0x30c>
 8004e1a:	4b5f      	ldr	r3, [pc, #380]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e1c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e1e:	4a5e      	ldr	r2, [pc, #376]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e20:	f043 0304 	orr.w	r3, r3, #4
 8004e24:	6713      	str	r3, [r2, #112]	; 0x70
 8004e26:	4b5c      	ldr	r3, [pc, #368]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e28:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e2a:	4a5b      	ldr	r2, [pc, #364]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e2c:	f043 0301 	orr.w	r3, r3, #1
 8004e30:	6713      	str	r3, [r2, #112]	; 0x70
 8004e32:	e00b      	b.n	8004e4c <HAL_RCC_OscConfig+0x324>
 8004e34:	4b58      	ldr	r3, [pc, #352]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e36:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e38:	4a57      	ldr	r2, [pc, #348]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e3a:	f023 0301 	bic.w	r3, r3, #1
 8004e3e:	6713      	str	r3, [r2, #112]	; 0x70
 8004e40:	4b55      	ldr	r3, [pc, #340]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e42:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e44:	4a54      	ldr	r2, [pc, #336]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e46:	f023 0304 	bic.w	r3, r3, #4
 8004e4a:	6713      	str	r3, [r2, #112]	; 0x70
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	689b      	ldr	r3, [r3, #8]
 8004e50:	2b00      	cmp	r3, #0
 8004e52:	d015      	beq.n	8004e80 <HAL_RCC_OscConfig+0x358>
 8004e54:	f7fe ff54 	bl	8003d00 <HAL_GetTick>
 8004e58:	6138      	str	r0, [r7, #16]
 8004e5a:	e00a      	b.n	8004e72 <HAL_RCC_OscConfig+0x34a>
 8004e5c:	f7fe ff50 	bl	8003d00 <HAL_GetTick>
 8004e60:	4602      	mov	r2, r0
 8004e62:	693b      	ldr	r3, [r7, #16]
 8004e64:	1ad3      	subs	r3, r2, r3
 8004e66:	f241 3288 	movw	r2, #5000	; 0x1388
 8004e6a:	4293      	cmp	r3, r2
 8004e6c:	d901      	bls.n	8004e72 <HAL_RCC_OscConfig+0x34a>
 8004e6e:	2303      	movs	r3, #3
 8004e70:	e0cb      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004e72:	4b49      	ldr	r3, [pc, #292]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004e74:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e76:	f003 0302 	and.w	r3, r3, #2
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d0ee      	beq.n	8004e5c <HAL_RCC_OscConfig+0x334>
 8004e7e:	e014      	b.n	8004eaa <HAL_RCC_OscConfig+0x382>
 8004e80:	f7fe ff3e 	bl	8003d00 <HAL_GetTick>
 8004e84:	6138      	str	r0, [r7, #16]
 8004e86:	e00a      	b.n	8004e9e <HAL_RCC_OscConfig+0x376>
 8004e88:	f7fe ff3a 	bl	8003d00 <HAL_GetTick>
 8004e8c:	4602      	mov	r2, r0
 8004e8e:	693b      	ldr	r3, [r7, #16]
 8004e90:	1ad3      	subs	r3, r2, r3
 8004e92:	f241 3288 	movw	r2, #5000	; 0x1388
 8004e96:	4293      	cmp	r3, r2
 8004e98:	d901      	bls.n	8004e9e <HAL_RCC_OscConfig+0x376>
 8004e9a:	2303      	movs	r3, #3
 8004e9c:	e0b5      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004e9e:	4b3e      	ldr	r3, [pc, #248]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004ea0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ea2:	f003 0302 	and.w	r3, r3, #2
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d1ee      	bne.n	8004e88 <HAL_RCC_OscConfig+0x360>
 8004eaa:	7dfb      	ldrb	r3, [r7, #23]
 8004eac:	2b01      	cmp	r3, #1
 8004eae:	d105      	bne.n	8004ebc <HAL_RCC_OscConfig+0x394>
 8004eb0:	4b39      	ldr	r3, [pc, #228]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004eb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eb4:	4a38      	ldr	r2, [pc, #224]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004eb6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004eba:	6413      	str	r3, [r2, #64]	; 0x40
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	699b      	ldr	r3, [r3, #24]
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	f000 80a1 	beq.w	8005008 <HAL_RCC_OscConfig+0x4e0>
 8004ec6:	4b34      	ldr	r3, [pc, #208]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004ec8:	689b      	ldr	r3, [r3, #8]
 8004eca:	f003 030c 	and.w	r3, r3, #12
 8004ece:	2b08      	cmp	r3, #8
 8004ed0:	d05c      	beq.n	8004f8c <HAL_RCC_OscConfig+0x464>
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	699b      	ldr	r3, [r3, #24]
 8004ed6:	2b02      	cmp	r3, #2
 8004ed8:	d141      	bne.n	8004f5e <HAL_RCC_OscConfig+0x436>
 8004eda:	4b31      	ldr	r3, [pc, #196]	; (8004fa0 <HAL_RCC_OscConfig+0x478>)
 8004edc:	2200      	movs	r2, #0
 8004ede:	601a      	str	r2, [r3, #0]
 8004ee0:	f7fe ff0e 	bl	8003d00 <HAL_GetTick>
 8004ee4:	6138      	str	r0, [r7, #16]
 8004ee6:	e008      	b.n	8004efa <HAL_RCC_OscConfig+0x3d2>
 8004ee8:	f7fe ff0a 	bl	8003d00 <HAL_GetTick>
 8004eec:	4602      	mov	r2, r0
 8004eee:	693b      	ldr	r3, [r7, #16]
 8004ef0:	1ad3      	subs	r3, r2, r3
 8004ef2:	2b02      	cmp	r3, #2
 8004ef4:	d901      	bls.n	8004efa <HAL_RCC_OscConfig+0x3d2>
 8004ef6:	2303      	movs	r3, #3
 8004ef8:	e087      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004efa:	4b27      	ldr	r3, [pc, #156]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d1f0      	bne.n	8004ee8 <HAL_RCC_OscConfig+0x3c0>
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	69da      	ldr	r2, [r3, #28]
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	6a1b      	ldr	r3, [r3, #32]
 8004f0e:	431a      	orrs	r2, r3
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f14:	019b      	lsls	r3, r3, #6
 8004f16:	431a      	orrs	r2, r3
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f1c:	085b      	lsrs	r3, r3, #1
 8004f1e:	3b01      	subs	r3, #1
 8004f20:	041b      	lsls	r3, r3, #16
 8004f22:	431a      	orrs	r2, r3
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f28:	061b      	lsls	r3, r3, #24
 8004f2a:	491b      	ldr	r1, [pc, #108]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004f2c:	4313      	orrs	r3, r2
 8004f2e:	604b      	str	r3, [r1, #4]
 8004f30:	4b1b      	ldr	r3, [pc, #108]	; (8004fa0 <HAL_RCC_OscConfig+0x478>)
 8004f32:	2201      	movs	r2, #1
 8004f34:	601a      	str	r2, [r3, #0]
 8004f36:	f7fe fee3 	bl	8003d00 <HAL_GetTick>
 8004f3a:	6138      	str	r0, [r7, #16]
 8004f3c:	e008      	b.n	8004f50 <HAL_RCC_OscConfig+0x428>
 8004f3e:	f7fe fedf 	bl	8003d00 <HAL_GetTick>
 8004f42:	4602      	mov	r2, r0
 8004f44:	693b      	ldr	r3, [r7, #16]
 8004f46:	1ad3      	subs	r3, r2, r3
 8004f48:	2b02      	cmp	r3, #2
 8004f4a:	d901      	bls.n	8004f50 <HAL_RCC_OscConfig+0x428>
 8004f4c:	2303      	movs	r3, #3
 8004f4e:	e05c      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004f50:	4b11      	ldr	r3, [pc, #68]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f58:	2b00      	cmp	r3, #0
 8004f5a:	d0f0      	beq.n	8004f3e <HAL_RCC_OscConfig+0x416>
 8004f5c:	e054      	b.n	8005008 <HAL_RCC_OscConfig+0x4e0>
 8004f5e:	4b10      	ldr	r3, [pc, #64]	; (8004fa0 <HAL_RCC_OscConfig+0x478>)
 8004f60:	2200      	movs	r2, #0
 8004f62:	601a      	str	r2, [r3, #0]
 8004f64:	f7fe fecc 	bl	8003d00 <HAL_GetTick>
 8004f68:	6138      	str	r0, [r7, #16]
 8004f6a:	e008      	b.n	8004f7e <HAL_RCC_OscConfig+0x456>
 8004f6c:	f7fe fec8 	bl	8003d00 <HAL_GetTick>
 8004f70:	4602      	mov	r2, r0
 8004f72:	693b      	ldr	r3, [r7, #16]
 8004f74:	1ad3      	subs	r3, r2, r3
 8004f76:	2b02      	cmp	r3, #2
 8004f78:	d901      	bls.n	8004f7e <HAL_RCC_OscConfig+0x456>
 8004f7a:	2303      	movs	r3, #3
 8004f7c:	e045      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004f7e:	4b06      	ldr	r3, [pc, #24]	; (8004f98 <HAL_RCC_OscConfig+0x470>)
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d1f0      	bne.n	8004f6c <HAL_RCC_OscConfig+0x444>
 8004f8a:	e03d      	b.n	8005008 <HAL_RCC_OscConfig+0x4e0>
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	699b      	ldr	r3, [r3, #24]
 8004f90:	2b01      	cmp	r3, #1
 8004f92:	d107      	bne.n	8004fa4 <HAL_RCC_OscConfig+0x47c>
 8004f94:	2301      	movs	r3, #1
 8004f96:	e038      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8004f98:	40023800 	.word	0x40023800
 8004f9c:	40007000 	.word	0x40007000
 8004fa0:	42470060 	.word	0x42470060
 8004fa4:	4b1b      	ldr	r3, [pc, #108]	; (8005014 <HAL_RCC_OscConfig+0x4ec>)
 8004fa6:	685b      	ldr	r3, [r3, #4]
 8004fa8:	60fb      	str	r3, [r7, #12]
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	699b      	ldr	r3, [r3, #24]
 8004fae:	2b01      	cmp	r3, #1
 8004fb0:	d028      	beq.n	8005004 <HAL_RCC_OscConfig+0x4dc>
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	69db      	ldr	r3, [r3, #28]
 8004fbc:	429a      	cmp	r2, r3
 8004fbe:	d121      	bne.n	8005004 <HAL_RCC_OscConfig+0x4dc>
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	6a1b      	ldr	r3, [r3, #32]
 8004fca:	429a      	cmp	r2, r3
 8004fcc:	d11a      	bne.n	8005004 <HAL_RCC_OscConfig+0x4dc>
 8004fce:	68fa      	ldr	r2, [r7, #12]
 8004fd0:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004fd4:	4013      	ands	r3, r2
 8004fd6:	687a      	ldr	r2, [r7, #4]
 8004fd8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8004fda:	0192      	lsls	r2, r2, #6
 8004fdc:	4293      	cmp	r3, r2
 8004fde:	d111      	bne.n	8005004 <HAL_RCC_OscConfig+0x4dc>
 8004fe0:	68fb      	ldr	r3, [r7, #12]
 8004fe2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004fea:	085b      	lsrs	r3, r3, #1
 8004fec:	3b01      	subs	r3, #1
 8004fee:	041b      	lsls	r3, r3, #16
 8004ff0:	429a      	cmp	r2, r3
 8004ff2:	d107      	bne.n	8005004 <HAL_RCC_OscConfig+0x4dc>
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ffe:	061b      	lsls	r3, r3, #24
 8005000:	429a      	cmp	r2, r3
 8005002:	d001      	beq.n	8005008 <HAL_RCC_OscConfig+0x4e0>
 8005004:	2301      	movs	r3, #1
 8005006:	e000      	b.n	800500a <HAL_RCC_OscConfig+0x4e2>
 8005008:	2300      	movs	r3, #0
 800500a:	4618      	mov	r0, r3
 800500c:	3718      	adds	r7, #24
 800500e:	46bd      	mov	sp, r7
 8005010:	bd80      	pop	{r7, pc}
 8005012:	bf00      	nop
 8005014:	40023800 	.word	0x40023800

08005018 <HAL_RCC_ClockConfig>:
 8005018:	b580      	push	{r7, lr}
 800501a:	b084      	sub	sp, #16
 800501c:	af00      	add	r7, sp, #0
 800501e:	6078      	str	r0, [r7, #4]
 8005020:	6039      	str	r1, [r7, #0]
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	2b00      	cmp	r3, #0
 8005026:	d101      	bne.n	800502c <HAL_RCC_ClockConfig+0x14>
 8005028:	2301      	movs	r3, #1
 800502a:	e0cc      	b.n	80051c6 <HAL_RCC_ClockConfig+0x1ae>
 800502c:	4b68      	ldr	r3, [pc, #416]	; (80051d0 <HAL_RCC_ClockConfig+0x1b8>)
 800502e:	681b      	ldr	r3, [r3, #0]
 8005030:	f003 0307 	and.w	r3, r3, #7
 8005034:	683a      	ldr	r2, [r7, #0]
 8005036:	429a      	cmp	r2, r3
 8005038:	d90c      	bls.n	8005054 <HAL_RCC_ClockConfig+0x3c>
 800503a:	4b65      	ldr	r3, [pc, #404]	; (80051d0 <HAL_RCC_ClockConfig+0x1b8>)
 800503c:	683a      	ldr	r2, [r7, #0]
 800503e:	b2d2      	uxtb	r2, r2
 8005040:	701a      	strb	r2, [r3, #0]
 8005042:	4b63      	ldr	r3, [pc, #396]	; (80051d0 <HAL_RCC_ClockConfig+0x1b8>)
 8005044:	681b      	ldr	r3, [r3, #0]
 8005046:	f003 0307 	and.w	r3, r3, #7
 800504a:	683a      	ldr	r2, [r7, #0]
 800504c:	429a      	cmp	r2, r3
 800504e:	d001      	beq.n	8005054 <HAL_RCC_ClockConfig+0x3c>
 8005050:	2301      	movs	r3, #1
 8005052:	e0b8      	b.n	80051c6 <HAL_RCC_ClockConfig+0x1ae>
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	681b      	ldr	r3, [r3, #0]
 8005058:	f003 0302 	and.w	r3, r3, #2
 800505c:	2b00      	cmp	r3, #0
 800505e:	d020      	beq.n	80050a2 <HAL_RCC_ClockConfig+0x8a>
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	f003 0304 	and.w	r3, r3, #4
 8005068:	2b00      	cmp	r3, #0
 800506a:	d005      	beq.n	8005078 <HAL_RCC_ClockConfig+0x60>
 800506c:	4b59      	ldr	r3, [pc, #356]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 800506e:	689b      	ldr	r3, [r3, #8]
 8005070:	4a58      	ldr	r2, [pc, #352]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 8005072:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8005076:	6093      	str	r3, [r2, #8]
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	681b      	ldr	r3, [r3, #0]
 800507c:	f003 0308 	and.w	r3, r3, #8
 8005080:	2b00      	cmp	r3, #0
 8005082:	d005      	beq.n	8005090 <HAL_RCC_ClockConfig+0x78>
 8005084:	4b53      	ldr	r3, [pc, #332]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 8005086:	689b      	ldr	r3, [r3, #8]
 8005088:	4a52      	ldr	r2, [pc, #328]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 800508a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800508e:	6093      	str	r3, [r2, #8]
 8005090:	4b50      	ldr	r3, [pc, #320]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 8005092:	689b      	ldr	r3, [r3, #8]
 8005094:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	689b      	ldr	r3, [r3, #8]
 800509c:	494d      	ldr	r1, [pc, #308]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 800509e:	4313      	orrs	r3, r2
 80050a0:	608b      	str	r3, [r1, #8]
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	681b      	ldr	r3, [r3, #0]
 80050a6:	f003 0301 	and.w	r3, r3, #1
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	d044      	beq.n	8005138 <HAL_RCC_ClockConfig+0x120>
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	685b      	ldr	r3, [r3, #4]
 80050b2:	2b01      	cmp	r3, #1
 80050b4:	d107      	bne.n	80050c6 <HAL_RCC_ClockConfig+0xae>
 80050b6:	4b47      	ldr	r3, [pc, #284]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80050be:	2b00      	cmp	r3, #0
 80050c0:	d119      	bne.n	80050f6 <HAL_RCC_ClockConfig+0xde>
 80050c2:	2301      	movs	r3, #1
 80050c4:	e07f      	b.n	80051c6 <HAL_RCC_ClockConfig+0x1ae>
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	685b      	ldr	r3, [r3, #4]
 80050ca:	2b02      	cmp	r3, #2
 80050cc:	d003      	beq.n	80050d6 <HAL_RCC_ClockConfig+0xbe>
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	685b      	ldr	r3, [r3, #4]
 80050d2:	2b03      	cmp	r3, #3
 80050d4:	d107      	bne.n	80050e6 <HAL_RCC_ClockConfig+0xce>
 80050d6:	4b3f      	ldr	r3, [pc, #252]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80050de:	2b00      	cmp	r3, #0
 80050e0:	d109      	bne.n	80050f6 <HAL_RCC_ClockConfig+0xde>
 80050e2:	2301      	movs	r3, #1
 80050e4:	e06f      	b.n	80051c6 <HAL_RCC_ClockConfig+0x1ae>
 80050e6:	4b3b      	ldr	r3, [pc, #236]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 80050e8:	681b      	ldr	r3, [r3, #0]
 80050ea:	f003 0302 	and.w	r3, r3, #2
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d101      	bne.n	80050f6 <HAL_RCC_ClockConfig+0xde>
 80050f2:	2301      	movs	r3, #1
 80050f4:	e067      	b.n	80051c6 <HAL_RCC_ClockConfig+0x1ae>
 80050f6:	4b37      	ldr	r3, [pc, #220]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 80050f8:	689b      	ldr	r3, [r3, #8]
 80050fa:	f023 0203 	bic.w	r2, r3, #3
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	685b      	ldr	r3, [r3, #4]
 8005102:	4934      	ldr	r1, [pc, #208]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 8005104:	4313      	orrs	r3, r2
 8005106:	608b      	str	r3, [r1, #8]
 8005108:	f7fe fdfa 	bl	8003d00 <HAL_GetTick>
 800510c:	60f8      	str	r0, [r7, #12]
 800510e:	e00a      	b.n	8005126 <HAL_RCC_ClockConfig+0x10e>
 8005110:	f7fe fdf6 	bl	8003d00 <HAL_GetTick>
 8005114:	4602      	mov	r2, r0
 8005116:	68fb      	ldr	r3, [r7, #12]
 8005118:	1ad3      	subs	r3, r2, r3
 800511a:	f241 3288 	movw	r2, #5000	; 0x1388
 800511e:	4293      	cmp	r3, r2
 8005120:	d901      	bls.n	8005126 <HAL_RCC_ClockConfig+0x10e>
 8005122:	2303      	movs	r3, #3
 8005124:	e04f      	b.n	80051c6 <HAL_RCC_ClockConfig+0x1ae>
 8005126:	4b2b      	ldr	r3, [pc, #172]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 8005128:	689b      	ldr	r3, [r3, #8]
 800512a:	f003 020c 	and.w	r2, r3, #12
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	685b      	ldr	r3, [r3, #4]
 8005132:	009b      	lsls	r3, r3, #2
 8005134:	429a      	cmp	r2, r3
 8005136:	d1eb      	bne.n	8005110 <HAL_RCC_ClockConfig+0xf8>
 8005138:	4b25      	ldr	r3, [pc, #148]	; (80051d0 <HAL_RCC_ClockConfig+0x1b8>)
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	f003 0307 	and.w	r3, r3, #7
 8005140:	683a      	ldr	r2, [r7, #0]
 8005142:	429a      	cmp	r2, r3
 8005144:	d20c      	bcs.n	8005160 <HAL_RCC_ClockConfig+0x148>
 8005146:	4b22      	ldr	r3, [pc, #136]	; (80051d0 <HAL_RCC_ClockConfig+0x1b8>)
 8005148:	683a      	ldr	r2, [r7, #0]
 800514a:	b2d2      	uxtb	r2, r2
 800514c:	701a      	strb	r2, [r3, #0]
 800514e:	4b20      	ldr	r3, [pc, #128]	; (80051d0 <HAL_RCC_ClockConfig+0x1b8>)
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f003 0307 	and.w	r3, r3, #7
 8005156:	683a      	ldr	r2, [r7, #0]
 8005158:	429a      	cmp	r2, r3
 800515a:	d001      	beq.n	8005160 <HAL_RCC_ClockConfig+0x148>
 800515c:	2301      	movs	r3, #1
 800515e:	e032      	b.n	80051c6 <HAL_RCC_ClockConfig+0x1ae>
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	f003 0304 	and.w	r3, r3, #4
 8005168:	2b00      	cmp	r3, #0
 800516a:	d008      	beq.n	800517e <HAL_RCC_ClockConfig+0x166>
 800516c:	4b19      	ldr	r3, [pc, #100]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 800516e:	689b      	ldr	r3, [r3, #8]
 8005170:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	68db      	ldr	r3, [r3, #12]
 8005178:	4916      	ldr	r1, [pc, #88]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 800517a:	4313      	orrs	r3, r2
 800517c:	608b      	str	r3, [r1, #8]
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	f003 0308 	and.w	r3, r3, #8
 8005186:	2b00      	cmp	r3, #0
 8005188:	d009      	beq.n	800519e <HAL_RCC_ClockConfig+0x186>
 800518a:	4b12      	ldr	r3, [pc, #72]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 800518c:	689b      	ldr	r3, [r3, #8]
 800518e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	691b      	ldr	r3, [r3, #16]
 8005196:	00db      	lsls	r3, r3, #3
 8005198:	490e      	ldr	r1, [pc, #56]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 800519a:	4313      	orrs	r3, r2
 800519c:	608b      	str	r3, [r1, #8]
 800519e:	f000 f821 	bl	80051e4 <HAL_RCC_GetSysClockFreq>
 80051a2:	4602      	mov	r2, r0
 80051a4:	4b0b      	ldr	r3, [pc, #44]	; (80051d4 <HAL_RCC_ClockConfig+0x1bc>)
 80051a6:	689b      	ldr	r3, [r3, #8]
 80051a8:	091b      	lsrs	r3, r3, #4
 80051aa:	f003 030f 	and.w	r3, r3, #15
 80051ae:	490a      	ldr	r1, [pc, #40]	; (80051d8 <HAL_RCC_ClockConfig+0x1c0>)
 80051b0:	5ccb      	ldrb	r3, [r1, r3]
 80051b2:	fa22 f303 	lsr.w	r3, r2, r3
 80051b6:	4a09      	ldr	r2, [pc, #36]	; (80051dc <HAL_RCC_ClockConfig+0x1c4>)
 80051b8:	6013      	str	r3, [r2, #0]
 80051ba:	4b09      	ldr	r3, [pc, #36]	; (80051e0 <HAL_RCC_ClockConfig+0x1c8>)
 80051bc:	681b      	ldr	r3, [r3, #0]
 80051be:	4618      	mov	r0, r3
 80051c0:	f7fe fd5a 	bl	8003c78 <HAL_InitTick>
 80051c4:	2300      	movs	r3, #0
 80051c6:	4618      	mov	r0, r3
 80051c8:	3710      	adds	r7, #16
 80051ca:	46bd      	mov	sp, r7
 80051cc:	bd80      	pop	{r7, pc}
 80051ce:	bf00      	nop
 80051d0:	40023c00 	.word	0x40023c00
 80051d4:	40023800 	.word	0x40023800
 80051d8:	0800f9f0 	.word	0x0800f9f0
 80051dc:	20000000 	.word	0x20000000
 80051e0:	20000004 	.word	0x20000004

080051e4 <HAL_RCC_GetSysClockFreq>:
 80051e4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80051e8:	b090      	sub	sp, #64	; 0x40
 80051ea:	af00      	add	r7, sp, #0
 80051ec:	2300      	movs	r3, #0
 80051ee:	637b      	str	r3, [r7, #52]	; 0x34
 80051f0:	2300      	movs	r3, #0
 80051f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80051f4:	2300      	movs	r3, #0
 80051f6:	633b      	str	r3, [r7, #48]	; 0x30
 80051f8:	2300      	movs	r3, #0
 80051fa:	63bb      	str	r3, [r7, #56]	; 0x38
 80051fc:	4b59      	ldr	r3, [pc, #356]	; (8005364 <HAL_RCC_GetSysClockFreq+0x180>)
 80051fe:	689b      	ldr	r3, [r3, #8]
 8005200:	f003 030c 	and.w	r3, r3, #12
 8005204:	2b08      	cmp	r3, #8
 8005206:	d00d      	beq.n	8005224 <HAL_RCC_GetSysClockFreq+0x40>
 8005208:	2b08      	cmp	r3, #8
 800520a:	f200 80a1 	bhi.w	8005350 <HAL_RCC_GetSysClockFreq+0x16c>
 800520e:	2b00      	cmp	r3, #0
 8005210:	d002      	beq.n	8005218 <HAL_RCC_GetSysClockFreq+0x34>
 8005212:	2b04      	cmp	r3, #4
 8005214:	d003      	beq.n	800521e <HAL_RCC_GetSysClockFreq+0x3a>
 8005216:	e09b      	b.n	8005350 <HAL_RCC_GetSysClockFreq+0x16c>
 8005218:	4b53      	ldr	r3, [pc, #332]	; (8005368 <HAL_RCC_GetSysClockFreq+0x184>)
 800521a:	63bb      	str	r3, [r7, #56]	; 0x38
 800521c:	e09b      	b.n	8005356 <HAL_RCC_GetSysClockFreq+0x172>
 800521e:	4b53      	ldr	r3, [pc, #332]	; (800536c <HAL_RCC_GetSysClockFreq+0x188>)
 8005220:	63bb      	str	r3, [r7, #56]	; 0x38
 8005222:	e098      	b.n	8005356 <HAL_RCC_GetSysClockFreq+0x172>
 8005224:	4b4f      	ldr	r3, [pc, #316]	; (8005364 <HAL_RCC_GetSysClockFreq+0x180>)
 8005226:	685b      	ldr	r3, [r3, #4]
 8005228:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800522c:	637b      	str	r3, [r7, #52]	; 0x34
 800522e:	4b4d      	ldr	r3, [pc, #308]	; (8005364 <HAL_RCC_GetSysClockFreq+0x180>)
 8005230:	685b      	ldr	r3, [r3, #4]
 8005232:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005236:	2b00      	cmp	r3, #0
 8005238:	d028      	beq.n	800528c <HAL_RCC_GetSysClockFreq+0xa8>
 800523a:	4b4a      	ldr	r3, [pc, #296]	; (8005364 <HAL_RCC_GetSysClockFreq+0x180>)
 800523c:	685b      	ldr	r3, [r3, #4]
 800523e:	099b      	lsrs	r3, r3, #6
 8005240:	2200      	movs	r2, #0
 8005242:	623b      	str	r3, [r7, #32]
 8005244:	627a      	str	r2, [r7, #36]	; 0x24
 8005246:	6a3b      	ldr	r3, [r7, #32]
 8005248:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800524c:	2100      	movs	r1, #0
 800524e:	4b47      	ldr	r3, [pc, #284]	; (800536c <HAL_RCC_GetSysClockFreq+0x188>)
 8005250:	fb03 f201 	mul.w	r2, r3, r1
 8005254:	2300      	movs	r3, #0
 8005256:	fb00 f303 	mul.w	r3, r0, r3
 800525a:	4413      	add	r3, r2
 800525c:	4a43      	ldr	r2, [pc, #268]	; (800536c <HAL_RCC_GetSysClockFreq+0x188>)
 800525e:	fba0 1202 	umull	r1, r2, r0, r2
 8005262:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005264:	460a      	mov	r2, r1
 8005266:	62ba      	str	r2, [r7, #40]	; 0x28
 8005268:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800526a:	4413      	add	r3, r2
 800526c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800526e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005270:	2200      	movs	r2, #0
 8005272:	61bb      	str	r3, [r7, #24]
 8005274:	61fa      	str	r2, [r7, #28]
 8005276:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800527a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800527e:	f7fb fd6b 	bl	8000d58 <__aeabi_uldivmod>
 8005282:	4602      	mov	r2, r0
 8005284:	460b      	mov	r3, r1
 8005286:	4613      	mov	r3, r2
 8005288:	63fb      	str	r3, [r7, #60]	; 0x3c
 800528a:	e053      	b.n	8005334 <HAL_RCC_GetSysClockFreq+0x150>
 800528c:	4b35      	ldr	r3, [pc, #212]	; (8005364 <HAL_RCC_GetSysClockFreq+0x180>)
 800528e:	685b      	ldr	r3, [r3, #4]
 8005290:	099b      	lsrs	r3, r3, #6
 8005292:	2200      	movs	r2, #0
 8005294:	613b      	str	r3, [r7, #16]
 8005296:	617a      	str	r2, [r7, #20]
 8005298:	693b      	ldr	r3, [r7, #16]
 800529a:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800529e:	f04f 0b00 	mov.w	fp, #0
 80052a2:	4652      	mov	r2, sl
 80052a4:	465b      	mov	r3, fp
 80052a6:	f04f 0000 	mov.w	r0, #0
 80052aa:	f04f 0100 	mov.w	r1, #0
 80052ae:	0159      	lsls	r1, r3, #5
 80052b0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80052b4:	0150      	lsls	r0, r2, #5
 80052b6:	4602      	mov	r2, r0
 80052b8:	460b      	mov	r3, r1
 80052ba:	ebb2 080a 	subs.w	r8, r2, sl
 80052be:	eb63 090b 	sbc.w	r9, r3, fp
 80052c2:	f04f 0200 	mov.w	r2, #0
 80052c6:	f04f 0300 	mov.w	r3, #0
 80052ca:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80052ce:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80052d2:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80052d6:	ebb2 0408 	subs.w	r4, r2, r8
 80052da:	eb63 0509 	sbc.w	r5, r3, r9
 80052de:	f04f 0200 	mov.w	r2, #0
 80052e2:	f04f 0300 	mov.w	r3, #0
 80052e6:	00eb      	lsls	r3, r5, #3
 80052e8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80052ec:	00e2      	lsls	r2, r4, #3
 80052ee:	4614      	mov	r4, r2
 80052f0:	461d      	mov	r5, r3
 80052f2:	eb14 030a 	adds.w	r3, r4, sl
 80052f6:	603b      	str	r3, [r7, #0]
 80052f8:	eb45 030b 	adc.w	r3, r5, fp
 80052fc:	607b      	str	r3, [r7, #4]
 80052fe:	f04f 0200 	mov.w	r2, #0
 8005302:	f04f 0300 	mov.w	r3, #0
 8005306:	e9d7 4500 	ldrd	r4, r5, [r7]
 800530a:	4629      	mov	r1, r5
 800530c:	028b      	lsls	r3, r1, #10
 800530e:	4621      	mov	r1, r4
 8005310:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005314:	4621      	mov	r1, r4
 8005316:	028a      	lsls	r2, r1, #10
 8005318:	4610      	mov	r0, r2
 800531a:	4619      	mov	r1, r3
 800531c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800531e:	2200      	movs	r2, #0
 8005320:	60bb      	str	r3, [r7, #8]
 8005322:	60fa      	str	r2, [r7, #12]
 8005324:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8005328:	f7fb fd16 	bl	8000d58 <__aeabi_uldivmod>
 800532c:	4602      	mov	r2, r0
 800532e:	460b      	mov	r3, r1
 8005330:	4613      	mov	r3, r2
 8005332:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005334:	4b0b      	ldr	r3, [pc, #44]	; (8005364 <HAL_RCC_GetSysClockFreq+0x180>)
 8005336:	685b      	ldr	r3, [r3, #4]
 8005338:	0c1b      	lsrs	r3, r3, #16
 800533a:	f003 0303 	and.w	r3, r3, #3
 800533e:	3301      	adds	r3, #1
 8005340:	005b      	lsls	r3, r3, #1
 8005342:	633b      	str	r3, [r7, #48]	; 0x30
 8005344:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8005346:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005348:	fbb2 f3f3 	udiv	r3, r2, r3
 800534c:	63bb      	str	r3, [r7, #56]	; 0x38
 800534e:	e002      	b.n	8005356 <HAL_RCC_GetSysClockFreq+0x172>
 8005350:	4b05      	ldr	r3, [pc, #20]	; (8005368 <HAL_RCC_GetSysClockFreq+0x184>)
 8005352:	63bb      	str	r3, [r7, #56]	; 0x38
 8005354:	bf00      	nop
 8005356:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005358:	4618      	mov	r0, r3
 800535a:	3740      	adds	r7, #64	; 0x40
 800535c:	46bd      	mov	sp, r7
 800535e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005362:	bf00      	nop
 8005364:	40023800 	.word	0x40023800
 8005368:	00f42400 	.word	0x00f42400
 800536c:	017d7840 	.word	0x017d7840

08005370 <HAL_RCC_GetHCLKFreq>:
 8005370:	b480      	push	{r7}
 8005372:	af00      	add	r7, sp, #0
 8005374:	4b03      	ldr	r3, [pc, #12]	; (8005384 <HAL_RCC_GetHCLKFreq+0x14>)
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	4618      	mov	r0, r3
 800537a:	46bd      	mov	sp, r7
 800537c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005380:	4770      	bx	lr
 8005382:	bf00      	nop
 8005384:	20000000 	.word	0x20000000

08005388 <HAL_RCC_GetPCLK1Freq>:
 8005388:	b580      	push	{r7, lr}
 800538a:	af00      	add	r7, sp, #0
 800538c:	f7ff fff0 	bl	8005370 <HAL_RCC_GetHCLKFreq>
 8005390:	4602      	mov	r2, r0
 8005392:	4b05      	ldr	r3, [pc, #20]	; (80053a8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005394:	689b      	ldr	r3, [r3, #8]
 8005396:	0a9b      	lsrs	r3, r3, #10
 8005398:	f003 0307 	and.w	r3, r3, #7
 800539c:	4903      	ldr	r1, [pc, #12]	; (80053ac <HAL_RCC_GetPCLK1Freq+0x24>)
 800539e:	5ccb      	ldrb	r3, [r1, r3]
 80053a0:	fa22 f303 	lsr.w	r3, r2, r3
 80053a4:	4618      	mov	r0, r3
 80053a6:	bd80      	pop	{r7, pc}
 80053a8:	40023800 	.word	0x40023800
 80053ac:	0800fa00 	.word	0x0800fa00

080053b0 <HAL_RCC_GetPCLK2Freq>:
 80053b0:	b580      	push	{r7, lr}
 80053b2:	af00      	add	r7, sp, #0
 80053b4:	f7ff ffdc 	bl	8005370 <HAL_RCC_GetHCLKFreq>
 80053b8:	4602      	mov	r2, r0
 80053ba:	4b05      	ldr	r3, [pc, #20]	; (80053d0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80053bc:	689b      	ldr	r3, [r3, #8]
 80053be:	0b5b      	lsrs	r3, r3, #13
 80053c0:	f003 0307 	and.w	r3, r3, #7
 80053c4:	4903      	ldr	r1, [pc, #12]	; (80053d4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80053c6:	5ccb      	ldrb	r3, [r1, r3]
 80053c8:	fa22 f303 	lsr.w	r3, r2, r3
 80053cc:	4618      	mov	r0, r3
 80053ce:	bd80      	pop	{r7, pc}
 80053d0:	40023800 	.word	0x40023800
 80053d4:	0800fa00 	.word	0x0800fa00

080053d8 <HAL_RCCEx_PeriphCLKConfig>:
 80053d8:	b580      	push	{r7, lr}
 80053da:	b086      	sub	sp, #24
 80053dc:	af00      	add	r7, sp, #0
 80053de:	6078      	str	r0, [r7, #4]
 80053e0:	2300      	movs	r3, #0
 80053e2:	617b      	str	r3, [r7, #20]
 80053e4:	2300      	movs	r3, #0
 80053e6:	613b      	str	r3, [r7, #16]
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	681b      	ldr	r3, [r3, #0]
 80053ec:	f003 0301 	and.w	r3, r3, #1
 80053f0:	2b00      	cmp	r3, #0
 80053f2:	d105      	bne.n	8005400 <HAL_RCCEx_PeriphCLKConfig+0x28>
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	f003 0304 	and.w	r3, r3, #4
 80053fc:	2b00      	cmp	r3, #0
 80053fe:	d035      	beq.n	800546c <HAL_RCCEx_PeriphCLKConfig+0x94>
 8005400:	4b67      	ldr	r3, [pc, #412]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>)
 8005402:	2200      	movs	r2, #0
 8005404:	601a      	str	r2, [r3, #0]
 8005406:	f7fe fc7b 	bl	8003d00 <HAL_GetTick>
 800540a:	6178      	str	r0, [r7, #20]
 800540c:	e008      	b.n	8005420 <HAL_RCCEx_PeriphCLKConfig+0x48>
 800540e:	f7fe fc77 	bl	8003d00 <HAL_GetTick>
 8005412:	4602      	mov	r2, r0
 8005414:	697b      	ldr	r3, [r7, #20]
 8005416:	1ad3      	subs	r3, r2, r3
 8005418:	2b02      	cmp	r3, #2
 800541a:	d901      	bls.n	8005420 <HAL_RCCEx_PeriphCLKConfig+0x48>
 800541c:	2303      	movs	r3, #3
 800541e:	e0ba      	b.n	8005596 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8005420:	4b60      	ldr	r3, [pc, #384]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005428:	2b00      	cmp	r3, #0
 800542a:	d1f0      	bne.n	800540e <HAL_RCCEx_PeriphCLKConfig+0x36>
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	685b      	ldr	r3, [r3, #4]
 8005430:	019a      	lsls	r2, r3, #6
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	689b      	ldr	r3, [r3, #8]
 8005436:	071b      	lsls	r3, r3, #28
 8005438:	495a      	ldr	r1, [pc, #360]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800543a:	4313      	orrs	r3, r2
 800543c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005440:	4b57      	ldr	r3, [pc, #348]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>)
 8005442:	2201      	movs	r2, #1
 8005444:	601a      	str	r2, [r3, #0]
 8005446:	f7fe fc5b 	bl	8003d00 <HAL_GetTick>
 800544a:	6178      	str	r0, [r7, #20]
 800544c:	e008      	b.n	8005460 <HAL_RCCEx_PeriphCLKConfig+0x88>
 800544e:	f7fe fc57 	bl	8003d00 <HAL_GetTick>
 8005452:	4602      	mov	r2, r0
 8005454:	697b      	ldr	r3, [r7, #20]
 8005456:	1ad3      	subs	r3, r2, r3
 8005458:	2b02      	cmp	r3, #2
 800545a:	d901      	bls.n	8005460 <HAL_RCCEx_PeriphCLKConfig+0x88>
 800545c:	2303      	movs	r3, #3
 800545e:	e09a      	b.n	8005596 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8005460:	4b50      	ldr	r3, [pc, #320]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005468:	2b00      	cmp	r3, #0
 800546a:	d0f0      	beq.n	800544e <HAL_RCCEx_PeriphCLKConfig+0x76>
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	f003 0302 	and.w	r3, r3, #2
 8005474:	2b00      	cmp	r3, #0
 8005476:	f000 8083 	beq.w	8005580 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 800547a:	2300      	movs	r3, #0
 800547c:	60fb      	str	r3, [r7, #12]
 800547e:	4b49      	ldr	r3, [pc, #292]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005482:	4a48      	ldr	r2, [pc, #288]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005484:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005488:	6413      	str	r3, [r2, #64]	; 0x40
 800548a:	4b46      	ldr	r3, [pc, #280]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800548c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800548e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005492:	60fb      	str	r3, [r7, #12]
 8005494:	68fb      	ldr	r3, [r7, #12]
 8005496:	4b44      	ldr	r3, [pc, #272]	; (80055a8 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	4a43      	ldr	r2, [pc, #268]	; (80055a8 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800549c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80054a0:	6013      	str	r3, [r2, #0]
 80054a2:	f7fe fc2d 	bl	8003d00 <HAL_GetTick>
 80054a6:	6178      	str	r0, [r7, #20]
 80054a8:	e008      	b.n	80054bc <HAL_RCCEx_PeriphCLKConfig+0xe4>
 80054aa:	f7fe fc29 	bl	8003d00 <HAL_GetTick>
 80054ae:	4602      	mov	r2, r0
 80054b0:	697b      	ldr	r3, [r7, #20]
 80054b2:	1ad3      	subs	r3, r2, r3
 80054b4:	2b02      	cmp	r3, #2
 80054b6:	d901      	bls.n	80054bc <HAL_RCCEx_PeriphCLKConfig+0xe4>
 80054b8:	2303      	movs	r3, #3
 80054ba:	e06c      	b.n	8005596 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 80054bc:	4b3a      	ldr	r3, [pc, #232]	; (80055a8 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80054c4:	2b00      	cmp	r3, #0
 80054c6:	d0f0      	beq.n	80054aa <HAL_RCCEx_PeriphCLKConfig+0xd2>
 80054c8:	4b36      	ldr	r3, [pc, #216]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80054ca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80054cc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80054d0:	613b      	str	r3, [r7, #16]
 80054d2:	693b      	ldr	r3, [r7, #16]
 80054d4:	2b00      	cmp	r3, #0
 80054d6:	d02f      	beq.n	8005538 <HAL_RCCEx_PeriphCLKConfig+0x160>
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	68db      	ldr	r3, [r3, #12]
 80054dc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80054e0:	693a      	ldr	r2, [r7, #16]
 80054e2:	429a      	cmp	r2, r3
 80054e4:	d028      	beq.n	8005538 <HAL_RCCEx_PeriphCLKConfig+0x160>
 80054e6:	4b2f      	ldr	r3, [pc, #188]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80054e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80054ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80054ee:	613b      	str	r3, [r7, #16]
 80054f0:	4b2e      	ldr	r3, [pc, #184]	; (80055ac <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80054f2:	2201      	movs	r2, #1
 80054f4:	601a      	str	r2, [r3, #0]
 80054f6:	4b2d      	ldr	r3, [pc, #180]	; (80055ac <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80054f8:	2200      	movs	r2, #0
 80054fa:	601a      	str	r2, [r3, #0]
 80054fc:	4a29      	ldr	r2, [pc, #164]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80054fe:	693b      	ldr	r3, [r7, #16]
 8005500:	6713      	str	r3, [r2, #112]	; 0x70
 8005502:	4b28      	ldr	r3, [pc, #160]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005504:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005506:	f003 0301 	and.w	r3, r3, #1
 800550a:	2b01      	cmp	r3, #1
 800550c:	d114      	bne.n	8005538 <HAL_RCCEx_PeriphCLKConfig+0x160>
 800550e:	f7fe fbf7 	bl	8003d00 <HAL_GetTick>
 8005512:	6178      	str	r0, [r7, #20]
 8005514:	e00a      	b.n	800552c <HAL_RCCEx_PeriphCLKConfig+0x154>
 8005516:	f7fe fbf3 	bl	8003d00 <HAL_GetTick>
 800551a:	4602      	mov	r2, r0
 800551c:	697b      	ldr	r3, [r7, #20]
 800551e:	1ad3      	subs	r3, r2, r3
 8005520:	f241 3288 	movw	r2, #5000	; 0x1388
 8005524:	4293      	cmp	r3, r2
 8005526:	d901      	bls.n	800552c <HAL_RCCEx_PeriphCLKConfig+0x154>
 8005528:	2303      	movs	r3, #3
 800552a:	e034      	b.n	8005596 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 800552c:	4b1d      	ldr	r3, [pc, #116]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800552e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005530:	f003 0302 	and.w	r3, r3, #2
 8005534:	2b00      	cmp	r3, #0
 8005536:	d0ee      	beq.n	8005516 <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	68db      	ldr	r3, [r3, #12]
 800553c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005540:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8005544:	d10d      	bne.n	8005562 <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8005546:	4b17      	ldr	r3, [pc, #92]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005548:	689b      	ldr	r3, [r3, #8]
 800554a:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	68db      	ldr	r3, [r3, #12]
 8005552:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8005556:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800555a:	4912      	ldr	r1, [pc, #72]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800555c:	4313      	orrs	r3, r2
 800555e:	608b      	str	r3, [r1, #8]
 8005560:	e005      	b.n	800556e <HAL_RCCEx_PeriphCLKConfig+0x196>
 8005562:	4b10      	ldr	r3, [pc, #64]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005564:	689b      	ldr	r3, [r3, #8]
 8005566:	4a0f      	ldr	r2, [pc, #60]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005568:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 800556c:	6093      	str	r3, [r2, #8]
 800556e:	4b0d      	ldr	r3, [pc, #52]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005570:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	68db      	ldr	r3, [r3, #12]
 8005576:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800557a:	490a      	ldr	r1, [pc, #40]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800557c:	4313      	orrs	r3, r2
 800557e:	670b      	str	r3, [r1, #112]	; 0x70
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	f003 0308 	and.w	r3, r3, #8
 8005588:	2b00      	cmp	r3, #0
 800558a:	d003      	beq.n	8005594 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	7c1a      	ldrb	r2, [r3, #16]
 8005590:	4b07      	ldr	r3, [pc, #28]	; (80055b0 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8005592:	601a      	str	r2, [r3, #0]
 8005594:	2300      	movs	r3, #0
 8005596:	4618      	mov	r0, r3
 8005598:	3718      	adds	r7, #24
 800559a:	46bd      	mov	sp, r7
 800559c:	bd80      	pop	{r7, pc}
 800559e:	bf00      	nop
 80055a0:	42470068 	.word	0x42470068
 80055a4:	40023800 	.word	0x40023800
 80055a8:	40007000 	.word	0x40007000
 80055ac:	42470e40 	.word	0x42470e40
 80055b0:	424711e0 	.word	0x424711e0

080055b4 <HAL_RTC_Init>:
 80055b4:	b580      	push	{r7, lr}
 80055b6:	b084      	sub	sp, #16
 80055b8:	af00      	add	r7, sp, #0
 80055ba:	6078      	str	r0, [r7, #4]
 80055bc:	2301      	movs	r3, #1
 80055be:	73fb      	strb	r3, [r7, #15]
 80055c0:	687b      	ldr	r3, [r7, #4]
 80055c2:	2b00      	cmp	r3, #0
 80055c4:	d101      	bne.n	80055ca <HAL_RTC_Init+0x16>
 80055c6:	2301      	movs	r3, #1
 80055c8:	e066      	b.n	8005698 <HAL_RTC_Init+0xe4>
 80055ca:	687b      	ldr	r3, [r7, #4]
 80055cc:	7f5b      	ldrb	r3, [r3, #29]
 80055ce:	b2db      	uxtb	r3, r3
 80055d0:	2b00      	cmp	r3, #0
 80055d2:	d105      	bne.n	80055e0 <HAL_RTC_Init+0x2c>
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	2200      	movs	r2, #0
 80055d8:	771a      	strb	r2, [r3, #28]
 80055da:	6878      	ldr	r0, [r7, #4]
 80055dc:	f7fe f9f0 	bl	80039c0 <HAL_RTC_MspInit>
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	2202      	movs	r2, #2
 80055e4:	775a      	strb	r2, [r3, #29]
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	22ca      	movs	r2, #202	; 0xca
 80055ec:	625a      	str	r2, [r3, #36]	; 0x24
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	2253      	movs	r2, #83	; 0x53
 80055f4:	625a      	str	r2, [r3, #36]	; 0x24
 80055f6:	6878      	ldr	r0, [r7, #4]
 80055f8:	f000 f998 	bl	800592c <RTC_EnterInitMode>
 80055fc:	4603      	mov	r3, r0
 80055fe:	73fb      	strb	r3, [r7, #15]
 8005600:	7bfb      	ldrb	r3, [r7, #15]
 8005602:	2b00      	cmp	r3, #0
 8005604:	d12c      	bne.n	8005660 <HAL_RTC_Init+0xac>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	689b      	ldr	r3, [r3, #8]
 800560c:	687a      	ldr	r2, [r7, #4]
 800560e:	6812      	ldr	r2, [r2, #0]
 8005610:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8005614:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005618:	6093      	str	r3, [r2, #8]
 800561a:	687b      	ldr	r3, [r7, #4]
 800561c:	681b      	ldr	r3, [r3, #0]
 800561e:	6899      	ldr	r1, [r3, #8]
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	685a      	ldr	r2, [r3, #4]
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	691b      	ldr	r3, [r3, #16]
 8005628:	431a      	orrs	r2, r3
 800562a:	687b      	ldr	r3, [r7, #4]
 800562c:	695b      	ldr	r3, [r3, #20]
 800562e:	431a      	orrs	r2, r3
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	430a      	orrs	r2, r1
 8005636:	609a      	str	r2, [r3, #8]
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	687a      	ldr	r2, [r7, #4]
 800563e:	68d2      	ldr	r2, [r2, #12]
 8005640:	611a      	str	r2, [r3, #16]
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	6919      	ldr	r1, [r3, #16]
 8005648:	687b      	ldr	r3, [r7, #4]
 800564a:	689b      	ldr	r3, [r3, #8]
 800564c:	041a      	lsls	r2, r3, #16
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	681b      	ldr	r3, [r3, #0]
 8005652:	430a      	orrs	r2, r1
 8005654:	611a      	str	r2, [r3, #16]
 8005656:	6878      	ldr	r0, [r7, #4]
 8005658:	f000 f99f 	bl	800599a <RTC_ExitInitMode>
 800565c:	4603      	mov	r3, r0
 800565e:	73fb      	strb	r3, [r7, #15]
 8005660:	7bfb      	ldrb	r3, [r7, #15]
 8005662:	2b00      	cmp	r3, #0
 8005664:	d113      	bne.n	800568e <HAL_RTC_Init+0xda>
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800566c:	687b      	ldr	r3, [r7, #4]
 800566e:	681b      	ldr	r3, [r3, #0]
 8005670:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005674:	641a      	str	r2, [r3, #64]	; 0x40
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	681b      	ldr	r3, [r3, #0]
 800567a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	699a      	ldr	r2, [r3, #24]
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	430a      	orrs	r2, r1
 8005686:	641a      	str	r2, [r3, #64]	; 0x40
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	2201      	movs	r2, #1
 800568c:	775a      	strb	r2, [r3, #29]
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	22ff      	movs	r2, #255	; 0xff
 8005694:	625a      	str	r2, [r3, #36]	; 0x24
 8005696:	7bfb      	ldrb	r3, [r7, #15]
 8005698:	4618      	mov	r0, r3
 800569a:	3710      	adds	r7, #16
 800569c:	46bd      	mov	sp, r7
 800569e:	bd80      	pop	{r7, pc}

080056a0 <HAL_RTC_SetTime>:
 80056a0:	b590      	push	{r4, r7, lr}
 80056a2:	b087      	sub	sp, #28
 80056a4:	af00      	add	r7, sp, #0
 80056a6:	60f8      	str	r0, [r7, #12]
 80056a8:	60b9      	str	r1, [r7, #8]
 80056aa:	607a      	str	r2, [r7, #4]
 80056ac:	2300      	movs	r3, #0
 80056ae:	617b      	str	r3, [r7, #20]
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	7f1b      	ldrb	r3, [r3, #28]
 80056b4:	2b01      	cmp	r3, #1
 80056b6:	d101      	bne.n	80056bc <HAL_RTC_SetTime+0x1c>
 80056b8:	2302      	movs	r3, #2
 80056ba:	e087      	b.n	80057cc <HAL_RTC_SetTime+0x12c>
 80056bc:	68fb      	ldr	r3, [r7, #12]
 80056be:	2201      	movs	r2, #1
 80056c0:	771a      	strb	r2, [r3, #28]
 80056c2:	68fb      	ldr	r3, [r7, #12]
 80056c4:	2202      	movs	r2, #2
 80056c6:	775a      	strb	r2, [r3, #29]
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d126      	bne.n	800571c <HAL_RTC_SetTime+0x7c>
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	689b      	ldr	r3, [r3, #8]
 80056d4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80056d8:	2b00      	cmp	r3, #0
 80056da:	d102      	bne.n	80056e2 <HAL_RTC_SetTime+0x42>
 80056dc:	68bb      	ldr	r3, [r7, #8]
 80056de:	2200      	movs	r2, #0
 80056e0:	70da      	strb	r2, [r3, #3]
 80056e2:	68bb      	ldr	r3, [r7, #8]
 80056e4:	781b      	ldrb	r3, [r3, #0]
 80056e6:	4618      	mov	r0, r3
 80056e8:	f000 f97c 	bl	80059e4 <RTC_ByteToBcd2>
 80056ec:	4603      	mov	r3, r0
 80056ee:	041c      	lsls	r4, r3, #16
 80056f0:	68bb      	ldr	r3, [r7, #8]
 80056f2:	785b      	ldrb	r3, [r3, #1]
 80056f4:	4618      	mov	r0, r3
 80056f6:	f000 f975 	bl	80059e4 <RTC_ByteToBcd2>
 80056fa:	4603      	mov	r3, r0
 80056fc:	021b      	lsls	r3, r3, #8
 80056fe:	431c      	orrs	r4, r3
 8005700:	68bb      	ldr	r3, [r7, #8]
 8005702:	789b      	ldrb	r3, [r3, #2]
 8005704:	4618      	mov	r0, r3
 8005706:	f000 f96d 	bl	80059e4 <RTC_ByteToBcd2>
 800570a:	4603      	mov	r3, r0
 800570c:	ea44 0203 	orr.w	r2, r4, r3
 8005710:	68bb      	ldr	r3, [r7, #8]
 8005712:	78db      	ldrb	r3, [r3, #3]
 8005714:	059b      	lsls	r3, r3, #22
 8005716:	4313      	orrs	r3, r2
 8005718:	617b      	str	r3, [r7, #20]
 800571a:	e018      	b.n	800574e <HAL_RTC_SetTime+0xae>
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	689b      	ldr	r3, [r3, #8]
 8005722:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005726:	2b00      	cmp	r3, #0
 8005728:	d102      	bne.n	8005730 <HAL_RTC_SetTime+0x90>
 800572a:	68bb      	ldr	r3, [r7, #8]
 800572c:	2200      	movs	r2, #0
 800572e:	70da      	strb	r2, [r3, #3]
 8005730:	68bb      	ldr	r3, [r7, #8]
 8005732:	781b      	ldrb	r3, [r3, #0]
 8005734:	041a      	lsls	r2, r3, #16
 8005736:	68bb      	ldr	r3, [r7, #8]
 8005738:	785b      	ldrb	r3, [r3, #1]
 800573a:	021b      	lsls	r3, r3, #8
 800573c:	4313      	orrs	r3, r2
 800573e:	68ba      	ldr	r2, [r7, #8]
 8005740:	7892      	ldrb	r2, [r2, #2]
 8005742:	431a      	orrs	r2, r3
 8005744:	68bb      	ldr	r3, [r7, #8]
 8005746:	78db      	ldrb	r3, [r3, #3]
 8005748:	059b      	lsls	r3, r3, #22
 800574a:	4313      	orrs	r3, r2
 800574c:	617b      	str	r3, [r7, #20]
 800574e:	68fb      	ldr	r3, [r7, #12]
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	22ca      	movs	r2, #202	; 0xca
 8005754:	625a      	str	r2, [r3, #36]	; 0x24
 8005756:	68fb      	ldr	r3, [r7, #12]
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	2253      	movs	r2, #83	; 0x53
 800575c:	625a      	str	r2, [r3, #36]	; 0x24
 800575e:	68f8      	ldr	r0, [r7, #12]
 8005760:	f000 f8e4 	bl	800592c <RTC_EnterInitMode>
 8005764:	4603      	mov	r3, r0
 8005766:	74fb      	strb	r3, [r7, #19]
 8005768:	7cfb      	ldrb	r3, [r7, #19]
 800576a:	2b00      	cmp	r3, #0
 800576c:	d120      	bne.n	80057b0 <HAL_RTC_SetTime+0x110>
 800576e:	68fb      	ldr	r3, [r7, #12]
 8005770:	681a      	ldr	r2, [r3, #0]
 8005772:	697b      	ldr	r3, [r7, #20]
 8005774:	f003 337f 	and.w	r3, r3, #2139062143	; 0x7f7f7f7f
 8005778:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 800577c:	6013      	str	r3, [r2, #0]
 800577e:	68fb      	ldr	r3, [r7, #12]
 8005780:	681b      	ldr	r3, [r3, #0]
 8005782:	689a      	ldr	r2, [r3, #8]
 8005784:	68fb      	ldr	r3, [r7, #12]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800578c:	609a      	str	r2, [r3, #8]
 800578e:	68fb      	ldr	r3, [r7, #12]
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	6899      	ldr	r1, [r3, #8]
 8005794:	68bb      	ldr	r3, [r7, #8]
 8005796:	68da      	ldr	r2, [r3, #12]
 8005798:	68bb      	ldr	r3, [r7, #8]
 800579a:	691b      	ldr	r3, [r3, #16]
 800579c:	431a      	orrs	r2, r3
 800579e:	68fb      	ldr	r3, [r7, #12]
 80057a0:	681b      	ldr	r3, [r3, #0]
 80057a2:	430a      	orrs	r2, r1
 80057a4:	609a      	str	r2, [r3, #8]
 80057a6:	68f8      	ldr	r0, [r7, #12]
 80057a8:	f000 f8f7 	bl	800599a <RTC_ExitInitMode>
 80057ac:	4603      	mov	r3, r0
 80057ae:	74fb      	strb	r3, [r7, #19]
 80057b0:	7cfb      	ldrb	r3, [r7, #19]
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	d102      	bne.n	80057bc <HAL_RTC_SetTime+0x11c>
 80057b6:	68fb      	ldr	r3, [r7, #12]
 80057b8:	2201      	movs	r2, #1
 80057ba:	775a      	strb	r2, [r3, #29]
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	22ff      	movs	r2, #255	; 0xff
 80057c2:	625a      	str	r2, [r3, #36]	; 0x24
 80057c4:	68fb      	ldr	r3, [r7, #12]
 80057c6:	2200      	movs	r2, #0
 80057c8:	771a      	strb	r2, [r3, #28]
 80057ca:	7cfb      	ldrb	r3, [r7, #19]
 80057cc:	4618      	mov	r0, r3
 80057ce:	371c      	adds	r7, #28
 80057d0:	46bd      	mov	sp, r7
 80057d2:	bd90      	pop	{r4, r7, pc}

080057d4 <HAL_RTC_SetDate>:
 80057d4:	b590      	push	{r4, r7, lr}
 80057d6:	b087      	sub	sp, #28
 80057d8:	af00      	add	r7, sp, #0
 80057da:	60f8      	str	r0, [r7, #12]
 80057dc:	60b9      	str	r1, [r7, #8]
 80057de:	607a      	str	r2, [r7, #4]
 80057e0:	2300      	movs	r3, #0
 80057e2:	617b      	str	r3, [r7, #20]
 80057e4:	68fb      	ldr	r3, [r7, #12]
 80057e6:	7f1b      	ldrb	r3, [r3, #28]
 80057e8:	2b01      	cmp	r3, #1
 80057ea:	d101      	bne.n	80057f0 <HAL_RTC_SetDate+0x1c>
 80057ec:	2302      	movs	r3, #2
 80057ee:	e071      	b.n	80058d4 <HAL_RTC_SetDate+0x100>
 80057f0:	68fb      	ldr	r3, [r7, #12]
 80057f2:	2201      	movs	r2, #1
 80057f4:	771a      	strb	r2, [r3, #28]
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	2202      	movs	r2, #2
 80057fa:	775a      	strb	r2, [r3, #29]
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d10e      	bne.n	8005820 <HAL_RTC_SetDate+0x4c>
 8005802:	68bb      	ldr	r3, [r7, #8]
 8005804:	785b      	ldrb	r3, [r3, #1]
 8005806:	f003 0310 	and.w	r3, r3, #16
 800580a:	2b00      	cmp	r3, #0
 800580c:	d008      	beq.n	8005820 <HAL_RTC_SetDate+0x4c>
 800580e:	68bb      	ldr	r3, [r7, #8]
 8005810:	785b      	ldrb	r3, [r3, #1]
 8005812:	f023 0310 	bic.w	r3, r3, #16
 8005816:	b2db      	uxtb	r3, r3
 8005818:	330a      	adds	r3, #10
 800581a:	b2da      	uxtb	r2, r3
 800581c:	68bb      	ldr	r3, [r7, #8]
 800581e:	705a      	strb	r2, [r3, #1]
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	2b00      	cmp	r3, #0
 8005824:	d11c      	bne.n	8005860 <HAL_RTC_SetDate+0x8c>
 8005826:	68bb      	ldr	r3, [r7, #8]
 8005828:	78db      	ldrb	r3, [r3, #3]
 800582a:	4618      	mov	r0, r3
 800582c:	f000 f8da 	bl	80059e4 <RTC_ByteToBcd2>
 8005830:	4603      	mov	r3, r0
 8005832:	041c      	lsls	r4, r3, #16
 8005834:	68bb      	ldr	r3, [r7, #8]
 8005836:	785b      	ldrb	r3, [r3, #1]
 8005838:	4618      	mov	r0, r3
 800583a:	f000 f8d3 	bl	80059e4 <RTC_ByteToBcd2>
 800583e:	4603      	mov	r3, r0
 8005840:	021b      	lsls	r3, r3, #8
 8005842:	431c      	orrs	r4, r3
 8005844:	68bb      	ldr	r3, [r7, #8]
 8005846:	789b      	ldrb	r3, [r3, #2]
 8005848:	4618      	mov	r0, r3
 800584a:	f000 f8cb 	bl	80059e4 <RTC_ByteToBcd2>
 800584e:	4603      	mov	r3, r0
 8005850:	ea44 0203 	orr.w	r2, r4, r3
 8005854:	68bb      	ldr	r3, [r7, #8]
 8005856:	781b      	ldrb	r3, [r3, #0]
 8005858:	035b      	lsls	r3, r3, #13
 800585a:	4313      	orrs	r3, r2
 800585c:	617b      	str	r3, [r7, #20]
 800585e:	e00e      	b.n	800587e <HAL_RTC_SetDate+0xaa>
 8005860:	68bb      	ldr	r3, [r7, #8]
 8005862:	78db      	ldrb	r3, [r3, #3]
 8005864:	041a      	lsls	r2, r3, #16
 8005866:	68bb      	ldr	r3, [r7, #8]
 8005868:	785b      	ldrb	r3, [r3, #1]
 800586a:	021b      	lsls	r3, r3, #8
 800586c:	4313      	orrs	r3, r2
 800586e:	68ba      	ldr	r2, [r7, #8]
 8005870:	7892      	ldrb	r2, [r2, #2]
 8005872:	431a      	orrs	r2, r3
 8005874:	68bb      	ldr	r3, [r7, #8]
 8005876:	781b      	ldrb	r3, [r3, #0]
 8005878:	035b      	lsls	r3, r3, #13
 800587a:	4313      	orrs	r3, r2
 800587c:	617b      	str	r3, [r7, #20]
 800587e:	68fb      	ldr	r3, [r7, #12]
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	22ca      	movs	r2, #202	; 0xca
 8005884:	625a      	str	r2, [r3, #36]	; 0x24
 8005886:	68fb      	ldr	r3, [r7, #12]
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	2253      	movs	r2, #83	; 0x53
 800588c:	625a      	str	r2, [r3, #36]	; 0x24
 800588e:	68f8      	ldr	r0, [r7, #12]
 8005890:	f000 f84c 	bl	800592c <RTC_EnterInitMode>
 8005894:	4603      	mov	r3, r0
 8005896:	74fb      	strb	r3, [r7, #19]
 8005898:	7cfb      	ldrb	r3, [r7, #19]
 800589a:	2b00      	cmp	r3, #0
 800589c:	d10c      	bne.n	80058b8 <HAL_RTC_SetDate+0xe4>
 800589e:	68fb      	ldr	r3, [r7, #12]
 80058a0:	681a      	ldr	r2, [r3, #0]
 80058a2:	697b      	ldr	r3, [r7, #20]
 80058a4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80058a8:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80058ac:	6053      	str	r3, [r2, #4]
 80058ae:	68f8      	ldr	r0, [r7, #12]
 80058b0:	f000 f873 	bl	800599a <RTC_ExitInitMode>
 80058b4:	4603      	mov	r3, r0
 80058b6:	74fb      	strb	r3, [r7, #19]
 80058b8:	7cfb      	ldrb	r3, [r7, #19]
 80058ba:	2b00      	cmp	r3, #0
 80058bc:	d102      	bne.n	80058c4 <HAL_RTC_SetDate+0xf0>
 80058be:	68fb      	ldr	r3, [r7, #12]
 80058c0:	2201      	movs	r2, #1
 80058c2:	775a      	strb	r2, [r3, #29]
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	681b      	ldr	r3, [r3, #0]
 80058c8:	22ff      	movs	r2, #255	; 0xff
 80058ca:	625a      	str	r2, [r3, #36]	; 0x24
 80058cc:	68fb      	ldr	r3, [r7, #12]
 80058ce:	2200      	movs	r2, #0
 80058d0:	771a      	strb	r2, [r3, #28]
 80058d2:	7cfb      	ldrb	r3, [r7, #19]
 80058d4:	4618      	mov	r0, r3
 80058d6:	371c      	adds	r7, #28
 80058d8:	46bd      	mov	sp, r7
 80058da:	bd90      	pop	{r4, r7, pc}

080058dc <HAL_RTC_WaitForSynchro>:
 80058dc:	b580      	push	{r7, lr}
 80058de:	b084      	sub	sp, #16
 80058e0:	af00      	add	r7, sp, #0
 80058e2:	6078      	str	r0, [r7, #4]
 80058e4:	2300      	movs	r3, #0
 80058e6:	60fb      	str	r3, [r7, #12]
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	68da      	ldr	r2, [r3, #12]
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80058f6:	60da      	str	r2, [r3, #12]
 80058f8:	f7fe fa02 	bl	8003d00 <HAL_GetTick>
 80058fc:	60f8      	str	r0, [r7, #12]
 80058fe:	e009      	b.n	8005914 <HAL_RTC_WaitForSynchro+0x38>
 8005900:	f7fe f9fe 	bl	8003d00 <HAL_GetTick>
 8005904:	4602      	mov	r2, r0
 8005906:	68fb      	ldr	r3, [r7, #12]
 8005908:	1ad3      	subs	r3, r2, r3
 800590a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800590e:	d901      	bls.n	8005914 <HAL_RTC_WaitForSynchro+0x38>
 8005910:	2303      	movs	r3, #3
 8005912:	e007      	b.n	8005924 <HAL_RTC_WaitForSynchro+0x48>
 8005914:	687b      	ldr	r3, [r7, #4]
 8005916:	681b      	ldr	r3, [r3, #0]
 8005918:	68db      	ldr	r3, [r3, #12]
 800591a:	f003 0320 	and.w	r3, r3, #32
 800591e:	2b00      	cmp	r3, #0
 8005920:	d0ee      	beq.n	8005900 <HAL_RTC_WaitForSynchro+0x24>
 8005922:	2300      	movs	r3, #0
 8005924:	4618      	mov	r0, r3
 8005926:	3710      	adds	r7, #16
 8005928:	46bd      	mov	sp, r7
 800592a:	bd80      	pop	{r7, pc}

0800592c <RTC_EnterInitMode>:
 800592c:	b580      	push	{r7, lr}
 800592e:	b084      	sub	sp, #16
 8005930:	af00      	add	r7, sp, #0
 8005932:	6078      	str	r0, [r7, #4]
 8005934:	2300      	movs	r3, #0
 8005936:	60bb      	str	r3, [r7, #8]
 8005938:	2300      	movs	r3, #0
 800593a:	73fb      	strb	r3, [r7, #15]
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	68db      	ldr	r3, [r3, #12]
 8005942:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005946:	2b00      	cmp	r3, #0
 8005948:	d122      	bne.n	8005990 <RTC_EnterInitMode+0x64>
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	68da      	ldr	r2, [r3, #12]
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005958:	60da      	str	r2, [r3, #12]
 800595a:	f7fe f9d1 	bl	8003d00 <HAL_GetTick>
 800595e:	60b8      	str	r0, [r7, #8]
 8005960:	e00c      	b.n	800597c <RTC_EnterInitMode+0x50>
 8005962:	f7fe f9cd 	bl	8003d00 <HAL_GetTick>
 8005966:	4602      	mov	r2, r0
 8005968:	68bb      	ldr	r3, [r7, #8]
 800596a:	1ad3      	subs	r3, r2, r3
 800596c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005970:	d904      	bls.n	800597c <RTC_EnterInitMode+0x50>
 8005972:	687b      	ldr	r3, [r7, #4]
 8005974:	2204      	movs	r2, #4
 8005976:	775a      	strb	r2, [r3, #29]
 8005978:	2301      	movs	r3, #1
 800597a:	73fb      	strb	r3, [r7, #15]
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	68db      	ldr	r3, [r3, #12]
 8005982:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005986:	2b00      	cmp	r3, #0
 8005988:	d102      	bne.n	8005990 <RTC_EnterInitMode+0x64>
 800598a:	7bfb      	ldrb	r3, [r7, #15]
 800598c:	2b01      	cmp	r3, #1
 800598e:	d1e8      	bne.n	8005962 <RTC_EnterInitMode+0x36>
 8005990:	7bfb      	ldrb	r3, [r7, #15]
 8005992:	4618      	mov	r0, r3
 8005994:	3710      	adds	r7, #16
 8005996:	46bd      	mov	sp, r7
 8005998:	bd80      	pop	{r7, pc}

0800599a <RTC_ExitInitMode>:
 800599a:	b580      	push	{r7, lr}
 800599c:	b084      	sub	sp, #16
 800599e:	af00      	add	r7, sp, #0
 80059a0:	6078      	str	r0, [r7, #4]
 80059a2:	2300      	movs	r3, #0
 80059a4:	73fb      	strb	r3, [r7, #15]
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	68da      	ldr	r2, [r3, #12]
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	681b      	ldr	r3, [r3, #0]
 80059b0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80059b4:	60da      	str	r2, [r3, #12]
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	681b      	ldr	r3, [r3, #0]
 80059ba:	689b      	ldr	r3, [r3, #8]
 80059bc:	f003 0320 	and.w	r3, r3, #32
 80059c0:	2b00      	cmp	r3, #0
 80059c2:	d10a      	bne.n	80059da <RTC_ExitInitMode+0x40>
 80059c4:	6878      	ldr	r0, [r7, #4]
 80059c6:	f7ff ff89 	bl	80058dc <HAL_RTC_WaitForSynchro>
 80059ca:	4603      	mov	r3, r0
 80059cc:	2b00      	cmp	r3, #0
 80059ce:	d004      	beq.n	80059da <RTC_ExitInitMode+0x40>
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	2204      	movs	r2, #4
 80059d4:	775a      	strb	r2, [r3, #29]
 80059d6:	2301      	movs	r3, #1
 80059d8:	73fb      	strb	r3, [r7, #15]
 80059da:	7bfb      	ldrb	r3, [r7, #15]
 80059dc:	4618      	mov	r0, r3
 80059de:	3710      	adds	r7, #16
 80059e0:	46bd      	mov	sp, r7
 80059e2:	bd80      	pop	{r7, pc}

080059e4 <RTC_ByteToBcd2>:
 80059e4:	b480      	push	{r7}
 80059e6:	b085      	sub	sp, #20
 80059e8:	af00      	add	r7, sp, #0
 80059ea:	4603      	mov	r3, r0
 80059ec:	71fb      	strb	r3, [r7, #7]
 80059ee:	2300      	movs	r3, #0
 80059f0:	73fb      	strb	r3, [r7, #15]
 80059f2:	e005      	b.n	8005a00 <RTC_ByteToBcd2+0x1c>
 80059f4:	7bfb      	ldrb	r3, [r7, #15]
 80059f6:	3301      	adds	r3, #1
 80059f8:	73fb      	strb	r3, [r7, #15]
 80059fa:	79fb      	ldrb	r3, [r7, #7]
 80059fc:	3b0a      	subs	r3, #10
 80059fe:	71fb      	strb	r3, [r7, #7]
 8005a00:	79fb      	ldrb	r3, [r7, #7]
 8005a02:	2b09      	cmp	r3, #9
 8005a04:	d8f6      	bhi.n	80059f4 <RTC_ByteToBcd2+0x10>
 8005a06:	7bfb      	ldrb	r3, [r7, #15]
 8005a08:	011b      	lsls	r3, r3, #4
 8005a0a:	b2da      	uxtb	r2, r3
 8005a0c:	79fb      	ldrb	r3, [r7, #7]
 8005a0e:	4313      	orrs	r3, r2
 8005a10:	b2db      	uxtb	r3, r3
 8005a12:	4618      	mov	r0, r3
 8005a14:	3714      	adds	r7, #20
 8005a16:	46bd      	mov	sp, r7
 8005a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a1c:	4770      	bx	lr
	...

08005a20 <HAL_RTCEx_SetWakeUpTimer_IT>:
 8005a20:	b480      	push	{r7}
 8005a22:	b087      	sub	sp, #28
 8005a24:	af00      	add	r7, sp, #0
 8005a26:	60f8      	str	r0, [r7, #12]
 8005a28:	60b9      	str	r1, [r7, #8]
 8005a2a:	607a      	str	r2, [r7, #4]
 8005a2c:	4b59      	ldr	r3, [pc, #356]	; (8005b94 <HAL_RTCEx_SetWakeUpTimer_IT+0x174>)
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	4a59      	ldr	r2, [pc, #356]	; (8005b98 <HAL_RTCEx_SetWakeUpTimer_IT+0x178>)
 8005a32:	fba2 2303 	umull	r2, r3, r2, r3
 8005a36:	0adb      	lsrs	r3, r3, #11
 8005a38:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005a3c:	fb02 f303 	mul.w	r3, r2, r3
 8005a40:	617b      	str	r3, [r7, #20]
 8005a42:	68fb      	ldr	r3, [r7, #12]
 8005a44:	7f1b      	ldrb	r3, [r3, #28]
 8005a46:	2b01      	cmp	r3, #1
 8005a48:	d101      	bne.n	8005a4e <HAL_RTCEx_SetWakeUpTimer_IT+0x2e>
 8005a4a:	2302      	movs	r3, #2
 8005a4c:	e09b      	b.n	8005b86 <HAL_RTCEx_SetWakeUpTimer_IT+0x166>
 8005a4e:	68fb      	ldr	r3, [r7, #12]
 8005a50:	2201      	movs	r2, #1
 8005a52:	771a      	strb	r2, [r3, #28]
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	2202      	movs	r2, #2
 8005a58:	775a      	strb	r2, [r3, #29]
 8005a5a:	68fb      	ldr	r3, [r7, #12]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	22ca      	movs	r2, #202	; 0xca
 8005a60:	625a      	str	r2, [r3, #36]	; 0x24
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	2253      	movs	r2, #83	; 0x53
 8005a68:	625a      	str	r2, [r3, #36]	; 0x24
 8005a6a:	68fb      	ldr	r3, [r7, #12]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	689b      	ldr	r3, [r3, #8]
 8005a70:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005a74:	2b00      	cmp	r3, #0
 8005a76:	d017      	beq.n	8005aa8 <HAL_RTCEx_SetWakeUpTimer_IT+0x88>
 8005a78:	697b      	ldr	r3, [r7, #20]
 8005a7a:	1e5a      	subs	r2, r3, #1
 8005a7c:	617a      	str	r2, [r7, #20]
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d10b      	bne.n	8005a9a <HAL_RTCEx_SetWakeUpTimer_IT+0x7a>
 8005a82:	68fb      	ldr	r3, [r7, #12]
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	22ff      	movs	r2, #255	; 0xff
 8005a88:	625a      	str	r2, [r3, #36]	; 0x24
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	2203      	movs	r2, #3
 8005a8e:	775a      	strb	r2, [r3, #29]
 8005a90:	68fb      	ldr	r3, [r7, #12]
 8005a92:	2200      	movs	r2, #0
 8005a94:	771a      	strb	r2, [r3, #28]
 8005a96:	2303      	movs	r3, #3
 8005a98:	e075      	b.n	8005b86 <HAL_RTCEx_SetWakeUpTimer_IT+0x166>
 8005a9a:	68fb      	ldr	r3, [r7, #12]
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	68db      	ldr	r3, [r3, #12]
 8005aa0:	f003 0304 	and.w	r3, r3, #4
 8005aa4:	2b00      	cmp	r3, #0
 8005aa6:	d1e7      	bne.n	8005a78 <HAL_RTCEx_SetWakeUpTimer_IT+0x58>
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	689a      	ldr	r2, [r3, #8]
 8005aae:	68fb      	ldr	r3, [r7, #12]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005ab6:	609a      	str	r2, [r3, #8]
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	68db      	ldr	r3, [r3, #12]
 8005abe:	b2da      	uxtb	r2, r3
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	f462 6290 	orn	r2, r2, #1152	; 0x480
 8005ac8:	60da      	str	r2, [r3, #12]
 8005aca:	4b32      	ldr	r3, [pc, #200]	; (8005b94 <HAL_RTCEx_SetWakeUpTimer_IT+0x174>)
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	4a32      	ldr	r2, [pc, #200]	; (8005b98 <HAL_RTCEx_SetWakeUpTimer_IT+0x178>)
 8005ad0:	fba2 2303 	umull	r2, r3, r2, r3
 8005ad4:	0adb      	lsrs	r3, r3, #11
 8005ad6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005ada:	fb02 f303 	mul.w	r3, r2, r3
 8005ade:	617b      	str	r3, [r7, #20]
 8005ae0:	697b      	ldr	r3, [r7, #20]
 8005ae2:	1e5a      	subs	r2, r3, #1
 8005ae4:	617a      	str	r2, [r7, #20]
 8005ae6:	2b00      	cmp	r3, #0
 8005ae8:	d10b      	bne.n	8005b02 <HAL_RTCEx_SetWakeUpTimer_IT+0xe2>
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	681b      	ldr	r3, [r3, #0]
 8005aee:	22ff      	movs	r2, #255	; 0xff
 8005af0:	625a      	str	r2, [r3, #36]	; 0x24
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	2203      	movs	r2, #3
 8005af6:	775a      	strb	r2, [r3, #29]
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	2200      	movs	r2, #0
 8005afc:	771a      	strb	r2, [r3, #28]
 8005afe:	2303      	movs	r3, #3
 8005b00:	e041      	b.n	8005b86 <HAL_RTCEx_SetWakeUpTimer_IT+0x166>
 8005b02:	68fb      	ldr	r3, [r7, #12]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	68db      	ldr	r3, [r3, #12]
 8005b08:	f003 0304 	and.w	r3, r3, #4
 8005b0c:	2b00      	cmp	r3, #0
 8005b0e:	d0e7      	beq.n	8005ae0 <HAL_RTCEx_SetWakeUpTimer_IT+0xc0>
 8005b10:	68fb      	ldr	r3, [r7, #12]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	689a      	ldr	r2, [r3, #8]
 8005b16:	68fb      	ldr	r3, [r7, #12]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	f022 0207 	bic.w	r2, r2, #7
 8005b1e:	609a      	str	r2, [r3, #8]
 8005b20:	68fb      	ldr	r3, [r7, #12]
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	6899      	ldr	r1, [r3, #8]
 8005b26:	68fb      	ldr	r3, [r7, #12]
 8005b28:	681b      	ldr	r3, [r3, #0]
 8005b2a:	687a      	ldr	r2, [r7, #4]
 8005b2c:	430a      	orrs	r2, r1
 8005b2e:	609a      	str	r2, [r3, #8]
 8005b30:	68fb      	ldr	r3, [r7, #12]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	68ba      	ldr	r2, [r7, #8]
 8005b36:	615a      	str	r2, [r3, #20]
 8005b38:	4b18      	ldr	r3, [pc, #96]	; (8005b9c <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	4a17      	ldr	r2, [pc, #92]	; (8005b9c <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005b3e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8005b42:	6013      	str	r3, [r2, #0]
 8005b44:	4b15      	ldr	r3, [pc, #84]	; (8005b9c <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005b46:	689b      	ldr	r3, [r3, #8]
 8005b48:	4a14      	ldr	r2, [pc, #80]	; (8005b9c <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005b4a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8005b4e:	6093      	str	r3, [r2, #8]
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	689a      	ldr	r2, [r3, #8]
 8005b56:	68fb      	ldr	r3, [r7, #12]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005b5e:	609a      	str	r2, [r3, #8]
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	689a      	ldr	r2, [r3, #8]
 8005b66:	68fb      	ldr	r3, [r7, #12]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005b6e:	609a      	str	r2, [r3, #8]
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	22ff      	movs	r2, #255	; 0xff
 8005b76:	625a      	str	r2, [r3, #36]	; 0x24
 8005b78:	68fb      	ldr	r3, [r7, #12]
 8005b7a:	2201      	movs	r2, #1
 8005b7c:	775a      	strb	r2, [r3, #29]
 8005b7e:	68fb      	ldr	r3, [r7, #12]
 8005b80:	2200      	movs	r2, #0
 8005b82:	771a      	strb	r2, [r3, #28]
 8005b84:	2300      	movs	r3, #0
 8005b86:	4618      	mov	r0, r3
 8005b88:	371c      	adds	r7, #28
 8005b8a:	46bd      	mov	sp, r7
 8005b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b90:	4770      	bx	lr
 8005b92:	bf00      	nop
 8005b94:	20000000 	.word	0x20000000
 8005b98:	10624dd3 	.word	0x10624dd3
 8005b9c:	40013c00 	.word	0x40013c00

08005ba0 <HAL_RTCEx_DeactivateWakeUpTimer>:
 8005ba0:	b580      	push	{r7, lr}
 8005ba2:	b084      	sub	sp, #16
 8005ba4:	af00      	add	r7, sp, #0
 8005ba6:	6078      	str	r0, [r7, #4]
 8005ba8:	2300      	movs	r3, #0
 8005baa:	60fb      	str	r3, [r7, #12]
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	7f1b      	ldrb	r3, [r3, #28]
 8005bb0:	2b01      	cmp	r3, #1
 8005bb2:	d101      	bne.n	8005bb8 <HAL_RTCEx_DeactivateWakeUpTimer+0x18>
 8005bb4:	2302      	movs	r3, #2
 8005bb6:	e047      	b.n	8005c48 <HAL_RTCEx_DeactivateWakeUpTimer+0xa8>
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	2201      	movs	r2, #1
 8005bbc:	771a      	strb	r2, [r3, #28]
 8005bbe:	687b      	ldr	r3, [r7, #4]
 8005bc0:	2202      	movs	r2, #2
 8005bc2:	775a      	strb	r2, [r3, #29]
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	22ca      	movs	r2, #202	; 0xca
 8005bca:	625a      	str	r2, [r3, #36]	; 0x24
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	681b      	ldr	r3, [r3, #0]
 8005bd0:	2253      	movs	r2, #83	; 0x53
 8005bd2:	625a      	str	r2, [r3, #36]	; 0x24
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	689a      	ldr	r2, [r3, #8]
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005be2:	609a      	str	r2, [r3, #8]
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	689a      	ldr	r2, [r3, #8]
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005bf2:	609a      	str	r2, [r3, #8]
 8005bf4:	f7fe f884 	bl	8003d00 <HAL_GetTick>
 8005bf8:	60f8      	str	r0, [r7, #12]
 8005bfa:	e013      	b.n	8005c24 <HAL_RTCEx_DeactivateWakeUpTimer+0x84>
 8005bfc:	f7fe f880 	bl	8003d00 <HAL_GetTick>
 8005c00:	4602      	mov	r2, r0
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	1ad3      	subs	r3, r2, r3
 8005c06:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005c0a:	d90b      	bls.n	8005c24 <HAL_RTCEx_DeactivateWakeUpTimer+0x84>
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	22ff      	movs	r2, #255	; 0xff
 8005c12:	625a      	str	r2, [r3, #36]	; 0x24
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	2203      	movs	r2, #3
 8005c18:	775a      	strb	r2, [r3, #29]
 8005c1a:	687b      	ldr	r3, [r7, #4]
 8005c1c:	2200      	movs	r2, #0
 8005c1e:	771a      	strb	r2, [r3, #28]
 8005c20:	2303      	movs	r3, #3
 8005c22:	e011      	b.n	8005c48 <HAL_RTCEx_DeactivateWakeUpTimer+0xa8>
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	68db      	ldr	r3, [r3, #12]
 8005c2a:	f003 0304 	and.w	r3, r3, #4
 8005c2e:	2b00      	cmp	r3, #0
 8005c30:	d0e4      	beq.n	8005bfc <HAL_RTCEx_DeactivateWakeUpTimer+0x5c>
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	22ff      	movs	r2, #255	; 0xff
 8005c38:	625a      	str	r2, [r3, #36]	; 0x24
 8005c3a:	687b      	ldr	r3, [r7, #4]
 8005c3c:	2201      	movs	r2, #1
 8005c3e:	775a      	strb	r2, [r3, #29]
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	2200      	movs	r2, #0
 8005c44:	771a      	strb	r2, [r3, #28]
 8005c46:	2300      	movs	r3, #0
 8005c48:	4618      	mov	r0, r3
 8005c4a:	3710      	adds	r7, #16
 8005c4c:	46bd      	mov	sp, r7
 8005c4e:	bd80      	pop	{r7, pc}

08005c50 <HAL_RTCEx_WakeUpTimerIRQHandler>:
 8005c50:	b580      	push	{r7, lr}
 8005c52:	b082      	sub	sp, #8
 8005c54:	af00      	add	r7, sp, #0
 8005c56:	6078      	str	r0, [r7, #4]
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	681b      	ldr	r3, [r3, #0]
 8005c5c:	68db      	ldr	r3, [r3, #12]
 8005c5e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d00b      	beq.n	8005c7e <HAL_RTCEx_WakeUpTimerIRQHandler+0x2e>
 8005c66:	6878      	ldr	r0, [r7, #4]
 8005c68:	f000 f816 	bl	8005c98 <HAL_RTCEx_WakeUpTimerEventCallback>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	68db      	ldr	r3, [r3, #12]
 8005c72:	b2da      	uxtb	r2, r3
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	f462 6290 	orn	r2, r2, #1152	; 0x480
 8005c7c:	60da      	str	r2, [r3, #12]
 8005c7e:	4b05      	ldr	r3, [pc, #20]	; (8005c94 <HAL_RTCEx_WakeUpTimerIRQHandler+0x44>)
 8005c80:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8005c84:	615a      	str	r2, [r3, #20]
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	2201      	movs	r2, #1
 8005c8a:	775a      	strb	r2, [r3, #29]
 8005c8c:	bf00      	nop
 8005c8e:	3708      	adds	r7, #8
 8005c90:	46bd      	mov	sp, r7
 8005c92:	bd80      	pop	{r7, pc}
 8005c94:	40013c00 	.word	0x40013c00

08005c98 <HAL_RTCEx_WakeUpTimerEventCallback>:
 8005c98:	b480      	push	{r7}
 8005c9a:	b083      	sub	sp, #12
 8005c9c:	af00      	add	r7, sp, #0
 8005c9e:	6078      	str	r0, [r7, #4]
 8005ca0:	bf00      	nop
 8005ca2:	370c      	adds	r7, #12
 8005ca4:	46bd      	mov	sp, r7
 8005ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005caa:	4770      	bx	lr

08005cac <HAL_UART_Init>:
 8005cac:	b580      	push	{r7, lr}
 8005cae:	b082      	sub	sp, #8
 8005cb0:	af00      	add	r7, sp, #0
 8005cb2:	6078      	str	r0, [r7, #4]
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2b00      	cmp	r3, #0
 8005cb8:	d101      	bne.n	8005cbe <HAL_UART_Init+0x12>
 8005cba:	2301      	movs	r3, #1
 8005cbc:	e03f      	b.n	8005d3e <HAL_UART_Init+0x92>
 8005cbe:	687b      	ldr	r3, [r7, #4]
 8005cc0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005cc4:	b2db      	uxtb	r3, r3
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d106      	bne.n	8005cd8 <HAL_UART_Init+0x2c>
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	2200      	movs	r2, #0
 8005cce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005cd2:	6878      	ldr	r0, [r7, #4]
 8005cd4:	f7fd fea8 	bl	8003a28 <HAL_UART_MspInit>
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	2224      	movs	r2, #36	; 0x24
 8005cdc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	68da      	ldr	r2, [r3, #12]
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	681b      	ldr	r3, [r3, #0]
 8005cea:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005cee:	60da      	str	r2, [r3, #12]
 8005cf0:	6878      	ldr	r0, [r7, #4]
 8005cf2:	f001 f811 	bl	8006d18 <UART_SetConfig>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	691a      	ldr	r2, [r3, #16]
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8005d04:	611a      	str	r2, [r3, #16]
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	695a      	ldr	r2, [r3, #20]
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005d14:	615a      	str	r2, [r3, #20]
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	68da      	ldr	r2, [r3, #12]
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	681b      	ldr	r3, [r3, #0]
 8005d20:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005d24:	60da      	str	r2, [r3, #12]
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	2200      	movs	r2, #0
 8005d2a:	641a      	str	r2, [r3, #64]	; 0x40
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	2220      	movs	r2, #32
 8005d30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	2220      	movs	r2, #32
 8005d38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005d3c:	2300      	movs	r3, #0
 8005d3e:	4618      	mov	r0, r3
 8005d40:	3708      	adds	r7, #8
 8005d42:	46bd      	mov	sp, r7
 8005d44:	bd80      	pop	{r7, pc}

08005d46 <HAL_UART_Transmit>:
 8005d46:	b580      	push	{r7, lr}
 8005d48:	b08a      	sub	sp, #40	; 0x28
 8005d4a:	af02      	add	r7, sp, #8
 8005d4c:	60f8      	str	r0, [r7, #12]
 8005d4e:	60b9      	str	r1, [r7, #8]
 8005d50:	603b      	str	r3, [r7, #0]
 8005d52:	4613      	mov	r3, r2
 8005d54:	80fb      	strh	r3, [r7, #6]
 8005d56:	2300      	movs	r3, #0
 8005d58:	617b      	str	r3, [r7, #20]
 8005d5a:	68fb      	ldr	r3, [r7, #12]
 8005d5c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005d60:	b2db      	uxtb	r3, r3
 8005d62:	2b20      	cmp	r3, #32
 8005d64:	d17c      	bne.n	8005e60 <HAL_UART_Transmit+0x11a>
 8005d66:	68bb      	ldr	r3, [r7, #8]
 8005d68:	2b00      	cmp	r3, #0
 8005d6a:	d002      	beq.n	8005d72 <HAL_UART_Transmit+0x2c>
 8005d6c:	88fb      	ldrh	r3, [r7, #6]
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d101      	bne.n	8005d76 <HAL_UART_Transmit+0x30>
 8005d72:	2301      	movs	r3, #1
 8005d74:	e075      	b.n	8005e62 <HAL_UART_Transmit+0x11c>
 8005d76:	68fb      	ldr	r3, [r7, #12]
 8005d78:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005d7c:	2b01      	cmp	r3, #1
 8005d7e:	d101      	bne.n	8005d84 <HAL_UART_Transmit+0x3e>
 8005d80:	2302      	movs	r3, #2
 8005d82:	e06e      	b.n	8005e62 <HAL_UART_Transmit+0x11c>
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	2201      	movs	r2, #1
 8005d88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d8c:	68fb      	ldr	r3, [r7, #12]
 8005d8e:	2200      	movs	r2, #0
 8005d90:	641a      	str	r2, [r3, #64]	; 0x40
 8005d92:	68fb      	ldr	r3, [r7, #12]
 8005d94:	2221      	movs	r2, #33	; 0x21
 8005d96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d9a:	f7fd ffb1 	bl	8003d00 <HAL_GetTick>
 8005d9e:	6178      	str	r0, [r7, #20]
 8005da0:	68fb      	ldr	r3, [r7, #12]
 8005da2:	88fa      	ldrh	r2, [r7, #6]
 8005da4:	849a      	strh	r2, [r3, #36]	; 0x24
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	88fa      	ldrh	r2, [r7, #6]
 8005daa:	84da      	strh	r2, [r3, #38]	; 0x26
 8005dac:	68fb      	ldr	r3, [r7, #12]
 8005dae:	689b      	ldr	r3, [r3, #8]
 8005db0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005db4:	d108      	bne.n	8005dc8 <HAL_UART_Transmit+0x82>
 8005db6:	68fb      	ldr	r3, [r7, #12]
 8005db8:	691b      	ldr	r3, [r3, #16]
 8005dba:	2b00      	cmp	r3, #0
 8005dbc:	d104      	bne.n	8005dc8 <HAL_UART_Transmit+0x82>
 8005dbe:	2300      	movs	r3, #0
 8005dc0:	61fb      	str	r3, [r7, #28]
 8005dc2:	68bb      	ldr	r3, [r7, #8]
 8005dc4:	61bb      	str	r3, [r7, #24]
 8005dc6:	e003      	b.n	8005dd0 <HAL_UART_Transmit+0x8a>
 8005dc8:	68bb      	ldr	r3, [r7, #8]
 8005dca:	61fb      	str	r3, [r7, #28]
 8005dcc:	2300      	movs	r3, #0
 8005dce:	61bb      	str	r3, [r7, #24]
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	2200      	movs	r2, #0
 8005dd4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005dd8:	e02a      	b.n	8005e30 <HAL_UART_Transmit+0xea>
 8005dda:	683b      	ldr	r3, [r7, #0]
 8005ddc:	9300      	str	r3, [sp, #0]
 8005dde:	697b      	ldr	r3, [r7, #20]
 8005de0:	2200      	movs	r2, #0
 8005de2:	2180      	movs	r1, #128	; 0x80
 8005de4:	68f8      	ldr	r0, [r7, #12]
 8005de6:	f000 fcc9 	bl	800677c <UART_WaitOnFlagUntilTimeout>
 8005dea:	4603      	mov	r3, r0
 8005dec:	2b00      	cmp	r3, #0
 8005dee:	d001      	beq.n	8005df4 <HAL_UART_Transmit+0xae>
 8005df0:	2303      	movs	r3, #3
 8005df2:	e036      	b.n	8005e62 <HAL_UART_Transmit+0x11c>
 8005df4:	69fb      	ldr	r3, [r7, #28]
 8005df6:	2b00      	cmp	r3, #0
 8005df8:	d10b      	bne.n	8005e12 <HAL_UART_Transmit+0xcc>
 8005dfa:	69bb      	ldr	r3, [r7, #24]
 8005dfc:	881b      	ldrh	r3, [r3, #0]
 8005dfe:	461a      	mov	r2, r3
 8005e00:	68fb      	ldr	r3, [r7, #12]
 8005e02:	681b      	ldr	r3, [r3, #0]
 8005e04:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005e08:	605a      	str	r2, [r3, #4]
 8005e0a:	69bb      	ldr	r3, [r7, #24]
 8005e0c:	3302      	adds	r3, #2
 8005e0e:	61bb      	str	r3, [r7, #24]
 8005e10:	e007      	b.n	8005e22 <HAL_UART_Transmit+0xdc>
 8005e12:	69fb      	ldr	r3, [r7, #28]
 8005e14:	781a      	ldrb	r2, [r3, #0]
 8005e16:	68fb      	ldr	r3, [r7, #12]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	605a      	str	r2, [r3, #4]
 8005e1c:	69fb      	ldr	r3, [r7, #28]
 8005e1e:	3301      	adds	r3, #1
 8005e20:	61fb      	str	r3, [r7, #28]
 8005e22:	68fb      	ldr	r3, [r7, #12]
 8005e24:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005e26:	b29b      	uxth	r3, r3
 8005e28:	3b01      	subs	r3, #1
 8005e2a:	b29a      	uxth	r2, r3
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	84da      	strh	r2, [r3, #38]	; 0x26
 8005e30:	68fb      	ldr	r3, [r7, #12]
 8005e32:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005e34:	b29b      	uxth	r3, r3
 8005e36:	2b00      	cmp	r3, #0
 8005e38:	d1cf      	bne.n	8005dda <HAL_UART_Transmit+0x94>
 8005e3a:	683b      	ldr	r3, [r7, #0]
 8005e3c:	9300      	str	r3, [sp, #0]
 8005e3e:	697b      	ldr	r3, [r7, #20]
 8005e40:	2200      	movs	r2, #0
 8005e42:	2140      	movs	r1, #64	; 0x40
 8005e44:	68f8      	ldr	r0, [r7, #12]
 8005e46:	f000 fc99 	bl	800677c <UART_WaitOnFlagUntilTimeout>
 8005e4a:	4603      	mov	r3, r0
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d001      	beq.n	8005e54 <HAL_UART_Transmit+0x10e>
 8005e50:	2303      	movs	r3, #3
 8005e52:	e006      	b.n	8005e62 <HAL_UART_Transmit+0x11c>
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	2220      	movs	r2, #32
 8005e58:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e5c:	2300      	movs	r3, #0
 8005e5e:	e000      	b.n	8005e62 <HAL_UART_Transmit+0x11c>
 8005e60:	2302      	movs	r3, #2
 8005e62:	4618      	mov	r0, r3
 8005e64:	3720      	adds	r7, #32
 8005e66:	46bd      	mov	sp, r7
 8005e68:	bd80      	pop	{r7, pc}

08005e6a <HAL_UART_DMAStop>:
 8005e6a:	b580      	push	{r7, lr}
 8005e6c:	b090      	sub	sp, #64	; 0x40
 8005e6e:	af00      	add	r7, sp, #0
 8005e70:	6078      	str	r0, [r7, #4]
 8005e72:	2300      	movs	r3, #0
 8005e74:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	695b      	ldr	r3, [r3, #20]
 8005e7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e80:	2b80      	cmp	r3, #128	; 0x80
 8005e82:	bf0c      	ite	eq
 8005e84:	2301      	moveq	r3, #1
 8005e86:	2300      	movne	r3, #0
 8005e88:	b2db      	uxtb	r3, r3
 8005e8a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005e8c:	687b      	ldr	r3, [r7, #4]
 8005e8e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005e92:	b2db      	uxtb	r3, r3
 8005e94:	2b21      	cmp	r3, #33	; 0x21
 8005e96:	d128      	bne.n	8005eea <HAL_UART_DMAStop+0x80>
 8005e98:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005e9a:	2b00      	cmp	r3, #0
 8005e9c:	d025      	beq.n	8005eea <HAL_UART_DMAStop+0x80>
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	3314      	adds	r3, #20
 8005ea4:	627b      	str	r3, [r7, #36]	; 0x24
 8005ea6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ea8:	e853 3f00 	ldrex	r3, [r3]
 8005eac:	623b      	str	r3, [r7, #32]
 8005eae:	6a3b      	ldr	r3, [r7, #32]
 8005eb0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005eb4:	63bb      	str	r3, [r7, #56]	; 0x38
 8005eb6:	687b      	ldr	r3, [r7, #4]
 8005eb8:	681b      	ldr	r3, [r3, #0]
 8005eba:	3314      	adds	r3, #20
 8005ebc:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8005ebe:	633a      	str	r2, [r7, #48]	; 0x30
 8005ec0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005ec2:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8005ec4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005ec6:	e841 2300 	strex	r3, r2, [r1]
 8005eca:	62bb      	str	r3, [r7, #40]	; 0x28
 8005ecc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005ece:	2b00      	cmp	r3, #0
 8005ed0:	d1e5      	bne.n	8005e9e <HAL_UART_DMAStop+0x34>
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005ed6:	2b00      	cmp	r3, #0
 8005ed8:	d004      	beq.n	8005ee4 <HAL_UART_DMAStop+0x7a>
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005ede:	4618      	mov	r0, r3
 8005ee0:	f7fe f976 	bl	80041d0 <HAL_DMA_Abort>
 8005ee4:	6878      	ldr	r0, [r7, #4]
 8005ee6:	f000 fd55 	bl	8006994 <UART_EndTxTransfer>
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	695b      	ldr	r3, [r3, #20]
 8005ef0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ef4:	2b40      	cmp	r3, #64	; 0x40
 8005ef6:	bf0c      	ite	eq
 8005ef8:	2301      	moveq	r3, #1
 8005efa:	2300      	movne	r3, #0
 8005efc:	b2db      	uxtb	r3, r3
 8005efe:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005f06:	b2db      	uxtb	r3, r3
 8005f08:	2b22      	cmp	r3, #34	; 0x22
 8005f0a:	d128      	bne.n	8005f5e <HAL_UART_DMAStop+0xf4>
 8005f0c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005f0e:	2b00      	cmp	r3, #0
 8005f10:	d025      	beq.n	8005f5e <HAL_UART_DMAStop+0xf4>
 8005f12:	687b      	ldr	r3, [r7, #4]
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	3314      	adds	r3, #20
 8005f18:	613b      	str	r3, [r7, #16]
 8005f1a:	693b      	ldr	r3, [r7, #16]
 8005f1c:	e853 3f00 	ldrex	r3, [r3]
 8005f20:	60fb      	str	r3, [r7, #12]
 8005f22:	68fb      	ldr	r3, [r7, #12]
 8005f24:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005f28:	637b      	str	r3, [r7, #52]	; 0x34
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	681b      	ldr	r3, [r3, #0]
 8005f2e:	3314      	adds	r3, #20
 8005f30:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005f32:	61fa      	str	r2, [r7, #28]
 8005f34:	61bb      	str	r3, [r7, #24]
 8005f36:	69b9      	ldr	r1, [r7, #24]
 8005f38:	69fa      	ldr	r2, [r7, #28]
 8005f3a:	e841 2300 	strex	r3, r2, [r1]
 8005f3e:	617b      	str	r3, [r7, #20]
 8005f40:	697b      	ldr	r3, [r7, #20]
 8005f42:	2b00      	cmp	r3, #0
 8005f44:	d1e5      	bne.n	8005f12 <HAL_UART_DMAStop+0xa8>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f4a:	2b00      	cmp	r3, #0
 8005f4c:	d004      	beq.n	8005f58 <HAL_UART_DMAStop+0xee>
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f52:	4618      	mov	r0, r3
 8005f54:	f7fe f93c 	bl	80041d0 <HAL_DMA_Abort>
 8005f58:	6878      	ldr	r0, [r7, #4]
 8005f5a:	f000 fd43 	bl	80069e4 <UART_EndRxTransfer>
 8005f5e:	2300      	movs	r3, #0
 8005f60:	4618      	mov	r0, r3
 8005f62:	3740      	adds	r7, #64	; 0x40
 8005f64:	46bd      	mov	sp, r7
 8005f66:	bd80      	pop	{r7, pc}

08005f68 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8005f68:	b580      	push	{r7, lr}
 8005f6a:	b08c      	sub	sp, #48	; 0x30
 8005f6c:	af00      	add	r7, sp, #0
 8005f6e:	60f8      	str	r0, [r7, #12]
 8005f70:	60b9      	str	r1, [r7, #8]
 8005f72:	4613      	mov	r3, r2
 8005f74:	80fb      	strh	r3, [r7, #6]
 8005f76:	68fb      	ldr	r3, [r7, #12]
 8005f78:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005f7c:	b2db      	uxtb	r3, r3
 8005f7e:	2b20      	cmp	r3, #32
 8005f80:	d152      	bne.n	8006028 <HAL_UARTEx_ReceiveToIdle_DMA+0xc0>
 8005f82:	68bb      	ldr	r3, [r7, #8]
 8005f84:	2b00      	cmp	r3, #0
 8005f86:	d002      	beq.n	8005f8e <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8005f88:	88fb      	ldrh	r3, [r7, #6]
 8005f8a:	2b00      	cmp	r3, #0
 8005f8c:	d101      	bne.n	8005f92 <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
 8005f8e:	2301      	movs	r3, #1
 8005f90:	e04b      	b.n	800602a <HAL_UARTEx_ReceiveToIdle_DMA+0xc2>
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005f98:	2b01      	cmp	r3, #1
 8005f9a:	d101      	bne.n	8005fa0 <HAL_UARTEx_ReceiveToIdle_DMA+0x38>
 8005f9c:	2302      	movs	r3, #2
 8005f9e:	e044      	b.n	800602a <HAL_UARTEx_ReceiveToIdle_DMA+0xc2>
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	2201      	movs	r2, #1
 8005fa4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005fa8:	68fb      	ldr	r3, [r7, #12]
 8005faa:	2201      	movs	r2, #1
 8005fac:	631a      	str	r2, [r3, #48]	; 0x30
 8005fae:	88fb      	ldrh	r3, [r7, #6]
 8005fb0:	461a      	mov	r2, r3
 8005fb2:	68b9      	ldr	r1, [r7, #8]
 8005fb4:	68f8      	ldr	r0, [r7, #12]
 8005fb6:	f000 fc4f 	bl	8006858 <UART_Start_Receive_DMA>
 8005fba:	4603      	mov	r3, r0
 8005fbc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8005fc0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8005fc4:	2b00      	cmp	r3, #0
 8005fc6:	d12c      	bne.n	8006022 <HAL_UARTEx_ReceiveToIdle_DMA+0xba>
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fcc:	2b01      	cmp	r3, #1
 8005fce:	d125      	bne.n	800601c <HAL_UARTEx_ReceiveToIdle_DMA+0xb4>
 8005fd0:	2300      	movs	r3, #0
 8005fd2:	613b      	str	r3, [r7, #16]
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	681b      	ldr	r3, [r3, #0]
 8005fda:	613b      	str	r3, [r7, #16]
 8005fdc:	68fb      	ldr	r3, [r7, #12]
 8005fde:	681b      	ldr	r3, [r3, #0]
 8005fe0:	685b      	ldr	r3, [r3, #4]
 8005fe2:	613b      	str	r3, [r7, #16]
 8005fe4:	693b      	ldr	r3, [r7, #16]
 8005fe6:	68fb      	ldr	r3, [r7, #12]
 8005fe8:	681b      	ldr	r3, [r3, #0]
 8005fea:	330c      	adds	r3, #12
 8005fec:	61bb      	str	r3, [r7, #24]
 8005fee:	69bb      	ldr	r3, [r7, #24]
 8005ff0:	e853 3f00 	ldrex	r3, [r3]
 8005ff4:	617b      	str	r3, [r7, #20]
 8005ff6:	697b      	ldr	r3, [r7, #20]
 8005ff8:	f043 0310 	orr.w	r3, r3, #16
 8005ffc:	62bb      	str	r3, [r7, #40]	; 0x28
 8005ffe:	68fb      	ldr	r3, [r7, #12]
 8006000:	681b      	ldr	r3, [r3, #0]
 8006002:	330c      	adds	r3, #12
 8006004:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006006:	627a      	str	r2, [r7, #36]	; 0x24
 8006008:	623b      	str	r3, [r7, #32]
 800600a:	6a39      	ldr	r1, [r7, #32]
 800600c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800600e:	e841 2300 	strex	r3, r2, [r1]
 8006012:	61fb      	str	r3, [r7, #28]
 8006014:	69fb      	ldr	r3, [r7, #28]
 8006016:	2b00      	cmp	r3, #0
 8006018:	d1e5      	bne.n	8005fe6 <HAL_UARTEx_ReceiveToIdle_DMA+0x7e>
 800601a:	e002      	b.n	8006022 <HAL_UARTEx_ReceiveToIdle_DMA+0xba>
 800601c:	2301      	movs	r3, #1
 800601e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8006022:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8006026:	e000      	b.n	800602a <HAL_UARTEx_ReceiveToIdle_DMA+0xc2>
 8006028:	2302      	movs	r3, #2
 800602a:	4618      	mov	r0, r3
 800602c:	3730      	adds	r7, #48	; 0x30
 800602e:	46bd      	mov	sp, r7
 8006030:	bd80      	pop	{r7, pc}
	...

08006034 <HAL_UART_IRQHandler>:
 8006034:	b580      	push	{r7, lr}
 8006036:	b0ba      	sub	sp, #232	; 0xe8
 8006038:	af00      	add	r7, sp, #0
 800603a:	6078      	str	r0, [r7, #4]
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	68db      	ldr	r3, [r3, #12]
 800604c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8006050:	687b      	ldr	r3, [r7, #4]
 8006052:	681b      	ldr	r3, [r3, #0]
 8006054:	695b      	ldr	r3, [r3, #20]
 8006056:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800605a:	2300      	movs	r3, #0
 800605c:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006060:	2300      	movs	r3, #0
 8006062:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8006066:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800606a:	f003 030f 	and.w	r3, r3, #15
 800606e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006072:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8006076:	2b00      	cmp	r3, #0
 8006078:	d10f      	bne.n	800609a <HAL_UART_IRQHandler+0x66>
 800607a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800607e:	f003 0320 	and.w	r3, r3, #32
 8006082:	2b00      	cmp	r3, #0
 8006084:	d009      	beq.n	800609a <HAL_UART_IRQHandler+0x66>
 8006086:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800608a:	f003 0320 	and.w	r3, r3, #32
 800608e:	2b00      	cmp	r3, #0
 8006090:	d003      	beq.n	800609a <HAL_UART_IRQHandler+0x66>
 8006092:	6878      	ldr	r0, [r7, #4]
 8006094:	f000 fd85 	bl	8006ba2 <UART_Receive_IT>
 8006098:	e256      	b.n	8006548 <HAL_UART_IRQHandler+0x514>
 800609a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800609e:	2b00      	cmp	r3, #0
 80060a0:	f000 80de 	beq.w	8006260 <HAL_UART_IRQHandler+0x22c>
 80060a4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80060a8:	f003 0301 	and.w	r3, r3, #1
 80060ac:	2b00      	cmp	r3, #0
 80060ae:	d106      	bne.n	80060be <HAL_UART_IRQHandler+0x8a>
 80060b0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80060b4:	f403 7390 	and.w	r3, r3, #288	; 0x120
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	f000 80d1 	beq.w	8006260 <HAL_UART_IRQHandler+0x22c>
 80060be:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80060c2:	f003 0301 	and.w	r3, r3, #1
 80060c6:	2b00      	cmp	r3, #0
 80060c8:	d00b      	beq.n	80060e2 <HAL_UART_IRQHandler+0xae>
 80060ca:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80060ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80060d2:	2b00      	cmp	r3, #0
 80060d4:	d005      	beq.n	80060e2 <HAL_UART_IRQHandler+0xae>
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060da:	f043 0201 	orr.w	r2, r3, #1
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	641a      	str	r2, [r3, #64]	; 0x40
 80060e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80060e6:	f003 0304 	and.w	r3, r3, #4
 80060ea:	2b00      	cmp	r3, #0
 80060ec:	d00b      	beq.n	8006106 <HAL_UART_IRQHandler+0xd2>
 80060ee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80060f2:	f003 0301 	and.w	r3, r3, #1
 80060f6:	2b00      	cmp	r3, #0
 80060f8:	d005      	beq.n	8006106 <HAL_UART_IRQHandler+0xd2>
 80060fa:	687b      	ldr	r3, [r7, #4]
 80060fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060fe:	f043 0202 	orr.w	r2, r3, #2
 8006102:	687b      	ldr	r3, [r7, #4]
 8006104:	641a      	str	r2, [r3, #64]	; 0x40
 8006106:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800610a:	f003 0302 	and.w	r3, r3, #2
 800610e:	2b00      	cmp	r3, #0
 8006110:	d00b      	beq.n	800612a <HAL_UART_IRQHandler+0xf6>
 8006112:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006116:	f003 0301 	and.w	r3, r3, #1
 800611a:	2b00      	cmp	r3, #0
 800611c:	d005      	beq.n	800612a <HAL_UART_IRQHandler+0xf6>
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006122:	f043 0204 	orr.w	r2, r3, #4
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	641a      	str	r2, [r3, #64]	; 0x40
 800612a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800612e:	f003 0308 	and.w	r3, r3, #8
 8006132:	2b00      	cmp	r3, #0
 8006134:	d011      	beq.n	800615a <HAL_UART_IRQHandler+0x126>
 8006136:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800613a:	f003 0320 	and.w	r3, r3, #32
 800613e:	2b00      	cmp	r3, #0
 8006140:	d105      	bne.n	800614e <HAL_UART_IRQHandler+0x11a>
 8006142:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006146:	f003 0301 	and.w	r3, r3, #1
 800614a:	2b00      	cmp	r3, #0
 800614c:	d005      	beq.n	800615a <HAL_UART_IRQHandler+0x126>
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006152:	f043 0208 	orr.w	r2, r3, #8
 8006156:	687b      	ldr	r3, [r7, #4]
 8006158:	641a      	str	r2, [r3, #64]	; 0x40
 800615a:	687b      	ldr	r3, [r7, #4]
 800615c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800615e:	2b00      	cmp	r3, #0
 8006160:	f000 81ed 	beq.w	800653e <HAL_UART_IRQHandler+0x50a>
 8006164:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006168:	f003 0320 	and.w	r3, r3, #32
 800616c:	2b00      	cmp	r3, #0
 800616e:	d008      	beq.n	8006182 <HAL_UART_IRQHandler+0x14e>
 8006170:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006174:	f003 0320 	and.w	r3, r3, #32
 8006178:	2b00      	cmp	r3, #0
 800617a:	d002      	beq.n	8006182 <HAL_UART_IRQHandler+0x14e>
 800617c:	6878      	ldr	r0, [r7, #4]
 800617e:	f000 fd10 	bl	8006ba2 <UART_Receive_IT>
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	695b      	ldr	r3, [r3, #20]
 8006188:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800618c:	2b40      	cmp	r3, #64	; 0x40
 800618e:	bf0c      	ite	eq
 8006190:	2301      	moveq	r3, #1
 8006192:	2300      	movne	r3, #0
 8006194:	b2db      	uxtb	r3, r3
 8006196:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800619e:	f003 0308 	and.w	r3, r3, #8
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d103      	bne.n	80061ae <HAL_UART_IRQHandler+0x17a>
 80061a6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80061aa:	2b00      	cmp	r3, #0
 80061ac:	d04f      	beq.n	800624e <HAL_UART_IRQHandler+0x21a>
 80061ae:	6878      	ldr	r0, [r7, #4]
 80061b0:	f000 fc18 	bl	80069e4 <UART_EndRxTransfer>
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	681b      	ldr	r3, [r3, #0]
 80061b8:	695b      	ldr	r3, [r3, #20]
 80061ba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80061be:	2b40      	cmp	r3, #64	; 0x40
 80061c0:	d141      	bne.n	8006246 <HAL_UART_IRQHandler+0x212>
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	3314      	adds	r3, #20
 80061c8:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80061cc:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80061d0:	e853 3f00 	ldrex	r3, [r3]
 80061d4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80061d8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80061dc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80061e0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	3314      	adds	r3, #20
 80061ea:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80061ee:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80061f2:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80061f6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80061fa:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80061fe:	e841 2300 	strex	r3, r2, [r1]
 8006202:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8006206:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800620a:	2b00      	cmp	r3, #0
 800620c:	d1d9      	bne.n	80061c2 <HAL_UART_IRQHandler+0x18e>
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006212:	2b00      	cmp	r3, #0
 8006214:	d013      	beq.n	800623e <HAL_UART_IRQHandler+0x20a>
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800621a:	4a7d      	ldr	r2, [pc, #500]	; (8006410 <HAL_UART_IRQHandler+0x3dc>)
 800621c:	651a      	str	r2, [r3, #80]	; 0x50
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006222:	4618      	mov	r0, r3
 8006224:	f7fe f844 	bl	80042b0 <HAL_DMA_Abort_IT>
 8006228:	4603      	mov	r3, r0
 800622a:	2b00      	cmp	r3, #0
 800622c:	d016      	beq.n	800625c <HAL_UART_IRQHandler+0x228>
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006232:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006234:	687a      	ldr	r2, [r7, #4]
 8006236:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8006238:	4610      	mov	r0, r2
 800623a:	4798      	blx	r3
 800623c:	e00e      	b.n	800625c <HAL_UART_IRQHandler+0x228>
 800623e:	6878      	ldr	r0, [r7, #4]
 8006240:	f7fa ff54 	bl	80010ec <HAL_UART_ErrorCallback>
 8006244:	e00a      	b.n	800625c <HAL_UART_IRQHandler+0x228>
 8006246:	6878      	ldr	r0, [r7, #4]
 8006248:	f7fa ff50 	bl	80010ec <HAL_UART_ErrorCallback>
 800624c:	e006      	b.n	800625c <HAL_UART_IRQHandler+0x228>
 800624e:	6878      	ldr	r0, [r7, #4]
 8006250:	f7fa ff4c 	bl	80010ec <HAL_UART_ErrorCallback>
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	2200      	movs	r2, #0
 8006258:	641a      	str	r2, [r3, #64]	; 0x40
 800625a:	e170      	b.n	800653e <HAL_UART_IRQHandler+0x50a>
 800625c:	bf00      	nop
 800625e:	e16e      	b.n	800653e <HAL_UART_IRQHandler+0x50a>
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006264:	2b01      	cmp	r3, #1
 8006266:	f040 814a 	bne.w	80064fe <HAL_UART_IRQHandler+0x4ca>
 800626a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800626e:	f003 0310 	and.w	r3, r3, #16
 8006272:	2b00      	cmp	r3, #0
 8006274:	f000 8143 	beq.w	80064fe <HAL_UART_IRQHandler+0x4ca>
 8006278:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800627c:	f003 0310 	and.w	r3, r3, #16
 8006280:	2b00      	cmp	r3, #0
 8006282:	f000 813c 	beq.w	80064fe <HAL_UART_IRQHandler+0x4ca>
 8006286:	2300      	movs	r3, #0
 8006288:	60bb      	str	r3, [r7, #8]
 800628a:	687b      	ldr	r3, [r7, #4]
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	60bb      	str	r3, [r7, #8]
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	685b      	ldr	r3, [r3, #4]
 8006298:	60bb      	str	r3, [r7, #8]
 800629a:	68bb      	ldr	r3, [r7, #8]
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	695b      	ldr	r3, [r3, #20]
 80062a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80062a6:	2b40      	cmp	r3, #64	; 0x40
 80062a8:	f040 80b4 	bne.w	8006414 <HAL_UART_IRQHandler+0x3e0>
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	685b      	ldr	r3, [r3, #4]
 80062b4:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 80062b8:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 80062bc:	2b00      	cmp	r3, #0
 80062be:	f000 8140 	beq.w	8006542 <HAL_UART_IRQHandler+0x50e>
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80062c6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80062ca:	429a      	cmp	r2, r3
 80062cc:	f080 8139 	bcs.w	8006542 <HAL_UART_IRQHandler+0x50e>
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80062d6:	85da      	strh	r2, [r3, #46]	; 0x2e
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062dc:	69db      	ldr	r3, [r3, #28]
 80062de:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80062e2:	f000 8088 	beq.w	80063f6 <HAL_UART_IRQHandler+0x3c2>
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	330c      	adds	r3, #12
 80062ec:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80062f0:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80062f4:	e853 3f00 	ldrex	r3, [r3]
 80062f8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80062fc:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8006300:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006304:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	681b      	ldr	r3, [r3, #0]
 800630c:	330c      	adds	r3, #12
 800630e:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8006312:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8006316:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800631a:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800631e:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8006322:	e841 2300 	strex	r3, r2, [r1]
 8006326:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800632a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800632e:	2b00      	cmp	r3, #0
 8006330:	d1d9      	bne.n	80062e6 <HAL_UART_IRQHandler+0x2b2>
 8006332:	687b      	ldr	r3, [r7, #4]
 8006334:	681b      	ldr	r3, [r3, #0]
 8006336:	3314      	adds	r3, #20
 8006338:	677b      	str	r3, [r7, #116]	; 0x74
 800633a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800633c:	e853 3f00 	ldrex	r3, [r3]
 8006340:	673b      	str	r3, [r7, #112]	; 0x70
 8006342:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8006344:	f023 0301 	bic.w	r3, r3, #1
 8006348:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	3314      	adds	r3, #20
 8006352:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8006356:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800635a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800635c:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800635e:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8006362:	e841 2300 	strex	r3, r2, [r1]
 8006366:	67bb      	str	r3, [r7, #120]	; 0x78
 8006368:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800636a:	2b00      	cmp	r3, #0
 800636c:	d1e1      	bne.n	8006332 <HAL_UART_IRQHandler+0x2fe>
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	3314      	adds	r3, #20
 8006374:	663b      	str	r3, [r7, #96]	; 0x60
 8006376:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006378:	e853 3f00 	ldrex	r3, [r3]
 800637c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800637e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006380:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006384:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	3314      	adds	r3, #20
 800638e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8006392:	66fa      	str	r2, [r7, #108]	; 0x6c
 8006394:	66bb      	str	r3, [r7, #104]	; 0x68
 8006396:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8006398:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800639a:	e841 2300 	strex	r3, r2, [r1]
 800639e:	667b      	str	r3, [r7, #100]	; 0x64
 80063a0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d1e3      	bne.n	800636e <HAL_UART_IRQHandler+0x33a>
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	2220      	movs	r2, #32
 80063aa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	2200      	movs	r2, #0
 80063b2:	631a      	str	r2, [r3, #48]	; 0x30
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	330c      	adds	r3, #12
 80063ba:	64fb      	str	r3, [r7, #76]	; 0x4c
 80063bc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80063be:	e853 3f00 	ldrex	r3, [r3]
 80063c2:	64bb      	str	r3, [r7, #72]	; 0x48
 80063c4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80063c6:	f023 0310 	bic.w	r3, r3, #16
 80063ca:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80063ce:	687b      	ldr	r3, [r7, #4]
 80063d0:	681b      	ldr	r3, [r3, #0]
 80063d2:	330c      	adds	r3, #12
 80063d4:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80063d8:	65ba      	str	r2, [r7, #88]	; 0x58
 80063da:	657b      	str	r3, [r7, #84]	; 0x54
 80063dc:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80063de:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80063e0:	e841 2300 	strex	r3, r2, [r1]
 80063e4:	653b      	str	r3, [r7, #80]	; 0x50
 80063e6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80063e8:	2b00      	cmp	r3, #0
 80063ea:	d1e3      	bne.n	80063b4 <HAL_UART_IRQHandler+0x380>
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063f0:	4618      	mov	r0, r3
 80063f2:	f7fd feed 	bl	80041d0 <HAL_DMA_Abort>
 80063f6:	687b      	ldr	r3, [r7, #4]
 80063f8:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80063fa:	687b      	ldr	r3, [r7, #4]
 80063fc:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80063fe:	b29b      	uxth	r3, r3
 8006400:	1ad3      	subs	r3, r2, r3
 8006402:	b29b      	uxth	r3, r3
 8006404:	4619      	mov	r1, r3
 8006406:	6878      	ldr	r0, [r7, #4]
 8006408:	f7fa fe5e 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 800640c:	e099      	b.n	8006542 <HAL_UART_IRQHandler+0x50e>
 800640e:	bf00      	nop
 8006410:	08006aab 	.word	0x08006aab
 8006414:	687b      	ldr	r3, [r7, #4]
 8006416:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8006418:	687b      	ldr	r3, [r7, #4]
 800641a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800641c:	b29b      	uxth	r3, r3
 800641e:	1ad3      	subs	r3, r2, r3
 8006420:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006428:	b29b      	uxth	r3, r3
 800642a:	2b00      	cmp	r3, #0
 800642c:	f000 808b 	beq.w	8006546 <HAL_UART_IRQHandler+0x512>
 8006430:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8006434:	2b00      	cmp	r3, #0
 8006436:	f000 8086 	beq.w	8006546 <HAL_UART_IRQHandler+0x512>
 800643a:	687b      	ldr	r3, [r7, #4]
 800643c:	681b      	ldr	r3, [r3, #0]
 800643e:	330c      	adds	r3, #12
 8006440:	63bb      	str	r3, [r7, #56]	; 0x38
 8006442:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006444:	e853 3f00 	ldrex	r3, [r3]
 8006448:	637b      	str	r3, [r7, #52]	; 0x34
 800644a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800644c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006450:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	330c      	adds	r3, #12
 800645a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800645e:	647a      	str	r2, [r7, #68]	; 0x44
 8006460:	643b      	str	r3, [r7, #64]	; 0x40
 8006462:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8006464:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006466:	e841 2300 	strex	r3, r2, [r1]
 800646a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800646c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800646e:	2b00      	cmp	r3, #0
 8006470:	d1e3      	bne.n	800643a <HAL_UART_IRQHandler+0x406>
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	3314      	adds	r3, #20
 8006478:	627b      	str	r3, [r7, #36]	; 0x24
 800647a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800647c:	e853 3f00 	ldrex	r3, [r3]
 8006480:	623b      	str	r3, [r7, #32]
 8006482:	6a3b      	ldr	r3, [r7, #32]
 8006484:	f023 0301 	bic.w	r3, r3, #1
 8006488:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	681b      	ldr	r3, [r3, #0]
 8006490:	3314      	adds	r3, #20
 8006492:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8006496:	633a      	str	r2, [r7, #48]	; 0x30
 8006498:	62fb      	str	r3, [r7, #44]	; 0x2c
 800649a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800649c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800649e:	e841 2300 	strex	r3, r2, [r1]
 80064a2:	62bb      	str	r3, [r7, #40]	; 0x28
 80064a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d1e3      	bne.n	8006472 <HAL_UART_IRQHandler+0x43e>
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	2220      	movs	r2, #32
 80064ae:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	2200      	movs	r2, #0
 80064b6:	631a      	str	r2, [r3, #48]	; 0x30
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	681b      	ldr	r3, [r3, #0]
 80064bc:	330c      	adds	r3, #12
 80064be:	613b      	str	r3, [r7, #16]
 80064c0:	693b      	ldr	r3, [r7, #16]
 80064c2:	e853 3f00 	ldrex	r3, [r3]
 80064c6:	60fb      	str	r3, [r7, #12]
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	f023 0310 	bic.w	r3, r3, #16
 80064ce:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	681b      	ldr	r3, [r3, #0]
 80064d6:	330c      	adds	r3, #12
 80064d8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 80064dc:	61fa      	str	r2, [r7, #28]
 80064de:	61bb      	str	r3, [r7, #24]
 80064e0:	69b9      	ldr	r1, [r7, #24]
 80064e2:	69fa      	ldr	r2, [r7, #28]
 80064e4:	e841 2300 	strex	r3, r2, [r1]
 80064e8:	617b      	str	r3, [r7, #20]
 80064ea:	697b      	ldr	r3, [r7, #20]
 80064ec:	2b00      	cmp	r3, #0
 80064ee:	d1e3      	bne.n	80064b8 <HAL_UART_IRQHandler+0x484>
 80064f0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80064f4:	4619      	mov	r1, r3
 80064f6:	6878      	ldr	r0, [r7, #4]
 80064f8:	f7fa fde6 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 80064fc:	e023      	b.n	8006546 <HAL_UART_IRQHandler+0x512>
 80064fe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006502:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006506:	2b00      	cmp	r3, #0
 8006508:	d009      	beq.n	800651e <HAL_UART_IRQHandler+0x4ea>
 800650a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800650e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006512:	2b00      	cmp	r3, #0
 8006514:	d003      	beq.n	800651e <HAL_UART_IRQHandler+0x4ea>
 8006516:	6878      	ldr	r0, [r7, #4]
 8006518:	f000 fadb 	bl	8006ad2 <UART_Transmit_IT>
 800651c:	e014      	b.n	8006548 <HAL_UART_IRQHandler+0x514>
 800651e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006522:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006526:	2b00      	cmp	r3, #0
 8006528:	d00e      	beq.n	8006548 <HAL_UART_IRQHandler+0x514>
 800652a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800652e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006532:	2b00      	cmp	r3, #0
 8006534:	d008      	beq.n	8006548 <HAL_UART_IRQHandler+0x514>
 8006536:	6878      	ldr	r0, [r7, #4]
 8006538:	f000 fb1b 	bl	8006b72 <UART_EndTransmit_IT>
 800653c:	e004      	b.n	8006548 <HAL_UART_IRQHandler+0x514>
 800653e:	bf00      	nop
 8006540:	e002      	b.n	8006548 <HAL_UART_IRQHandler+0x514>
 8006542:	bf00      	nop
 8006544:	e000      	b.n	8006548 <HAL_UART_IRQHandler+0x514>
 8006546:	bf00      	nop
 8006548:	37e8      	adds	r7, #232	; 0xe8
 800654a:	46bd      	mov	sp, r7
 800654c:	bd80      	pop	{r7, pc}
 800654e:	bf00      	nop

08006550 <HAL_UART_TxCpltCallback>:
 8006550:	b480      	push	{r7}
 8006552:	b083      	sub	sp, #12
 8006554:	af00      	add	r7, sp, #0
 8006556:	6078      	str	r0, [r7, #4]
 8006558:	bf00      	nop
 800655a:	370c      	adds	r7, #12
 800655c:	46bd      	mov	sp, r7
 800655e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006562:	4770      	bx	lr

08006564 <HAL_UART_RxCpltCallback>:
 8006564:	b480      	push	{r7}
 8006566:	b083      	sub	sp, #12
 8006568:	af00      	add	r7, sp, #0
 800656a:	6078      	str	r0, [r7, #4]
 800656c:	bf00      	nop
 800656e:	370c      	adds	r7, #12
 8006570:	46bd      	mov	sp, r7
 8006572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006576:	4770      	bx	lr

08006578 <HAL_UART_RxHalfCpltCallback>:
 8006578:	b480      	push	{r7}
 800657a:	b083      	sub	sp, #12
 800657c:	af00      	add	r7, sp, #0
 800657e:	6078      	str	r0, [r7, #4]
 8006580:	bf00      	nop
 8006582:	370c      	adds	r7, #12
 8006584:	46bd      	mov	sp, r7
 8006586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800658a:	4770      	bx	lr

0800658c <UART_DMAReceiveCplt>:
 800658c:	b580      	push	{r7, lr}
 800658e:	b09c      	sub	sp, #112	; 0x70
 8006590:	af00      	add	r7, sp, #0
 8006592:	6078      	str	r0, [r7, #4]
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006598:	66fb      	str	r3, [r7, #108]	; 0x6c
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	681b      	ldr	r3, [r3, #0]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d172      	bne.n	800668e <UART_DMAReceiveCplt+0x102>
 80065a8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80065aa:	2200      	movs	r2, #0
 80065ac:	85da      	strh	r2, [r3, #46]	; 0x2e
 80065ae:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80065b0:	681b      	ldr	r3, [r3, #0]
 80065b2:	330c      	adds	r3, #12
 80065b4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80065b6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80065b8:	e853 3f00 	ldrex	r3, [r3]
 80065bc:	64bb      	str	r3, [r7, #72]	; 0x48
 80065be:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80065c0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80065c4:	66bb      	str	r3, [r7, #104]	; 0x68
 80065c6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80065c8:	681b      	ldr	r3, [r3, #0]
 80065ca:	330c      	adds	r3, #12
 80065cc:	6eba      	ldr	r2, [r7, #104]	; 0x68
 80065ce:	65ba      	str	r2, [r7, #88]	; 0x58
 80065d0:	657b      	str	r3, [r7, #84]	; 0x54
 80065d2:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80065d4:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80065d6:	e841 2300 	strex	r3, r2, [r1]
 80065da:	653b      	str	r3, [r7, #80]	; 0x50
 80065dc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80065de:	2b00      	cmp	r3, #0
 80065e0:	d1e5      	bne.n	80065ae <UART_DMAReceiveCplt+0x22>
 80065e2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80065e4:	681b      	ldr	r3, [r3, #0]
 80065e6:	3314      	adds	r3, #20
 80065e8:	63bb      	str	r3, [r7, #56]	; 0x38
 80065ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80065ec:	e853 3f00 	ldrex	r3, [r3]
 80065f0:	637b      	str	r3, [r7, #52]	; 0x34
 80065f2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80065f4:	f023 0301 	bic.w	r3, r3, #1
 80065f8:	667b      	str	r3, [r7, #100]	; 0x64
 80065fa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80065fc:	681b      	ldr	r3, [r3, #0]
 80065fe:	3314      	adds	r3, #20
 8006600:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8006602:	647a      	str	r2, [r7, #68]	; 0x44
 8006604:	643b      	str	r3, [r7, #64]	; 0x40
 8006606:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8006608:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800660a:	e841 2300 	strex	r3, r2, [r1]
 800660e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006610:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006612:	2b00      	cmp	r3, #0
 8006614:	d1e5      	bne.n	80065e2 <UART_DMAReceiveCplt+0x56>
 8006616:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006618:	681b      	ldr	r3, [r3, #0]
 800661a:	3314      	adds	r3, #20
 800661c:	627b      	str	r3, [r7, #36]	; 0x24
 800661e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006620:	e853 3f00 	ldrex	r3, [r3]
 8006624:	623b      	str	r3, [r7, #32]
 8006626:	6a3b      	ldr	r3, [r7, #32]
 8006628:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800662c:	663b      	str	r3, [r7, #96]	; 0x60
 800662e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	3314      	adds	r3, #20
 8006634:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8006636:	633a      	str	r2, [r7, #48]	; 0x30
 8006638:	62fb      	str	r3, [r7, #44]	; 0x2c
 800663a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800663c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800663e:	e841 2300 	strex	r3, r2, [r1]
 8006642:	62bb      	str	r3, [r7, #40]	; 0x28
 8006644:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006646:	2b00      	cmp	r3, #0
 8006648:	d1e5      	bne.n	8006616 <UART_DMAReceiveCplt+0x8a>
 800664a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800664c:	2220      	movs	r2, #32
 800664e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006652:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006656:	2b01      	cmp	r3, #1
 8006658:	d119      	bne.n	800668e <UART_DMAReceiveCplt+0x102>
 800665a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800665c:	681b      	ldr	r3, [r3, #0]
 800665e:	330c      	adds	r3, #12
 8006660:	613b      	str	r3, [r7, #16]
 8006662:	693b      	ldr	r3, [r7, #16]
 8006664:	e853 3f00 	ldrex	r3, [r3]
 8006668:	60fb      	str	r3, [r7, #12]
 800666a:	68fb      	ldr	r3, [r7, #12]
 800666c:	f023 0310 	bic.w	r3, r3, #16
 8006670:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006672:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006674:	681b      	ldr	r3, [r3, #0]
 8006676:	330c      	adds	r3, #12
 8006678:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800667a:	61fa      	str	r2, [r7, #28]
 800667c:	61bb      	str	r3, [r7, #24]
 800667e:	69b9      	ldr	r1, [r7, #24]
 8006680:	69fa      	ldr	r2, [r7, #28]
 8006682:	e841 2300 	strex	r3, r2, [r1]
 8006686:	617b      	str	r3, [r7, #20]
 8006688:	697b      	ldr	r3, [r7, #20]
 800668a:	2b00      	cmp	r3, #0
 800668c:	d1e5      	bne.n	800665a <UART_DMAReceiveCplt+0xce>
 800668e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006690:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006692:	2b01      	cmp	r3, #1
 8006694:	d106      	bne.n	80066a4 <UART_DMAReceiveCplt+0x118>
 8006696:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006698:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800669a:	4619      	mov	r1, r3
 800669c:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800669e:	f7fa fd13 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 80066a2:	e002      	b.n	80066aa <UART_DMAReceiveCplt+0x11e>
 80066a4:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80066a6:	f7ff ff5d 	bl	8006564 <HAL_UART_RxCpltCallback>
 80066aa:	bf00      	nop
 80066ac:	3770      	adds	r7, #112	; 0x70
 80066ae:	46bd      	mov	sp, r7
 80066b0:	bd80      	pop	{r7, pc}

080066b2 <UART_DMARxHalfCplt>:
 80066b2:	b580      	push	{r7, lr}
 80066b4:	b084      	sub	sp, #16
 80066b6:	af00      	add	r7, sp, #0
 80066b8:	6078      	str	r0, [r7, #4]
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80066be:	60fb      	str	r3, [r7, #12]
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066c4:	2b01      	cmp	r3, #1
 80066c6:	d108      	bne.n	80066da <UART_DMARxHalfCplt+0x28>
 80066c8:	68fb      	ldr	r3, [r7, #12]
 80066ca:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80066cc:	085b      	lsrs	r3, r3, #1
 80066ce:	b29b      	uxth	r3, r3
 80066d0:	4619      	mov	r1, r3
 80066d2:	68f8      	ldr	r0, [r7, #12]
 80066d4:	f7fa fcf8 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 80066d8:	e002      	b.n	80066e0 <UART_DMARxHalfCplt+0x2e>
 80066da:	68f8      	ldr	r0, [r7, #12]
 80066dc:	f7ff ff4c 	bl	8006578 <HAL_UART_RxHalfCpltCallback>
 80066e0:	bf00      	nop
 80066e2:	3710      	adds	r7, #16
 80066e4:	46bd      	mov	sp, r7
 80066e6:	bd80      	pop	{r7, pc}

080066e8 <UART_DMAError>:
 80066e8:	b580      	push	{r7, lr}
 80066ea:	b084      	sub	sp, #16
 80066ec:	af00      	add	r7, sp, #0
 80066ee:	6078      	str	r0, [r7, #4]
 80066f0:	2300      	movs	r3, #0
 80066f2:	60fb      	str	r3, [r7, #12]
 80066f4:	687b      	ldr	r3, [r7, #4]
 80066f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80066f8:	60bb      	str	r3, [r7, #8]
 80066fa:	68bb      	ldr	r3, [r7, #8]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	695b      	ldr	r3, [r3, #20]
 8006700:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006704:	2b80      	cmp	r3, #128	; 0x80
 8006706:	bf0c      	ite	eq
 8006708:	2301      	moveq	r3, #1
 800670a:	2300      	movne	r3, #0
 800670c:	b2db      	uxtb	r3, r3
 800670e:	60fb      	str	r3, [r7, #12]
 8006710:	68bb      	ldr	r3, [r7, #8]
 8006712:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006716:	b2db      	uxtb	r3, r3
 8006718:	2b21      	cmp	r3, #33	; 0x21
 800671a:	d108      	bne.n	800672e <UART_DMAError+0x46>
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	2b00      	cmp	r3, #0
 8006720:	d005      	beq.n	800672e <UART_DMAError+0x46>
 8006722:	68bb      	ldr	r3, [r7, #8]
 8006724:	2200      	movs	r2, #0
 8006726:	84da      	strh	r2, [r3, #38]	; 0x26
 8006728:	68b8      	ldr	r0, [r7, #8]
 800672a:	f000 f933 	bl	8006994 <UART_EndTxTransfer>
 800672e:	68bb      	ldr	r3, [r7, #8]
 8006730:	681b      	ldr	r3, [r3, #0]
 8006732:	695b      	ldr	r3, [r3, #20]
 8006734:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006738:	2b40      	cmp	r3, #64	; 0x40
 800673a:	bf0c      	ite	eq
 800673c:	2301      	moveq	r3, #1
 800673e:	2300      	movne	r3, #0
 8006740:	b2db      	uxtb	r3, r3
 8006742:	60fb      	str	r3, [r7, #12]
 8006744:	68bb      	ldr	r3, [r7, #8]
 8006746:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800674a:	b2db      	uxtb	r3, r3
 800674c:	2b22      	cmp	r3, #34	; 0x22
 800674e:	d108      	bne.n	8006762 <UART_DMAError+0x7a>
 8006750:	68fb      	ldr	r3, [r7, #12]
 8006752:	2b00      	cmp	r3, #0
 8006754:	d005      	beq.n	8006762 <UART_DMAError+0x7a>
 8006756:	68bb      	ldr	r3, [r7, #8]
 8006758:	2200      	movs	r2, #0
 800675a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800675c:	68b8      	ldr	r0, [r7, #8]
 800675e:	f000 f941 	bl	80069e4 <UART_EndRxTransfer>
 8006762:	68bb      	ldr	r3, [r7, #8]
 8006764:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006766:	f043 0210 	orr.w	r2, r3, #16
 800676a:	68bb      	ldr	r3, [r7, #8]
 800676c:	641a      	str	r2, [r3, #64]	; 0x40
 800676e:	68b8      	ldr	r0, [r7, #8]
 8006770:	f7fa fcbc 	bl	80010ec <HAL_UART_ErrorCallback>
 8006774:	bf00      	nop
 8006776:	3710      	adds	r7, #16
 8006778:	46bd      	mov	sp, r7
 800677a:	bd80      	pop	{r7, pc}

0800677c <UART_WaitOnFlagUntilTimeout>:
 800677c:	b580      	push	{r7, lr}
 800677e:	b090      	sub	sp, #64	; 0x40
 8006780:	af00      	add	r7, sp, #0
 8006782:	60f8      	str	r0, [r7, #12]
 8006784:	60b9      	str	r1, [r7, #8]
 8006786:	603b      	str	r3, [r7, #0]
 8006788:	4613      	mov	r3, r2
 800678a:	71fb      	strb	r3, [r7, #7]
 800678c:	e050      	b.n	8006830 <UART_WaitOnFlagUntilTimeout+0xb4>
 800678e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006790:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006794:	d04c      	beq.n	8006830 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006796:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006798:	2b00      	cmp	r3, #0
 800679a:	d007      	beq.n	80067ac <UART_WaitOnFlagUntilTimeout+0x30>
 800679c:	f7fd fab0 	bl	8003d00 <HAL_GetTick>
 80067a0:	4602      	mov	r2, r0
 80067a2:	683b      	ldr	r3, [r7, #0]
 80067a4:	1ad3      	subs	r3, r2, r3
 80067a6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80067a8:	429a      	cmp	r2, r3
 80067aa:	d241      	bcs.n	8006830 <UART_WaitOnFlagUntilTimeout+0xb4>
 80067ac:	68fb      	ldr	r3, [r7, #12]
 80067ae:	681b      	ldr	r3, [r3, #0]
 80067b0:	330c      	adds	r3, #12
 80067b2:	62bb      	str	r3, [r7, #40]	; 0x28
 80067b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80067b6:	e853 3f00 	ldrex	r3, [r3]
 80067ba:	627b      	str	r3, [r7, #36]	; 0x24
 80067bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80067be:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80067c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	681b      	ldr	r3, [r3, #0]
 80067c8:	330c      	adds	r3, #12
 80067ca:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80067cc:	637a      	str	r2, [r7, #52]	; 0x34
 80067ce:	633b      	str	r3, [r7, #48]	; 0x30
 80067d0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80067d2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80067d4:	e841 2300 	strex	r3, r2, [r1]
 80067d8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80067da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80067dc:	2b00      	cmp	r3, #0
 80067de:	d1e5      	bne.n	80067ac <UART_WaitOnFlagUntilTimeout+0x30>
 80067e0:	68fb      	ldr	r3, [r7, #12]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	3314      	adds	r3, #20
 80067e6:	617b      	str	r3, [r7, #20]
 80067e8:	697b      	ldr	r3, [r7, #20]
 80067ea:	e853 3f00 	ldrex	r3, [r3]
 80067ee:	613b      	str	r3, [r7, #16]
 80067f0:	693b      	ldr	r3, [r7, #16]
 80067f2:	f023 0301 	bic.w	r3, r3, #1
 80067f6:	63bb      	str	r3, [r7, #56]	; 0x38
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	681b      	ldr	r3, [r3, #0]
 80067fc:	3314      	adds	r3, #20
 80067fe:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006800:	623a      	str	r2, [r7, #32]
 8006802:	61fb      	str	r3, [r7, #28]
 8006804:	69f9      	ldr	r1, [r7, #28]
 8006806:	6a3a      	ldr	r2, [r7, #32]
 8006808:	e841 2300 	strex	r3, r2, [r1]
 800680c:	61bb      	str	r3, [r7, #24]
 800680e:	69bb      	ldr	r3, [r7, #24]
 8006810:	2b00      	cmp	r3, #0
 8006812:	d1e5      	bne.n	80067e0 <UART_WaitOnFlagUntilTimeout+0x64>
 8006814:	68fb      	ldr	r3, [r7, #12]
 8006816:	2220      	movs	r2, #32
 8006818:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800681c:	68fb      	ldr	r3, [r7, #12]
 800681e:	2220      	movs	r2, #32
 8006820:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006824:	68fb      	ldr	r3, [r7, #12]
 8006826:	2200      	movs	r2, #0
 8006828:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800682c:	2303      	movs	r3, #3
 800682e:	e00f      	b.n	8006850 <UART_WaitOnFlagUntilTimeout+0xd4>
 8006830:	68fb      	ldr	r3, [r7, #12]
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	681a      	ldr	r2, [r3, #0]
 8006836:	68bb      	ldr	r3, [r7, #8]
 8006838:	4013      	ands	r3, r2
 800683a:	68ba      	ldr	r2, [r7, #8]
 800683c:	429a      	cmp	r2, r3
 800683e:	bf0c      	ite	eq
 8006840:	2301      	moveq	r3, #1
 8006842:	2300      	movne	r3, #0
 8006844:	b2db      	uxtb	r3, r3
 8006846:	461a      	mov	r2, r3
 8006848:	79fb      	ldrb	r3, [r7, #7]
 800684a:	429a      	cmp	r2, r3
 800684c:	d09f      	beq.n	800678e <UART_WaitOnFlagUntilTimeout+0x12>
 800684e:	2300      	movs	r3, #0
 8006850:	4618      	mov	r0, r3
 8006852:	3740      	adds	r7, #64	; 0x40
 8006854:	46bd      	mov	sp, r7
 8006856:	bd80      	pop	{r7, pc}

08006858 <UART_Start_Receive_DMA>:
 8006858:	b580      	push	{r7, lr}
 800685a:	b098      	sub	sp, #96	; 0x60
 800685c:	af00      	add	r7, sp, #0
 800685e:	60f8      	str	r0, [r7, #12]
 8006860:	60b9      	str	r1, [r7, #8]
 8006862:	4613      	mov	r3, r2
 8006864:	80fb      	strh	r3, [r7, #6]
 8006866:	68ba      	ldr	r2, [r7, #8]
 8006868:	68fb      	ldr	r3, [r7, #12]
 800686a:	629a      	str	r2, [r3, #40]	; 0x28
 800686c:	68fb      	ldr	r3, [r7, #12]
 800686e:	88fa      	ldrh	r2, [r7, #6]
 8006870:	859a      	strh	r2, [r3, #44]	; 0x2c
 8006872:	68fb      	ldr	r3, [r7, #12]
 8006874:	2200      	movs	r2, #0
 8006876:	641a      	str	r2, [r3, #64]	; 0x40
 8006878:	68fb      	ldr	r3, [r7, #12]
 800687a:	2222      	movs	r2, #34	; 0x22
 800687c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006880:	68fb      	ldr	r3, [r7, #12]
 8006882:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006884:	4a40      	ldr	r2, [pc, #256]	; (8006988 <UART_Start_Receive_DMA+0x130>)
 8006886:	63da      	str	r2, [r3, #60]	; 0x3c
 8006888:	68fb      	ldr	r3, [r7, #12]
 800688a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800688c:	4a3f      	ldr	r2, [pc, #252]	; (800698c <UART_Start_Receive_DMA+0x134>)
 800688e:	641a      	str	r2, [r3, #64]	; 0x40
 8006890:	68fb      	ldr	r3, [r7, #12]
 8006892:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006894:	4a3e      	ldr	r2, [pc, #248]	; (8006990 <UART_Start_Receive_DMA+0x138>)
 8006896:	64da      	str	r2, [r3, #76]	; 0x4c
 8006898:	68fb      	ldr	r3, [r7, #12]
 800689a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800689c:	2200      	movs	r2, #0
 800689e:	651a      	str	r2, [r3, #80]	; 0x50
 80068a0:	f107 0308 	add.w	r3, r7, #8
 80068a4:	65fb      	str	r3, [r7, #92]	; 0x5c
 80068a6:	68fb      	ldr	r3, [r7, #12]
 80068a8:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80068aa:	68fb      	ldr	r3, [r7, #12]
 80068ac:	681b      	ldr	r3, [r3, #0]
 80068ae:	3304      	adds	r3, #4
 80068b0:	4619      	mov	r1, r3
 80068b2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80068b4:	681a      	ldr	r2, [r3, #0]
 80068b6:	88fb      	ldrh	r3, [r7, #6]
 80068b8:	f7fd fc32 	bl	8004120 <HAL_DMA_Start_IT>
 80068bc:	2300      	movs	r3, #0
 80068be:	613b      	str	r3, [r7, #16]
 80068c0:	68fb      	ldr	r3, [r7, #12]
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	613b      	str	r3, [r7, #16]
 80068c8:	68fb      	ldr	r3, [r7, #12]
 80068ca:	681b      	ldr	r3, [r3, #0]
 80068cc:	685b      	ldr	r3, [r3, #4]
 80068ce:	613b      	str	r3, [r7, #16]
 80068d0:	693b      	ldr	r3, [r7, #16]
 80068d2:	68fb      	ldr	r3, [r7, #12]
 80068d4:	2200      	movs	r2, #0
 80068d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	691b      	ldr	r3, [r3, #16]
 80068de:	2b00      	cmp	r3, #0
 80068e0:	d019      	beq.n	8006916 <UART_Start_Receive_DMA+0xbe>
 80068e2:	68fb      	ldr	r3, [r7, #12]
 80068e4:	681b      	ldr	r3, [r3, #0]
 80068e6:	330c      	adds	r3, #12
 80068e8:	643b      	str	r3, [r7, #64]	; 0x40
 80068ea:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80068ec:	e853 3f00 	ldrex	r3, [r3]
 80068f0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80068f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80068f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80068f8:	65bb      	str	r3, [r7, #88]	; 0x58
 80068fa:	68fb      	ldr	r3, [r7, #12]
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	330c      	adds	r3, #12
 8006900:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006902:	64fa      	str	r2, [r7, #76]	; 0x4c
 8006904:	64bb      	str	r3, [r7, #72]	; 0x48
 8006906:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8006908:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800690a:	e841 2300 	strex	r3, r2, [r1]
 800690e:	647b      	str	r3, [r7, #68]	; 0x44
 8006910:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006912:	2b00      	cmp	r3, #0
 8006914:	d1e5      	bne.n	80068e2 <UART_Start_Receive_DMA+0x8a>
 8006916:	68fb      	ldr	r3, [r7, #12]
 8006918:	681b      	ldr	r3, [r3, #0]
 800691a:	3314      	adds	r3, #20
 800691c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800691e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006920:	e853 3f00 	ldrex	r3, [r3]
 8006924:	62bb      	str	r3, [r7, #40]	; 0x28
 8006926:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006928:	f043 0301 	orr.w	r3, r3, #1
 800692c:	657b      	str	r3, [r7, #84]	; 0x54
 800692e:	68fb      	ldr	r3, [r7, #12]
 8006930:	681b      	ldr	r3, [r3, #0]
 8006932:	3314      	adds	r3, #20
 8006934:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8006936:	63ba      	str	r2, [r7, #56]	; 0x38
 8006938:	637b      	str	r3, [r7, #52]	; 0x34
 800693a:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800693c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800693e:	e841 2300 	strex	r3, r2, [r1]
 8006942:	633b      	str	r3, [r7, #48]	; 0x30
 8006944:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006946:	2b00      	cmp	r3, #0
 8006948:	d1e5      	bne.n	8006916 <UART_Start_Receive_DMA+0xbe>
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	681b      	ldr	r3, [r3, #0]
 800694e:	3314      	adds	r3, #20
 8006950:	61bb      	str	r3, [r7, #24]
 8006952:	69bb      	ldr	r3, [r7, #24]
 8006954:	e853 3f00 	ldrex	r3, [r3]
 8006958:	617b      	str	r3, [r7, #20]
 800695a:	697b      	ldr	r3, [r7, #20]
 800695c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006960:	653b      	str	r3, [r7, #80]	; 0x50
 8006962:	68fb      	ldr	r3, [r7, #12]
 8006964:	681b      	ldr	r3, [r3, #0]
 8006966:	3314      	adds	r3, #20
 8006968:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800696a:	627a      	str	r2, [r7, #36]	; 0x24
 800696c:	623b      	str	r3, [r7, #32]
 800696e:	6a39      	ldr	r1, [r7, #32]
 8006970:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006972:	e841 2300 	strex	r3, r2, [r1]
 8006976:	61fb      	str	r3, [r7, #28]
 8006978:	69fb      	ldr	r3, [r7, #28]
 800697a:	2b00      	cmp	r3, #0
 800697c:	d1e5      	bne.n	800694a <UART_Start_Receive_DMA+0xf2>
 800697e:	2300      	movs	r3, #0
 8006980:	4618      	mov	r0, r3
 8006982:	3760      	adds	r7, #96	; 0x60
 8006984:	46bd      	mov	sp, r7
 8006986:	bd80      	pop	{r7, pc}
 8006988:	0800658d 	.word	0x0800658d
 800698c:	080066b3 	.word	0x080066b3
 8006990:	080066e9 	.word	0x080066e9

08006994 <UART_EndTxTransfer>:
 8006994:	b480      	push	{r7}
 8006996:	b089      	sub	sp, #36	; 0x24
 8006998:	af00      	add	r7, sp, #0
 800699a:	6078      	str	r0, [r7, #4]
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	681b      	ldr	r3, [r3, #0]
 80069a0:	330c      	adds	r3, #12
 80069a2:	60fb      	str	r3, [r7, #12]
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	e853 3f00 	ldrex	r3, [r3]
 80069aa:	60bb      	str	r3, [r7, #8]
 80069ac:	68bb      	ldr	r3, [r7, #8]
 80069ae:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80069b2:	61fb      	str	r3, [r7, #28]
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	330c      	adds	r3, #12
 80069ba:	69fa      	ldr	r2, [r7, #28]
 80069bc:	61ba      	str	r2, [r7, #24]
 80069be:	617b      	str	r3, [r7, #20]
 80069c0:	6979      	ldr	r1, [r7, #20]
 80069c2:	69ba      	ldr	r2, [r7, #24]
 80069c4:	e841 2300 	strex	r3, r2, [r1]
 80069c8:	613b      	str	r3, [r7, #16]
 80069ca:	693b      	ldr	r3, [r7, #16]
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d1e5      	bne.n	800699c <UART_EndTxTransfer+0x8>
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	2220      	movs	r2, #32
 80069d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80069d8:	bf00      	nop
 80069da:	3724      	adds	r7, #36	; 0x24
 80069dc:	46bd      	mov	sp, r7
 80069de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069e2:	4770      	bx	lr

080069e4 <UART_EndRxTransfer>:
 80069e4:	b480      	push	{r7}
 80069e6:	b095      	sub	sp, #84	; 0x54
 80069e8:	af00      	add	r7, sp, #0
 80069ea:	6078      	str	r0, [r7, #4]
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	330c      	adds	r3, #12
 80069f2:	637b      	str	r3, [r7, #52]	; 0x34
 80069f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80069f6:	e853 3f00 	ldrex	r3, [r3]
 80069fa:	633b      	str	r3, [r7, #48]	; 0x30
 80069fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80069fe:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006a02:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	681b      	ldr	r3, [r3, #0]
 8006a08:	330c      	adds	r3, #12
 8006a0a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8006a0c:	643a      	str	r2, [r7, #64]	; 0x40
 8006a0e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006a10:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8006a12:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8006a14:	e841 2300 	strex	r3, r2, [r1]
 8006a18:	63bb      	str	r3, [r7, #56]	; 0x38
 8006a1a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006a1c:	2b00      	cmp	r3, #0
 8006a1e:	d1e5      	bne.n	80069ec <UART_EndRxTransfer+0x8>
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	681b      	ldr	r3, [r3, #0]
 8006a24:	3314      	adds	r3, #20
 8006a26:	623b      	str	r3, [r7, #32]
 8006a28:	6a3b      	ldr	r3, [r7, #32]
 8006a2a:	e853 3f00 	ldrex	r3, [r3]
 8006a2e:	61fb      	str	r3, [r7, #28]
 8006a30:	69fb      	ldr	r3, [r7, #28]
 8006a32:	f023 0301 	bic.w	r3, r3, #1
 8006a36:	64bb      	str	r3, [r7, #72]	; 0x48
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	681b      	ldr	r3, [r3, #0]
 8006a3c:	3314      	adds	r3, #20
 8006a3e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006a40:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006a42:	62bb      	str	r3, [r7, #40]	; 0x28
 8006a44:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8006a46:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006a48:	e841 2300 	strex	r3, r2, [r1]
 8006a4c:	627b      	str	r3, [r7, #36]	; 0x24
 8006a4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a50:	2b00      	cmp	r3, #0
 8006a52:	d1e5      	bne.n	8006a20 <UART_EndRxTransfer+0x3c>
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a58:	2b01      	cmp	r3, #1
 8006a5a:	d119      	bne.n	8006a90 <UART_EndRxTransfer+0xac>
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	681b      	ldr	r3, [r3, #0]
 8006a60:	330c      	adds	r3, #12
 8006a62:	60fb      	str	r3, [r7, #12]
 8006a64:	68fb      	ldr	r3, [r7, #12]
 8006a66:	e853 3f00 	ldrex	r3, [r3]
 8006a6a:	60bb      	str	r3, [r7, #8]
 8006a6c:	68bb      	ldr	r3, [r7, #8]
 8006a6e:	f023 0310 	bic.w	r3, r3, #16
 8006a72:	647b      	str	r3, [r7, #68]	; 0x44
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	681b      	ldr	r3, [r3, #0]
 8006a78:	330c      	adds	r3, #12
 8006a7a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006a7c:	61ba      	str	r2, [r7, #24]
 8006a7e:	617b      	str	r3, [r7, #20]
 8006a80:	6979      	ldr	r1, [r7, #20]
 8006a82:	69ba      	ldr	r2, [r7, #24]
 8006a84:	e841 2300 	strex	r3, r2, [r1]
 8006a88:	613b      	str	r3, [r7, #16]
 8006a8a:	693b      	ldr	r3, [r7, #16]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d1e5      	bne.n	8006a5c <UART_EndRxTransfer+0x78>
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	2220      	movs	r2, #32
 8006a94:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	2200      	movs	r2, #0
 8006a9c:	631a      	str	r2, [r3, #48]	; 0x30
 8006a9e:	bf00      	nop
 8006aa0:	3754      	adds	r7, #84	; 0x54
 8006aa2:	46bd      	mov	sp, r7
 8006aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006aa8:	4770      	bx	lr

08006aaa <UART_DMAAbortOnError>:
 8006aaa:	b580      	push	{r7, lr}
 8006aac:	b084      	sub	sp, #16
 8006aae:	af00      	add	r7, sp, #0
 8006ab0:	6078      	str	r0, [r7, #4]
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ab6:	60fb      	str	r3, [r7, #12]
 8006ab8:	68fb      	ldr	r3, [r7, #12]
 8006aba:	2200      	movs	r2, #0
 8006abc:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006abe:	68fb      	ldr	r3, [r7, #12]
 8006ac0:	2200      	movs	r2, #0
 8006ac2:	84da      	strh	r2, [r3, #38]	; 0x26
 8006ac4:	68f8      	ldr	r0, [r7, #12]
 8006ac6:	f7fa fb11 	bl	80010ec <HAL_UART_ErrorCallback>
 8006aca:	bf00      	nop
 8006acc:	3710      	adds	r7, #16
 8006ace:	46bd      	mov	sp, r7
 8006ad0:	bd80      	pop	{r7, pc}

08006ad2 <UART_Transmit_IT>:
 8006ad2:	b480      	push	{r7}
 8006ad4:	b085      	sub	sp, #20
 8006ad6:	af00      	add	r7, sp, #0
 8006ad8:	6078      	str	r0, [r7, #4]
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006ae0:	b2db      	uxtb	r3, r3
 8006ae2:	2b21      	cmp	r3, #33	; 0x21
 8006ae4:	d13e      	bne.n	8006b64 <UART_Transmit_IT+0x92>
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	689b      	ldr	r3, [r3, #8]
 8006aea:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006aee:	d114      	bne.n	8006b1a <UART_Transmit_IT+0x48>
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	691b      	ldr	r3, [r3, #16]
 8006af4:	2b00      	cmp	r3, #0
 8006af6:	d110      	bne.n	8006b1a <UART_Transmit_IT+0x48>
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	6a1b      	ldr	r3, [r3, #32]
 8006afc:	60fb      	str	r3, [r7, #12]
 8006afe:	68fb      	ldr	r3, [r7, #12]
 8006b00:	881b      	ldrh	r3, [r3, #0]
 8006b02:	461a      	mov	r2, r3
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	681b      	ldr	r3, [r3, #0]
 8006b08:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006b0c:	605a      	str	r2, [r3, #4]
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	6a1b      	ldr	r3, [r3, #32]
 8006b12:	1c9a      	adds	r2, r3, #2
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	621a      	str	r2, [r3, #32]
 8006b18:	e008      	b.n	8006b2c <UART_Transmit_IT+0x5a>
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	6a1b      	ldr	r3, [r3, #32]
 8006b1e:	1c59      	adds	r1, r3, #1
 8006b20:	687a      	ldr	r2, [r7, #4]
 8006b22:	6211      	str	r1, [r2, #32]
 8006b24:	781a      	ldrb	r2, [r3, #0]
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	605a      	str	r2, [r3, #4]
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006b30:	b29b      	uxth	r3, r3
 8006b32:	3b01      	subs	r3, #1
 8006b34:	b29b      	uxth	r3, r3
 8006b36:	687a      	ldr	r2, [r7, #4]
 8006b38:	4619      	mov	r1, r3
 8006b3a:	84d1      	strh	r1, [r2, #38]	; 0x26
 8006b3c:	2b00      	cmp	r3, #0
 8006b3e:	d10f      	bne.n	8006b60 <UART_Transmit_IT+0x8e>
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	68da      	ldr	r2, [r3, #12]
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006b4e:	60da      	str	r2, [r3, #12]
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	68da      	ldr	r2, [r3, #12]
 8006b56:	687b      	ldr	r3, [r7, #4]
 8006b58:	681b      	ldr	r3, [r3, #0]
 8006b5a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006b5e:	60da      	str	r2, [r3, #12]
 8006b60:	2300      	movs	r3, #0
 8006b62:	e000      	b.n	8006b66 <UART_Transmit_IT+0x94>
 8006b64:	2302      	movs	r3, #2
 8006b66:	4618      	mov	r0, r3
 8006b68:	3714      	adds	r7, #20
 8006b6a:	46bd      	mov	sp, r7
 8006b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b70:	4770      	bx	lr

08006b72 <UART_EndTransmit_IT>:
 8006b72:	b580      	push	{r7, lr}
 8006b74:	b082      	sub	sp, #8
 8006b76:	af00      	add	r7, sp, #0
 8006b78:	6078      	str	r0, [r7, #4]
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	681b      	ldr	r3, [r3, #0]
 8006b7e:	68da      	ldr	r2, [r3, #12]
 8006b80:	687b      	ldr	r3, [r7, #4]
 8006b82:	681b      	ldr	r3, [r3, #0]
 8006b84:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006b88:	60da      	str	r2, [r3, #12]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	2220      	movs	r2, #32
 8006b8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006b92:	6878      	ldr	r0, [r7, #4]
 8006b94:	f7ff fcdc 	bl	8006550 <HAL_UART_TxCpltCallback>
 8006b98:	2300      	movs	r3, #0
 8006b9a:	4618      	mov	r0, r3
 8006b9c:	3708      	adds	r7, #8
 8006b9e:	46bd      	mov	sp, r7
 8006ba0:	bd80      	pop	{r7, pc}

08006ba2 <UART_Receive_IT>:
 8006ba2:	b580      	push	{r7, lr}
 8006ba4:	b08c      	sub	sp, #48	; 0x30
 8006ba6:	af00      	add	r7, sp, #0
 8006ba8:	6078      	str	r0, [r7, #4]
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006bb0:	b2db      	uxtb	r3, r3
 8006bb2:	2b22      	cmp	r3, #34	; 0x22
 8006bb4:	f040 80ab 	bne.w	8006d0e <UART_Receive_IT+0x16c>
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	689b      	ldr	r3, [r3, #8]
 8006bbc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006bc0:	d117      	bne.n	8006bf2 <UART_Receive_IT+0x50>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	691b      	ldr	r3, [r3, #16]
 8006bc6:	2b00      	cmp	r3, #0
 8006bc8:	d113      	bne.n	8006bf2 <UART_Receive_IT+0x50>
 8006bca:	2300      	movs	r3, #0
 8006bcc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006bd2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	685b      	ldr	r3, [r3, #4]
 8006bda:	b29b      	uxth	r3, r3
 8006bdc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006be0:	b29a      	uxth	r2, r3
 8006be2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006be4:	801a      	strh	r2, [r3, #0]
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006bea:	1c9a      	adds	r2, r3, #2
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	629a      	str	r2, [r3, #40]	; 0x28
 8006bf0:	e026      	b.n	8006c40 <UART_Receive_IT+0x9e>
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006bf6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006bf8:	2300      	movs	r3, #0
 8006bfa:	62bb      	str	r3, [r7, #40]	; 0x28
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	689b      	ldr	r3, [r3, #8]
 8006c00:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006c04:	d007      	beq.n	8006c16 <UART_Receive_IT+0x74>
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	689b      	ldr	r3, [r3, #8]
 8006c0a:	2b00      	cmp	r3, #0
 8006c0c:	d10a      	bne.n	8006c24 <UART_Receive_IT+0x82>
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	691b      	ldr	r3, [r3, #16]
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d106      	bne.n	8006c24 <UART_Receive_IT+0x82>
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	681b      	ldr	r3, [r3, #0]
 8006c1a:	685b      	ldr	r3, [r3, #4]
 8006c1c:	b2da      	uxtb	r2, r3
 8006c1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006c20:	701a      	strb	r2, [r3, #0]
 8006c22:	e008      	b.n	8006c36 <UART_Receive_IT+0x94>
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	681b      	ldr	r3, [r3, #0]
 8006c28:	685b      	ldr	r3, [r3, #4]
 8006c2a:	b2db      	uxtb	r3, r3
 8006c2c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006c30:	b2da      	uxtb	r2, r3
 8006c32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006c34:	701a      	strb	r2, [r3, #0]
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c3a:	1c5a      	adds	r2, r3, #1
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	629a      	str	r2, [r3, #40]	; 0x28
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006c44:	b29b      	uxth	r3, r3
 8006c46:	3b01      	subs	r3, #1
 8006c48:	b29b      	uxth	r3, r3
 8006c4a:	687a      	ldr	r2, [r7, #4]
 8006c4c:	4619      	mov	r1, r3
 8006c4e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8006c50:	2b00      	cmp	r3, #0
 8006c52:	d15a      	bne.n	8006d0a <UART_Receive_IT+0x168>
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	68da      	ldr	r2, [r3, #12]
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	f022 0220 	bic.w	r2, r2, #32
 8006c62:	60da      	str	r2, [r3, #12]
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	68da      	ldr	r2, [r3, #12]
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006c72:	60da      	str	r2, [r3, #12]
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	681b      	ldr	r3, [r3, #0]
 8006c78:	695a      	ldr	r2, [r3, #20]
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	681b      	ldr	r3, [r3, #0]
 8006c7e:	f022 0201 	bic.w	r2, r2, #1
 8006c82:	615a      	str	r2, [r3, #20]
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	2220      	movs	r2, #32
 8006c88:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c90:	2b01      	cmp	r3, #1
 8006c92:	d135      	bne.n	8006d00 <UART_Receive_IT+0x15e>
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	2200      	movs	r2, #0
 8006c98:	631a      	str	r2, [r3, #48]	; 0x30
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	681b      	ldr	r3, [r3, #0]
 8006c9e:	330c      	adds	r3, #12
 8006ca0:	617b      	str	r3, [r7, #20]
 8006ca2:	697b      	ldr	r3, [r7, #20]
 8006ca4:	e853 3f00 	ldrex	r3, [r3]
 8006ca8:	613b      	str	r3, [r7, #16]
 8006caa:	693b      	ldr	r3, [r7, #16]
 8006cac:	f023 0310 	bic.w	r3, r3, #16
 8006cb0:	627b      	str	r3, [r7, #36]	; 0x24
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	330c      	adds	r3, #12
 8006cb8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006cba:	623a      	str	r2, [r7, #32]
 8006cbc:	61fb      	str	r3, [r7, #28]
 8006cbe:	69f9      	ldr	r1, [r7, #28]
 8006cc0:	6a3a      	ldr	r2, [r7, #32]
 8006cc2:	e841 2300 	strex	r3, r2, [r1]
 8006cc6:	61bb      	str	r3, [r7, #24]
 8006cc8:	69bb      	ldr	r3, [r7, #24]
 8006cca:	2b00      	cmp	r3, #0
 8006ccc:	d1e5      	bne.n	8006c9a <UART_Receive_IT+0xf8>
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	681b      	ldr	r3, [r3, #0]
 8006cd2:	681b      	ldr	r3, [r3, #0]
 8006cd4:	f003 0310 	and.w	r3, r3, #16
 8006cd8:	2b10      	cmp	r3, #16
 8006cda:	d10a      	bne.n	8006cf2 <UART_Receive_IT+0x150>
 8006cdc:	2300      	movs	r3, #0
 8006cde:	60fb      	str	r3, [r7, #12]
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	681b      	ldr	r3, [r3, #0]
 8006ce4:	681b      	ldr	r3, [r3, #0]
 8006ce6:	60fb      	str	r3, [r7, #12]
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	681b      	ldr	r3, [r3, #0]
 8006cec:	685b      	ldr	r3, [r3, #4]
 8006cee:	60fb      	str	r3, [r7, #12]
 8006cf0:	68fb      	ldr	r3, [r7, #12]
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8006cf6:	4619      	mov	r1, r3
 8006cf8:	6878      	ldr	r0, [r7, #4]
 8006cfa:	f7fa f9e5 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 8006cfe:	e002      	b.n	8006d06 <UART_Receive_IT+0x164>
 8006d00:	6878      	ldr	r0, [r7, #4]
 8006d02:	f7ff fc2f 	bl	8006564 <HAL_UART_RxCpltCallback>
 8006d06:	2300      	movs	r3, #0
 8006d08:	e002      	b.n	8006d10 <UART_Receive_IT+0x16e>
 8006d0a:	2300      	movs	r3, #0
 8006d0c:	e000      	b.n	8006d10 <UART_Receive_IT+0x16e>
 8006d0e:	2302      	movs	r3, #2
 8006d10:	4618      	mov	r0, r3
 8006d12:	3730      	adds	r7, #48	; 0x30
 8006d14:	46bd      	mov	sp, r7
 8006d16:	bd80      	pop	{r7, pc}

08006d18 <UART_SetConfig>:
 8006d18:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006d1c:	b0c0      	sub	sp, #256	; 0x100
 8006d1e:	af00      	add	r7, sp, #0
 8006d20:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8006d24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	691b      	ldr	r3, [r3, #16]
 8006d2c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8006d30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d34:	68d9      	ldr	r1, [r3, #12]
 8006d36:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d3a:	681a      	ldr	r2, [r3, #0]
 8006d3c:	ea40 0301 	orr.w	r3, r0, r1
 8006d40:	6113      	str	r3, [r2, #16]
 8006d42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d46:	689a      	ldr	r2, [r3, #8]
 8006d48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d4c:	691b      	ldr	r3, [r3, #16]
 8006d4e:	431a      	orrs	r2, r3
 8006d50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d54:	695b      	ldr	r3, [r3, #20]
 8006d56:	431a      	orrs	r2, r3
 8006d58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d5c:	69db      	ldr	r3, [r3, #28]
 8006d5e:	4313      	orrs	r3, r2
 8006d60:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8006d64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d68:	681b      	ldr	r3, [r3, #0]
 8006d6a:	68db      	ldr	r3, [r3, #12]
 8006d6c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8006d70:	f021 010c 	bic.w	r1, r1, #12
 8006d74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d78:	681a      	ldr	r2, [r3, #0]
 8006d7a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8006d7e:	430b      	orrs	r3, r1
 8006d80:	60d3      	str	r3, [r2, #12]
 8006d82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d86:	681b      	ldr	r3, [r3, #0]
 8006d88:	695b      	ldr	r3, [r3, #20]
 8006d8a:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8006d8e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d92:	6999      	ldr	r1, [r3, #24]
 8006d94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d98:	681a      	ldr	r2, [r3, #0]
 8006d9a:	ea40 0301 	orr.w	r3, r0, r1
 8006d9e:	6153      	str	r3, [r2, #20]
 8006da0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006da4:	681a      	ldr	r2, [r3, #0]
 8006da6:	4b8f      	ldr	r3, [pc, #572]	; (8006fe4 <UART_SetConfig+0x2cc>)
 8006da8:	429a      	cmp	r2, r3
 8006daa:	d005      	beq.n	8006db8 <UART_SetConfig+0xa0>
 8006dac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006db0:	681a      	ldr	r2, [r3, #0]
 8006db2:	4b8d      	ldr	r3, [pc, #564]	; (8006fe8 <UART_SetConfig+0x2d0>)
 8006db4:	429a      	cmp	r2, r3
 8006db6:	d104      	bne.n	8006dc2 <UART_SetConfig+0xaa>
 8006db8:	f7fe fafa 	bl	80053b0 <HAL_RCC_GetPCLK2Freq>
 8006dbc:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8006dc0:	e003      	b.n	8006dca <UART_SetConfig+0xb2>
 8006dc2:	f7fe fae1 	bl	8005388 <HAL_RCC_GetPCLK1Freq>
 8006dc6:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8006dca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006dce:	69db      	ldr	r3, [r3, #28]
 8006dd0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006dd4:	f040 810c 	bne.w	8006ff0 <UART_SetConfig+0x2d8>
 8006dd8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006ddc:	2200      	movs	r2, #0
 8006dde:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8006de2:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8006de6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8006dea:	4622      	mov	r2, r4
 8006dec:	462b      	mov	r3, r5
 8006dee:	1891      	adds	r1, r2, r2
 8006df0:	65b9      	str	r1, [r7, #88]	; 0x58
 8006df2:	415b      	adcs	r3, r3
 8006df4:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006df6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8006dfa:	4621      	mov	r1, r4
 8006dfc:	eb12 0801 	adds.w	r8, r2, r1
 8006e00:	4629      	mov	r1, r5
 8006e02:	eb43 0901 	adc.w	r9, r3, r1
 8006e06:	f04f 0200 	mov.w	r2, #0
 8006e0a:	f04f 0300 	mov.w	r3, #0
 8006e0e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006e12:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006e16:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006e1a:	4690      	mov	r8, r2
 8006e1c:	4699      	mov	r9, r3
 8006e1e:	4623      	mov	r3, r4
 8006e20:	eb18 0303 	adds.w	r3, r8, r3
 8006e24:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8006e28:	462b      	mov	r3, r5
 8006e2a:	eb49 0303 	adc.w	r3, r9, r3
 8006e2e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8006e32:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e36:	685b      	ldr	r3, [r3, #4]
 8006e38:	2200      	movs	r2, #0
 8006e3a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006e3e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8006e42:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8006e46:	460b      	mov	r3, r1
 8006e48:	18db      	adds	r3, r3, r3
 8006e4a:	653b      	str	r3, [r7, #80]	; 0x50
 8006e4c:	4613      	mov	r3, r2
 8006e4e:	eb42 0303 	adc.w	r3, r2, r3
 8006e52:	657b      	str	r3, [r7, #84]	; 0x54
 8006e54:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8006e58:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8006e5c:	f7f9 ff7c 	bl	8000d58 <__aeabi_uldivmod>
 8006e60:	4602      	mov	r2, r0
 8006e62:	460b      	mov	r3, r1
 8006e64:	4b61      	ldr	r3, [pc, #388]	; (8006fec <UART_SetConfig+0x2d4>)
 8006e66:	fba3 2302 	umull	r2, r3, r3, r2
 8006e6a:	095b      	lsrs	r3, r3, #5
 8006e6c:	011c      	lsls	r4, r3, #4
 8006e6e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006e72:	2200      	movs	r2, #0
 8006e74:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8006e78:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8006e7c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8006e80:	4642      	mov	r2, r8
 8006e82:	464b      	mov	r3, r9
 8006e84:	1891      	adds	r1, r2, r2
 8006e86:	64b9      	str	r1, [r7, #72]	; 0x48
 8006e88:	415b      	adcs	r3, r3
 8006e8a:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006e8c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8006e90:	4641      	mov	r1, r8
 8006e92:	eb12 0a01 	adds.w	sl, r2, r1
 8006e96:	4649      	mov	r1, r9
 8006e98:	eb43 0b01 	adc.w	fp, r3, r1
 8006e9c:	f04f 0200 	mov.w	r2, #0
 8006ea0:	f04f 0300 	mov.w	r3, #0
 8006ea4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006ea8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006eac:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006eb0:	4692      	mov	sl, r2
 8006eb2:	469b      	mov	fp, r3
 8006eb4:	4643      	mov	r3, r8
 8006eb6:	eb1a 0303 	adds.w	r3, sl, r3
 8006eba:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8006ebe:	464b      	mov	r3, r9
 8006ec0:	eb4b 0303 	adc.w	r3, fp, r3
 8006ec4:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8006ec8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ecc:	685b      	ldr	r3, [r3, #4]
 8006ece:	2200      	movs	r2, #0
 8006ed0:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8006ed4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8006ed8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8006edc:	460b      	mov	r3, r1
 8006ede:	18db      	adds	r3, r3, r3
 8006ee0:	643b      	str	r3, [r7, #64]	; 0x40
 8006ee2:	4613      	mov	r3, r2
 8006ee4:	eb42 0303 	adc.w	r3, r2, r3
 8006ee8:	647b      	str	r3, [r7, #68]	; 0x44
 8006eea:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8006eee:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8006ef2:	f7f9 ff31 	bl	8000d58 <__aeabi_uldivmod>
 8006ef6:	4602      	mov	r2, r0
 8006ef8:	460b      	mov	r3, r1
 8006efa:	4611      	mov	r1, r2
 8006efc:	4b3b      	ldr	r3, [pc, #236]	; (8006fec <UART_SetConfig+0x2d4>)
 8006efe:	fba3 2301 	umull	r2, r3, r3, r1
 8006f02:	095b      	lsrs	r3, r3, #5
 8006f04:	2264      	movs	r2, #100	; 0x64
 8006f06:	fb02 f303 	mul.w	r3, r2, r3
 8006f0a:	1acb      	subs	r3, r1, r3
 8006f0c:	00db      	lsls	r3, r3, #3
 8006f0e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8006f12:	4b36      	ldr	r3, [pc, #216]	; (8006fec <UART_SetConfig+0x2d4>)
 8006f14:	fba3 2302 	umull	r2, r3, r3, r2
 8006f18:	095b      	lsrs	r3, r3, #5
 8006f1a:	005b      	lsls	r3, r3, #1
 8006f1c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006f20:	441c      	add	r4, r3
 8006f22:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006f26:	2200      	movs	r2, #0
 8006f28:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8006f2c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8006f30:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8006f34:	4642      	mov	r2, r8
 8006f36:	464b      	mov	r3, r9
 8006f38:	1891      	adds	r1, r2, r2
 8006f3a:	63b9      	str	r1, [r7, #56]	; 0x38
 8006f3c:	415b      	adcs	r3, r3
 8006f3e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006f40:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8006f44:	4641      	mov	r1, r8
 8006f46:	1851      	adds	r1, r2, r1
 8006f48:	6339      	str	r1, [r7, #48]	; 0x30
 8006f4a:	4649      	mov	r1, r9
 8006f4c:	414b      	adcs	r3, r1
 8006f4e:	637b      	str	r3, [r7, #52]	; 0x34
 8006f50:	f04f 0200 	mov.w	r2, #0
 8006f54:	f04f 0300 	mov.w	r3, #0
 8006f58:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8006f5c:	4659      	mov	r1, fp
 8006f5e:	00cb      	lsls	r3, r1, #3
 8006f60:	4651      	mov	r1, sl
 8006f62:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006f66:	4651      	mov	r1, sl
 8006f68:	00ca      	lsls	r2, r1, #3
 8006f6a:	4610      	mov	r0, r2
 8006f6c:	4619      	mov	r1, r3
 8006f6e:	4603      	mov	r3, r0
 8006f70:	4642      	mov	r2, r8
 8006f72:	189b      	adds	r3, r3, r2
 8006f74:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006f78:	464b      	mov	r3, r9
 8006f7a:	460a      	mov	r2, r1
 8006f7c:	eb42 0303 	adc.w	r3, r2, r3
 8006f80:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006f84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006f88:	685b      	ldr	r3, [r3, #4]
 8006f8a:	2200      	movs	r2, #0
 8006f8c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8006f90:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8006f94:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8006f98:	460b      	mov	r3, r1
 8006f9a:	18db      	adds	r3, r3, r3
 8006f9c:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f9e:	4613      	mov	r3, r2
 8006fa0:	eb42 0303 	adc.w	r3, r2, r3
 8006fa4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fa6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8006faa:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8006fae:	f7f9 fed3 	bl	8000d58 <__aeabi_uldivmod>
 8006fb2:	4602      	mov	r2, r0
 8006fb4:	460b      	mov	r3, r1
 8006fb6:	4b0d      	ldr	r3, [pc, #52]	; (8006fec <UART_SetConfig+0x2d4>)
 8006fb8:	fba3 1302 	umull	r1, r3, r3, r2
 8006fbc:	095b      	lsrs	r3, r3, #5
 8006fbe:	2164      	movs	r1, #100	; 0x64
 8006fc0:	fb01 f303 	mul.w	r3, r1, r3
 8006fc4:	1ad3      	subs	r3, r2, r3
 8006fc6:	00db      	lsls	r3, r3, #3
 8006fc8:	3332      	adds	r3, #50	; 0x32
 8006fca:	4a08      	ldr	r2, [pc, #32]	; (8006fec <UART_SetConfig+0x2d4>)
 8006fcc:	fba2 2303 	umull	r2, r3, r2, r3
 8006fd0:	095b      	lsrs	r3, r3, #5
 8006fd2:	f003 0207 	and.w	r2, r3, #7
 8006fd6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006fda:	681b      	ldr	r3, [r3, #0]
 8006fdc:	4422      	add	r2, r4
 8006fde:	609a      	str	r2, [r3, #8]
 8006fe0:	e105      	b.n	80071ee <UART_SetConfig+0x4d6>
 8006fe2:	bf00      	nop
 8006fe4:	40011000 	.word	0x40011000
 8006fe8:	40011400 	.word	0x40011400
 8006fec:	51eb851f 	.word	0x51eb851f
 8006ff0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006ff4:	2200      	movs	r2, #0
 8006ff6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8006ffa:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8006ffe:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8007002:	4642      	mov	r2, r8
 8007004:	464b      	mov	r3, r9
 8007006:	1891      	adds	r1, r2, r2
 8007008:	6239      	str	r1, [r7, #32]
 800700a:	415b      	adcs	r3, r3
 800700c:	627b      	str	r3, [r7, #36]	; 0x24
 800700e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007012:	4641      	mov	r1, r8
 8007014:	1854      	adds	r4, r2, r1
 8007016:	4649      	mov	r1, r9
 8007018:	eb43 0501 	adc.w	r5, r3, r1
 800701c:	f04f 0200 	mov.w	r2, #0
 8007020:	f04f 0300 	mov.w	r3, #0
 8007024:	00eb      	lsls	r3, r5, #3
 8007026:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800702a:	00e2      	lsls	r2, r4, #3
 800702c:	4614      	mov	r4, r2
 800702e:	461d      	mov	r5, r3
 8007030:	4643      	mov	r3, r8
 8007032:	18e3      	adds	r3, r4, r3
 8007034:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8007038:	464b      	mov	r3, r9
 800703a:	eb45 0303 	adc.w	r3, r5, r3
 800703e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8007042:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007046:	685b      	ldr	r3, [r3, #4]
 8007048:	2200      	movs	r2, #0
 800704a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800704e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8007052:	f04f 0200 	mov.w	r2, #0
 8007056:	f04f 0300 	mov.w	r3, #0
 800705a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800705e:	4629      	mov	r1, r5
 8007060:	008b      	lsls	r3, r1, #2
 8007062:	4621      	mov	r1, r4
 8007064:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007068:	4621      	mov	r1, r4
 800706a:	008a      	lsls	r2, r1, #2
 800706c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8007070:	f7f9 fe72 	bl	8000d58 <__aeabi_uldivmod>
 8007074:	4602      	mov	r2, r0
 8007076:	460b      	mov	r3, r1
 8007078:	4b60      	ldr	r3, [pc, #384]	; (80071fc <UART_SetConfig+0x4e4>)
 800707a:	fba3 2302 	umull	r2, r3, r3, r2
 800707e:	095b      	lsrs	r3, r3, #5
 8007080:	011c      	lsls	r4, r3, #4
 8007082:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8007086:	2200      	movs	r2, #0
 8007088:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800708c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8007090:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8007094:	4642      	mov	r2, r8
 8007096:	464b      	mov	r3, r9
 8007098:	1891      	adds	r1, r2, r2
 800709a:	61b9      	str	r1, [r7, #24]
 800709c:	415b      	adcs	r3, r3
 800709e:	61fb      	str	r3, [r7, #28]
 80070a0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80070a4:	4641      	mov	r1, r8
 80070a6:	1851      	adds	r1, r2, r1
 80070a8:	6139      	str	r1, [r7, #16]
 80070aa:	4649      	mov	r1, r9
 80070ac:	414b      	adcs	r3, r1
 80070ae:	617b      	str	r3, [r7, #20]
 80070b0:	f04f 0200 	mov.w	r2, #0
 80070b4:	f04f 0300 	mov.w	r3, #0
 80070b8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80070bc:	4659      	mov	r1, fp
 80070be:	00cb      	lsls	r3, r1, #3
 80070c0:	4651      	mov	r1, sl
 80070c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80070c6:	4651      	mov	r1, sl
 80070c8:	00ca      	lsls	r2, r1, #3
 80070ca:	4610      	mov	r0, r2
 80070cc:	4619      	mov	r1, r3
 80070ce:	4603      	mov	r3, r0
 80070d0:	4642      	mov	r2, r8
 80070d2:	189b      	adds	r3, r3, r2
 80070d4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80070d8:	464b      	mov	r3, r9
 80070da:	460a      	mov	r2, r1
 80070dc:	eb42 0303 	adc.w	r3, r2, r3
 80070e0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80070e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80070e8:	685b      	ldr	r3, [r3, #4]
 80070ea:	2200      	movs	r2, #0
 80070ec:	67bb      	str	r3, [r7, #120]	; 0x78
 80070ee:	67fa      	str	r2, [r7, #124]	; 0x7c
 80070f0:	f04f 0200 	mov.w	r2, #0
 80070f4:	f04f 0300 	mov.w	r3, #0
 80070f8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 80070fc:	4649      	mov	r1, r9
 80070fe:	008b      	lsls	r3, r1, #2
 8007100:	4641      	mov	r1, r8
 8007102:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007106:	4641      	mov	r1, r8
 8007108:	008a      	lsls	r2, r1, #2
 800710a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800710e:	f7f9 fe23 	bl	8000d58 <__aeabi_uldivmod>
 8007112:	4602      	mov	r2, r0
 8007114:	460b      	mov	r3, r1
 8007116:	4b39      	ldr	r3, [pc, #228]	; (80071fc <UART_SetConfig+0x4e4>)
 8007118:	fba3 1302 	umull	r1, r3, r3, r2
 800711c:	095b      	lsrs	r3, r3, #5
 800711e:	2164      	movs	r1, #100	; 0x64
 8007120:	fb01 f303 	mul.w	r3, r1, r3
 8007124:	1ad3      	subs	r3, r2, r3
 8007126:	011b      	lsls	r3, r3, #4
 8007128:	3332      	adds	r3, #50	; 0x32
 800712a:	4a34      	ldr	r2, [pc, #208]	; (80071fc <UART_SetConfig+0x4e4>)
 800712c:	fba2 2303 	umull	r2, r3, r2, r3
 8007130:	095b      	lsrs	r3, r3, #5
 8007132:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007136:	441c      	add	r4, r3
 8007138:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800713c:	2200      	movs	r2, #0
 800713e:	673b      	str	r3, [r7, #112]	; 0x70
 8007140:	677a      	str	r2, [r7, #116]	; 0x74
 8007142:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8007146:	4642      	mov	r2, r8
 8007148:	464b      	mov	r3, r9
 800714a:	1891      	adds	r1, r2, r2
 800714c:	60b9      	str	r1, [r7, #8]
 800714e:	415b      	adcs	r3, r3
 8007150:	60fb      	str	r3, [r7, #12]
 8007152:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007156:	4641      	mov	r1, r8
 8007158:	1851      	adds	r1, r2, r1
 800715a:	6039      	str	r1, [r7, #0]
 800715c:	4649      	mov	r1, r9
 800715e:	414b      	adcs	r3, r1
 8007160:	607b      	str	r3, [r7, #4]
 8007162:	f04f 0200 	mov.w	r2, #0
 8007166:	f04f 0300 	mov.w	r3, #0
 800716a:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800716e:	4659      	mov	r1, fp
 8007170:	00cb      	lsls	r3, r1, #3
 8007172:	4651      	mov	r1, sl
 8007174:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007178:	4651      	mov	r1, sl
 800717a:	00ca      	lsls	r2, r1, #3
 800717c:	4610      	mov	r0, r2
 800717e:	4619      	mov	r1, r3
 8007180:	4603      	mov	r3, r0
 8007182:	4642      	mov	r2, r8
 8007184:	189b      	adds	r3, r3, r2
 8007186:	66bb      	str	r3, [r7, #104]	; 0x68
 8007188:	464b      	mov	r3, r9
 800718a:	460a      	mov	r2, r1
 800718c:	eb42 0303 	adc.w	r3, r2, r3
 8007190:	66fb      	str	r3, [r7, #108]	; 0x6c
 8007192:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007196:	685b      	ldr	r3, [r3, #4]
 8007198:	2200      	movs	r2, #0
 800719a:	663b      	str	r3, [r7, #96]	; 0x60
 800719c:	667a      	str	r2, [r7, #100]	; 0x64
 800719e:	f04f 0200 	mov.w	r2, #0
 80071a2:	f04f 0300 	mov.w	r3, #0
 80071a6:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 80071aa:	4649      	mov	r1, r9
 80071ac:	008b      	lsls	r3, r1, #2
 80071ae:	4641      	mov	r1, r8
 80071b0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80071b4:	4641      	mov	r1, r8
 80071b6:	008a      	lsls	r2, r1, #2
 80071b8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80071bc:	f7f9 fdcc 	bl	8000d58 <__aeabi_uldivmod>
 80071c0:	4602      	mov	r2, r0
 80071c2:	460b      	mov	r3, r1
 80071c4:	4b0d      	ldr	r3, [pc, #52]	; (80071fc <UART_SetConfig+0x4e4>)
 80071c6:	fba3 1302 	umull	r1, r3, r3, r2
 80071ca:	095b      	lsrs	r3, r3, #5
 80071cc:	2164      	movs	r1, #100	; 0x64
 80071ce:	fb01 f303 	mul.w	r3, r1, r3
 80071d2:	1ad3      	subs	r3, r2, r3
 80071d4:	011b      	lsls	r3, r3, #4
 80071d6:	3332      	adds	r3, #50	; 0x32
 80071d8:	4a08      	ldr	r2, [pc, #32]	; (80071fc <UART_SetConfig+0x4e4>)
 80071da:	fba2 2303 	umull	r2, r3, r2, r3
 80071de:	095b      	lsrs	r3, r3, #5
 80071e0:	f003 020f 	and.w	r2, r3, #15
 80071e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80071e8:	681b      	ldr	r3, [r3, #0]
 80071ea:	4422      	add	r2, r4
 80071ec:	609a      	str	r2, [r3, #8]
 80071ee:	bf00      	nop
 80071f0:	f507 7780 	add.w	r7, r7, #256	; 0x100
 80071f4:	46bd      	mov	sp, r7
 80071f6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80071fa:	bf00      	nop
 80071fc:	51eb851f 	.word	0x51eb851f

08007200 <cos>:
 8007200:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007202:	ec53 2b10 	vmov	r2, r3, d0
 8007206:	4826      	ldr	r0, [pc, #152]	; (80072a0 <cos+0xa0>)
 8007208:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800720c:	4281      	cmp	r1, r0
 800720e:	dc06      	bgt.n	800721e <cos+0x1e>
 8007210:	ed9f 1b21 	vldr	d1, [pc, #132]	; 8007298 <cos+0x98>
 8007214:	b005      	add	sp, #20
 8007216:	f85d eb04 	ldr.w	lr, [sp], #4
 800721a:	f000 bdd1 	b.w	8007dc0 <__kernel_cos>
 800721e:	4821      	ldr	r0, [pc, #132]	; (80072a4 <cos+0xa4>)
 8007220:	4281      	cmp	r1, r0
 8007222:	dd09      	ble.n	8007238 <cos+0x38>
 8007224:	ee10 0a10 	vmov	r0, s0
 8007228:	4619      	mov	r1, r3
 800722a:	f7f9 f845 	bl	80002b8 <__aeabi_dsub>
 800722e:	ec41 0b10 	vmov	d0, r0, r1
 8007232:	b005      	add	sp, #20
 8007234:	f85d fb04 	ldr.w	pc, [sp], #4
 8007238:	4668      	mov	r0, sp
 800723a:	f000 fb01 	bl	8007840 <__ieee754_rem_pio2>
 800723e:	f000 0003 	and.w	r0, r0, #3
 8007242:	2801      	cmp	r0, #1
 8007244:	d00b      	beq.n	800725e <cos+0x5e>
 8007246:	2802      	cmp	r0, #2
 8007248:	d016      	beq.n	8007278 <cos+0x78>
 800724a:	b9e0      	cbnz	r0, 8007286 <cos+0x86>
 800724c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007250:	ed9d 0b00 	vldr	d0, [sp]
 8007254:	f000 fdb4 	bl	8007dc0 <__kernel_cos>
 8007258:	ec51 0b10 	vmov	r0, r1, d0
 800725c:	e7e7      	b.n	800722e <cos+0x2e>
 800725e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007262:	ed9d 0b00 	vldr	d0, [sp]
 8007266:	f001 f9c3 	bl	80085f0 <__kernel_sin>
 800726a:	ec53 2b10 	vmov	r2, r3, d0
 800726e:	ee10 0a10 	vmov	r0, s0
 8007272:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8007276:	e7da      	b.n	800722e <cos+0x2e>
 8007278:	ed9d 1b02 	vldr	d1, [sp, #8]
 800727c:	ed9d 0b00 	vldr	d0, [sp]
 8007280:	f000 fd9e 	bl	8007dc0 <__kernel_cos>
 8007284:	e7f1      	b.n	800726a <cos+0x6a>
 8007286:	ed9d 1b02 	vldr	d1, [sp, #8]
 800728a:	ed9d 0b00 	vldr	d0, [sp]
 800728e:	2001      	movs	r0, #1
 8007290:	f001 f9ae 	bl	80085f0 <__kernel_sin>
 8007294:	e7e0      	b.n	8007258 <cos+0x58>
 8007296:	bf00      	nop
	...
 80072a0:	3fe921fb 	.word	0x3fe921fb
 80072a4:	7fefffff 	.word	0x7fefffff

080072a8 <sin>:
 80072a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80072aa:	ec53 2b10 	vmov	r2, r3, d0
 80072ae:	4828      	ldr	r0, [pc, #160]	; (8007350 <sin+0xa8>)
 80072b0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80072b4:	4281      	cmp	r1, r0
 80072b6:	dc07      	bgt.n	80072c8 <sin+0x20>
 80072b8:	ed9f 1b23 	vldr	d1, [pc, #140]	; 8007348 <sin+0xa0>
 80072bc:	2000      	movs	r0, #0
 80072be:	b005      	add	sp, #20
 80072c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80072c4:	f001 b994 	b.w	80085f0 <__kernel_sin>
 80072c8:	4822      	ldr	r0, [pc, #136]	; (8007354 <sin+0xac>)
 80072ca:	4281      	cmp	r1, r0
 80072cc:	dd09      	ble.n	80072e2 <sin+0x3a>
 80072ce:	ee10 0a10 	vmov	r0, s0
 80072d2:	4619      	mov	r1, r3
 80072d4:	f7f8 fff0 	bl	80002b8 <__aeabi_dsub>
 80072d8:	ec41 0b10 	vmov	d0, r0, r1
 80072dc:	b005      	add	sp, #20
 80072de:	f85d fb04 	ldr.w	pc, [sp], #4
 80072e2:	4668      	mov	r0, sp
 80072e4:	f000 faac 	bl	8007840 <__ieee754_rem_pio2>
 80072e8:	f000 0003 	and.w	r0, r0, #3
 80072ec:	2801      	cmp	r0, #1
 80072ee:	d00c      	beq.n	800730a <sin+0x62>
 80072f0:	2802      	cmp	r0, #2
 80072f2:	d011      	beq.n	8007318 <sin+0x70>
 80072f4:	b9f0      	cbnz	r0, 8007334 <sin+0x8c>
 80072f6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80072fa:	ed9d 0b00 	vldr	d0, [sp]
 80072fe:	2001      	movs	r0, #1
 8007300:	f001 f976 	bl	80085f0 <__kernel_sin>
 8007304:	ec51 0b10 	vmov	r0, r1, d0
 8007308:	e7e6      	b.n	80072d8 <sin+0x30>
 800730a:	ed9d 1b02 	vldr	d1, [sp, #8]
 800730e:	ed9d 0b00 	vldr	d0, [sp]
 8007312:	f000 fd55 	bl	8007dc0 <__kernel_cos>
 8007316:	e7f5      	b.n	8007304 <sin+0x5c>
 8007318:	ed9d 1b02 	vldr	d1, [sp, #8]
 800731c:	ed9d 0b00 	vldr	d0, [sp]
 8007320:	2001      	movs	r0, #1
 8007322:	f001 f965 	bl	80085f0 <__kernel_sin>
 8007326:	ec53 2b10 	vmov	r2, r3, d0
 800732a:	ee10 0a10 	vmov	r0, s0
 800732e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8007332:	e7d1      	b.n	80072d8 <sin+0x30>
 8007334:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007338:	ed9d 0b00 	vldr	d0, [sp]
 800733c:	f000 fd40 	bl	8007dc0 <__kernel_cos>
 8007340:	e7f1      	b.n	8007326 <sin+0x7e>
 8007342:	bf00      	nop
 8007344:	f3af 8000 	nop.w
	...
 8007350:	3fe921fb 	.word	0x3fe921fb
 8007354:	7fefffff 	.word	0x7fefffff

08007358 <asin>:
 8007358:	b538      	push	{r3, r4, r5, lr}
 800735a:	ed2d 8b02 	vpush	{d8}
 800735e:	ec55 4b10 	vmov	r4, r5, d0
 8007362:	f000 f859 	bl	8007418 <__ieee754_asin>
 8007366:	4622      	mov	r2, r4
 8007368:	462b      	mov	r3, r5
 800736a:	4620      	mov	r0, r4
 800736c:	4629      	mov	r1, r5
 800736e:	eeb0 8a40 	vmov.f32	s16, s0
 8007372:	eef0 8a60 	vmov.f32	s17, s1
 8007376:	f7f9 fbf1 	bl	8000b5c <__aeabi_dcmpun>
 800737a:	b9a8      	cbnz	r0, 80073a8 <asin+0x50>
 800737c:	ec45 4b10 	vmov	d0, r4, r5
 8007380:	f001 f9f4 	bl	800876c <fabs>
 8007384:	4b0c      	ldr	r3, [pc, #48]	; (80073b8 <asin+0x60>)
 8007386:	ec51 0b10 	vmov	r0, r1, d0
 800738a:	2200      	movs	r2, #0
 800738c:	f7f9 fbdc 	bl	8000b48 <__aeabi_dcmpgt>
 8007390:	b150      	cbz	r0, 80073a8 <asin+0x50>
 8007392:	f001 fb07 	bl	80089a4 <__errno>
 8007396:	ecbd 8b02 	vpop	{d8}
 800739a:	2321      	movs	r3, #33	; 0x21
 800739c:	6003      	str	r3, [r0, #0]
 800739e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80073a2:	4806      	ldr	r0, [pc, #24]	; (80073bc <asin+0x64>)
 80073a4:	f001 ba6c 	b.w	8008880 <nan>
 80073a8:	eeb0 0a48 	vmov.f32	s0, s16
 80073ac:	eef0 0a68 	vmov.f32	s1, s17
 80073b0:	ecbd 8b02 	vpop	{d8}
 80073b4:	bd38      	pop	{r3, r4, r5, pc}
 80073b6:	bf00      	nop
 80073b8:	3ff00000 	.word	0x3ff00000
 80073bc:	0801009f 	.word	0x0801009f

080073c0 <sqrt>:
 80073c0:	b538      	push	{r3, r4, r5, lr}
 80073c2:	ed2d 8b02 	vpush	{d8}
 80073c6:	ec55 4b10 	vmov	r4, r5, d0
 80073ca:	f000 fc45 	bl	8007c58 <__ieee754_sqrt>
 80073ce:	4622      	mov	r2, r4
 80073d0:	462b      	mov	r3, r5
 80073d2:	4620      	mov	r0, r4
 80073d4:	4629      	mov	r1, r5
 80073d6:	eeb0 8a40 	vmov.f32	s16, s0
 80073da:	eef0 8a60 	vmov.f32	s17, s1
 80073de:	f7f9 fbbd 	bl	8000b5c <__aeabi_dcmpun>
 80073e2:	b990      	cbnz	r0, 800740a <sqrt+0x4a>
 80073e4:	2200      	movs	r2, #0
 80073e6:	2300      	movs	r3, #0
 80073e8:	4620      	mov	r0, r4
 80073ea:	4629      	mov	r1, r5
 80073ec:	f7f9 fb8e 	bl	8000b0c <__aeabi_dcmplt>
 80073f0:	b158      	cbz	r0, 800740a <sqrt+0x4a>
 80073f2:	f001 fad7 	bl	80089a4 <__errno>
 80073f6:	2321      	movs	r3, #33	; 0x21
 80073f8:	6003      	str	r3, [r0, #0]
 80073fa:	2200      	movs	r2, #0
 80073fc:	2300      	movs	r3, #0
 80073fe:	4610      	mov	r0, r2
 8007400:	4619      	mov	r1, r3
 8007402:	f7f9 fa3b 	bl	800087c <__aeabi_ddiv>
 8007406:	ec41 0b18 	vmov	d8, r0, r1
 800740a:	eeb0 0a48 	vmov.f32	s0, s16
 800740e:	eef0 0a68 	vmov.f32	s1, s17
 8007412:	ecbd 8b02 	vpop	{d8}
 8007416:	bd38      	pop	{r3, r4, r5, pc}

08007418 <__ieee754_asin>:
 8007418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800741c:	ed2d 8b04 	vpush	{d8-d9}
 8007420:	ec55 4b10 	vmov	r4, r5, d0
 8007424:	4bcc      	ldr	r3, [pc, #816]	; (8007758 <__ieee754_asin+0x340>)
 8007426:	b083      	sub	sp, #12
 8007428:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800742c:	4598      	cmp	r8, r3
 800742e:	9501      	str	r5, [sp, #4]
 8007430:	dd35      	ble.n	800749e <__ieee754_asin+0x86>
 8007432:	ee10 3a10 	vmov	r3, s0
 8007436:	f108 4840 	add.w	r8, r8, #3221225472	; 0xc0000000
 800743a:	f508 1880 	add.w	r8, r8, #1048576	; 0x100000
 800743e:	ea58 0303 	orrs.w	r3, r8, r3
 8007442:	d117      	bne.n	8007474 <__ieee754_asin+0x5c>
 8007444:	a3aa      	add	r3, pc, #680	; (adr r3, 80076f0 <__ieee754_asin+0x2d8>)
 8007446:	e9d3 2300 	ldrd	r2, r3, [r3]
 800744a:	ee10 0a10 	vmov	r0, s0
 800744e:	4629      	mov	r1, r5
 8007450:	f7f9 f8ea 	bl	8000628 <__aeabi_dmul>
 8007454:	a3a8      	add	r3, pc, #672	; (adr r3, 80076f8 <__ieee754_asin+0x2e0>)
 8007456:	e9d3 2300 	ldrd	r2, r3, [r3]
 800745a:	4606      	mov	r6, r0
 800745c:	460f      	mov	r7, r1
 800745e:	4620      	mov	r0, r4
 8007460:	4629      	mov	r1, r5
 8007462:	f7f9 f8e1 	bl	8000628 <__aeabi_dmul>
 8007466:	4602      	mov	r2, r0
 8007468:	460b      	mov	r3, r1
 800746a:	4630      	mov	r0, r6
 800746c:	4639      	mov	r1, r7
 800746e:	f7f8 ff25 	bl	80002bc <__adddf3>
 8007472:	e00b      	b.n	800748c <__ieee754_asin+0x74>
 8007474:	ee10 2a10 	vmov	r2, s0
 8007478:	462b      	mov	r3, r5
 800747a:	ee10 0a10 	vmov	r0, s0
 800747e:	4629      	mov	r1, r5
 8007480:	f7f8 ff1a 	bl	80002b8 <__aeabi_dsub>
 8007484:	4602      	mov	r2, r0
 8007486:	460b      	mov	r3, r1
 8007488:	f7f9 f9f8 	bl	800087c <__aeabi_ddiv>
 800748c:	4604      	mov	r4, r0
 800748e:	460d      	mov	r5, r1
 8007490:	ec45 4b10 	vmov	d0, r4, r5
 8007494:	b003      	add	sp, #12
 8007496:	ecbd 8b04 	vpop	{d8-d9}
 800749a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800749e:	4baf      	ldr	r3, [pc, #700]	; (800775c <__ieee754_asin+0x344>)
 80074a0:	4598      	cmp	r8, r3
 80074a2:	dc11      	bgt.n	80074c8 <__ieee754_asin+0xb0>
 80074a4:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 80074a8:	f280 80ae 	bge.w	8007608 <__ieee754_asin+0x1f0>
 80074ac:	a394      	add	r3, pc, #592	; (adr r3, 8007700 <__ieee754_asin+0x2e8>)
 80074ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074b2:	ee10 0a10 	vmov	r0, s0
 80074b6:	4629      	mov	r1, r5
 80074b8:	f7f8 ff00 	bl	80002bc <__adddf3>
 80074bc:	4ba8      	ldr	r3, [pc, #672]	; (8007760 <__ieee754_asin+0x348>)
 80074be:	2200      	movs	r2, #0
 80074c0:	f7f9 fb42 	bl	8000b48 <__aeabi_dcmpgt>
 80074c4:	2800      	cmp	r0, #0
 80074c6:	d1e3      	bne.n	8007490 <__ieee754_asin+0x78>
 80074c8:	ec45 4b10 	vmov	d0, r4, r5
 80074cc:	f001 f94e 	bl	800876c <fabs>
 80074d0:	49a3      	ldr	r1, [pc, #652]	; (8007760 <__ieee754_asin+0x348>)
 80074d2:	ec53 2b10 	vmov	r2, r3, d0
 80074d6:	2000      	movs	r0, #0
 80074d8:	f7f8 feee 	bl	80002b8 <__aeabi_dsub>
 80074dc:	4ba1      	ldr	r3, [pc, #644]	; (8007764 <__ieee754_asin+0x34c>)
 80074de:	2200      	movs	r2, #0
 80074e0:	f7f9 f8a2 	bl	8000628 <__aeabi_dmul>
 80074e4:	a388      	add	r3, pc, #544	; (adr r3, 8007708 <__ieee754_asin+0x2f0>)
 80074e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074ea:	4604      	mov	r4, r0
 80074ec:	460d      	mov	r5, r1
 80074ee:	f7f9 f89b 	bl	8000628 <__aeabi_dmul>
 80074f2:	a387      	add	r3, pc, #540	; (adr r3, 8007710 <__ieee754_asin+0x2f8>)
 80074f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074f8:	f7f8 fee0 	bl	80002bc <__adddf3>
 80074fc:	4622      	mov	r2, r4
 80074fe:	462b      	mov	r3, r5
 8007500:	f7f9 f892 	bl	8000628 <__aeabi_dmul>
 8007504:	a384      	add	r3, pc, #528	; (adr r3, 8007718 <__ieee754_asin+0x300>)
 8007506:	e9d3 2300 	ldrd	r2, r3, [r3]
 800750a:	f7f8 fed5 	bl	80002b8 <__aeabi_dsub>
 800750e:	4622      	mov	r2, r4
 8007510:	462b      	mov	r3, r5
 8007512:	f7f9 f889 	bl	8000628 <__aeabi_dmul>
 8007516:	a382      	add	r3, pc, #520	; (adr r3, 8007720 <__ieee754_asin+0x308>)
 8007518:	e9d3 2300 	ldrd	r2, r3, [r3]
 800751c:	f7f8 fece 	bl	80002bc <__adddf3>
 8007520:	4622      	mov	r2, r4
 8007522:	462b      	mov	r3, r5
 8007524:	f7f9 f880 	bl	8000628 <__aeabi_dmul>
 8007528:	a37f      	add	r3, pc, #508	; (adr r3, 8007728 <__ieee754_asin+0x310>)
 800752a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800752e:	f7f8 fec3 	bl	80002b8 <__aeabi_dsub>
 8007532:	4622      	mov	r2, r4
 8007534:	462b      	mov	r3, r5
 8007536:	f7f9 f877 	bl	8000628 <__aeabi_dmul>
 800753a:	a37d      	add	r3, pc, #500	; (adr r3, 8007730 <__ieee754_asin+0x318>)
 800753c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007540:	f7f8 febc 	bl	80002bc <__adddf3>
 8007544:	4622      	mov	r2, r4
 8007546:	462b      	mov	r3, r5
 8007548:	f7f9 f86e 	bl	8000628 <__aeabi_dmul>
 800754c:	a37a      	add	r3, pc, #488	; (adr r3, 8007738 <__ieee754_asin+0x320>)
 800754e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007552:	ec41 0b18 	vmov	d8, r0, r1
 8007556:	4620      	mov	r0, r4
 8007558:	4629      	mov	r1, r5
 800755a:	f7f9 f865 	bl	8000628 <__aeabi_dmul>
 800755e:	a378      	add	r3, pc, #480	; (adr r3, 8007740 <__ieee754_asin+0x328>)
 8007560:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007564:	f7f8 fea8 	bl	80002b8 <__aeabi_dsub>
 8007568:	4622      	mov	r2, r4
 800756a:	462b      	mov	r3, r5
 800756c:	f7f9 f85c 	bl	8000628 <__aeabi_dmul>
 8007570:	a375      	add	r3, pc, #468	; (adr r3, 8007748 <__ieee754_asin+0x330>)
 8007572:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007576:	f7f8 fea1 	bl	80002bc <__adddf3>
 800757a:	4622      	mov	r2, r4
 800757c:	462b      	mov	r3, r5
 800757e:	f7f9 f853 	bl	8000628 <__aeabi_dmul>
 8007582:	a373      	add	r3, pc, #460	; (adr r3, 8007750 <__ieee754_asin+0x338>)
 8007584:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007588:	f7f8 fe96 	bl	80002b8 <__aeabi_dsub>
 800758c:	4622      	mov	r2, r4
 800758e:	462b      	mov	r3, r5
 8007590:	f7f9 f84a 	bl	8000628 <__aeabi_dmul>
 8007594:	4b72      	ldr	r3, [pc, #456]	; (8007760 <__ieee754_asin+0x348>)
 8007596:	2200      	movs	r2, #0
 8007598:	f7f8 fe90 	bl	80002bc <__adddf3>
 800759c:	ec45 4b10 	vmov	d0, r4, r5
 80075a0:	4606      	mov	r6, r0
 80075a2:	460f      	mov	r7, r1
 80075a4:	f000 fb58 	bl	8007c58 <__ieee754_sqrt>
 80075a8:	4b6f      	ldr	r3, [pc, #444]	; (8007768 <__ieee754_asin+0x350>)
 80075aa:	4598      	cmp	r8, r3
 80075ac:	ec5b ab10 	vmov	sl, fp, d0
 80075b0:	f340 80dc 	ble.w	800776c <__ieee754_asin+0x354>
 80075b4:	4632      	mov	r2, r6
 80075b6:	463b      	mov	r3, r7
 80075b8:	ec51 0b18 	vmov	r0, r1, d8
 80075bc:	f7f9 f95e 	bl	800087c <__aeabi_ddiv>
 80075c0:	4652      	mov	r2, sl
 80075c2:	465b      	mov	r3, fp
 80075c4:	f7f9 f830 	bl	8000628 <__aeabi_dmul>
 80075c8:	4652      	mov	r2, sl
 80075ca:	465b      	mov	r3, fp
 80075cc:	f7f8 fe76 	bl	80002bc <__adddf3>
 80075d0:	4602      	mov	r2, r0
 80075d2:	460b      	mov	r3, r1
 80075d4:	f7f8 fe72 	bl	80002bc <__adddf3>
 80075d8:	a347      	add	r3, pc, #284	; (adr r3, 80076f8 <__ieee754_asin+0x2e0>)
 80075da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075de:	f7f8 fe6b 	bl	80002b8 <__aeabi_dsub>
 80075e2:	4602      	mov	r2, r0
 80075e4:	460b      	mov	r3, r1
 80075e6:	a142      	add	r1, pc, #264	; (adr r1, 80076f0 <__ieee754_asin+0x2d8>)
 80075e8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80075ec:	f7f8 fe64 	bl	80002b8 <__aeabi_dsub>
 80075f0:	9b01      	ldr	r3, [sp, #4]
 80075f2:	2b00      	cmp	r3, #0
 80075f4:	bfdc      	itt	le
 80075f6:	4602      	movle	r2, r0
 80075f8:	f101 4300 	addle.w	r3, r1, #2147483648	; 0x80000000
 80075fc:	4604      	mov	r4, r0
 80075fe:	460d      	mov	r5, r1
 8007600:	bfdc      	itt	le
 8007602:	4614      	movle	r4, r2
 8007604:	461d      	movle	r5, r3
 8007606:	e743      	b.n	8007490 <__ieee754_asin+0x78>
 8007608:	ee10 2a10 	vmov	r2, s0
 800760c:	ee10 0a10 	vmov	r0, s0
 8007610:	462b      	mov	r3, r5
 8007612:	4629      	mov	r1, r5
 8007614:	f7f9 f808 	bl	8000628 <__aeabi_dmul>
 8007618:	a33b      	add	r3, pc, #236	; (adr r3, 8007708 <__ieee754_asin+0x2f0>)
 800761a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800761e:	4606      	mov	r6, r0
 8007620:	460f      	mov	r7, r1
 8007622:	f7f9 f801 	bl	8000628 <__aeabi_dmul>
 8007626:	a33a      	add	r3, pc, #232	; (adr r3, 8007710 <__ieee754_asin+0x2f8>)
 8007628:	e9d3 2300 	ldrd	r2, r3, [r3]
 800762c:	f7f8 fe46 	bl	80002bc <__adddf3>
 8007630:	4632      	mov	r2, r6
 8007632:	463b      	mov	r3, r7
 8007634:	f7f8 fff8 	bl	8000628 <__aeabi_dmul>
 8007638:	a337      	add	r3, pc, #220	; (adr r3, 8007718 <__ieee754_asin+0x300>)
 800763a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800763e:	f7f8 fe3b 	bl	80002b8 <__aeabi_dsub>
 8007642:	4632      	mov	r2, r6
 8007644:	463b      	mov	r3, r7
 8007646:	f7f8 ffef 	bl	8000628 <__aeabi_dmul>
 800764a:	a335      	add	r3, pc, #212	; (adr r3, 8007720 <__ieee754_asin+0x308>)
 800764c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007650:	f7f8 fe34 	bl	80002bc <__adddf3>
 8007654:	4632      	mov	r2, r6
 8007656:	463b      	mov	r3, r7
 8007658:	f7f8 ffe6 	bl	8000628 <__aeabi_dmul>
 800765c:	a332      	add	r3, pc, #200	; (adr r3, 8007728 <__ieee754_asin+0x310>)
 800765e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007662:	f7f8 fe29 	bl	80002b8 <__aeabi_dsub>
 8007666:	4632      	mov	r2, r6
 8007668:	463b      	mov	r3, r7
 800766a:	f7f8 ffdd 	bl	8000628 <__aeabi_dmul>
 800766e:	a330      	add	r3, pc, #192	; (adr r3, 8007730 <__ieee754_asin+0x318>)
 8007670:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007674:	f7f8 fe22 	bl	80002bc <__adddf3>
 8007678:	4632      	mov	r2, r6
 800767a:	463b      	mov	r3, r7
 800767c:	f7f8 ffd4 	bl	8000628 <__aeabi_dmul>
 8007680:	a32d      	add	r3, pc, #180	; (adr r3, 8007738 <__ieee754_asin+0x320>)
 8007682:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007686:	4680      	mov	r8, r0
 8007688:	4689      	mov	r9, r1
 800768a:	4630      	mov	r0, r6
 800768c:	4639      	mov	r1, r7
 800768e:	f7f8 ffcb 	bl	8000628 <__aeabi_dmul>
 8007692:	a32b      	add	r3, pc, #172	; (adr r3, 8007740 <__ieee754_asin+0x328>)
 8007694:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007698:	f7f8 fe0e 	bl	80002b8 <__aeabi_dsub>
 800769c:	4632      	mov	r2, r6
 800769e:	463b      	mov	r3, r7
 80076a0:	f7f8 ffc2 	bl	8000628 <__aeabi_dmul>
 80076a4:	a328      	add	r3, pc, #160	; (adr r3, 8007748 <__ieee754_asin+0x330>)
 80076a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076aa:	f7f8 fe07 	bl	80002bc <__adddf3>
 80076ae:	4632      	mov	r2, r6
 80076b0:	463b      	mov	r3, r7
 80076b2:	f7f8 ffb9 	bl	8000628 <__aeabi_dmul>
 80076b6:	a326      	add	r3, pc, #152	; (adr r3, 8007750 <__ieee754_asin+0x338>)
 80076b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076bc:	f7f8 fdfc 	bl	80002b8 <__aeabi_dsub>
 80076c0:	4632      	mov	r2, r6
 80076c2:	463b      	mov	r3, r7
 80076c4:	f7f8 ffb0 	bl	8000628 <__aeabi_dmul>
 80076c8:	4b25      	ldr	r3, [pc, #148]	; (8007760 <__ieee754_asin+0x348>)
 80076ca:	2200      	movs	r2, #0
 80076cc:	f7f8 fdf6 	bl	80002bc <__adddf3>
 80076d0:	4602      	mov	r2, r0
 80076d2:	460b      	mov	r3, r1
 80076d4:	4640      	mov	r0, r8
 80076d6:	4649      	mov	r1, r9
 80076d8:	f7f9 f8d0 	bl	800087c <__aeabi_ddiv>
 80076dc:	4622      	mov	r2, r4
 80076de:	462b      	mov	r3, r5
 80076e0:	f7f8 ffa2 	bl	8000628 <__aeabi_dmul>
 80076e4:	4602      	mov	r2, r0
 80076e6:	460b      	mov	r3, r1
 80076e8:	4620      	mov	r0, r4
 80076ea:	4629      	mov	r1, r5
 80076ec:	e6bf      	b.n	800746e <__ieee754_asin+0x56>
 80076ee:	bf00      	nop
 80076f0:	54442d18 	.word	0x54442d18
 80076f4:	3ff921fb 	.word	0x3ff921fb
 80076f8:	33145c07 	.word	0x33145c07
 80076fc:	3c91a626 	.word	0x3c91a626
 8007700:	8800759c 	.word	0x8800759c
 8007704:	7e37e43c 	.word	0x7e37e43c
 8007708:	0dfdf709 	.word	0x0dfdf709
 800770c:	3f023de1 	.word	0x3f023de1
 8007710:	7501b288 	.word	0x7501b288
 8007714:	3f49efe0 	.word	0x3f49efe0
 8007718:	b5688f3b 	.word	0xb5688f3b
 800771c:	3fa48228 	.word	0x3fa48228
 8007720:	0e884455 	.word	0x0e884455
 8007724:	3fc9c155 	.word	0x3fc9c155
 8007728:	03eb6f7d 	.word	0x03eb6f7d
 800772c:	3fd4d612 	.word	0x3fd4d612
 8007730:	55555555 	.word	0x55555555
 8007734:	3fc55555 	.word	0x3fc55555
 8007738:	b12e9282 	.word	0xb12e9282
 800773c:	3fb3b8c5 	.word	0x3fb3b8c5
 8007740:	1b8d0159 	.word	0x1b8d0159
 8007744:	3fe6066c 	.word	0x3fe6066c
 8007748:	9c598ac8 	.word	0x9c598ac8
 800774c:	40002ae5 	.word	0x40002ae5
 8007750:	1c8a2d4b 	.word	0x1c8a2d4b
 8007754:	40033a27 	.word	0x40033a27
 8007758:	3fefffff 	.word	0x3fefffff
 800775c:	3fdfffff 	.word	0x3fdfffff
 8007760:	3ff00000 	.word	0x3ff00000
 8007764:	3fe00000 	.word	0x3fe00000
 8007768:	3fef3332 	.word	0x3fef3332
 800776c:	ee10 2a10 	vmov	r2, s0
 8007770:	ee10 0a10 	vmov	r0, s0
 8007774:	465b      	mov	r3, fp
 8007776:	4659      	mov	r1, fp
 8007778:	f7f8 fda0 	bl	80002bc <__adddf3>
 800777c:	4632      	mov	r2, r6
 800777e:	463b      	mov	r3, r7
 8007780:	ec41 0b19 	vmov	d9, r0, r1
 8007784:	ec51 0b18 	vmov	r0, r1, d8
 8007788:	f7f9 f878 	bl	800087c <__aeabi_ddiv>
 800778c:	4602      	mov	r2, r0
 800778e:	460b      	mov	r3, r1
 8007790:	ec51 0b19 	vmov	r0, r1, d9
 8007794:	f7f8 ff48 	bl	8000628 <__aeabi_dmul>
 8007798:	f04f 0800 	mov.w	r8, #0
 800779c:	4606      	mov	r6, r0
 800779e:	460f      	mov	r7, r1
 80077a0:	4642      	mov	r2, r8
 80077a2:	465b      	mov	r3, fp
 80077a4:	4640      	mov	r0, r8
 80077a6:	4659      	mov	r1, fp
 80077a8:	f7f8 ff3e 	bl	8000628 <__aeabi_dmul>
 80077ac:	4602      	mov	r2, r0
 80077ae:	460b      	mov	r3, r1
 80077b0:	4620      	mov	r0, r4
 80077b2:	4629      	mov	r1, r5
 80077b4:	f7f8 fd80 	bl	80002b8 <__aeabi_dsub>
 80077b8:	4642      	mov	r2, r8
 80077ba:	4604      	mov	r4, r0
 80077bc:	460d      	mov	r5, r1
 80077be:	465b      	mov	r3, fp
 80077c0:	4650      	mov	r0, sl
 80077c2:	4659      	mov	r1, fp
 80077c4:	f7f8 fd7a 	bl	80002bc <__adddf3>
 80077c8:	4602      	mov	r2, r0
 80077ca:	460b      	mov	r3, r1
 80077cc:	4620      	mov	r0, r4
 80077ce:	4629      	mov	r1, r5
 80077d0:	f7f9 f854 	bl	800087c <__aeabi_ddiv>
 80077d4:	4602      	mov	r2, r0
 80077d6:	460b      	mov	r3, r1
 80077d8:	f7f8 fd70 	bl	80002bc <__adddf3>
 80077dc:	4602      	mov	r2, r0
 80077de:	460b      	mov	r3, r1
 80077e0:	a113      	add	r1, pc, #76	; (adr r1, 8007830 <__ieee754_asin+0x418>)
 80077e2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80077e6:	f7f8 fd67 	bl	80002b8 <__aeabi_dsub>
 80077ea:	4602      	mov	r2, r0
 80077ec:	460b      	mov	r3, r1
 80077ee:	4630      	mov	r0, r6
 80077f0:	4639      	mov	r1, r7
 80077f2:	f7f8 fd61 	bl	80002b8 <__aeabi_dsub>
 80077f6:	4642      	mov	r2, r8
 80077f8:	4604      	mov	r4, r0
 80077fa:	460d      	mov	r5, r1
 80077fc:	465b      	mov	r3, fp
 80077fe:	4640      	mov	r0, r8
 8007800:	4659      	mov	r1, fp
 8007802:	f7f8 fd5b 	bl	80002bc <__adddf3>
 8007806:	4602      	mov	r2, r0
 8007808:	460b      	mov	r3, r1
 800780a:	a10b      	add	r1, pc, #44	; (adr r1, 8007838 <__ieee754_asin+0x420>)
 800780c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007810:	f7f8 fd52 	bl	80002b8 <__aeabi_dsub>
 8007814:	4602      	mov	r2, r0
 8007816:	460b      	mov	r3, r1
 8007818:	4620      	mov	r0, r4
 800781a:	4629      	mov	r1, r5
 800781c:	f7f8 fd4c 	bl	80002b8 <__aeabi_dsub>
 8007820:	4602      	mov	r2, r0
 8007822:	460b      	mov	r3, r1
 8007824:	a104      	add	r1, pc, #16	; (adr r1, 8007838 <__ieee754_asin+0x420>)
 8007826:	e9d1 0100 	ldrd	r0, r1, [r1]
 800782a:	e6df      	b.n	80075ec <__ieee754_asin+0x1d4>
 800782c:	f3af 8000 	nop.w
 8007830:	33145c07 	.word	0x33145c07
 8007834:	3c91a626 	.word	0x3c91a626
 8007838:	54442d18 	.word	0x54442d18
 800783c:	3fe921fb 	.word	0x3fe921fb

08007840 <__ieee754_rem_pio2>:
 8007840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007844:	ed2d 8b02 	vpush	{d8}
 8007848:	ec55 4b10 	vmov	r4, r5, d0
 800784c:	4bca      	ldr	r3, [pc, #808]	; (8007b78 <__ieee754_rem_pio2+0x338>)
 800784e:	b08b      	sub	sp, #44	; 0x2c
 8007850:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8007854:	4598      	cmp	r8, r3
 8007856:	4682      	mov	sl, r0
 8007858:	9502      	str	r5, [sp, #8]
 800785a:	dc08      	bgt.n	800786e <__ieee754_rem_pio2+0x2e>
 800785c:	2200      	movs	r2, #0
 800785e:	2300      	movs	r3, #0
 8007860:	ed80 0b00 	vstr	d0, [r0]
 8007864:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8007868:	f04f 0b00 	mov.w	fp, #0
 800786c:	e028      	b.n	80078c0 <__ieee754_rem_pio2+0x80>
 800786e:	4bc3      	ldr	r3, [pc, #780]	; (8007b7c <__ieee754_rem_pio2+0x33c>)
 8007870:	4598      	cmp	r8, r3
 8007872:	dc78      	bgt.n	8007966 <__ieee754_rem_pio2+0x126>
 8007874:	9b02      	ldr	r3, [sp, #8]
 8007876:	4ec2      	ldr	r6, [pc, #776]	; (8007b80 <__ieee754_rem_pio2+0x340>)
 8007878:	2b00      	cmp	r3, #0
 800787a:	ee10 0a10 	vmov	r0, s0
 800787e:	a3b0      	add	r3, pc, #704	; (adr r3, 8007b40 <__ieee754_rem_pio2+0x300>)
 8007880:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007884:	4629      	mov	r1, r5
 8007886:	dd39      	ble.n	80078fc <__ieee754_rem_pio2+0xbc>
 8007888:	f7f8 fd16 	bl	80002b8 <__aeabi_dsub>
 800788c:	45b0      	cmp	r8, r6
 800788e:	4604      	mov	r4, r0
 8007890:	460d      	mov	r5, r1
 8007892:	d01b      	beq.n	80078cc <__ieee754_rem_pio2+0x8c>
 8007894:	a3ac      	add	r3, pc, #688	; (adr r3, 8007b48 <__ieee754_rem_pio2+0x308>)
 8007896:	e9d3 2300 	ldrd	r2, r3, [r3]
 800789a:	f7f8 fd0d 	bl	80002b8 <__aeabi_dsub>
 800789e:	4602      	mov	r2, r0
 80078a0:	460b      	mov	r3, r1
 80078a2:	e9ca 2300 	strd	r2, r3, [sl]
 80078a6:	4620      	mov	r0, r4
 80078a8:	4629      	mov	r1, r5
 80078aa:	f7f8 fd05 	bl	80002b8 <__aeabi_dsub>
 80078ae:	a3a6      	add	r3, pc, #664	; (adr r3, 8007b48 <__ieee754_rem_pio2+0x308>)
 80078b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078b4:	f7f8 fd00 	bl	80002b8 <__aeabi_dsub>
 80078b8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80078bc:	f04f 0b01 	mov.w	fp, #1
 80078c0:	4658      	mov	r0, fp
 80078c2:	b00b      	add	sp, #44	; 0x2c
 80078c4:	ecbd 8b02 	vpop	{d8}
 80078c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078cc:	a3a0      	add	r3, pc, #640	; (adr r3, 8007b50 <__ieee754_rem_pio2+0x310>)
 80078ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078d2:	f7f8 fcf1 	bl	80002b8 <__aeabi_dsub>
 80078d6:	a3a0      	add	r3, pc, #640	; (adr r3, 8007b58 <__ieee754_rem_pio2+0x318>)
 80078d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078dc:	4604      	mov	r4, r0
 80078de:	460d      	mov	r5, r1
 80078e0:	f7f8 fcea 	bl	80002b8 <__aeabi_dsub>
 80078e4:	4602      	mov	r2, r0
 80078e6:	460b      	mov	r3, r1
 80078e8:	e9ca 2300 	strd	r2, r3, [sl]
 80078ec:	4620      	mov	r0, r4
 80078ee:	4629      	mov	r1, r5
 80078f0:	f7f8 fce2 	bl	80002b8 <__aeabi_dsub>
 80078f4:	a398      	add	r3, pc, #608	; (adr r3, 8007b58 <__ieee754_rem_pio2+0x318>)
 80078f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078fa:	e7db      	b.n	80078b4 <__ieee754_rem_pio2+0x74>
 80078fc:	f7f8 fcde 	bl	80002bc <__adddf3>
 8007900:	45b0      	cmp	r8, r6
 8007902:	4604      	mov	r4, r0
 8007904:	460d      	mov	r5, r1
 8007906:	d016      	beq.n	8007936 <__ieee754_rem_pio2+0xf6>
 8007908:	a38f      	add	r3, pc, #572	; (adr r3, 8007b48 <__ieee754_rem_pio2+0x308>)
 800790a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800790e:	f7f8 fcd5 	bl	80002bc <__adddf3>
 8007912:	4602      	mov	r2, r0
 8007914:	460b      	mov	r3, r1
 8007916:	e9ca 2300 	strd	r2, r3, [sl]
 800791a:	4620      	mov	r0, r4
 800791c:	4629      	mov	r1, r5
 800791e:	f7f8 fccb 	bl	80002b8 <__aeabi_dsub>
 8007922:	a389      	add	r3, pc, #548	; (adr r3, 8007b48 <__ieee754_rem_pio2+0x308>)
 8007924:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007928:	f7f8 fcc8 	bl	80002bc <__adddf3>
 800792c:	f04f 3bff 	mov.w	fp, #4294967295
 8007930:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007934:	e7c4      	b.n	80078c0 <__ieee754_rem_pio2+0x80>
 8007936:	a386      	add	r3, pc, #536	; (adr r3, 8007b50 <__ieee754_rem_pio2+0x310>)
 8007938:	e9d3 2300 	ldrd	r2, r3, [r3]
 800793c:	f7f8 fcbe 	bl	80002bc <__adddf3>
 8007940:	a385      	add	r3, pc, #532	; (adr r3, 8007b58 <__ieee754_rem_pio2+0x318>)
 8007942:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007946:	4604      	mov	r4, r0
 8007948:	460d      	mov	r5, r1
 800794a:	f7f8 fcb7 	bl	80002bc <__adddf3>
 800794e:	4602      	mov	r2, r0
 8007950:	460b      	mov	r3, r1
 8007952:	e9ca 2300 	strd	r2, r3, [sl]
 8007956:	4620      	mov	r0, r4
 8007958:	4629      	mov	r1, r5
 800795a:	f7f8 fcad 	bl	80002b8 <__aeabi_dsub>
 800795e:	a37e      	add	r3, pc, #504	; (adr r3, 8007b58 <__ieee754_rem_pio2+0x318>)
 8007960:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007964:	e7e0      	b.n	8007928 <__ieee754_rem_pio2+0xe8>
 8007966:	4b87      	ldr	r3, [pc, #540]	; (8007b84 <__ieee754_rem_pio2+0x344>)
 8007968:	4598      	cmp	r8, r3
 800796a:	f300 80d9 	bgt.w	8007b20 <__ieee754_rem_pio2+0x2e0>
 800796e:	f000 fefd 	bl	800876c <fabs>
 8007972:	ec55 4b10 	vmov	r4, r5, d0
 8007976:	ee10 0a10 	vmov	r0, s0
 800797a:	a379      	add	r3, pc, #484	; (adr r3, 8007b60 <__ieee754_rem_pio2+0x320>)
 800797c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007980:	4629      	mov	r1, r5
 8007982:	f7f8 fe51 	bl	8000628 <__aeabi_dmul>
 8007986:	4b80      	ldr	r3, [pc, #512]	; (8007b88 <__ieee754_rem_pio2+0x348>)
 8007988:	2200      	movs	r2, #0
 800798a:	f7f8 fc97 	bl	80002bc <__adddf3>
 800798e:	f7f9 f8fb 	bl	8000b88 <__aeabi_d2iz>
 8007992:	4683      	mov	fp, r0
 8007994:	f7f8 fdde 	bl	8000554 <__aeabi_i2d>
 8007998:	4602      	mov	r2, r0
 800799a:	460b      	mov	r3, r1
 800799c:	ec43 2b18 	vmov	d8, r2, r3
 80079a0:	a367      	add	r3, pc, #412	; (adr r3, 8007b40 <__ieee754_rem_pio2+0x300>)
 80079a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079a6:	f7f8 fe3f 	bl	8000628 <__aeabi_dmul>
 80079aa:	4602      	mov	r2, r0
 80079ac:	460b      	mov	r3, r1
 80079ae:	4620      	mov	r0, r4
 80079b0:	4629      	mov	r1, r5
 80079b2:	f7f8 fc81 	bl	80002b8 <__aeabi_dsub>
 80079b6:	a364      	add	r3, pc, #400	; (adr r3, 8007b48 <__ieee754_rem_pio2+0x308>)
 80079b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079bc:	4606      	mov	r6, r0
 80079be:	460f      	mov	r7, r1
 80079c0:	ec51 0b18 	vmov	r0, r1, d8
 80079c4:	f7f8 fe30 	bl	8000628 <__aeabi_dmul>
 80079c8:	f1bb 0f1f 	cmp.w	fp, #31
 80079cc:	4604      	mov	r4, r0
 80079ce:	460d      	mov	r5, r1
 80079d0:	dc0d      	bgt.n	80079ee <__ieee754_rem_pio2+0x1ae>
 80079d2:	4b6e      	ldr	r3, [pc, #440]	; (8007b8c <__ieee754_rem_pio2+0x34c>)
 80079d4:	f10b 32ff 	add.w	r2, fp, #4294967295
 80079d8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80079dc:	4543      	cmp	r3, r8
 80079de:	d006      	beq.n	80079ee <__ieee754_rem_pio2+0x1ae>
 80079e0:	4622      	mov	r2, r4
 80079e2:	462b      	mov	r3, r5
 80079e4:	4630      	mov	r0, r6
 80079e6:	4639      	mov	r1, r7
 80079e8:	f7f8 fc66 	bl	80002b8 <__aeabi_dsub>
 80079ec:	e00f      	b.n	8007a0e <__ieee754_rem_pio2+0x1ce>
 80079ee:	462b      	mov	r3, r5
 80079f0:	4622      	mov	r2, r4
 80079f2:	4630      	mov	r0, r6
 80079f4:	4639      	mov	r1, r7
 80079f6:	f7f8 fc5f 	bl	80002b8 <__aeabi_dsub>
 80079fa:	ea4f 5328 	mov.w	r3, r8, asr #20
 80079fe:	9303      	str	r3, [sp, #12]
 8007a00:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8007a04:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8007a08:	f1b8 0f10 	cmp.w	r8, #16
 8007a0c:	dc02      	bgt.n	8007a14 <__ieee754_rem_pio2+0x1d4>
 8007a0e:	e9ca 0100 	strd	r0, r1, [sl]
 8007a12:	e039      	b.n	8007a88 <__ieee754_rem_pio2+0x248>
 8007a14:	a34e      	add	r3, pc, #312	; (adr r3, 8007b50 <__ieee754_rem_pio2+0x310>)
 8007a16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a1a:	ec51 0b18 	vmov	r0, r1, d8
 8007a1e:	f7f8 fe03 	bl	8000628 <__aeabi_dmul>
 8007a22:	4604      	mov	r4, r0
 8007a24:	460d      	mov	r5, r1
 8007a26:	4602      	mov	r2, r0
 8007a28:	460b      	mov	r3, r1
 8007a2a:	4630      	mov	r0, r6
 8007a2c:	4639      	mov	r1, r7
 8007a2e:	f7f8 fc43 	bl	80002b8 <__aeabi_dsub>
 8007a32:	4602      	mov	r2, r0
 8007a34:	460b      	mov	r3, r1
 8007a36:	4680      	mov	r8, r0
 8007a38:	4689      	mov	r9, r1
 8007a3a:	4630      	mov	r0, r6
 8007a3c:	4639      	mov	r1, r7
 8007a3e:	f7f8 fc3b 	bl	80002b8 <__aeabi_dsub>
 8007a42:	4622      	mov	r2, r4
 8007a44:	462b      	mov	r3, r5
 8007a46:	f7f8 fc37 	bl	80002b8 <__aeabi_dsub>
 8007a4a:	a343      	add	r3, pc, #268	; (adr r3, 8007b58 <__ieee754_rem_pio2+0x318>)
 8007a4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a50:	4604      	mov	r4, r0
 8007a52:	460d      	mov	r5, r1
 8007a54:	ec51 0b18 	vmov	r0, r1, d8
 8007a58:	f7f8 fde6 	bl	8000628 <__aeabi_dmul>
 8007a5c:	4622      	mov	r2, r4
 8007a5e:	462b      	mov	r3, r5
 8007a60:	f7f8 fc2a 	bl	80002b8 <__aeabi_dsub>
 8007a64:	4602      	mov	r2, r0
 8007a66:	460b      	mov	r3, r1
 8007a68:	4604      	mov	r4, r0
 8007a6a:	460d      	mov	r5, r1
 8007a6c:	4640      	mov	r0, r8
 8007a6e:	4649      	mov	r1, r9
 8007a70:	f7f8 fc22 	bl	80002b8 <__aeabi_dsub>
 8007a74:	9a03      	ldr	r2, [sp, #12]
 8007a76:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8007a7a:	1ad3      	subs	r3, r2, r3
 8007a7c:	2b31      	cmp	r3, #49	; 0x31
 8007a7e:	dc24      	bgt.n	8007aca <__ieee754_rem_pio2+0x28a>
 8007a80:	e9ca 0100 	strd	r0, r1, [sl]
 8007a84:	4646      	mov	r6, r8
 8007a86:	464f      	mov	r7, r9
 8007a88:	e9da 8900 	ldrd	r8, r9, [sl]
 8007a8c:	4630      	mov	r0, r6
 8007a8e:	4642      	mov	r2, r8
 8007a90:	464b      	mov	r3, r9
 8007a92:	4639      	mov	r1, r7
 8007a94:	f7f8 fc10 	bl	80002b8 <__aeabi_dsub>
 8007a98:	462b      	mov	r3, r5
 8007a9a:	4622      	mov	r2, r4
 8007a9c:	f7f8 fc0c 	bl	80002b8 <__aeabi_dsub>
 8007aa0:	9b02      	ldr	r3, [sp, #8]
 8007aa2:	2b00      	cmp	r3, #0
 8007aa4:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007aa8:	f6bf af0a 	bge.w	80078c0 <__ieee754_rem_pio2+0x80>
 8007aac:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8007ab0:	f8ca 3004 	str.w	r3, [sl, #4]
 8007ab4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007ab8:	f8ca 8000 	str.w	r8, [sl]
 8007abc:	f8ca 0008 	str.w	r0, [sl, #8]
 8007ac0:	f8ca 300c 	str.w	r3, [sl, #12]
 8007ac4:	f1cb 0b00 	rsb	fp, fp, #0
 8007ac8:	e6fa      	b.n	80078c0 <__ieee754_rem_pio2+0x80>
 8007aca:	a327      	add	r3, pc, #156	; (adr r3, 8007b68 <__ieee754_rem_pio2+0x328>)
 8007acc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ad0:	ec51 0b18 	vmov	r0, r1, d8
 8007ad4:	f7f8 fda8 	bl	8000628 <__aeabi_dmul>
 8007ad8:	4604      	mov	r4, r0
 8007ada:	460d      	mov	r5, r1
 8007adc:	4602      	mov	r2, r0
 8007ade:	460b      	mov	r3, r1
 8007ae0:	4640      	mov	r0, r8
 8007ae2:	4649      	mov	r1, r9
 8007ae4:	f7f8 fbe8 	bl	80002b8 <__aeabi_dsub>
 8007ae8:	4602      	mov	r2, r0
 8007aea:	460b      	mov	r3, r1
 8007aec:	4606      	mov	r6, r0
 8007aee:	460f      	mov	r7, r1
 8007af0:	4640      	mov	r0, r8
 8007af2:	4649      	mov	r1, r9
 8007af4:	f7f8 fbe0 	bl	80002b8 <__aeabi_dsub>
 8007af8:	4622      	mov	r2, r4
 8007afa:	462b      	mov	r3, r5
 8007afc:	f7f8 fbdc 	bl	80002b8 <__aeabi_dsub>
 8007b00:	a31b      	add	r3, pc, #108	; (adr r3, 8007b70 <__ieee754_rem_pio2+0x330>)
 8007b02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b06:	4604      	mov	r4, r0
 8007b08:	460d      	mov	r5, r1
 8007b0a:	ec51 0b18 	vmov	r0, r1, d8
 8007b0e:	f7f8 fd8b 	bl	8000628 <__aeabi_dmul>
 8007b12:	4622      	mov	r2, r4
 8007b14:	462b      	mov	r3, r5
 8007b16:	f7f8 fbcf 	bl	80002b8 <__aeabi_dsub>
 8007b1a:	4604      	mov	r4, r0
 8007b1c:	460d      	mov	r5, r1
 8007b1e:	e75f      	b.n	80079e0 <__ieee754_rem_pio2+0x1a0>
 8007b20:	4b1b      	ldr	r3, [pc, #108]	; (8007b90 <__ieee754_rem_pio2+0x350>)
 8007b22:	4598      	cmp	r8, r3
 8007b24:	dd36      	ble.n	8007b94 <__ieee754_rem_pio2+0x354>
 8007b26:	ee10 2a10 	vmov	r2, s0
 8007b2a:	462b      	mov	r3, r5
 8007b2c:	4620      	mov	r0, r4
 8007b2e:	4629      	mov	r1, r5
 8007b30:	f7f8 fbc2 	bl	80002b8 <__aeabi_dsub>
 8007b34:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007b38:	e9ca 0100 	strd	r0, r1, [sl]
 8007b3c:	e694      	b.n	8007868 <__ieee754_rem_pio2+0x28>
 8007b3e:	bf00      	nop
 8007b40:	54400000 	.word	0x54400000
 8007b44:	3ff921fb 	.word	0x3ff921fb
 8007b48:	1a626331 	.word	0x1a626331
 8007b4c:	3dd0b461 	.word	0x3dd0b461
 8007b50:	1a600000 	.word	0x1a600000
 8007b54:	3dd0b461 	.word	0x3dd0b461
 8007b58:	2e037073 	.word	0x2e037073
 8007b5c:	3ba3198a 	.word	0x3ba3198a
 8007b60:	6dc9c883 	.word	0x6dc9c883
 8007b64:	3fe45f30 	.word	0x3fe45f30
 8007b68:	2e000000 	.word	0x2e000000
 8007b6c:	3ba3198a 	.word	0x3ba3198a
 8007b70:	252049c1 	.word	0x252049c1
 8007b74:	397b839a 	.word	0x397b839a
 8007b78:	3fe921fb 	.word	0x3fe921fb
 8007b7c:	4002d97b 	.word	0x4002d97b
 8007b80:	3ff921fb 	.word	0x3ff921fb
 8007b84:	413921fb 	.word	0x413921fb
 8007b88:	3fe00000 	.word	0x3fe00000
 8007b8c:	0800fa10 	.word	0x0800fa10
 8007b90:	7fefffff 	.word	0x7fefffff
 8007b94:	ea4f 5428 	mov.w	r4, r8, asr #20
 8007b98:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8007b9c:	ee10 0a10 	vmov	r0, s0
 8007ba0:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 8007ba4:	ee10 6a10 	vmov	r6, s0
 8007ba8:	460f      	mov	r7, r1
 8007baa:	f7f8 ffed 	bl	8000b88 <__aeabi_d2iz>
 8007bae:	f7f8 fcd1 	bl	8000554 <__aeabi_i2d>
 8007bb2:	4602      	mov	r2, r0
 8007bb4:	460b      	mov	r3, r1
 8007bb6:	4630      	mov	r0, r6
 8007bb8:	4639      	mov	r1, r7
 8007bba:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8007bbe:	f7f8 fb7b 	bl	80002b8 <__aeabi_dsub>
 8007bc2:	4b23      	ldr	r3, [pc, #140]	; (8007c50 <__ieee754_rem_pio2+0x410>)
 8007bc4:	2200      	movs	r2, #0
 8007bc6:	f7f8 fd2f 	bl	8000628 <__aeabi_dmul>
 8007bca:	460f      	mov	r7, r1
 8007bcc:	4606      	mov	r6, r0
 8007bce:	f7f8 ffdb 	bl	8000b88 <__aeabi_d2iz>
 8007bd2:	f7f8 fcbf 	bl	8000554 <__aeabi_i2d>
 8007bd6:	4602      	mov	r2, r0
 8007bd8:	460b      	mov	r3, r1
 8007bda:	4630      	mov	r0, r6
 8007bdc:	4639      	mov	r1, r7
 8007bde:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8007be2:	f7f8 fb69 	bl	80002b8 <__aeabi_dsub>
 8007be6:	4b1a      	ldr	r3, [pc, #104]	; (8007c50 <__ieee754_rem_pio2+0x410>)
 8007be8:	2200      	movs	r2, #0
 8007bea:	f7f8 fd1d 	bl	8000628 <__aeabi_dmul>
 8007bee:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8007bf2:	ad04      	add	r5, sp, #16
 8007bf4:	f04f 0803 	mov.w	r8, #3
 8007bf8:	46a9      	mov	r9, r5
 8007bfa:	2600      	movs	r6, #0
 8007bfc:	2700      	movs	r7, #0
 8007bfe:	4632      	mov	r2, r6
 8007c00:	463b      	mov	r3, r7
 8007c02:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 8007c06:	46c3      	mov	fp, r8
 8007c08:	3d08      	subs	r5, #8
 8007c0a:	f108 38ff 	add.w	r8, r8, #4294967295
 8007c0e:	f7f8 ff73 	bl	8000af8 <__aeabi_dcmpeq>
 8007c12:	2800      	cmp	r0, #0
 8007c14:	d1f3      	bne.n	8007bfe <__ieee754_rem_pio2+0x3be>
 8007c16:	4b0f      	ldr	r3, [pc, #60]	; (8007c54 <__ieee754_rem_pio2+0x414>)
 8007c18:	9301      	str	r3, [sp, #4]
 8007c1a:	2302      	movs	r3, #2
 8007c1c:	9300      	str	r3, [sp, #0]
 8007c1e:	4622      	mov	r2, r4
 8007c20:	465b      	mov	r3, fp
 8007c22:	4651      	mov	r1, sl
 8007c24:	4648      	mov	r0, r9
 8007c26:	f000 f993 	bl	8007f50 <__kernel_rem_pio2>
 8007c2a:	9b02      	ldr	r3, [sp, #8]
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	4683      	mov	fp, r0
 8007c30:	f6bf ae46 	bge.w	80078c0 <__ieee754_rem_pio2+0x80>
 8007c34:	e9da 2100 	ldrd	r2, r1, [sl]
 8007c38:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007c3c:	e9ca 2300 	strd	r2, r3, [sl]
 8007c40:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8007c44:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007c48:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8007c4c:	e73a      	b.n	8007ac4 <__ieee754_rem_pio2+0x284>
 8007c4e:	bf00      	nop
 8007c50:	41700000 	.word	0x41700000
 8007c54:	0800fa90 	.word	0x0800fa90

08007c58 <__ieee754_sqrt>:
 8007c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c5c:	ec55 4b10 	vmov	r4, r5, d0
 8007c60:	4e55      	ldr	r6, [pc, #340]	; (8007db8 <__ieee754_sqrt+0x160>)
 8007c62:	43ae      	bics	r6, r5
 8007c64:	ee10 0a10 	vmov	r0, s0
 8007c68:	ee10 3a10 	vmov	r3, s0
 8007c6c:	462a      	mov	r2, r5
 8007c6e:	4629      	mov	r1, r5
 8007c70:	d110      	bne.n	8007c94 <__ieee754_sqrt+0x3c>
 8007c72:	ee10 2a10 	vmov	r2, s0
 8007c76:	462b      	mov	r3, r5
 8007c78:	f7f8 fcd6 	bl	8000628 <__aeabi_dmul>
 8007c7c:	4602      	mov	r2, r0
 8007c7e:	460b      	mov	r3, r1
 8007c80:	4620      	mov	r0, r4
 8007c82:	4629      	mov	r1, r5
 8007c84:	f7f8 fb1a 	bl	80002bc <__adddf3>
 8007c88:	4604      	mov	r4, r0
 8007c8a:	460d      	mov	r5, r1
 8007c8c:	ec45 4b10 	vmov	d0, r4, r5
 8007c90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007c94:	2d00      	cmp	r5, #0
 8007c96:	dc10      	bgt.n	8007cba <__ieee754_sqrt+0x62>
 8007c98:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8007c9c:	4330      	orrs	r0, r6
 8007c9e:	d0f5      	beq.n	8007c8c <__ieee754_sqrt+0x34>
 8007ca0:	b15d      	cbz	r5, 8007cba <__ieee754_sqrt+0x62>
 8007ca2:	ee10 2a10 	vmov	r2, s0
 8007ca6:	462b      	mov	r3, r5
 8007ca8:	ee10 0a10 	vmov	r0, s0
 8007cac:	f7f8 fb04 	bl	80002b8 <__aeabi_dsub>
 8007cb0:	4602      	mov	r2, r0
 8007cb2:	460b      	mov	r3, r1
 8007cb4:	f7f8 fde2 	bl	800087c <__aeabi_ddiv>
 8007cb8:	e7e6      	b.n	8007c88 <__ieee754_sqrt+0x30>
 8007cba:	1512      	asrs	r2, r2, #20
 8007cbc:	d074      	beq.n	8007da8 <__ieee754_sqrt+0x150>
 8007cbe:	07d4      	lsls	r4, r2, #31
 8007cc0:	f3c1 0113 	ubfx	r1, r1, #0, #20
 8007cc4:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 8007cc8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007ccc:	bf5e      	ittt	pl
 8007cce:	0fda      	lsrpl	r2, r3, #31
 8007cd0:	005b      	lslpl	r3, r3, #1
 8007cd2:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 8007cd6:	2400      	movs	r4, #0
 8007cd8:	0fda      	lsrs	r2, r3, #31
 8007cda:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8007cde:	107f      	asrs	r7, r7, #1
 8007ce0:	005b      	lsls	r3, r3, #1
 8007ce2:	2516      	movs	r5, #22
 8007ce4:	4620      	mov	r0, r4
 8007ce6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8007cea:	1886      	adds	r6, r0, r2
 8007cec:	428e      	cmp	r6, r1
 8007cee:	bfde      	ittt	le
 8007cf0:	1b89      	suble	r1, r1, r6
 8007cf2:	18b0      	addle	r0, r6, r2
 8007cf4:	18a4      	addle	r4, r4, r2
 8007cf6:	0049      	lsls	r1, r1, #1
 8007cf8:	3d01      	subs	r5, #1
 8007cfa:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 8007cfe:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8007d02:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007d06:	d1f0      	bne.n	8007cea <__ieee754_sqrt+0x92>
 8007d08:	462a      	mov	r2, r5
 8007d0a:	f04f 0e20 	mov.w	lr, #32
 8007d0e:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8007d12:	4281      	cmp	r1, r0
 8007d14:	eb06 0c05 	add.w	ip, r6, r5
 8007d18:	dc02      	bgt.n	8007d20 <__ieee754_sqrt+0xc8>
 8007d1a:	d113      	bne.n	8007d44 <__ieee754_sqrt+0xec>
 8007d1c:	459c      	cmp	ip, r3
 8007d1e:	d811      	bhi.n	8007d44 <__ieee754_sqrt+0xec>
 8007d20:	f1bc 0f00 	cmp.w	ip, #0
 8007d24:	eb0c 0506 	add.w	r5, ip, r6
 8007d28:	da43      	bge.n	8007db2 <__ieee754_sqrt+0x15a>
 8007d2a:	2d00      	cmp	r5, #0
 8007d2c:	db41      	blt.n	8007db2 <__ieee754_sqrt+0x15a>
 8007d2e:	f100 0801 	add.w	r8, r0, #1
 8007d32:	1a09      	subs	r1, r1, r0
 8007d34:	459c      	cmp	ip, r3
 8007d36:	bf88      	it	hi
 8007d38:	f101 31ff 	addhi.w	r1, r1, #4294967295
 8007d3c:	eba3 030c 	sub.w	r3, r3, ip
 8007d40:	4432      	add	r2, r6
 8007d42:	4640      	mov	r0, r8
 8007d44:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 8007d48:	f1be 0e01 	subs.w	lr, lr, #1
 8007d4c:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 8007d50:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007d54:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8007d58:	d1db      	bne.n	8007d12 <__ieee754_sqrt+0xba>
 8007d5a:	430b      	orrs	r3, r1
 8007d5c:	d006      	beq.n	8007d6c <__ieee754_sqrt+0x114>
 8007d5e:	1c50      	adds	r0, r2, #1
 8007d60:	bf13      	iteet	ne
 8007d62:	3201      	addne	r2, #1
 8007d64:	3401      	addeq	r4, #1
 8007d66:	4672      	moveq	r2, lr
 8007d68:	f022 0201 	bicne.w	r2, r2, #1
 8007d6c:	1063      	asrs	r3, r4, #1
 8007d6e:	0852      	lsrs	r2, r2, #1
 8007d70:	07e1      	lsls	r1, r4, #31
 8007d72:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8007d76:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8007d7a:	bf48      	it	mi
 8007d7c:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 8007d80:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 8007d84:	4614      	mov	r4, r2
 8007d86:	e781      	b.n	8007c8c <__ieee754_sqrt+0x34>
 8007d88:	0ad9      	lsrs	r1, r3, #11
 8007d8a:	3815      	subs	r0, #21
 8007d8c:	055b      	lsls	r3, r3, #21
 8007d8e:	2900      	cmp	r1, #0
 8007d90:	d0fa      	beq.n	8007d88 <__ieee754_sqrt+0x130>
 8007d92:	02cd      	lsls	r5, r1, #11
 8007d94:	d50a      	bpl.n	8007dac <__ieee754_sqrt+0x154>
 8007d96:	f1c2 0420 	rsb	r4, r2, #32
 8007d9a:	fa23 f404 	lsr.w	r4, r3, r4
 8007d9e:	1e55      	subs	r5, r2, #1
 8007da0:	4093      	lsls	r3, r2
 8007da2:	4321      	orrs	r1, r4
 8007da4:	1b42      	subs	r2, r0, r5
 8007da6:	e78a      	b.n	8007cbe <__ieee754_sqrt+0x66>
 8007da8:	4610      	mov	r0, r2
 8007daa:	e7f0      	b.n	8007d8e <__ieee754_sqrt+0x136>
 8007dac:	0049      	lsls	r1, r1, #1
 8007dae:	3201      	adds	r2, #1
 8007db0:	e7ef      	b.n	8007d92 <__ieee754_sqrt+0x13a>
 8007db2:	4680      	mov	r8, r0
 8007db4:	e7bd      	b.n	8007d32 <__ieee754_sqrt+0xda>
 8007db6:	bf00      	nop
 8007db8:	7ff00000 	.word	0x7ff00000
 8007dbc:	00000000 	.word	0x00000000

08007dc0 <__kernel_cos>:
 8007dc0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007dc4:	ec57 6b10 	vmov	r6, r7, d0
 8007dc8:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8007dcc:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8007dd0:	ed8d 1b00 	vstr	d1, [sp]
 8007dd4:	da07      	bge.n	8007de6 <__kernel_cos+0x26>
 8007dd6:	ee10 0a10 	vmov	r0, s0
 8007dda:	4639      	mov	r1, r7
 8007ddc:	f7f8 fed4 	bl	8000b88 <__aeabi_d2iz>
 8007de0:	2800      	cmp	r0, #0
 8007de2:	f000 8088 	beq.w	8007ef6 <__kernel_cos+0x136>
 8007de6:	4632      	mov	r2, r6
 8007de8:	463b      	mov	r3, r7
 8007dea:	4630      	mov	r0, r6
 8007dec:	4639      	mov	r1, r7
 8007dee:	f7f8 fc1b 	bl	8000628 <__aeabi_dmul>
 8007df2:	4b51      	ldr	r3, [pc, #324]	; (8007f38 <__kernel_cos+0x178>)
 8007df4:	2200      	movs	r2, #0
 8007df6:	4604      	mov	r4, r0
 8007df8:	460d      	mov	r5, r1
 8007dfa:	f7f8 fc15 	bl	8000628 <__aeabi_dmul>
 8007dfe:	a340      	add	r3, pc, #256	; (adr r3, 8007f00 <__kernel_cos+0x140>)
 8007e00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e04:	4682      	mov	sl, r0
 8007e06:	468b      	mov	fp, r1
 8007e08:	4620      	mov	r0, r4
 8007e0a:	4629      	mov	r1, r5
 8007e0c:	f7f8 fc0c 	bl	8000628 <__aeabi_dmul>
 8007e10:	a33d      	add	r3, pc, #244	; (adr r3, 8007f08 <__kernel_cos+0x148>)
 8007e12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e16:	f7f8 fa51 	bl	80002bc <__adddf3>
 8007e1a:	4622      	mov	r2, r4
 8007e1c:	462b      	mov	r3, r5
 8007e1e:	f7f8 fc03 	bl	8000628 <__aeabi_dmul>
 8007e22:	a33b      	add	r3, pc, #236	; (adr r3, 8007f10 <__kernel_cos+0x150>)
 8007e24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e28:	f7f8 fa46 	bl	80002b8 <__aeabi_dsub>
 8007e2c:	4622      	mov	r2, r4
 8007e2e:	462b      	mov	r3, r5
 8007e30:	f7f8 fbfa 	bl	8000628 <__aeabi_dmul>
 8007e34:	a338      	add	r3, pc, #224	; (adr r3, 8007f18 <__kernel_cos+0x158>)
 8007e36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e3a:	f7f8 fa3f 	bl	80002bc <__adddf3>
 8007e3e:	4622      	mov	r2, r4
 8007e40:	462b      	mov	r3, r5
 8007e42:	f7f8 fbf1 	bl	8000628 <__aeabi_dmul>
 8007e46:	a336      	add	r3, pc, #216	; (adr r3, 8007f20 <__kernel_cos+0x160>)
 8007e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e4c:	f7f8 fa34 	bl	80002b8 <__aeabi_dsub>
 8007e50:	4622      	mov	r2, r4
 8007e52:	462b      	mov	r3, r5
 8007e54:	f7f8 fbe8 	bl	8000628 <__aeabi_dmul>
 8007e58:	a333      	add	r3, pc, #204	; (adr r3, 8007f28 <__kernel_cos+0x168>)
 8007e5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e5e:	f7f8 fa2d 	bl	80002bc <__adddf3>
 8007e62:	4622      	mov	r2, r4
 8007e64:	462b      	mov	r3, r5
 8007e66:	f7f8 fbdf 	bl	8000628 <__aeabi_dmul>
 8007e6a:	4622      	mov	r2, r4
 8007e6c:	462b      	mov	r3, r5
 8007e6e:	f7f8 fbdb 	bl	8000628 <__aeabi_dmul>
 8007e72:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007e76:	4604      	mov	r4, r0
 8007e78:	460d      	mov	r5, r1
 8007e7a:	4630      	mov	r0, r6
 8007e7c:	4639      	mov	r1, r7
 8007e7e:	f7f8 fbd3 	bl	8000628 <__aeabi_dmul>
 8007e82:	460b      	mov	r3, r1
 8007e84:	4602      	mov	r2, r0
 8007e86:	4629      	mov	r1, r5
 8007e88:	4620      	mov	r0, r4
 8007e8a:	f7f8 fa15 	bl	80002b8 <__aeabi_dsub>
 8007e8e:	4b2b      	ldr	r3, [pc, #172]	; (8007f3c <__kernel_cos+0x17c>)
 8007e90:	4598      	cmp	r8, r3
 8007e92:	4606      	mov	r6, r0
 8007e94:	460f      	mov	r7, r1
 8007e96:	dc10      	bgt.n	8007eba <__kernel_cos+0xfa>
 8007e98:	4602      	mov	r2, r0
 8007e9a:	460b      	mov	r3, r1
 8007e9c:	4650      	mov	r0, sl
 8007e9e:	4659      	mov	r1, fp
 8007ea0:	f7f8 fa0a 	bl	80002b8 <__aeabi_dsub>
 8007ea4:	460b      	mov	r3, r1
 8007ea6:	4926      	ldr	r1, [pc, #152]	; (8007f40 <__kernel_cos+0x180>)
 8007ea8:	4602      	mov	r2, r0
 8007eaa:	2000      	movs	r0, #0
 8007eac:	f7f8 fa04 	bl	80002b8 <__aeabi_dsub>
 8007eb0:	ec41 0b10 	vmov	d0, r0, r1
 8007eb4:	b003      	add	sp, #12
 8007eb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007eba:	4b22      	ldr	r3, [pc, #136]	; (8007f44 <__kernel_cos+0x184>)
 8007ebc:	4920      	ldr	r1, [pc, #128]	; (8007f40 <__kernel_cos+0x180>)
 8007ebe:	4598      	cmp	r8, r3
 8007ec0:	bfcc      	ite	gt
 8007ec2:	4d21      	ldrgt	r5, [pc, #132]	; (8007f48 <__kernel_cos+0x188>)
 8007ec4:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8007ec8:	2400      	movs	r4, #0
 8007eca:	4622      	mov	r2, r4
 8007ecc:	462b      	mov	r3, r5
 8007ece:	2000      	movs	r0, #0
 8007ed0:	f7f8 f9f2 	bl	80002b8 <__aeabi_dsub>
 8007ed4:	4622      	mov	r2, r4
 8007ed6:	4680      	mov	r8, r0
 8007ed8:	4689      	mov	r9, r1
 8007eda:	462b      	mov	r3, r5
 8007edc:	4650      	mov	r0, sl
 8007ede:	4659      	mov	r1, fp
 8007ee0:	f7f8 f9ea 	bl	80002b8 <__aeabi_dsub>
 8007ee4:	4632      	mov	r2, r6
 8007ee6:	463b      	mov	r3, r7
 8007ee8:	f7f8 f9e6 	bl	80002b8 <__aeabi_dsub>
 8007eec:	4602      	mov	r2, r0
 8007eee:	460b      	mov	r3, r1
 8007ef0:	4640      	mov	r0, r8
 8007ef2:	4649      	mov	r1, r9
 8007ef4:	e7da      	b.n	8007eac <__kernel_cos+0xec>
 8007ef6:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8007f30 <__kernel_cos+0x170>
 8007efa:	e7db      	b.n	8007eb4 <__kernel_cos+0xf4>
 8007efc:	f3af 8000 	nop.w
 8007f00:	be8838d4 	.word	0xbe8838d4
 8007f04:	bda8fae9 	.word	0xbda8fae9
 8007f08:	bdb4b1c4 	.word	0xbdb4b1c4
 8007f0c:	3e21ee9e 	.word	0x3e21ee9e
 8007f10:	809c52ad 	.word	0x809c52ad
 8007f14:	3e927e4f 	.word	0x3e927e4f
 8007f18:	19cb1590 	.word	0x19cb1590
 8007f1c:	3efa01a0 	.word	0x3efa01a0
 8007f20:	16c15177 	.word	0x16c15177
 8007f24:	3f56c16c 	.word	0x3f56c16c
 8007f28:	5555554c 	.word	0x5555554c
 8007f2c:	3fa55555 	.word	0x3fa55555
 8007f30:	00000000 	.word	0x00000000
 8007f34:	3ff00000 	.word	0x3ff00000
 8007f38:	3fe00000 	.word	0x3fe00000
 8007f3c:	3fd33332 	.word	0x3fd33332
 8007f40:	3ff00000 	.word	0x3ff00000
 8007f44:	3fe90000 	.word	0x3fe90000
 8007f48:	3fd20000 	.word	0x3fd20000
 8007f4c:	00000000 	.word	0x00000000

08007f50 <__kernel_rem_pio2>:
 8007f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f54:	ed2d 8b02 	vpush	{d8}
 8007f58:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 8007f5c:	f112 0f14 	cmn.w	r2, #20
 8007f60:	9308      	str	r3, [sp, #32]
 8007f62:	9101      	str	r1, [sp, #4]
 8007f64:	4bc4      	ldr	r3, [pc, #784]	; (8008278 <__kernel_rem_pio2+0x328>)
 8007f66:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8007f68:	900b      	str	r0, [sp, #44]	; 0x2c
 8007f6a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8007f6e:	9302      	str	r3, [sp, #8]
 8007f70:	9b08      	ldr	r3, [sp, #32]
 8007f72:	f103 33ff 	add.w	r3, r3, #4294967295
 8007f76:	bfa8      	it	ge
 8007f78:	1ed4      	subge	r4, r2, #3
 8007f7a:	9306      	str	r3, [sp, #24]
 8007f7c:	bfb2      	itee	lt
 8007f7e:	2400      	movlt	r4, #0
 8007f80:	2318      	movge	r3, #24
 8007f82:	fb94 f4f3 	sdivge	r4, r4, r3
 8007f86:	f06f 0317 	mvn.w	r3, #23
 8007f8a:	fb04 3303 	mla	r3, r4, r3, r3
 8007f8e:	eb03 0a02 	add.w	sl, r3, r2
 8007f92:	9b02      	ldr	r3, [sp, #8]
 8007f94:	9a06      	ldr	r2, [sp, #24]
 8007f96:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8008268 <__kernel_rem_pio2+0x318>
 8007f9a:	eb03 0802 	add.w	r8, r3, r2
 8007f9e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8007fa0:	1aa7      	subs	r7, r4, r2
 8007fa2:	ae22      	add	r6, sp, #136	; 0x88
 8007fa4:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8007fa8:	2500      	movs	r5, #0
 8007faa:	4545      	cmp	r5, r8
 8007fac:	dd13      	ble.n	8007fd6 <__kernel_rem_pio2+0x86>
 8007fae:	9b08      	ldr	r3, [sp, #32]
 8007fb0:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8008268 <__kernel_rem_pio2+0x318>
 8007fb4:	aa22      	add	r2, sp, #136	; 0x88
 8007fb6:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8007fba:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 8007fbe:	f04f 0800 	mov.w	r8, #0
 8007fc2:	9b02      	ldr	r3, [sp, #8]
 8007fc4:	4598      	cmp	r8, r3
 8007fc6:	dc2f      	bgt.n	8008028 <__kernel_rem_pio2+0xd8>
 8007fc8:	ed8d 8b04 	vstr	d8, [sp, #16]
 8007fcc:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8007fd0:	462f      	mov	r7, r5
 8007fd2:	2600      	movs	r6, #0
 8007fd4:	e01b      	b.n	800800e <__kernel_rem_pio2+0xbe>
 8007fd6:	42ef      	cmn	r7, r5
 8007fd8:	d407      	bmi.n	8007fea <__kernel_rem_pio2+0x9a>
 8007fda:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8007fde:	f7f8 fab9 	bl	8000554 <__aeabi_i2d>
 8007fe2:	e8e6 0102 	strd	r0, r1, [r6], #8
 8007fe6:	3501      	adds	r5, #1
 8007fe8:	e7df      	b.n	8007faa <__kernel_rem_pio2+0x5a>
 8007fea:	ec51 0b18 	vmov	r0, r1, d8
 8007fee:	e7f8      	b.n	8007fe2 <__kernel_rem_pio2+0x92>
 8007ff0:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007ff4:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8007ff8:	f7f8 fb16 	bl	8000628 <__aeabi_dmul>
 8007ffc:	4602      	mov	r2, r0
 8007ffe:	460b      	mov	r3, r1
 8008000:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008004:	f7f8 f95a 	bl	80002bc <__adddf3>
 8008008:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800800c:	3601      	adds	r6, #1
 800800e:	9b06      	ldr	r3, [sp, #24]
 8008010:	429e      	cmp	r6, r3
 8008012:	f1a7 0708 	sub.w	r7, r7, #8
 8008016:	ddeb      	ble.n	8007ff0 <__kernel_rem_pio2+0xa0>
 8008018:	ed9d 7b04 	vldr	d7, [sp, #16]
 800801c:	f108 0801 	add.w	r8, r8, #1
 8008020:	ecab 7b02 	vstmia	fp!, {d7}
 8008024:	3508      	adds	r5, #8
 8008026:	e7cc      	b.n	8007fc2 <__kernel_rem_pio2+0x72>
 8008028:	9b02      	ldr	r3, [sp, #8]
 800802a:	aa0e      	add	r2, sp, #56	; 0x38
 800802c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008030:	930d      	str	r3, [sp, #52]	; 0x34
 8008032:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8008034:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8008038:	9c02      	ldr	r4, [sp, #8]
 800803a:	930c      	str	r3, [sp, #48]	; 0x30
 800803c:	00e3      	lsls	r3, r4, #3
 800803e:	930a      	str	r3, [sp, #40]	; 0x28
 8008040:	ab9a      	add	r3, sp, #616	; 0x268
 8008042:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8008046:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 800804a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800804e:	ab72      	add	r3, sp, #456	; 0x1c8
 8008050:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8008054:	46c3      	mov	fp, r8
 8008056:	46a1      	mov	r9, r4
 8008058:	f1b9 0f00 	cmp.w	r9, #0
 800805c:	f1a5 0508 	sub.w	r5, r5, #8
 8008060:	dc77      	bgt.n	8008152 <__kernel_rem_pio2+0x202>
 8008062:	ec47 6b10 	vmov	d0, r6, r7
 8008066:	4650      	mov	r0, sl
 8008068:	f000 fc12 	bl	8008890 <scalbn>
 800806c:	ec57 6b10 	vmov	r6, r7, d0
 8008070:	2200      	movs	r2, #0
 8008072:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8008076:	ee10 0a10 	vmov	r0, s0
 800807a:	4639      	mov	r1, r7
 800807c:	f7f8 fad4 	bl	8000628 <__aeabi_dmul>
 8008080:	ec41 0b10 	vmov	d0, r0, r1
 8008084:	f000 fb7c 	bl	8008780 <floor>
 8008088:	4b7c      	ldr	r3, [pc, #496]	; (800827c <__kernel_rem_pio2+0x32c>)
 800808a:	ec51 0b10 	vmov	r0, r1, d0
 800808e:	2200      	movs	r2, #0
 8008090:	f7f8 faca 	bl	8000628 <__aeabi_dmul>
 8008094:	4602      	mov	r2, r0
 8008096:	460b      	mov	r3, r1
 8008098:	4630      	mov	r0, r6
 800809a:	4639      	mov	r1, r7
 800809c:	f7f8 f90c 	bl	80002b8 <__aeabi_dsub>
 80080a0:	460f      	mov	r7, r1
 80080a2:	4606      	mov	r6, r0
 80080a4:	f7f8 fd70 	bl	8000b88 <__aeabi_d2iz>
 80080a8:	9004      	str	r0, [sp, #16]
 80080aa:	f7f8 fa53 	bl	8000554 <__aeabi_i2d>
 80080ae:	4602      	mov	r2, r0
 80080b0:	460b      	mov	r3, r1
 80080b2:	4630      	mov	r0, r6
 80080b4:	4639      	mov	r1, r7
 80080b6:	f7f8 f8ff 	bl	80002b8 <__aeabi_dsub>
 80080ba:	f1ba 0f00 	cmp.w	sl, #0
 80080be:	4606      	mov	r6, r0
 80080c0:	460f      	mov	r7, r1
 80080c2:	dd6d      	ble.n	80081a0 <__kernel_rem_pio2+0x250>
 80080c4:	1e62      	subs	r2, r4, #1
 80080c6:	ab0e      	add	r3, sp, #56	; 0x38
 80080c8:	9d04      	ldr	r5, [sp, #16]
 80080ca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80080ce:	f1ca 0118 	rsb	r1, sl, #24
 80080d2:	fa40 f301 	asr.w	r3, r0, r1
 80080d6:	441d      	add	r5, r3
 80080d8:	408b      	lsls	r3, r1
 80080da:	1ac0      	subs	r0, r0, r3
 80080dc:	ab0e      	add	r3, sp, #56	; 0x38
 80080de:	9504      	str	r5, [sp, #16]
 80080e0:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 80080e4:	f1ca 0317 	rsb	r3, sl, #23
 80080e8:	fa40 fb03 	asr.w	fp, r0, r3
 80080ec:	f1bb 0f00 	cmp.w	fp, #0
 80080f0:	dd65      	ble.n	80081be <__kernel_rem_pio2+0x26e>
 80080f2:	9b04      	ldr	r3, [sp, #16]
 80080f4:	2200      	movs	r2, #0
 80080f6:	3301      	adds	r3, #1
 80080f8:	9304      	str	r3, [sp, #16]
 80080fa:	4615      	mov	r5, r2
 80080fc:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8008100:	4294      	cmp	r4, r2
 8008102:	f300 809c 	bgt.w	800823e <__kernel_rem_pio2+0x2ee>
 8008106:	f1ba 0f00 	cmp.w	sl, #0
 800810a:	dd07      	ble.n	800811c <__kernel_rem_pio2+0x1cc>
 800810c:	f1ba 0f01 	cmp.w	sl, #1
 8008110:	f000 80c0 	beq.w	8008294 <__kernel_rem_pio2+0x344>
 8008114:	f1ba 0f02 	cmp.w	sl, #2
 8008118:	f000 80c6 	beq.w	80082a8 <__kernel_rem_pio2+0x358>
 800811c:	f1bb 0f02 	cmp.w	fp, #2
 8008120:	d14d      	bne.n	80081be <__kernel_rem_pio2+0x26e>
 8008122:	4632      	mov	r2, r6
 8008124:	463b      	mov	r3, r7
 8008126:	4956      	ldr	r1, [pc, #344]	; (8008280 <__kernel_rem_pio2+0x330>)
 8008128:	2000      	movs	r0, #0
 800812a:	f7f8 f8c5 	bl	80002b8 <__aeabi_dsub>
 800812e:	4606      	mov	r6, r0
 8008130:	460f      	mov	r7, r1
 8008132:	2d00      	cmp	r5, #0
 8008134:	d043      	beq.n	80081be <__kernel_rem_pio2+0x26e>
 8008136:	4650      	mov	r0, sl
 8008138:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8008270 <__kernel_rem_pio2+0x320>
 800813c:	f000 fba8 	bl	8008890 <scalbn>
 8008140:	4630      	mov	r0, r6
 8008142:	4639      	mov	r1, r7
 8008144:	ec53 2b10 	vmov	r2, r3, d0
 8008148:	f7f8 f8b6 	bl	80002b8 <__aeabi_dsub>
 800814c:	4606      	mov	r6, r0
 800814e:	460f      	mov	r7, r1
 8008150:	e035      	b.n	80081be <__kernel_rem_pio2+0x26e>
 8008152:	4b4c      	ldr	r3, [pc, #304]	; (8008284 <__kernel_rem_pio2+0x334>)
 8008154:	2200      	movs	r2, #0
 8008156:	4630      	mov	r0, r6
 8008158:	4639      	mov	r1, r7
 800815a:	f7f8 fa65 	bl	8000628 <__aeabi_dmul>
 800815e:	f7f8 fd13 	bl	8000b88 <__aeabi_d2iz>
 8008162:	f7f8 f9f7 	bl	8000554 <__aeabi_i2d>
 8008166:	4602      	mov	r2, r0
 8008168:	460b      	mov	r3, r1
 800816a:	ec43 2b18 	vmov	d8, r2, r3
 800816e:	4b46      	ldr	r3, [pc, #280]	; (8008288 <__kernel_rem_pio2+0x338>)
 8008170:	2200      	movs	r2, #0
 8008172:	f7f8 fa59 	bl	8000628 <__aeabi_dmul>
 8008176:	4602      	mov	r2, r0
 8008178:	460b      	mov	r3, r1
 800817a:	4630      	mov	r0, r6
 800817c:	4639      	mov	r1, r7
 800817e:	f7f8 f89b 	bl	80002b8 <__aeabi_dsub>
 8008182:	f7f8 fd01 	bl	8000b88 <__aeabi_d2iz>
 8008186:	e9d5 2300 	ldrd	r2, r3, [r5]
 800818a:	f84b 0b04 	str.w	r0, [fp], #4
 800818e:	ec51 0b18 	vmov	r0, r1, d8
 8008192:	f7f8 f893 	bl	80002bc <__adddf3>
 8008196:	f109 39ff 	add.w	r9, r9, #4294967295
 800819a:	4606      	mov	r6, r0
 800819c:	460f      	mov	r7, r1
 800819e:	e75b      	b.n	8008058 <__kernel_rem_pio2+0x108>
 80081a0:	d106      	bne.n	80081b0 <__kernel_rem_pio2+0x260>
 80081a2:	1e63      	subs	r3, r4, #1
 80081a4:	aa0e      	add	r2, sp, #56	; 0x38
 80081a6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80081aa:	ea4f 5be0 	mov.w	fp, r0, asr #23
 80081ae:	e79d      	b.n	80080ec <__kernel_rem_pio2+0x19c>
 80081b0:	4b36      	ldr	r3, [pc, #216]	; (800828c <__kernel_rem_pio2+0x33c>)
 80081b2:	2200      	movs	r2, #0
 80081b4:	f7f8 fcbe 	bl	8000b34 <__aeabi_dcmpge>
 80081b8:	2800      	cmp	r0, #0
 80081ba:	d13d      	bne.n	8008238 <__kernel_rem_pio2+0x2e8>
 80081bc:	4683      	mov	fp, r0
 80081be:	2200      	movs	r2, #0
 80081c0:	2300      	movs	r3, #0
 80081c2:	4630      	mov	r0, r6
 80081c4:	4639      	mov	r1, r7
 80081c6:	f7f8 fc97 	bl	8000af8 <__aeabi_dcmpeq>
 80081ca:	2800      	cmp	r0, #0
 80081cc:	f000 80c0 	beq.w	8008350 <__kernel_rem_pio2+0x400>
 80081d0:	1e65      	subs	r5, r4, #1
 80081d2:	462b      	mov	r3, r5
 80081d4:	2200      	movs	r2, #0
 80081d6:	9902      	ldr	r1, [sp, #8]
 80081d8:	428b      	cmp	r3, r1
 80081da:	da6c      	bge.n	80082b6 <__kernel_rem_pio2+0x366>
 80081dc:	2a00      	cmp	r2, #0
 80081de:	f000 8089 	beq.w	80082f4 <__kernel_rem_pio2+0x3a4>
 80081e2:	ab0e      	add	r3, sp, #56	; 0x38
 80081e4:	f1aa 0a18 	sub.w	sl, sl, #24
 80081e8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80081ec:	2b00      	cmp	r3, #0
 80081ee:	f000 80ad 	beq.w	800834c <__kernel_rem_pio2+0x3fc>
 80081f2:	4650      	mov	r0, sl
 80081f4:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8008270 <__kernel_rem_pio2+0x320>
 80081f8:	f000 fb4a 	bl	8008890 <scalbn>
 80081fc:	ab9a      	add	r3, sp, #616	; 0x268
 80081fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8008202:	ec57 6b10 	vmov	r6, r7, d0
 8008206:	00ec      	lsls	r4, r5, #3
 8008208:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 800820c:	46aa      	mov	sl, r5
 800820e:	f1ba 0f00 	cmp.w	sl, #0
 8008212:	f280 80d6 	bge.w	80083c2 <__kernel_rem_pio2+0x472>
 8008216:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8008268 <__kernel_rem_pio2+0x318>
 800821a:	462e      	mov	r6, r5
 800821c:	2e00      	cmp	r6, #0
 800821e:	f2c0 8104 	blt.w	800842a <__kernel_rem_pio2+0x4da>
 8008222:	ab72      	add	r3, sp, #456	; 0x1c8
 8008224:	ed8d 8b06 	vstr	d8, [sp, #24]
 8008228:	f8df a064 	ldr.w	sl, [pc, #100]	; 8008290 <__kernel_rem_pio2+0x340>
 800822c:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 8008230:	f04f 0800 	mov.w	r8, #0
 8008234:	1baf      	subs	r7, r5, r6
 8008236:	e0ea      	b.n	800840e <__kernel_rem_pio2+0x4be>
 8008238:	f04f 0b02 	mov.w	fp, #2
 800823c:	e759      	b.n	80080f2 <__kernel_rem_pio2+0x1a2>
 800823e:	f8d8 3000 	ldr.w	r3, [r8]
 8008242:	b955      	cbnz	r5, 800825a <__kernel_rem_pio2+0x30a>
 8008244:	b123      	cbz	r3, 8008250 <__kernel_rem_pio2+0x300>
 8008246:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 800824a:	f8c8 3000 	str.w	r3, [r8]
 800824e:	2301      	movs	r3, #1
 8008250:	3201      	adds	r2, #1
 8008252:	f108 0804 	add.w	r8, r8, #4
 8008256:	461d      	mov	r5, r3
 8008258:	e752      	b.n	8008100 <__kernel_rem_pio2+0x1b0>
 800825a:	1acb      	subs	r3, r1, r3
 800825c:	f8c8 3000 	str.w	r3, [r8]
 8008260:	462b      	mov	r3, r5
 8008262:	e7f5      	b.n	8008250 <__kernel_rem_pio2+0x300>
 8008264:	f3af 8000 	nop.w
	...
 8008274:	3ff00000 	.word	0x3ff00000
 8008278:	0800fbd8 	.word	0x0800fbd8
 800827c:	40200000 	.word	0x40200000
 8008280:	3ff00000 	.word	0x3ff00000
 8008284:	3e700000 	.word	0x3e700000
 8008288:	41700000 	.word	0x41700000
 800828c:	3fe00000 	.word	0x3fe00000
 8008290:	0800fb98 	.word	0x0800fb98
 8008294:	1e62      	subs	r2, r4, #1
 8008296:	ab0e      	add	r3, sp, #56	; 0x38
 8008298:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800829c:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80082a0:	a90e      	add	r1, sp, #56	; 0x38
 80082a2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80082a6:	e739      	b.n	800811c <__kernel_rem_pio2+0x1cc>
 80082a8:	1e62      	subs	r2, r4, #1
 80082aa:	ab0e      	add	r3, sp, #56	; 0x38
 80082ac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80082b0:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80082b4:	e7f4      	b.n	80082a0 <__kernel_rem_pio2+0x350>
 80082b6:	a90e      	add	r1, sp, #56	; 0x38
 80082b8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80082bc:	3b01      	subs	r3, #1
 80082be:	430a      	orrs	r2, r1
 80082c0:	e789      	b.n	80081d6 <__kernel_rem_pio2+0x286>
 80082c2:	3301      	adds	r3, #1
 80082c4:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 80082c8:	2900      	cmp	r1, #0
 80082ca:	d0fa      	beq.n	80082c2 <__kernel_rem_pio2+0x372>
 80082cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80082ce:	f502 721a 	add.w	r2, r2, #616	; 0x268
 80082d2:	446a      	add	r2, sp
 80082d4:	3a98      	subs	r2, #152	; 0x98
 80082d6:	920a      	str	r2, [sp, #40]	; 0x28
 80082d8:	9a08      	ldr	r2, [sp, #32]
 80082da:	18e3      	adds	r3, r4, r3
 80082dc:	18a5      	adds	r5, r4, r2
 80082de:	aa22      	add	r2, sp, #136	; 0x88
 80082e0:	f104 0801 	add.w	r8, r4, #1
 80082e4:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 80082e8:	9304      	str	r3, [sp, #16]
 80082ea:	9b04      	ldr	r3, [sp, #16]
 80082ec:	4543      	cmp	r3, r8
 80082ee:	da04      	bge.n	80082fa <__kernel_rem_pio2+0x3aa>
 80082f0:	461c      	mov	r4, r3
 80082f2:	e6a3      	b.n	800803c <__kernel_rem_pio2+0xec>
 80082f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80082f6:	2301      	movs	r3, #1
 80082f8:	e7e4      	b.n	80082c4 <__kernel_rem_pio2+0x374>
 80082fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80082fc:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8008300:	f7f8 f928 	bl	8000554 <__aeabi_i2d>
 8008304:	e8e5 0102 	strd	r0, r1, [r5], #8
 8008308:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800830a:	46ab      	mov	fp, r5
 800830c:	461c      	mov	r4, r3
 800830e:	f04f 0900 	mov.w	r9, #0
 8008312:	2600      	movs	r6, #0
 8008314:	2700      	movs	r7, #0
 8008316:	9b06      	ldr	r3, [sp, #24]
 8008318:	4599      	cmp	r9, r3
 800831a:	dd06      	ble.n	800832a <__kernel_rem_pio2+0x3da>
 800831c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800831e:	e8e3 6702 	strd	r6, r7, [r3], #8
 8008322:	f108 0801 	add.w	r8, r8, #1
 8008326:	930a      	str	r3, [sp, #40]	; 0x28
 8008328:	e7df      	b.n	80082ea <__kernel_rem_pio2+0x39a>
 800832a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800832e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8008332:	f7f8 f979 	bl	8000628 <__aeabi_dmul>
 8008336:	4602      	mov	r2, r0
 8008338:	460b      	mov	r3, r1
 800833a:	4630      	mov	r0, r6
 800833c:	4639      	mov	r1, r7
 800833e:	f7f7 ffbd 	bl	80002bc <__adddf3>
 8008342:	f109 0901 	add.w	r9, r9, #1
 8008346:	4606      	mov	r6, r0
 8008348:	460f      	mov	r7, r1
 800834a:	e7e4      	b.n	8008316 <__kernel_rem_pio2+0x3c6>
 800834c:	3d01      	subs	r5, #1
 800834e:	e748      	b.n	80081e2 <__kernel_rem_pio2+0x292>
 8008350:	ec47 6b10 	vmov	d0, r6, r7
 8008354:	f1ca 0000 	rsb	r0, sl, #0
 8008358:	f000 fa9a 	bl	8008890 <scalbn>
 800835c:	ec57 6b10 	vmov	r6, r7, d0
 8008360:	4ba0      	ldr	r3, [pc, #640]	; (80085e4 <__kernel_rem_pio2+0x694>)
 8008362:	ee10 0a10 	vmov	r0, s0
 8008366:	2200      	movs	r2, #0
 8008368:	4639      	mov	r1, r7
 800836a:	f7f8 fbe3 	bl	8000b34 <__aeabi_dcmpge>
 800836e:	b1f8      	cbz	r0, 80083b0 <__kernel_rem_pio2+0x460>
 8008370:	4b9d      	ldr	r3, [pc, #628]	; (80085e8 <__kernel_rem_pio2+0x698>)
 8008372:	2200      	movs	r2, #0
 8008374:	4630      	mov	r0, r6
 8008376:	4639      	mov	r1, r7
 8008378:	f7f8 f956 	bl	8000628 <__aeabi_dmul>
 800837c:	f7f8 fc04 	bl	8000b88 <__aeabi_d2iz>
 8008380:	4680      	mov	r8, r0
 8008382:	f7f8 f8e7 	bl	8000554 <__aeabi_i2d>
 8008386:	4b97      	ldr	r3, [pc, #604]	; (80085e4 <__kernel_rem_pio2+0x694>)
 8008388:	2200      	movs	r2, #0
 800838a:	f7f8 f94d 	bl	8000628 <__aeabi_dmul>
 800838e:	460b      	mov	r3, r1
 8008390:	4602      	mov	r2, r0
 8008392:	4639      	mov	r1, r7
 8008394:	4630      	mov	r0, r6
 8008396:	f7f7 ff8f 	bl	80002b8 <__aeabi_dsub>
 800839a:	f7f8 fbf5 	bl	8000b88 <__aeabi_d2iz>
 800839e:	1c65      	adds	r5, r4, #1
 80083a0:	ab0e      	add	r3, sp, #56	; 0x38
 80083a2:	f10a 0a18 	add.w	sl, sl, #24
 80083a6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80083aa:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 80083ae:	e720      	b.n	80081f2 <__kernel_rem_pio2+0x2a2>
 80083b0:	4630      	mov	r0, r6
 80083b2:	4639      	mov	r1, r7
 80083b4:	f7f8 fbe8 	bl	8000b88 <__aeabi_d2iz>
 80083b8:	ab0e      	add	r3, sp, #56	; 0x38
 80083ba:	4625      	mov	r5, r4
 80083bc:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80083c0:	e717      	b.n	80081f2 <__kernel_rem_pio2+0x2a2>
 80083c2:	ab0e      	add	r3, sp, #56	; 0x38
 80083c4:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 80083c8:	f7f8 f8c4 	bl	8000554 <__aeabi_i2d>
 80083cc:	4632      	mov	r2, r6
 80083ce:	463b      	mov	r3, r7
 80083d0:	f7f8 f92a 	bl	8000628 <__aeabi_dmul>
 80083d4:	4b84      	ldr	r3, [pc, #528]	; (80085e8 <__kernel_rem_pio2+0x698>)
 80083d6:	e968 0102 	strd	r0, r1, [r8, #-8]!
 80083da:	2200      	movs	r2, #0
 80083dc:	4630      	mov	r0, r6
 80083de:	4639      	mov	r1, r7
 80083e0:	f7f8 f922 	bl	8000628 <__aeabi_dmul>
 80083e4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80083e8:	4606      	mov	r6, r0
 80083ea:	460f      	mov	r7, r1
 80083ec:	e70f      	b.n	800820e <__kernel_rem_pio2+0x2be>
 80083ee:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 80083f2:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 80083f6:	f7f8 f917 	bl	8000628 <__aeabi_dmul>
 80083fa:	4602      	mov	r2, r0
 80083fc:	460b      	mov	r3, r1
 80083fe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008402:	f7f7 ff5b 	bl	80002bc <__adddf3>
 8008406:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800840a:	f108 0801 	add.w	r8, r8, #1
 800840e:	9b02      	ldr	r3, [sp, #8]
 8008410:	4598      	cmp	r8, r3
 8008412:	dc01      	bgt.n	8008418 <__kernel_rem_pio2+0x4c8>
 8008414:	45b8      	cmp	r8, r7
 8008416:	ddea      	ble.n	80083ee <__kernel_rem_pio2+0x49e>
 8008418:	ed9d 7b06 	vldr	d7, [sp, #24]
 800841c:	ab4a      	add	r3, sp, #296	; 0x128
 800841e:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8008422:	ed87 7b00 	vstr	d7, [r7]
 8008426:	3e01      	subs	r6, #1
 8008428:	e6f8      	b.n	800821c <__kernel_rem_pio2+0x2cc>
 800842a:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800842c:	2b02      	cmp	r3, #2
 800842e:	dc0b      	bgt.n	8008448 <__kernel_rem_pio2+0x4f8>
 8008430:	2b00      	cmp	r3, #0
 8008432:	dc35      	bgt.n	80084a0 <__kernel_rem_pio2+0x550>
 8008434:	d059      	beq.n	80084ea <__kernel_rem_pio2+0x59a>
 8008436:	9b04      	ldr	r3, [sp, #16]
 8008438:	f003 0007 	and.w	r0, r3, #7
 800843c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8008440:	ecbd 8b02 	vpop	{d8}
 8008444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008448:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800844a:	2b03      	cmp	r3, #3
 800844c:	d1f3      	bne.n	8008436 <__kernel_rem_pio2+0x4e6>
 800844e:	ab4a      	add	r3, sp, #296	; 0x128
 8008450:	4423      	add	r3, r4
 8008452:	9306      	str	r3, [sp, #24]
 8008454:	461c      	mov	r4, r3
 8008456:	469a      	mov	sl, r3
 8008458:	9502      	str	r5, [sp, #8]
 800845a:	9b02      	ldr	r3, [sp, #8]
 800845c:	2b00      	cmp	r3, #0
 800845e:	f1aa 0a08 	sub.w	sl, sl, #8
 8008462:	dc6b      	bgt.n	800853c <__kernel_rem_pio2+0x5ec>
 8008464:	46aa      	mov	sl, r5
 8008466:	f1ba 0f01 	cmp.w	sl, #1
 800846a:	f1a4 0408 	sub.w	r4, r4, #8
 800846e:	f300 8085 	bgt.w	800857c <__kernel_rem_pio2+0x62c>
 8008472:	9c06      	ldr	r4, [sp, #24]
 8008474:	2000      	movs	r0, #0
 8008476:	3408      	adds	r4, #8
 8008478:	2100      	movs	r1, #0
 800847a:	2d01      	cmp	r5, #1
 800847c:	f300 809d 	bgt.w	80085ba <__kernel_rem_pio2+0x66a>
 8008480:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8008484:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8008488:	f1bb 0f00 	cmp.w	fp, #0
 800848c:	f040 809b 	bne.w	80085c6 <__kernel_rem_pio2+0x676>
 8008490:	9b01      	ldr	r3, [sp, #4]
 8008492:	e9c3 5600 	strd	r5, r6, [r3]
 8008496:	e9c3 7802 	strd	r7, r8, [r3, #8]
 800849a:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800849e:	e7ca      	b.n	8008436 <__kernel_rem_pio2+0x4e6>
 80084a0:	3408      	adds	r4, #8
 80084a2:	ab4a      	add	r3, sp, #296	; 0x128
 80084a4:	441c      	add	r4, r3
 80084a6:	462e      	mov	r6, r5
 80084a8:	2000      	movs	r0, #0
 80084aa:	2100      	movs	r1, #0
 80084ac:	2e00      	cmp	r6, #0
 80084ae:	da36      	bge.n	800851e <__kernel_rem_pio2+0x5ce>
 80084b0:	f1bb 0f00 	cmp.w	fp, #0
 80084b4:	d039      	beq.n	800852a <__kernel_rem_pio2+0x5da>
 80084b6:	4602      	mov	r2, r0
 80084b8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80084bc:	9c01      	ldr	r4, [sp, #4]
 80084be:	e9c4 2300 	strd	r2, r3, [r4]
 80084c2:	4602      	mov	r2, r0
 80084c4:	460b      	mov	r3, r1
 80084c6:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 80084ca:	f7f7 fef5 	bl	80002b8 <__aeabi_dsub>
 80084ce:	ae4c      	add	r6, sp, #304	; 0x130
 80084d0:	2401      	movs	r4, #1
 80084d2:	42a5      	cmp	r5, r4
 80084d4:	da2c      	bge.n	8008530 <__kernel_rem_pio2+0x5e0>
 80084d6:	f1bb 0f00 	cmp.w	fp, #0
 80084da:	d002      	beq.n	80084e2 <__kernel_rem_pio2+0x592>
 80084dc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80084e0:	4619      	mov	r1, r3
 80084e2:	9b01      	ldr	r3, [sp, #4]
 80084e4:	e9c3 0102 	strd	r0, r1, [r3, #8]
 80084e8:	e7a5      	b.n	8008436 <__kernel_rem_pio2+0x4e6>
 80084ea:	f504 731a 	add.w	r3, r4, #616	; 0x268
 80084ee:	eb0d 0403 	add.w	r4, sp, r3
 80084f2:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 80084f6:	2000      	movs	r0, #0
 80084f8:	2100      	movs	r1, #0
 80084fa:	2d00      	cmp	r5, #0
 80084fc:	da09      	bge.n	8008512 <__kernel_rem_pio2+0x5c2>
 80084fe:	f1bb 0f00 	cmp.w	fp, #0
 8008502:	d002      	beq.n	800850a <__kernel_rem_pio2+0x5ba>
 8008504:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008508:	4619      	mov	r1, r3
 800850a:	9b01      	ldr	r3, [sp, #4]
 800850c:	e9c3 0100 	strd	r0, r1, [r3]
 8008510:	e791      	b.n	8008436 <__kernel_rem_pio2+0x4e6>
 8008512:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8008516:	f7f7 fed1 	bl	80002bc <__adddf3>
 800851a:	3d01      	subs	r5, #1
 800851c:	e7ed      	b.n	80084fa <__kernel_rem_pio2+0x5aa>
 800851e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8008522:	f7f7 fecb 	bl	80002bc <__adddf3>
 8008526:	3e01      	subs	r6, #1
 8008528:	e7c0      	b.n	80084ac <__kernel_rem_pio2+0x55c>
 800852a:	4602      	mov	r2, r0
 800852c:	460b      	mov	r3, r1
 800852e:	e7c5      	b.n	80084bc <__kernel_rem_pio2+0x56c>
 8008530:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8008534:	f7f7 fec2 	bl	80002bc <__adddf3>
 8008538:	3401      	adds	r4, #1
 800853a:	e7ca      	b.n	80084d2 <__kernel_rem_pio2+0x582>
 800853c:	e9da 8900 	ldrd	r8, r9, [sl]
 8008540:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8008544:	9b02      	ldr	r3, [sp, #8]
 8008546:	3b01      	subs	r3, #1
 8008548:	9302      	str	r3, [sp, #8]
 800854a:	4632      	mov	r2, r6
 800854c:	463b      	mov	r3, r7
 800854e:	4640      	mov	r0, r8
 8008550:	4649      	mov	r1, r9
 8008552:	f7f7 feb3 	bl	80002bc <__adddf3>
 8008556:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800855a:	4602      	mov	r2, r0
 800855c:	460b      	mov	r3, r1
 800855e:	4640      	mov	r0, r8
 8008560:	4649      	mov	r1, r9
 8008562:	f7f7 fea9 	bl	80002b8 <__aeabi_dsub>
 8008566:	4632      	mov	r2, r6
 8008568:	463b      	mov	r3, r7
 800856a:	f7f7 fea7 	bl	80002bc <__adddf3>
 800856e:	ed9d 7b08 	vldr	d7, [sp, #32]
 8008572:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8008576:	ed8a 7b00 	vstr	d7, [sl]
 800857a:	e76e      	b.n	800845a <__kernel_rem_pio2+0x50a>
 800857c:	e9d4 8900 	ldrd	r8, r9, [r4]
 8008580:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8008584:	4640      	mov	r0, r8
 8008586:	4632      	mov	r2, r6
 8008588:	463b      	mov	r3, r7
 800858a:	4649      	mov	r1, r9
 800858c:	f7f7 fe96 	bl	80002bc <__adddf3>
 8008590:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008594:	4602      	mov	r2, r0
 8008596:	460b      	mov	r3, r1
 8008598:	4640      	mov	r0, r8
 800859a:	4649      	mov	r1, r9
 800859c:	f7f7 fe8c 	bl	80002b8 <__aeabi_dsub>
 80085a0:	4632      	mov	r2, r6
 80085a2:	463b      	mov	r3, r7
 80085a4:	f7f7 fe8a 	bl	80002bc <__adddf3>
 80085a8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80085ac:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80085b0:	ed84 7b00 	vstr	d7, [r4]
 80085b4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80085b8:	e755      	b.n	8008466 <__kernel_rem_pio2+0x516>
 80085ba:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80085be:	f7f7 fe7d 	bl	80002bc <__adddf3>
 80085c2:	3d01      	subs	r5, #1
 80085c4:	e759      	b.n	800847a <__kernel_rem_pio2+0x52a>
 80085c6:	9b01      	ldr	r3, [sp, #4]
 80085c8:	9a01      	ldr	r2, [sp, #4]
 80085ca:	601d      	str	r5, [r3, #0]
 80085cc:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 80085d0:	605c      	str	r4, [r3, #4]
 80085d2:	609f      	str	r7, [r3, #8]
 80085d4:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 80085d8:	60d3      	str	r3, [r2, #12]
 80085da:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80085de:	6110      	str	r0, [r2, #16]
 80085e0:	6153      	str	r3, [r2, #20]
 80085e2:	e728      	b.n	8008436 <__kernel_rem_pio2+0x4e6>
 80085e4:	41700000 	.word	0x41700000
 80085e8:	3e700000 	.word	0x3e700000
 80085ec:	00000000 	.word	0x00000000

080085f0 <__kernel_sin>:
 80085f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80085f4:	ed2d 8b04 	vpush	{d8-d9}
 80085f8:	eeb0 8a41 	vmov.f32	s16, s2
 80085fc:	eef0 8a61 	vmov.f32	s17, s3
 8008600:	ec55 4b10 	vmov	r4, r5, d0
 8008604:	b083      	sub	sp, #12
 8008606:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800860a:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800860e:	9001      	str	r0, [sp, #4]
 8008610:	da06      	bge.n	8008620 <__kernel_sin+0x30>
 8008612:	ee10 0a10 	vmov	r0, s0
 8008616:	4629      	mov	r1, r5
 8008618:	f7f8 fab6 	bl	8000b88 <__aeabi_d2iz>
 800861c:	2800      	cmp	r0, #0
 800861e:	d051      	beq.n	80086c4 <__kernel_sin+0xd4>
 8008620:	4622      	mov	r2, r4
 8008622:	462b      	mov	r3, r5
 8008624:	4620      	mov	r0, r4
 8008626:	4629      	mov	r1, r5
 8008628:	f7f7 fffe 	bl	8000628 <__aeabi_dmul>
 800862c:	4682      	mov	sl, r0
 800862e:	468b      	mov	fp, r1
 8008630:	4602      	mov	r2, r0
 8008632:	460b      	mov	r3, r1
 8008634:	4620      	mov	r0, r4
 8008636:	4629      	mov	r1, r5
 8008638:	f7f7 fff6 	bl	8000628 <__aeabi_dmul>
 800863c:	a341      	add	r3, pc, #260	; (adr r3, 8008744 <__kernel_sin+0x154>)
 800863e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008642:	4680      	mov	r8, r0
 8008644:	4689      	mov	r9, r1
 8008646:	4650      	mov	r0, sl
 8008648:	4659      	mov	r1, fp
 800864a:	f7f7 ffed 	bl	8000628 <__aeabi_dmul>
 800864e:	a33f      	add	r3, pc, #252	; (adr r3, 800874c <__kernel_sin+0x15c>)
 8008650:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008654:	f7f7 fe30 	bl	80002b8 <__aeabi_dsub>
 8008658:	4652      	mov	r2, sl
 800865a:	465b      	mov	r3, fp
 800865c:	f7f7 ffe4 	bl	8000628 <__aeabi_dmul>
 8008660:	a33c      	add	r3, pc, #240	; (adr r3, 8008754 <__kernel_sin+0x164>)
 8008662:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008666:	f7f7 fe29 	bl	80002bc <__adddf3>
 800866a:	4652      	mov	r2, sl
 800866c:	465b      	mov	r3, fp
 800866e:	f7f7 ffdb 	bl	8000628 <__aeabi_dmul>
 8008672:	a33a      	add	r3, pc, #232	; (adr r3, 800875c <__kernel_sin+0x16c>)
 8008674:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008678:	f7f7 fe1e 	bl	80002b8 <__aeabi_dsub>
 800867c:	4652      	mov	r2, sl
 800867e:	465b      	mov	r3, fp
 8008680:	f7f7 ffd2 	bl	8000628 <__aeabi_dmul>
 8008684:	a337      	add	r3, pc, #220	; (adr r3, 8008764 <__kernel_sin+0x174>)
 8008686:	e9d3 2300 	ldrd	r2, r3, [r3]
 800868a:	f7f7 fe17 	bl	80002bc <__adddf3>
 800868e:	9b01      	ldr	r3, [sp, #4]
 8008690:	4606      	mov	r6, r0
 8008692:	460f      	mov	r7, r1
 8008694:	b9eb      	cbnz	r3, 80086d2 <__kernel_sin+0xe2>
 8008696:	4602      	mov	r2, r0
 8008698:	460b      	mov	r3, r1
 800869a:	4650      	mov	r0, sl
 800869c:	4659      	mov	r1, fp
 800869e:	f7f7 ffc3 	bl	8000628 <__aeabi_dmul>
 80086a2:	a325      	add	r3, pc, #148	; (adr r3, 8008738 <__kernel_sin+0x148>)
 80086a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086a8:	f7f7 fe06 	bl	80002b8 <__aeabi_dsub>
 80086ac:	4642      	mov	r2, r8
 80086ae:	464b      	mov	r3, r9
 80086b0:	f7f7 ffba 	bl	8000628 <__aeabi_dmul>
 80086b4:	4602      	mov	r2, r0
 80086b6:	460b      	mov	r3, r1
 80086b8:	4620      	mov	r0, r4
 80086ba:	4629      	mov	r1, r5
 80086bc:	f7f7 fdfe 	bl	80002bc <__adddf3>
 80086c0:	4604      	mov	r4, r0
 80086c2:	460d      	mov	r5, r1
 80086c4:	ec45 4b10 	vmov	d0, r4, r5
 80086c8:	b003      	add	sp, #12
 80086ca:	ecbd 8b04 	vpop	{d8-d9}
 80086ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086d2:	4b1b      	ldr	r3, [pc, #108]	; (8008740 <__kernel_sin+0x150>)
 80086d4:	ec51 0b18 	vmov	r0, r1, d8
 80086d8:	2200      	movs	r2, #0
 80086da:	f7f7 ffa5 	bl	8000628 <__aeabi_dmul>
 80086de:	4632      	mov	r2, r6
 80086e0:	ec41 0b19 	vmov	d9, r0, r1
 80086e4:	463b      	mov	r3, r7
 80086e6:	4640      	mov	r0, r8
 80086e8:	4649      	mov	r1, r9
 80086ea:	f7f7 ff9d 	bl	8000628 <__aeabi_dmul>
 80086ee:	4602      	mov	r2, r0
 80086f0:	460b      	mov	r3, r1
 80086f2:	ec51 0b19 	vmov	r0, r1, d9
 80086f6:	f7f7 fddf 	bl	80002b8 <__aeabi_dsub>
 80086fa:	4652      	mov	r2, sl
 80086fc:	465b      	mov	r3, fp
 80086fe:	f7f7 ff93 	bl	8000628 <__aeabi_dmul>
 8008702:	ec53 2b18 	vmov	r2, r3, d8
 8008706:	f7f7 fdd7 	bl	80002b8 <__aeabi_dsub>
 800870a:	a30b      	add	r3, pc, #44	; (adr r3, 8008738 <__kernel_sin+0x148>)
 800870c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008710:	4606      	mov	r6, r0
 8008712:	460f      	mov	r7, r1
 8008714:	4640      	mov	r0, r8
 8008716:	4649      	mov	r1, r9
 8008718:	f7f7 ff86 	bl	8000628 <__aeabi_dmul>
 800871c:	4602      	mov	r2, r0
 800871e:	460b      	mov	r3, r1
 8008720:	4630      	mov	r0, r6
 8008722:	4639      	mov	r1, r7
 8008724:	f7f7 fdca 	bl	80002bc <__adddf3>
 8008728:	4602      	mov	r2, r0
 800872a:	460b      	mov	r3, r1
 800872c:	4620      	mov	r0, r4
 800872e:	4629      	mov	r1, r5
 8008730:	f7f7 fdc2 	bl	80002b8 <__aeabi_dsub>
 8008734:	e7c4      	b.n	80086c0 <__kernel_sin+0xd0>
 8008736:	bf00      	nop
 8008738:	55555549 	.word	0x55555549
 800873c:	3fc55555 	.word	0x3fc55555
 8008740:	3fe00000 	.word	0x3fe00000
 8008744:	5acfd57c 	.word	0x5acfd57c
 8008748:	3de5d93a 	.word	0x3de5d93a
 800874c:	8a2b9ceb 	.word	0x8a2b9ceb
 8008750:	3e5ae5e6 	.word	0x3e5ae5e6
 8008754:	57b1fe7d 	.word	0x57b1fe7d
 8008758:	3ec71de3 	.word	0x3ec71de3
 800875c:	19c161d5 	.word	0x19c161d5
 8008760:	3f2a01a0 	.word	0x3f2a01a0
 8008764:	1110f8a6 	.word	0x1110f8a6
 8008768:	3f811111 	.word	0x3f811111

0800876c <fabs>:
 800876c:	ec51 0b10 	vmov	r0, r1, d0
 8008770:	ee10 2a10 	vmov	r2, s0
 8008774:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8008778:	ec43 2b10 	vmov	d0, r2, r3
 800877c:	4770      	bx	lr
	...

08008780 <floor>:
 8008780:	ec51 0b10 	vmov	r0, r1, d0
 8008784:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008788:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800878c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8008790:	2e13      	cmp	r6, #19
 8008792:	ee10 5a10 	vmov	r5, s0
 8008796:	ee10 8a10 	vmov	r8, s0
 800879a:	460c      	mov	r4, r1
 800879c:	dc32      	bgt.n	8008804 <floor+0x84>
 800879e:	2e00      	cmp	r6, #0
 80087a0:	da14      	bge.n	80087cc <floor+0x4c>
 80087a2:	a333      	add	r3, pc, #204	; (adr r3, 8008870 <floor+0xf0>)
 80087a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087a8:	f7f7 fd88 	bl	80002bc <__adddf3>
 80087ac:	2200      	movs	r2, #0
 80087ae:	2300      	movs	r3, #0
 80087b0:	f7f8 f9ca 	bl	8000b48 <__aeabi_dcmpgt>
 80087b4:	b138      	cbz	r0, 80087c6 <floor+0x46>
 80087b6:	2c00      	cmp	r4, #0
 80087b8:	da57      	bge.n	800886a <floor+0xea>
 80087ba:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 80087be:	431d      	orrs	r5, r3
 80087c0:	d001      	beq.n	80087c6 <floor+0x46>
 80087c2:	4c2d      	ldr	r4, [pc, #180]	; (8008878 <floor+0xf8>)
 80087c4:	2500      	movs	r5, #0
 80087c6:	4621      	mov	r1, r4
 80087c8:	4628      	mov	r0, r5
 80087ca:	e025      	b.n	8008818 <floor+0x98>
 80087cc:	4f2b      	ldr	r7, [pc, #172]	; (800887c <floor+0xfc>)
 80087ce:	4137      	asrs	r7, r6
 80087d0:	ea01 0307 	and.w	r3, r1, r7
 80087d4:	4303      	orrs	r3, r0
 80087d6:	d01f      	beq.n	8008818 <floor+0x98>
 80087d8:	a325      	add	r3, pc, #148	; (adr r3, 8008870 <floor+0xf0>)
 80087da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087de:	f7f7 fd6d 	bl	80002bc <__adddf3>
 80087e2:	2200      	movs	r2, #0
 80087e4:	2300      	movs	r3, #0
 80087e6:	f7f8 f9af 	bl	8000b48 <__aeabi_dcmpgt>
 80087ea:	2800      	cmp	r0, #0
 80087ec:	d0eb      	beq.n	80087c6 <floor+0x46>
 80087ee:	2c00      	cmp	r4, #0
 80087f0:	bfbe      	ittt	lt
 80087f2:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 80087f6:	fa43 f606 	asrlt.w	r6, r3, r6
 80087fa:	19a4      	addlt	r4, r4, r6
 80087fc:	ea24 0407 	bic.w	r4, r4, r7
 8008800:	2500      	movs	r5, #0
 8008802:	e7e0      	b.n	80087c6 <floor+0x46>
 8008804:	2e33      	cmp	r6, #51	; 0x33
 8008806:	dd0b      	ble.n	8008820 <floor+0xa0>
 8008808:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800880c:	d104      	bne.n	8008818 <floor+0x98>
 800880e:	ee10 2a10 	vmov	r2, s0
 8008812:	460b      	mov	r3, r1
 8008814:	f7f7 fd52 	bl	80002bc <__adddf3>
 8008818:	ec41 0b10 	vmov	d0, r0, r1
 800881c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008820:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8008824:	f04f 33ff 	mov.w	r3, #4294967295
 8008828:	fa23 f707 	lsr.w	r7, r3, r7
 800882c:	4207      	tst	r7, r0
 800882e:	d0f3      	beq.n	8008818 <floor+0x98>
 8008830:	a30f      	add	r3, pc, #60	; (adr r3, 8008870 <floor+0xf0>)
 8008832:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008836:	f7f7 fd41 	bl	80002bc <__adddf3>
 800883a:	2200      	movs	r2, #0
 800883c:	2300      	movs	r3, #0
 800883e:	f7f8 f983 	bl	8000b48 <__aeabi_dcmpgt>
 8008842:	2800      	cmp	r0, #0
 8008844:	d0bf      	beq.n	80087c6 <floor+0x46>
 8008846:	2c00      	cmp	r4, #0
 8008848:	da02      	bge.n	8008850 <floor+0xd0>
 800884a:	2e14      	cmp	r6, #20
 800884c:	d103      	bne.n	8008856 <floor+0xd6>
 800884e:	3401      	adds	r4, #1
 8008850:	ea25 0507 	bic.w	r5, r5, r7
 8008854:	e7b7      	b.n	80087c6 <floor+0x46>
 8008856:	2301      	movs	r3, #1
 8008858:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800885c:	fa03 f606 	lsl.w	r6, r3, r6
 8008860:	4435      	add	r5, r6
 8008862:	4545      	cmp	r5, r8
 8008864:	bf38      	it	cc
 8008866:	18e4      	addcc	r4, r4, r3
 8008868:	e7f2      	b.n	8008850 <floor+0xd0>
 800886a:	2500      	movs	r5, #0
 800886c:	462c      	mov	r4, r5
 800886e:	e7aa      	b.n	80087c6 <floor+0x46>
 8008870:	8800759c 	.word	0x8800759c
 8008874:	7e37e43c 	.word	0x7e37e43c
 8008878:	bff00000 	.word	0xbff00000
 800887c:	000fffff 	.word	0x000fffff

08008880 <nan>:
 8008880:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8008888 <nan+0x8>
 8008884:	4770      	bx	lr
 8008886:	bf00      	nop
 8008888:	00000000 	.word	0x00000000
 800888c:	7ff80000 	.word	0x7ff80000

08008890 <scalbn>:
 8008890:	b570      	push	{r4, r5, r6, lr}
 8008892:	ec55 4b10 	vmov	r4, r5, d0
 8008896:	f3c5 520a 	ubfx	r2, r5, #20, #11
 800889a:	4606      	mov	r6, r0
 800889c:	462b      	mov	r3, r5
 800889e:	b99a      	cbnz	r2, 80088c8 <scalbn+0x38>
 80088a0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80088a4:	4323      	orrs	r3, r4
 80088a6:	d036      	beq.n	8008916 <scalbn+0x86>
 80088a8:	4b39      	ldr	r3, [pc, #228]	; (8008990 <scalbn+0x100>)
 80088aa:	4629      	mov	r1, r5
 80088ac:	ee10 0a10 	vmov	r0, s0
 80088b0:	2200      	movs	r2, #0
 80088b2:	f7f7 feb9 	bl	8000628 <__aeabi_dmul>
 80088b6:	4b37      	ldr	r3, [pc, #220]	; (8008994 <scalbn+0x104>)
 80088b8:	429e      	cmp	r6, r3
 80088ba:	4604      	mov	r4, r0
 80088bc:	460d      	mov	r5, r1
 80088be:	da10      	bge.n	80088e2 <scalbn+0x52>
 80088c0:	a32b      	add	r3, pc, #172	; (adr r3, 8008970 <scalbn+0xe0>)
 80088c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088c6:	e03a      	b.n	800893e <scalbn+0xae>
 80088c8:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80088cc:	428a      	cmp	r2, r1
 80088ce:	d10c      	bne.n	80088ea <scalbn+0x5a>
 80088d0:	ee10 2a10 	vmov	r2, s0
 80088d4:	4620      	mov	r0, r4
 80088d6:	4629      	mov	r1, r5
 80088d8:	f7f7 fcf0 	bl	80002bc <__adddf3>
 80088dc:	4604      	mov	r4, r0
 80088de:	460d      	mov	r5, r1
 80088e0:	e019      	b.n	8008916 <scalbn+0x86>
 80088e2:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80088e6:	460b      	mov	r3, r1
 80088e8:	3a36      	subs	r2, #54	; 0x36
 80088ea:	4432      	add	r2, r6
 80088ec:	f240 71fe 	movw	r1, #2046	; 0x7fe
 80088f0:	428a      	cmp	r2, r1
 80088f2:	dd08      	ble.n	8008906 <scalbn+0x76>
 80088f4:	2d00      	cmp	r5, #0
 80088f6:	a120      	add	r1, pc, #128	; (adr r1, 8008978 <scalbn+0xe8>)
 80088f8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80088fc:	da1c      	bge.n	8008938 <scalbn+0xa8>
 80088fe:	a120      	add	r1, pc, #128	; (adr r1, 8008980 <scalbn+0xf0>)
 8008900:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008904:	e018      	b.n	8008938 <scalbn+0xa8>
 8008906:	2a00      	cmp	r2, #0
 8008908:	dd08      	ble.n	800891c <scalbn+0x8c>
 800890a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800890e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008912:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8008916:	ec45 4b10 	vmov	d0, r4, r5
 800891a:	bd70      	pop	{r4, r5, r6, pc}
 800891c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8008920:	da19      	bge.n	8008956 <scalbn+0xc6>
 8008922:	f24c 3350 	movw	r3, #50000	; 0xc350
 8008926:	429e      	cmp	r6, r3
 8008928:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 800892c:	dd0a      	ble.n	8008944 <scalbn+0xb4>
 800892e:	a112      	add	r1, pc, #72	; (adr r1, 8008978 <scalbn+0xe8>)
 8008930:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008934:	2b00      	cmp	r3, #0
 8008936:	d1e2      	bne.n	80088fe <scalbn+0x6e>
 8008938:	a30f      	add	r3, pc, #60	; (adr r3, 8008978 <scalbn+0xe8>)
 800893a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800893e:	f7f7 fe73 	bl	8000628 <__aeabi_dmul>
 8008942:	e7cb      	b.n	80088dc <scalbn+0x4c>
 8008944:	a10a      	add	r1, pc, #40	; (adr r1, 8008970 <scalbn+0xe0>)
 8008946:	e9d1 0100 	ldrd	r0, r1, [r1]
 800894a:	2b00      	cmp	r3, #0
 800894c:	d0b8      	beq.n	80088c0 <scalbn+0x30>
 800894e:	a10e      	add	r1, pc, #56	; (adr r1, 8008988 <scalbn+0xf8>)
 8008950:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008954:	e7b4      	b.n	80088c0 <scalbn+0x30>
 8008956:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800895a:	3236      	adds	r2, #54	; 0x36
 800895c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008960:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8008964:	4620      	mov	r0, r4
 8008966:	4b0c      	ldr	r3, [pc, #48]	; (8008998 <scalbn+0x108>)
 8008968:	2200      	movs	r2, #0
 800896a:	e7e8      	b.n	800893e <scalbn+0xae>
 800896c:	f3af 8000 	nop.w
 8008970:	c2f8f359 	.word	0xc2f8f359
 8008974:	01a56e1f 	.word	0x01a56e1f
 8008978:	8800759c 	.word	0x8800759c
 800897c:	7e37e43c 	.word	0x7e37e43c
 8008980:	8800759c 	.word	0x8800759c
 8008984:	fe37e43c 	.word	0xfe37e43c
 8008988:	c2f8f359 	.word	0xc2f8f359
 800898c:	81a56e1f 	.word	0x81a56e1f
 8008990:	43500000 	.word	0x43500000
 8008994:	ffff3cb0 	.word	0xffff3cb0
 8008998:	3c900000 	.word	0x3c900000

0800899c <atoi>:
 800899c:	220a      	movs	r2, #10
 800899e:	2100      	movs	r1, #0
 80089a0:	f003 b846 	b.w	800ba30 <strtol>

080089a4 <__errno>:
 80089a4:	4b01      	ldr	r3, [pc, #4]	; (80089ac <__errno+0x8>)
 80089a6:	6818      	ldr	r0, [r3, #0]
 80089a8:	4770      	bx	lr
 80089aa:	bf00      	nop
 80089ac:	2000000c 	.word	0x2000000c

080089b0 <__libc_init_array>:
 80089b0:	b570      	push	{r4, r5, r6, lr}
 80089b2:	4d0d      	ldr	r5, [pc, #52]	; (80089e8 <__libc_init_array+0x38>)
 80089b4:	4c0d      	ldr	r4, [pc, #52]	; (80089ec <__libc_init_array+0x3c>)
 80089b6:	1b64      	subs	r4, r4, r5
 80089b8:	10a4      	asrs	r4, r4, #2
 80089ba:	2600      	movs	r6, #0
 80089bc:	42a6      	cmp	r6, r4
 80089be:	d109      	bne.n	80089d4 <__libc_init_array+0x24>
 80089c0:	4d0b      	ldr	r5, [pc, #44]	; (80089f0 <__libc_init_array+0x40>)
 80089c2:	4c0c      	ldr	r4, [pc, #48]	; (80089f4 <__libc_init_array+0x44>)
 80089c4:	f006 fdb8 	bl	800f538 <_init>
 80089c8:	1b64      	subs	r4, r4, r5
 80089ca:	10a4      	asrs	r4, r4, #2
 80089cc:	2600      	movs	r6, #0
 80089ce:	42a6      	cmp	r6, r4
 80089d0:	d105      	bne.n	80089de <__libc_init_array+0x2e>
 80089d2:	bd70      	pop	{r4, r5, r6, pc}
 80089d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80089d8:	4798      	blx	r3
 80089da:	3601      	adds	r6, #1
 80089dc:	e7ee      	b.n	80089bc <__libc_init_array+0xc>
 80089de:	f855 3b04 	ldr.w	r3, [r5], #4
 80089e2:	4798      	blx	r3
 80089e4:	3601      	adds	r6, #1
 80089e6:	e7f2      	b.n	80089ce <__libc_init_array+0x1e>
 80089e8:	08010480 	.word	0x08010480
 80089ec:	08010480 	.word	0x08010480
 80089f0:	08010480 	.word	0x08010480
 80089f4:	08010484 	.word	0x08010484

080089f8 <localtime>:
 80089f8:	b538      	push	{r3, r4, r5, lr}
 80089fa:	4b0b      	ldr	r3, [pc, #44]	; (8008a28 <localtime+0x30>)
 80089fc:	681d      	ldr	r5, [r3, #0]
 80089fe:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8008a00:	4604      	mov	r4, r0
 8008a02:	b953      	cbnz	r3, 8008a1a <localtime+0x22>
 8008a04:	2024      	movs	r0, #36	; 0x24
 8008a06:	f000 f909 	bl	8008c1c <malloc>
 8008a0a:	4602      	mov	r2, r0
 8008a0c:	63e8      	str	r0, [r5, #60]	; 0x3c
 8008a0e:	b920      	cbnz	r0, 8008a1a <localtime+0x22>
 8008a10:	4b06      	ldr	r3, [pc, #24]	; (8008a2c <localtime+0x34>)
 8008a12:	4807      	ldr	r0, [pc, #28]	; (8008a30 <localtime+0x38>)
 8008a14:	2132      	movs	r1, #50	; 0x32
 8008a16:	f003 fae5 	bl	800bfe4 <__assert_func>
 8008a1a:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8008a1c:	4620      	mov	r0, r4
 8008a1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008a22:	f000 b807 	b.w	8008a34 <localtime_r>
 8008a26:	bf00      	nop
 8008a28:	2000000c 	.word	0x2000000c
 8008a2c:	0800fbec 	.word	0x0800fbec
 8008a30:	0800fc03 	.word	0x0800fc03

08008a34 <localtime_r>:
 8008a34:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008a38:	4680      	mov	r8, r0
 8008a3a:	9101      	str	r1, [sp, #4]
 8008a3c:	f004 fd54 	bl	800d4e8 <__gettzinfo>
 8008a40:	9901      	ldr	r1, [sp, #4]
 8008a42:	4605      	mov	r5, r0
 8008a44:	4640      	mov	r0, r8
 8008a46:	f004 fd53 	bl	800d4f0 <gmtime_r>
 8008a4a:	6943      	ldr	r3, [r0, #20]
 8008a4c:	0799      	lsls	r1, r3, #30
 8008a4e:	4604      	mov	r4, r0
 8008a50:	f203 776c 	addw	r7, r3, #1900	; 0x76c
 8008a54:	d105      	bne.n	8008a62 <localtime_r+0x2e>
 8008a56:	2264      	movs	r2, #100	; 0x64
 8008a58:	fb97 f3f2 	sdiv	r3, r7, r2
 8008a5c:	fb02 7313 	mls	r3, r2, r3, r7
 8008a60:	bb73      	cbnz	r3, 8008ac0 <localtime_r+0x8c>
 8008a62:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8008a66:	fb97 f6f3 	sdiv	r6, r7, r3
 8008a6a:	fb03 7616 	mls	r6, r3, r6, r7
 8008a6e:	fab6 f386 	clz	r3, r6
 8008a72:	095b      	lsrs	r3, r3, #5
 8008a74:	4e67      	ldr	r6, [pc, #412]	; (8008c14 <localtime_r+0x1e0>)
 8008a76:	2230      	movs	r2, #48	; 0x30
 8008a78:	fb02 6603 	mla	r6, r2, r3, r6
 8008a7c:	f003 f90a 	bl	800bc94 <__tz_lock>
 8008a80:	f003 f914 	bl	800bcac <_tzset_unlocked>
 8008a84:	4b64      	ldr	r3, [pc, #400]	; (8008c18 <localtime_r+0x1e4>)
 8008a86:	681b      	ldr	r3, [r3, #0]
 8008a88:	b34b      	cbz	r3, 8008ade <localtime_r+0xaa>
 8008a8a:	686b      	ldr	r3, [r5, #4]
 8008a8c:	42bb      	cmp	r3, r7
 8008a8e:	d119      	bne.n	8008ac4 <localtime_r+0x90>
 8008a90:	682f      	ldr	r7, [r5, #0]
 8008a92:	e9d8 2300 	ldrd	r2, r3, [r8]
 8008a96:	e9d5 0108 	ldrd	r0, r1, [r5, #32]
 8008a9a:	b9df      	cbnz	r7, 8008ad4 <localtime_r+0xa0>
 8008a9c:	4282      	cmp	r2, r0
 8008a9e:	eb73 0101 	sbcs.w	r1, r3, r1
 8008aa2:	da23      	bge.n	8008aec <localtime_r+0xb8>
 8008aa4:	e9d5 0112 	ldrd	r0, r1, [r5, #72]	; 0x48
 8008aa8:	4282      	cmp	r2, r0
 8008aaa:	eb73 0701 	sbcs.w	r7, r3, r1
 8008aae:	bfb4      	ite	lt
 8008ab0:	2701      	movlt	r7, #1
 8008ab2:	2700      	movge	r7, #0
 8008ab4:	4282      	cmp	r2, r0
 8008ab6:	418b      	sbcs	r3, r1
 8008ab8:	6227      	str	r7, [r4, #32]
 8008aba:	db19      	blt.n	8008af0 <localtime_r+0xbc>
 8008abc:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008abe:	e018      	b.n	8008af2 <localtime_r+0xbe>
 8008ac0:	2301      	movs	r3, #1
 8008ac2:	e7d7      	b.n	8008a74 <localtime_r+0x40>
 8008ac4:	4638      	mov	r0, r7
 8008ac6:	f003 f83b 	bl	800bb40 <__tzcalc_limits>
 8008aca:	2800      	cmp	r0, #0
 8008acc:	d1e0      	bne.n	8008a90 <localtime_r+0x5c>
 8008ace:	f04f 33ff 	mov.w	r3, #4294967295
 8008ad2:	e004      	b.n	8008ade <localtime_r+0xaa>
 8008ad4:	4282      	cmp	r2, r0
 8008ad6:	eb73 0101 	sbcs.w	r1, r3, r1
 8008ada:	da02      	bge.n	8008ae2 <localtime_r+0xae>
 8008adc:	2300      	movs	r3, #0
 8008ade:	6223      	str	r3, [r4, #32]
 8008ae0:	e7ec      	b.n	8008abc <localtime_r+0x88>
 8008ae2:	e9d5 0112 	ldrd	r0, r1, [r5, #72]	; 0x48
 8008ae6:	4282      	cmp	r2, r0
 8008ae8:	418b      	sbcs	r3, r1
 8008aea:	daf7      	bge.n	8008adc <localtime_r+0xa8>
 8008aec:	2301      	movs	r3, #1
 8008aee:	6223      	str	r3, [r4, #32]
 8008af0:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8008af2:	6861      	ldr	r1, [r4, #4]
 8008af4:	f44f 6261 	mov.w	r2, #3600	; 0xe10
 8008af8:	203c      	movs	r0, #60	; 0x3c
 8008afa:	fb93 f5f2 	sdiv	r5, r3, r2
 8008afe:	fb02 3315 	mls	r3, r2, r5, r3
 8008b02:	fb93 f2f0 	sdiv	r2, r3, r0
 8008b06:	fb00 3012 	mls	r0, r0, r2, r3
 8008b0a:	6823      	ldr	r3, [r4, #0]
 8008b0c:	1a89      	subs	r1, r1, r2
 8008b0e:	68a2      	ldr	r2, [r4, #8]
 8008b10:	6061      	str	r1, [r4, #4]
 8008b12:	1a1b      	subs	r3, r3, r0
 8008b14:	1b52      	subs	r2, r2, r5
 8008b16:	2b3b      	cmp	r3, #59	; 0x3b
 8008b18:	6023      	str	r3, [r4, #0]
 8008b1a:	60a2      	str	r2, [r4, #8]
 8008b1c:	dd35      	ble.n	8008b8a <localtime_r+0x156>
 8008b1e:	3101      	adds	r1, #1
 8008b20:	6061      	str	r1, [r4, #4]
 8008b22:	3b3c      	subs	r3, #60	; 0x3c
 8008b24:	6023      	str	r3, [r4, #0]
 8008b26:	6863      	ldr	r3, [r4, #4]
 8008b28:	2b3b      	cmp	r3, #59	; 0x3b
 8008b2a:	dd34      	ble.n	8008b96 <localtime_r+0x162>
 8008b2c:	3201      	adds	r2, #1
 8008b2e:	60a2      	str	r2, [r4, #8]
 8008b30:	3b3c      	subs	r3, #60	; 0x3c
 8008b32:	6063      	str	r3, [r4, #4]
 8008b34:	68a3      	ldr	r3, [r4, #8]
 8008b36:	2b17      	cmp	r3, #23
 8008b38:	dd33      	ble.n	8008ba2 <localtime_r+0x16e>
 8008b3a:	69e2      	ldr	r2, [r4, #28]
 8008b3c:	3201      	adds	r2, #1
 8008b3e:	61e2      	str	r2, [r4, #28]
 8008b40:	69a2      	ldr	r2, [r4, #24]
 8008b42:	3201      	adds	r2, #1
 8008b44:	2a06      	cmp	r2, #6
 8008b46:	bfc8      	it	gt
 8008b48:	2200      	movgt	r2, #0
 8008b4a:	61a2      	str	r2, [r4, #24]
 8008b4c:	68e2      	ldr	r2, [r4, #12]
 8008b4e:	3b18      	subs	r3, #24
 8008b50:	3201      	adds	r2, #1
 8008b52:	60a3      	str	r3, [r4, #8]
 8008b54:	6923      	ldr	r3, [r4, #16]
 8008b56:	60e2      	str	r2, [r4, #12]
 8008b58:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8008b5c:	428a      	cmp	r2, r1
 8008b5e:	dd0e      	ble.n	8008b7e <localtime_r+0x14a>
 8008b60:	2b0b      	cmp	r3, #11
 8008b62:	eba2 0201 	sub.w	r2, r2, r1
 8008b66:	60e2      	str	r2, [r4, #12]
 8008b68:	f103 0201 	add.w	r2, r3, #1
 8008b6c:	bf09      	itett	eq
 8008b6e:	6963      	ldreq	r3, [r4, #20]
 8008b70:	6122      	strne	r2, [r4, #16]
 8008b72:	2200      	moveq	r2, #0
 8008b74:	3301      	addeq	r3, #1
 8008b76:	bf02      	ittt	eq
 8008b78:	6122      	streq	r2, [r4, #16]
 8008b7a:	6163      	streq	r3, [r4, #20]
 8008b7c:	61e2      	streq	r2, [r4, #28]
 8008b7e:	f003 f88f 	bl	800bca0 <__tz_unlock>
 8008b82:	4620      	mov	r0, r4
 8008b84:	b002      	add	sp, #8
 8008b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008b8a:	2b00      	cmp	r3, #0
 8008b8c:	dacb      	bge.n	8008b26 <localtime_r+0xf2>
 8008b8e:	3901      	subs	r1, #1
 8008b90:	6061      	str	r1, [r4, #4]
 8008b92:	333c      	adds	r3, #60	; 0x3c
 8008b94:	e7c6      	b.n	8008b24 <localtime_r+0xf0>
 8008b96:	2b00      	cmp	r3, #0
 8008b98:	dacc      	bge.n	8008b34 <localtime_r+0x100>
 8008b9a:	3a01      	subs	r2, #1
 8008b9c:	60a2      	str	r2, [r4, #8]
 8008b9e:	333c      	adds	r3, #60	; 0x3c
 8008ba0:	e7c7      	b.n	8008b32 <localtime_r+0xfe>
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	daeb      	bge.n	8008b7e <localtime_r+0x14a>
 8008ba6:	69e2      	ldr	r2, [r4, #28]
 8008ba8:	3a01      	subs	r2, #1
 8008baa:	61e2      	str	r2, [r4, #28]
 8008bac:	69a2      	ldr	r2, [r4, #24]
 8008bae:	3a01      	subs	r2, #1
 8008bb0:	bf48      	it	mi
 8008bb2:	2206      	movmi	r2, #6
 8008bb4:	61a2      	str	r2, [r4, #24]
 8008bb6:	68e2      	ldr	r2, [r4, #12]
 8008bb8:	3318      	adds	r3, #24
 8008bba:	3a01      	subs	r2, #1
 8008bbc:	60e2      	str	r2, [r4, #12]
 8008bbe:	60a3      	str	r3, [r4, #8]
 8008bc0:	2a00      	cmp	r2, #0
 8008bc2:	d1dc      	bne.n	8008b7e <localtime_r+0x14a>
 8008bc4:	6923      	ldr	r3, [r4, #16]
 8008bc6:	3b01      	subs	r3, #1
 8008bc8:	d405      	bmi.n	8008bd6 <localtime_r+0x1a2>
 8008bca:	6123      	str	r3, [r4, #16]
 8008bcc:	6923      	ldr	r3, [r4, #16]
 8008bce:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8008bd2:	60e3      	str	r3, [r4, #12]
 8008bd4:	e7d3      	b.n	8008b7e <localtime_r+0x14a>
 8008bd6:	230b      	movs	r3, #11
 8008bd8:	6123      	str	r3, [r4, #16]
 8008bda:	6963      	ldr	r3, [r4, #20]
 8008bdc:	1e5a      	subs	r2, r3, #1
 8008bde:	f203 736b 	addw	r3, r3, #1899	; 0x76b
 8008be2:	6162      	str	r2, [r4, #20]
 8008be4:	079a      	lsls	r2, r3, #30
 8008be6:	d105      	bne.n	8008bf4 <localtime_r+0x1c0>
 8008be8:	2164      	movs	r1, #100	; 0x64
 8008bea:	fb93 f2f1 	sdiv	r2, r3, r1
 8008bee:	fb01 3212 	mls	r2, r1, r2, r3
 8008bf2:	b962      	cbnz	r2, 8008c0e <localtime_r+0x1da>
 8008bf4:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008bf8:	fb93 f1f2 	sdiv	r1, r3, r2
 8008bfc:	fb02 3311 	mls	r3, r2, r1, r3
 8008c00:	fab3 f383 	clz	r3, r3
 8008c04:	095b      	lsrs	r3, r3, #5
 8008c06:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 8008c0a:	61e3      	str	r3, [r4, #28]
 8008c0c:	e7de      	b.n	8008bcc <localtime_r+0x198>
 8008c0e:	2301      	movs	r3, #1
 8008c10:	e7f9      	b.n	8008c06 <localtime_r+0x1d2>
 8008c12:	bf00      	nop
 8008c14:	0800fcc0 	.word	0x0800fcc0
 8008c18:	20000350 	.word	0x20000350

08008c1c <malloc>:
 8008c1c:	4b02      	ldr	r3, [pc, #8]	; (8008c28 <malloc+0xc>)
 8008c1e:	4601      	mov	r1, r0
 8008c20:	6818      	ldr	r0, [r3, #0]
 8008c22:	f000 baff 	b.w	8009224 <_malloc_r>
 8008c26:	bf00      	nop
 8008c28:	2000000c 	.word	0x2000000c

08008c2c <free>:
 8008c2c:	4b02      	ldr	r3, [pc, #8]	; (8008c38 <free+0xc>)
 8008c2e:	4601      	mov	r1, r0
 8008c30:	6818      	ldr	r0, [r3, #0]
 8008c32:	f000 ba8b 	b.w	800914c <_free_r>
 8008c36:	bf00      	nop
 8008c38:	2000000c 	.word	0x2000000c

08008c3c <memcpy>:
 8008c3c:	440a      	add	r2, r1
 8008c3e:	4291      	cmp	r1, r2
 8008c40:	f100 33ff 	add.w	r3, r0, #4294967295
 8008c44:	d100      	bne.n	8008c48 <memcpy+0xc>
 8008c46:	4770      	bx	lr
 8008c48:	b510      	push	{r4, lr}
 8008c4a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008c4e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008c52:	4291      	cmp	r1, r2
 8008c54:	d1f9      	bne.n	8008c4a <memcpy+0xe>
 8008c56:	bd10      	pop	{r4, pc}

08008c58 <memset>:
 8008c58:	4402      	add	r2, r0
 8008c5a:	4603      	mov	r3, r0
 8008c5c:	4293      	cmp	r3, r2
 8008c5e:	d100      	bne.n	8008c62 <memset+0xa>
 8008c60:	4770      	bx	lr
 8008c62:	f803 1b01 	strb.w	r1, [r3], #1
 8008c66:	e7f9      	b.n	8008c5c <memset+0x4>

08008c68 <validate_structure>:
 8008c68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c6a:	6801      	ldr	r1, [r0, #0]
 8008c6c:	293b      	cmp	r1, #59	; 0x3b
 8008c6e:	4604      	mov	r4, r0
 8008c70:	d911      	bls.n	8008c96 <validate_structure+0x2e>
 8008c72:	223c      	movs	r2, #60	; 0x3c
 8008c74:	4668      	mov	r0, sp
 8008c76:	f003 f9e3 	bl	800c040 <div>
 8008c7a:	9a01      	ldr	r2, [sp, #4]
 8008c7c:	6863      	ldr	r3, [r4, #4]
 8008c7e:	9900      	ldr	r1, [sp, #0]
 8008c80:	2a00      	cmp	r2, #0
 8008c82:	440b      	add	r3, r1
 8008c84:	6063      	str	r3, [r4, #4]
 8008c86:	bfbb      	ittet	lt
 8008c88:	323c      	addlt	r2, #60	; 0x3c
 8008c8a:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008c8e:	6022      	strge	r2, [r4, #0]
 8008c90:	6022      	strlt	r2, [r4, #0]
 8008c92:	bfb8      	it	lt
 8008c94:	6063      	strlt	r3, [r4, #4]
 8008c96:	6861      	ldr	r1, [r4, #4]
 8008c98:	293b      	cmp	r1, #59	; 0x3b
 8008c9a:	d911      	bls.n	8008cc0 <validate_structure+0x58>
 8008c9c:	223c      	movs	r2, #60	; 0x3c
 8008c9e:	4668      	mov	r0, sp
 8008ca0:	f003 f9ce 	bl	800c040 <div>
 8008ca4:	9a01      	ldr	r2, [sp, #4]
 8008ca6:	68a3      	ldr	r3, [r4, #8]
 8008ca8:	9900      	ldr	r1, [sp, #0]
 8008caa:	2a00      	cmp	r2, #0
 8008cac:	440b      	add	r3, r1
 8008cae:	60a3      	str	r3, [r4, #8]
 8008cb0:	bfbb      	ittet	lt
 8008cb2:	323c      	addlt	r2, #60	; 0x3c
 8008cb4:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008cb8:	6062      	strge	r2, [r4, #4]
 8008cba:	6062      	strlt	r2, [r4, #4]
 8008cbc:	bfb8      	it	lt
 8008cbe:	60a3      	strlt	r3, [r4, #8]
 8008cc0:	68a1      	ldr	r1, [r4, #8]
 8008cc2:	2917      	cmp	r1, #23
 8008cc4:	d911      	bls.n	8008cea <validate_structure+0x82>
 8008cc6:	2218      	movs	r2, #24
 8008cc8:	4668      	mov	r0, sp
 8008cca:	f003 f9b9 	bl	800c040 <div>
 8008cce:	9a01      	ldr	r2, [sp, #4]
 8008cd0:	68e3      	ldr	r3, [r4, #12]
 8008cd2:	9900      	ldr	r1, [sp, #0]
 8008cd4:	2a00      	cmp	r2, #0
 8008cd6:	440b      	add	r3, r1
 8008cd8:	60e3      	str	r3, [r4, #12]
 8008cda:	bfbb      	ittet	lt
 8008cdc:	3218      	addlt	r2, #24
 8008cde:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008ce2:	60a2      	strge	r2, [r4, #8]
 8008ce4:	60a2      	strlt	r2, [r4, #8]
 8008ce6:	bfb8      	it	lt
 8008ce8:	60e3      	strlt	r3, [r4, #12]
 8008cea:	6921      	ldr	r1, [r4, #16]
 8008cec:	290b      	cmp	r1, #11
 8008cee:	d911      	bls.n	8008d14 <validate_structure+0xac>
 8008cf0:	220c      	movs	r2, #12
 8008cf2:	4668      	mov	r0, sp
 8008cf4:	f003 f9a4 	bl	800c040 <div>
 8008cf8:	9a01      	ldr	r2, [sp, #4]
 8008cfa:	6963      	ldr	r3, [r4, #20]
 8008cfc:	9900      	ldr	r1, [sp, #0]
 8008cfe:	2a00      	cmp	r2, #0
 8008d00:	440b      	add	r3, r1
 8008d02:	6163      	str	r3, [r4, #20]
 8008d04:	bfbb      	ittet	lt
 8008d06:	320c      	addlt	r2, #12
 8008d08:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008d0c:	6122      	strge	r2, [r4, #16]
 8008d0e:	6122      	strlt	r2, [r4, #16]
 8008d10:	bfb8      	it	lt
 8008d12:	6163      	strlt	r3, [r4, #20]
 8008d14:	6963      	ldr	r3, [r4, #20]
 8008d16:	0798      	lsls	r0, r3, #30
 8008d18:	d120      	bne.n	8008d5c <validate_structure+0xf4>
 8008d1a:	2164      	movs	r1, #100	; 0x64
 8008d1c:	fb93 f2f1 	sdiv	r2, r3, r1
 8008d20:	fb01 3212 	mls	r2, r1, r2, r3
 8008d24:	b9e2      	cbnz	r2, 8008d60 <validate_structure+0xf8>
 8008d26:	f203 736c 	addw	r3, r3, #1900	; 0x76c
 8008d2a:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008d2e:	fb93 f1f2 	sdiv	r1, r3, r2
 8008d32:	fb02 3311 	mls	r3, r2, r1, r3
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	bf14      	ite	ne
 8008d3a:	231c      	movne	r3, #28
 8008d3c:	231d      	moveq	r3, #29
 8008d3e:	68e2      	ldr	r2, [r4, #12]
 8008d40:	2a00      	cmp	r2, #0
 8008d42:	dc0f      	bgt.n	8008d64 <validate_structure+0xfc>
 8008d44:	4f33      	ldr	r7, [pc, #204]	; (8008e14 <validate_structure+0x1ac>)
 8008d46:	260b      	movs	r6, #11
 8008d48:	2064      	movs	r0, #100	; 0x64
 8008d4a:	f44f 75c8 	mov.w	r5, #400	; 0x190
 8008d4e:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 8008d52:	f1bc 0f00 	cmp.w	ip, #0
 8008d56:	dd31      	ble.n	8008dbc <validate_structure+0x154>
 8008d58:	b003      	add	sp, #12
 8008d5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d5c:	231c      	movs	r3, #28
 8008d5e:	e7ee      	b.n	8008d3e <validate_structure+0xd6>
 8008d60:	231d      	movs	r3, #29
 8008d62:	e7ec      	b.n	8008d3e <validate_structure+0xd6>
 8008d64:	4e2b      	ldr	r6, [pc, #172]	; (8008e14 <validate_structure+0x1ac>)
 8008d66:	2700      	movs	r7, #0
 8008d68:	2064      	movs	r0, #100	; 0x64
 8008d6a:	f44f 75c8 	mov.w	r5, #400	; 0x190
 8008d6e:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 8008d72:	2a01      	cmp	r2, #1
 8008d74:	bf14      	ite	ne
 8008d76:	f856 c022 	ldrne.w	ip, [r6, r2, lsl #2]
 8008d7a:	469c      	moveq	ip, r3
 8008d7c:	4561      	cmp	r1, ip
 8008d7e:	ddeb      	ble.n	8008d58 <validate_structure+0xf0>
 8008d80:	3201      	adds	r2, #1
 8008d82:	eba1 010c 	sub.w	r1, r1, ip
 8008d86:	2a0c      	cmp	r2, #12
 8008d88:	60e1      	str	r1, [r4, #12]
 8008d8a:	6122      	str	r2, [r4, #16]
 8008d8c:	d1ef      	bne.n	8008d6e <validate_structure+0x106>
 8008d8e:	6963      	ldr	r3, [r4, #20]
 8008d90:	1c5a      	adds	r2, r3, #1
 8008d92:	0791      	lsls	r1, r2, #30
 8008d94:	e9c4 7204 	strd	r7, r2, [r4, #16]
 8008d98:	d137      	bne.n	8008e0a <validate_structure+0x1a2>
 8008d9a:	fb92 f1f0 	sdiv	r1, r2, r0
 8008d9e:	fb00 2211 	mls	r2, r0, r1, r2
 8008da2:	2a00      	cmp	r2, #0
 8008da4:	d133      	bne.n	8008e0e <validate_structure+0x1a6>
 8008da6:	f203 736d 	addw	r3, r3, #1901	; 0x76d
 8008daa:	fb93 f2f5 	sdiv	r2, r3, r5
 8008dae:	fb05 3312 	mls	r3, r5, r2, r3
 8008db2:	2b00      	cmp	r3, #0
 8008db4:	bf14      	ite	ne
 8008db6:	231c      	movne	r3, #28
 8008db8:	231d      	moveq	r3, #29
 8008dba:	e7d8      	b.n	8008d6e <validate_structure+0x106>
 8008dbc:	6921      	ldr	r1, [r4, #16]
 8008dbe:	3901      	subs	r1, #1
 8008dc0:	6121      	str	r1, [r4, #16]
 8008dc2:	3101      	adds	r1, #1
 8008dc4:	d114      	bne.n	8008df0 <validate_structure+0x188>
 8008dc6:	6963      	ldr	r3, [r4, #20]
 8008dc8:	1e5a      	subs	r2, r3, #1
 8008dca:	0791      	lsls	r1, r2, #30
 8008dcc:	e9c4 6204 	strd	r6, r2, [r4, #16]
 8008dd0:	d117      	bne.n	8008e02 <validate_structure+0x19a>
 8008dd2:	fb92 f1f0 	sdiv	r1, r2, r0
 8008dd6:	fb00 2211 	mls	r2, r0, r1, r2
 8008dda:	b9a2      	cbnz	r2, 8008e06 <validate_structure+0x19e>
 8008ddc:	f203 736b 	addw	r3, r3, #1899	; 0x76b
 8008de0:	fb93 f2f5 	sdiv	r2, r3, r5
 8008de4:	fb05 3312 	mls	r3, r5, r2, r3
 8008de8:	2b00      	cmp	r3, #0
 8008dea:	bf14      	ite	ne
 8008dec:	231c      	movne	r3, #28
 8008dee:	231d      	moveq	r3, #29
 8008df0:	6922      	ldr	r2, [r4, #16]
 8008df2:	2a01      	cmp	r2, #1
 8008df4:	bf14      	ite	ne
 8008df6:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
 8008dfa:	461a      	moveq	r2, r3
 8008dfc:	4462      	add	r2, ip
 8008dfe:	60e2      	str	r2, [r4, #12]
 8008e00:	e7a5      	b.n	8008d4e <validate_structure+0xe6>
 8008e02:	231c      	movs	r3, #28
 8008e04:	e7f4      	b.n	8008df0 <validate_structure+0x188>
 8008e06:	231d      	movs	r3, #29
 8008e08:	e7f2      	b.n	8008df0 <validate_structure+0x188>
 8008e0a:	231c      	movs	r3, #28
 8008e0c:	e7af      	b.n	8008d6e <validate_structure+0x106>
 8008e0e:	231d      	movs	r3, #29
 8008e10:	e7ad      	b.n	8008d6e <validate_structure+0x106>
 8008e12:	bf00      	nop
 8008e14:	0800fc60 	.word	0x0800fc60

08008e18 <mktime>:
 8008e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e1c:	b085      	sub	sp, #20
 8008e1e:	4607      	mov	r7, r0
 8008e20:	f004 fb62 	bl	800d4e8 <__gettzinfo>
 8008e24:	4681      	mov	r9, r0
 8008e26:	4638      	mov	r0, r7
 8008e28:	f7ff ff1e 	bl	8008c68 <validate_structure>
 8008e2c:	e9d7 4000 	ldrd	r4, r0, [r7]
 8008e30:	233c      	movs	r3, #60	; 0x3c
 8008e32:	fb03 4400 	mla	r4, r3, r0, r4
 8008e36:	68b8      	ldr	r0, [r7, #8]
 8008e38:	4abc      	ldr	r2, [pc, #752]	; (800912c <mktime+0x314>)
 8008e3a:	697e      	ldr	r6, [r7, #20]
 8008e3c:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 8008e40:	fb03 4400 	mla	r4, r3, r0, r4
 8008e44:	e9d7 5303 	ldrd	r5, r3, [r7, #12]
 8008e48:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008e4c:	3d01      	subs	r5, #1
 8008e4e:	2b01      	cmp	r3, #1
 8008e50:	4415      	add	r5, r2
 8008e52:	dd11      	ble.n	8008e78 <mktime+0x60>
 8008e54:	07b1      	lsls	r1, r6, #30
 8008e56:	d10f      	bne.n	8008e78 <mktime+0x60>
 8008e58:	2264      	movs	r2, #100	; 0x64
 8008e5a:	fb96 f3f2 	sdiv	r3, r6, r2
 8008e5e:	fb02 6313 	mls	r3, r2, r3, r6
 8008e62:	b943      	cbnz	r3, 8008e76 <mktime+0x5e>
 8008e64:	f206 736c 	addw	r3, r6, #1900	; 0x76c
 8008e68:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008e6c:	fb93 f1f2 	sdiv	r1, r3, r2
 8008e70:	fb02 3311 	mls	r3, r2, r1, r3
 8008e74:	b903      	cbnz	r3, 8008e78 <mktime+0x60>
 8008e76:	3501      	adds	r5, #1
 8008e78:	f506 531c 	add.w	r3, r6, #9984	; 0x2700
 8008e7c:	3310      	adds	r3, #16
 8008e7e:	f644 6220 	movw	r2, #20000	; 0x4e20
 8008e82:	4293      	cmp	r3, r2
 8008e84:	61fd      	str	r5, [r7, #28]
 8008e86:	f200 815d 	bhi.w	8009144 <mktime+0x32c>
 8008e8a:	2e46      	cmp	r6, #70	; 0x46
 8008e8c:	dd71      	ble.n	8008f72 <mktime+0x15a>
 8008e8e:	2346      	movs	r3, #70	; 0x46
 8008e90:	f240 1c6d 	movw	ip, #365	; 0x16d
 8008e94:	2164      	movs	r1, #100	; 0x64
 8008e96:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8008e9a:	079a      	lsls	r2, r3, #30
 8008e9c:	d163      	bne.n	8008f66 <mktime+0x14e>
 8008e9e:	fb93 f2f1 	sdiv	r2, r3, r1
 8008ea2:	fb01 3212 	mls	r2, r1, r2, r3
 8008ea6:	2a00      	cmp	r2, #0
 8008ea8:	d160      	bne.n	8008f6c <mktime+0x154>
 8008eaa:	f203 726c 	addw	r2, r3, #1900	; 0x76c
 8008eae:	fb92 fef0 	sdiv	lr, r2, r0
 8008eb2:	fb00 221e 	mls	r2, r0, lr, r2
 8008eb6:	2a00      	cmp	r2, #0
 8008eb8:	bf14      	ite	ne
 8008eba:	4662      	movne	r2, ip
 8008ebc:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
 8008ec0:	3301      	adds	r3, #1
 8008ec2:	429e      	cmp	r6, r3
 8008ec4:	4415      	add	r5, r2
 8008ec6:	d1e8      	bne.n	8008e9a <mktime+0x82>
 8008ec8:	4b99      	ldr	r3, [pc, #612]	; (8009130 <mktime+0x318>)
 8008eca:	ea4f 78e4 	mov.w	r8, r4, asr #31
 8008ece:	fbc5 4803 	smlal	r4, r8, r5, r3
 8008ed2:	f002 fedf 	bl	800bc94 <__tz_lock>
 8008ed6:	f002 fee9 	bl	800bcac <_tzset_unlocked>
 8008eda:	4b96      	ldr	r3, [pc, #600]	; (8009134 <mktime+0x31c>)
 8008edc:	f8d3 b000 	ldr.w	fp, [r3]
 8008ee0:	f1bb 0f00 	cmp.w	fp, #0
 8008ee4:	d039      	beq.n	8008f5a <mktime+0x142>
 8008ee6:	f8d7 b020 	ldr.w	fp, [r7, #32]
 8008eea:	6978      	ldr	r0, [r7, #20]
 8008eec:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8008ef0:	f1bb 0f01 	cmp.w	fp, #1
 8008ef4:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8008ef8:	46da      	mov	sl, fp
 8008efa:	bfa8      	it	ge
 8008efc:	f04f 0a01 	movge.w	sl, #1
 8008f00:	4283      	cmp	r3, r0
 8008f02:	d178      	bne.n	8008ff6 <mktime+0x1de>
 8008f04:	e9d9 3208 	ldrd	r3, r2, [r9, #32]
 8008f08:	f8d9 1050 	ldr.w	r1, [r9, #80]	; 0x50
 8008f0c:	f8d9 e04c 	ldr.w	lr, [r9, #76]	; 0x4c
 8008f10:	1a5b      	subs	r3, r3, r1
 8008f12:	9302      	str	r3, [sp, #8]
 8008f14:	eb62 73e1 	sbc.w	r3, r2, r1, asr #31
 8008f18:	9303      	str	r3, [sp, #12]
 8008f1a:	f8d9 2028 	ldr.w	r2, [r9, #40]	; 0x28
 8008f1e:	f8d9 3048 	ldr.w	r3, [r9, #72]	; 0x48
 8008f22:	9301      	str	r3, [sp, #4]
 8008f24:	ebb3 0c02 	subs.w	ip, r3, r2
 8008f28:	eb6e 70e2 	sbc.w	r0, lr, r2, asr #31
 8008f2c:	4564      	cmp	r4, ip
 8008f2e:	eb78 0300 	sbcs.w	r3, r8, r0
 8008f32:	da66      	bge.n	8009002 <mktime+0x1ea>
 8008f34:	f8d9 3000 	ldr.w	r3, [r9]
 8008f38:	2b00      	cmp	r3, #0
 8008f3a:	d06f      	beq.n	800901c <mktime+0x204>
 8008f3c:	9b02      	ldr	r3, [sp, #8]
 8008f3e:	429c      	cmp	r4, r3
 8008f40:	9b03      	ldr	r3, [sp, #12]
 8008f42:	eb78 0303 	sbcs.w	r3, r8, r3
 8008f46:	db03      	blt.n	8008f50 <mktime+0x138>
 8008f48:	4564      	cmp	r4, ip
 8008f4a:	eb78 0300 	sbcs.w	r3, r8, r0
 8008f4e:	db6b      	blt.n	8009028 <mktime+0x210>
 8008f50:	f1bb 0f00 	cmp.w	fp, #0
 8008f54:	f04f 0b00 	mov.w	fp, #0
 8008f58:	da6b      	bge.n	8009032 <mktime+0x21a>
 8008f5a:	f8d9 1028 	ldr.w	r1, [r9, #40]	; 0x28
 8008f5e:	190c      	adds	r4, r1, r4
 8008f60:	eb48 78e1 	adc.w	r8, r8, r1, asr #31
 8008f64:	e0a9      	b.n	80090ba <mktime+0x2a2>
 8008f66:	f240 126d 	movw	r2, #365	; 0x16d
 8008f6a:	e7a9      	b.n	8008ec0 <mktime+0xa8>
 8008f6c:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8008f70:	e7a6      	b.n	8008ec0 <mktime+0xa8>
 8008f72:	d0a9      	beq.n	8008ec8 <mktime+0xb0>
 8008f74:	2345      	movs	r3, #69	; 0x45
 8008f76:	f240 1c6d 	movw	ip, #365	; 0x16d
 8008f7a:	2164      	movs	r1, #100	; 0x64
 8008f7c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8008f80:	e012      	b.n	8008fa8 <mktime+0x190>
 8008f82:	bb62      	cbnz	r2, 8008fde <mktime+0x1c6>
 8008f84:	fb93 f2f1 	sdiv	r2, r3, r1
 8008f88:	fb01 3212 	mls	r2, r1, r2, r3
 8008f8c:	bb52      	cbnz	r2, 8008fe4 <mktime+0x1cc>
 8008f8e:	f203 726c 	addw	r2, r3, #1900	; 0x76c
 8008f92:	fb92 fef0 	sdiv	lr, r2, r0
 8008f96:	fb00 221e 	mls	r2, r0, lr, r2
 8008f9a:	2a00      	cmp	r2, #0
 8008f9c:	bf14      	ite	ne
 8008f9e:	4662      	movne	r2, ip
 8008fa0:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
 8008fa4:	1aad      	subs	r5, r5, r2
 8008fa6:	3b01      	subs	r3, #1
 8008fa8:	429e      	cmp	r6, r3
 8008faa:	f003 0203 	and.w	r2, r3, #3
 8008fae:	dbe8      	blt.n	8008f82 <mktime+0x16a>
 8008fb0:	b9da      	cbnz	r2, 8008fea <mktime+0x1d2>
 8008fb2:	2264      	movs	r2, #100	; 0x64
 8008fb4:	fb96 f3f2 	sdiv	r3, r6, r2
 8008fb8:	fb02 6313 	mls	r3, r2, r3, r6
 8008fbc:	b9c3      	cbnz	r3, 8008ff0 <mktime+0x1d8>
 8008fbe:	f206 736c 	addw	r3, r6, #1900	; 0x76c
 8008fc2:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008fc6:	fb93 f1f2 	sdiv	r1, r3, r2
 8008fca:	fb02 3311 	mls	r3, r2, r1, r3
 8008fce:	2b00      	cmp	r3, #0
 8008fd0:	f240 136d 	movw	r3, #365	; 0x16d
 8008fd4:	bf08      	it	eq
 8008fd6:	f44f 73b7 	moveq.w	r3, #366	; 0x16e
 8008fda:	1aed      	subs	r5, r5, r3
 8008fdc:	e774      	b.n	8008ec8 <mktime+0xb0>
 8008fde:	f240 126d 	movw	r2, #365	; 0x16d
 8008fe2:	e7df      	b.n	8008fa4 <mktime+0x18c>
 8008fe4:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8008fe8:	e7dc      	b.n	8008fa4 <mktime+0x18c>
 8008fea:	f240 136d 	movw	r3, #365	; 0x16d
 8008fee:	e7f4      	b.n	8008fda <mktime+0x1c2>
 8008ff0:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 8008ff4:	e7f1      	b.n	8008fda <mktime+0x1c2>
 8008ff6:	f002 fda3 	bl	800bb40 <__tzcalc_limits>
 8008ffa:	2800      	cmp	r0, #0
 8008ffc:	d182      	bne.n	8008f04 <mktime+0xec>
 8008ffe:	46d3      	mov	fp, sl
 8009000:	e050      	b.n	80090a4 <mktime+0x28c>
 8009002:	9b01      	ldr	r3, [sp, #4]
 8009004:	1a5b      	subs	r3, r3, r1
 8009006:	9301      	str	r3, [sp, #4]
 8009008:	ea4f 73e1 	mov.w	r3, r1, asr #31
 800900c:	eb6e 0e03 	sbc.w	lr, lr, r3
 8009010:	9b01      	ldr	r3, [sp, #4]
 8009012:	429c      	cmp	r4, r3
 8009014:	eb78 030e 	sbcs.w	r3, r8, lr
 8009018:	dbf1      	blt.n	8008ffe <mktime+0x1e6>
 800901a:	e78b      	b.n	8008f34 <mktime+0x11c>
 800901c:	9b02      	ldr	r3, [sp, #8]
 800901e:	429c      	cmp	r4, r3
 8009020:	9b03      	ldr	r3, [sp, #12]
 8009022:	eb78 0303 	sbcs.w	r3, r8, r3
 8009026:	db8f      	blt.n	8008f48 <mktime+0x130>
 8009028:	f1bb 0f00 	cmp.w	fp, #0
 800902c:	db3e      	blt.n	80090ac <mktime+0x294>
 800902e:	f04f 0b01 	mov.w	fp, #1
 8009032:	ea8a 0a0b 	eor.w	sl, sl, fp
 8009036:	f1ba 0f01 	cmp.w	sl, #1
 800903a:	d133      	bne.n	80090a4 <mktime+0x28c>
 800903c:	f1bb 0f00 	cmp.w	fp, #0
 8009040:	d04e      	beq.n	80090e0 <mktime+0x2c8>
 8009042:	1a52      	subs	r2, r2, r1
 8009044:	683b      	ldr	r3, [r7, #0]
 8009046:	f8d7 a00c 	ldr.w	sl, [r7, #12]
 800904a:	4413      	add	r3, r2
 800904c:	1914      	adds	r4, r2, r4
 800904e:	603b      	str	r3, [r7, #0]
 8009050:	4638      	mov	r0, r7
 8009052:	eb48 78e2 	adc.w	r8, r8, r2, asr #31
 8009056:	f7ff fe07 	bl	8008c68 <validate_structure>
 800905a:	68fa      	ldr	r2, [r7, #12]
 800905c:	ebb2 020a 	subs.w	r2, r2, sl
 8009060:	d020      	beq.n	80090a4 <mktime+0x28c>
 8009062:	2a01      	cmp	r2, #1
 8009064:	dc3e      	bgt.n	80090e4 <mktime+0x2cc>
 8009066:	1c90      	adds	r0, r2, #2
 8009068:	bfd8      	it	le
 800906a:	2201      	movle	r2, #1
 800906c:	69fb      	ldr	r3, [r7, #28]
 800906e:	18d3      	adds	r3, r2, r3
 8009070:	4415      	add	r5, r2
 8009072:	d540      	bpl.n	80090f6 <mktime+0x2de>
 8009074:	1e73      	subs	r3, r6, #1
 8009076:	0799      	lsls	r1, r3, #30
 8009078:	d137      	bne.n	80090ea <mktime+0x2d2>
 800907a:	2264      	movs	r2, #100	; 0x64
 800907c:	fb93 f1f2 	sdiv	r1, r3, r2
 8009080:	fb02 3311 	mls	r3, r2, r1, r3
 8009084:	bba3      	cbnz	r3, 80090f0 <mktime+0x2d8>
 8009086:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800908a:	f206 766b 	addw	r6, r6, #1899	; 0x76b
 800908e:	fb96 f2f3 	sdiv	r2, r6, r3
 8009092:	fb03 6612 	mls	r6, r3, r2, r6
 8009096:	2e00      	cmp	r6, #0
 8009098:	f240 136d 	movw	r3, #365	; 0x16d
 800909c:	bf18      	it	ne
 800909e:	f44f 73b6 	movne.w	r3, #364	; 0x16c
 80090a2:	61fb      	str	r3, [r7, #28]
 80090a4:	f1bb 0f01 	cmp.w	fp, #1
 80090a8:	f47f af57 	bne.w	8008f5a <mktime+0x142>
 80090ac:	f8d9 1050 	ldr.w	r1, [r9, #80]	; 0x50
 80090b0:	190c      	adds	r4, r1, r4
 80090b2:	eb48 78e1 	adc.w	r8, r8, r1, asr #31
 80090b6:	f04f 0b01 	mov.w	fp, #1
 80090ba:	f002 fdf1 	bl	800bca0 <__tz_unlock>
 80090be:	3504      	adds	r5, #4
 80090c0:	2307      	movs	r3, #7
 80090c2:	fb95 f3f3 	sdiv	r3, r5, r3
 80090c6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80090ca:	1aed      	subs	r5, r5, r3
 80090cc:	bf48      	it	mi
 80090ce:	3507      	addmi	r5, #7
 80090d0:	f8c7 b020 	str.w	fp, [r7, #32]
 80090d4:	61bd      	str	r5, [r7, #24]
 80090d6:	4620      	mov	r0, r4
 80090d8:	4641      	mov	r1, r8
 80090da:	b005      	add	sp, #20
 80090dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80090e0:	1a8a      	subs	r2, r1, r2
 80090e2:	e7af      	b.n	8009044 <mktime+0x22c>
 80090e4:	f04f 32ff 	mov.w	r2, #4294967295
 80090e8:	e7c0      	b.n	800906c <mktime+0x254>
 80090ea:	f44f 73b6 	mov.w	r3, #364	; 0x16c
 80090ee:	e7d8      	b.n	80090a2 <mktime+0x28a>
 80090f0:	f240 136d 	movw	r3, #365	; 0x16d
 80090f4:	e7d5      	b.n	80090a2 <mktime+0x28a>
 80090f6:	07b2      	lsls	r2, r6, #30
 80090f8:	d11e      	bne.n	8009138 <mktime+0x320>
 80090fa:	2164      	movs	r1, #100	; 0x64
 80090fc:	fb96 f2f1 	sdiv	r2, r6, r1
 8009100:	fb01 6212 	mls	r2, r1, r2, r6
 8009104:	b9da      	cbnz	r2, 800913e <mktime+0x326>
 8009106:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800910a:	f206 766c 	addw	r6, r6, #1900	; 0x76c
 800910e:	fb96 f1f2 	sdiv	r1, r6, r2
 8009112:	fb02 6611 	mls	r6, r2, r1, r6
 8009116:	2e00      	cmp	r6, #0
 8009118:	f240 126d 	movw	r2, #365	; 0x16d
 800911c:	bf08      	it	eq
 800911e:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
 8009122:	4293      	cmp	r3, r2
 8009124:	bfa8      	it	ge
 8009126:	1a9b      	subge	r3, r3, r2
 8009128:	e7bb      	b.n	80090a2 <mktime+0x28a>
 800912a:	bf00      	nop
 800912c:	0800fc90 	.word	0x0800fc90
 8009130:	00015180 	.word	0x00015180
 8009134:	20000350 	.word	0x20000350
 8009138:	f240 126d 	movw	r2, #365	; 0x16d
 800913c:	e7f1      	b.n	8009122 <mktime+0x30a>
 800913e:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8009142:	e7ee      	b.n	8009122 <mktime+0x30a>
 8009144:	f04f 34ff 	mov.w	r4, #4294967295
 8009148:	46a0      	mov	r8, r4
 800914a:	e7c4      	b.n	80090d6 <mktime+0x2be>

0800914c <_free_r>:
 800914c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800914e:	2900      	cmp	r1, #0
 8009150:	d044      	beq.n	80091dc <_free_r+0x90>
 8009152:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009156:	9001      	str	r0, [sp, #4]
 8009158:	2b00      	cmp	r3, #0
 800915a:	f1a1 0404 	sub.w	r4, r1, #4
 800915e:	bfb8      	it	lt
 8009160:	18e4      	addlt	r4, r4, r3
 8009162:	f004 faa3 	bl	800d6ac <__malloc_lock>
 8009166:	4a1e      	ldr	r2, [pc, #120]	; (80091e0 <_free_r+0x94>)
 8009168:	9801      	ldr	r0, [sp, #4]
 800916a:	6813      	ldr	r3, [r2, #0]
 800916c:	b933      	cbnz	r3, 800917c <_free_r+0x30>
 800916e:	6063      	str	r3, [r4, #4]
 8009170:	6014      	str	r4, [r2, #0]
 8009172:	b003      	add	sp, #12
 8009174:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009178:	f004 ba9e 	b.w	800d6b8 <__malloc_unlock>
 800917c:	42a3      	cmp	r3, r4
 800917e:	d908      	bls.n	8009192 <_free_r+0x46>
 8009180:	6825      	ldr	r5, [r4, #0]
 8009182:	1961      	adds	r1, r4, r5
 8009184:	428b      	cmp	r3, r1
 8009186:	bf01      	itttt	eq
 8009188:	6819      	ldreq	r1, [r3, #0]
 800918a:	685b      	ldreq	r3, [r3, #4]
 800918c:	1949      	addeq	r1, r1, r5
 800918e:	6021      	streq	r1, [r4, #0]
 8009190:	e7ed      	b.n	800916e <_free_r+0x22>
 8009192:	461a      	mov	r2, r3
 8009194:	685b      	ldr	r3, [r3, #4]
 8009196:	b10b      	cbz	r3, 800919c <_free_r+0x50>
 8009198:	42a3      	cmp	r3, r4
 800919a:	d9fa      	bls.n	8009192 <_free_r+0x46>
 800919c:	6811      	ldr	r1, [r2, #0]
 800919e:	1855      	adds	r5, r2, r1
 80091a0:	42a5      	cmp	r5, r4
 80091a2:	d10b      	bne.n	80091bc <_free_r+0x70>
 80091a4:	6824      	ldr	r4, [r4, #0]
 80091a6:	4421      	add	r1, r4
 80091a8:	1854      	adds	r4, r2, r1
 80091aa:	42a3      	cmp	r3, r4
 80091ac:	6011      	str	r1, [r2, #0]
 80091ae:	d1e0      	bne.n	8009172 <_free_r+0x26>
 80091b0:	681c      	ldr	r4, [r3, #0]
 80091b2:	685b      	ldr	r3, [r3, #4]
 80091b4:	6053      	str	r3, [r2, #4]
 80091b6:	4421      	add	r1, r4
 80091b8:	6011      	str	r1, [r2, #0]
 80091ba:	e7da      	b.n	8009172 <_free_r+0x26>
 80091bc:	d902      	bls.n	80091c4 <_free_r+0x78>
 80091be:	230c      	movs	r3, #12
 80091c0:	6003      	str	r3, [r0, #0]
 80091c2:	e7d6      	b.n	8009172 <_free_r+0x26>
 80091c4:	6825      	ldr	r5, [r4, #0]
 80091c6:	1961      	adds	r1, r4, r5
 80091c8:	428b      	cmp	r3, r1
 80091ca:	bf04      	itt	eq
 80091cc:	6819      	ldreq	r1, [r3, #0]
 80091ce:	685b      	ldreq	r3, [r3, #4]
 80091d0:	6063      	str	r3, [r4, #4]
 80091d2:	bf04      	itt	eq
 80091d4:	1949      	addeq	r1, r1, r5
 80091d6:	6021      	streq	r1, [r4, #0]
 80091d8:	6054      	str	r4, [r2, #4]
 80091da:	e7ca      	b.n	8009172 <_free_r+0x26>
 80091dc:	b003      	add	sp, #12
 80091de:	bd30      	pop	{r4, r5, pc}
 80091e0:	2000032c 	.word	0x2000032c

080091e4 <sbrk_aligned>:
 80091e4:	b570      	push	{r4, r5, r6, lr}
 80091e6:	4e0e      	ldr	r6, [pc, #56]	; (8009220 <sbrk_aligned+0x3c>)
 80091e8:	460c      	mov	r4, r1
 80091ea:	6831      	ldr	r1, [r6, #0]
 80091ec:	4605      	mov	r5, r0
 80091ee:	b911      	cbnz	r1, 80091f6 <sbrk_aligned+0x12>
 80091f0:	f000 ff06 	bl	800a000 <_sbrk_r>
 80091f4:	6030      	str	r0, [r6, #0]
 80091f6:	4621      	mov	r1, r4
 80091f8:	4628      	mov	r0, r5
 80091fa:	f000 ff01 	bl	800a000 <_sbrk_r>
 80091fe:	1c43      	adds	r3, r0, #1
 8009200:	d00a      	beq.n	8009218 <sbrk_aligned+0x34>
 8009202:	1cc4      	adds	r4, r0, #3
 8009204:	f024 0403 	bic.w	r4, r4, #3
 8009208:	42a0      	cmp	r0, r4
 800920a:	d007      	beq.n	800921c <sbrk_aligned+0x38>
 800920c:	1a21      	subs	r1, r4, r0
 800920e:	4628      	mov	r0, r5
 8009210:	f000 fef6 	bl	800a000 <_sbrk_r>
 8009214:	3001      	adds	r0, #1
 8009216:	d101      	bne.n	800921c <sbrk_aligned+0x38>
 8009218:	f04f 34ff 	mov.w	r4, #4294967295
 800921c:	4620      	mov	r0, r4
 800921e:	bd70      	pop	{r4, r5, r6, pc}
 8009220:	20000330 	.word	0x20000330

08009224 <_malloc_r>:
 8009224:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009228:	1ccd      	adds	r5, r1, #3
 800922a:	f025 0503 	bic.w	r5, r5, #3
 800922e:	3508      	adds	r5, #8
 8009230:	2d0c      	cmp	r5, #12
 8009232:	bf38      	it	cc
 8009234:	250c      	movcc	r5, #12
 8009236:	2d00      	cmp	r5, #0
 8009238:	4607      	mov	r7, r0
 800923a:	db01      	blt.n	8009240 <_malloc_r+0x1c>
 800923c:	42a9      	cmp	r1, r5
 800923e:	d905      	bls.n	800924c <_malloc_r+0x28>
 8009240:	230c      	movs	r3, #12
 8009242:	603b      	str	r3, [r7, #0]
 8009244:	2600      	movs	r6, #0
 8009246:	4630      	mov	r0, r6
 8009248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800924c:	4e2e      	ldr	r6, [pc, #184]	; (8009308 <_malloc_r+0xe4>)
 800924e:	f004 fa2d 	bl	800d6ac <__malloc_lock>
 8009252:	6833      	ldr	r3, [r6, #0]
 8009254:	461c      	mov	r4, r3
 8009256:	bb34      	cbnz	r4, 80092a6 <_malloc_r+0x82>
 8009258:	4629      	mov	r1, r5
 800925a:	4638      	mov	r0, r7
 800925c:	f7ff ffc2 	bl	80091e4 <sbrk_aligned>
 8009260:	1c43      	adds	r3, r0, #1
 8009262:	4604      	mov	r4, r0
 8009264:	d14d      	bne.n	8009302 <_malloc_r+0xde>
 8009266:	6834      	ldr	r4, [r6, #0]
 8009268:	4626      	mov	r6, r4
 800926a:	2e00      	cmp	r6, #0
 800926c:	d140      	bne.n	80092f0 <_malloc_r+0xcc>
 800926e:	6823      	ldr	r3, [r4, #0]
 8009270:	4631      	mov	r1, r6
 8009272:	4638      	mov	r0, r7
 8009274:	eb04 0803 	add.w	r8, r4, r3
 8009278:	f000 fec2 	bl	800a000 <_sbrk_r>
 800927c:	4580      	cmp	r8, r0
 800927e:	d13a      	bne.n	80092f6 <_malloc_r+0xd2>
 8009280:	6821      	ldr	r1, [r4, #0]
 8009282:	3503      	adds	r5, #3
 8009284:	1a6d      	subs	r5, r5, r1
 8009286:	f025 0503 	bic.w	r5, r5, #3
 800928a:	3508      	adds	r5, #8
 800928c:	2d0c      	cmp	r5, #12
 800928e:	bf38      	it	cc
 8009290:	250c      	movcc	r5, #12
 8009292:	4629      	mov	r1, r5
 8009294:	4638      	mov	r0, r7
 8009296:	f7ff ffa5 	bl	80091e4 <sbrk_aligned>
 800929a:	3001      	adds	r0, #1
 800929c:	d02b      	beq.n	80092f6 <_malloc_r+0xd2>
 800929e:	6823      	ldr	r3, [r4, #0]
 80092a0:	442b      	add	r3, r5
 80092a2:	6023      	str	r3, [r4, #0]
 80092a4:	e00e      	b.n	80092c4 <_malloc_r+0xa0>
 80092a6:	6822      	ldr	r2, [r4, #0]
 80092a8:	1b52      	subs	r2, r2, r5
 80092aa:	d41e      	bmi.n	80092ea <_malloc_r+0xc6>
 80092ac:	2a0b      	cmp	r2, #11
 80092ae:	d916      	bls.n	80092de <_malloc_r+0xba>
 80092b0:	1961      	adds	r1, r4, r5
 80092b2:	42a3      	cmp	r3, r4
 80092b4:	6025      	str	r5, [r4, #0]
 80092b6:	bf18      	it	ne
 80092b8:	6059      	strne	r1, [r3, #4]
 80092ba:	6863      	ldr	r3, [r4, #4]
 80092bc:	bf08      	it	eq
 80092be:	6031      	streq	r1, [r6, #0]
 80092c0:	5162      	str	r2, [r4, r5]
 80092c2:	604b      	str	r3, [r1, #4]
 80092c4:	4638      	mov	r0, r7
 80092c6:	f104 060b 	add.w	r6, r4, #11
 80092ca:	f004 f9f5 	bl	800d6b8 <__malloc_unlock>
 80092ce:	f026 0607 	bic.w	r6, r6, #7
 80092d2:	1d23      	adds	r3, r4, #4
 80092d4:	1af2      	subs	r2, r6, r3
 80092d6:	d0b6      	beq.n	8009246 <_malloc_r+0x22>
 80092d8:	1b9b      	subs	r3, r3, r6
 80092da:	50a3      	str	r3, [r4, r2]
 80092dc:	e7b3      	b.n	8009246 <_malloc_r+0x22>
 80092de:	6862      	ldr	r2, [r4, #4]
 80092e0:	42a3      	cmp	r3, r4
 80092e2:	bf0c      	ite	eq
 80092e4:	6032      	streq	r2, [r6, #0]
 80092e6:	605a      	strne	r2, [r3, #4]
 80092e8:	e7ec      	b.n	80092c4 <_malloc_r+0xa0>
 80092ea:	4623      	mov	r3, r4
 80092ec:	6864      	ldr	r4, [r4, #4]
 80092ee:	e7b2      	b.n	8009256 <_malloc_r+0x32>
 80092f0:	4634      	mov	r4, r6
 80092f2:	6876      	ldr	r6, [r6, #4]
 80092f4:	e7b9      	b.n	800926a <_malloc_r+0x46>
 80092f6:	230c      	movs	r3, #12
 80092f8:	603b      	str	r3, [r7, #0]
 80092fa:	4638      	mov	r0, r7
 80092fc:	f004 f9dc 	bl	800d6b8 <__malloc_unlock>
 8009300:	e7a1      	b.n	8009246 <_malloc_r+0x22>
 8009302:	6025      	str	r5, [r4, #0]
 8009304:	e7de      	b.n	80092c4 <_malloc_r+0xa0>
 8009306:	bf00      	nop
 8009308:	2000032c 	.word	0x2000032c

0800930c <__cvt>:
 800930c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009310:	ec55 4b10 	vmov	r4, r5, d0
 8009314:	2d00      	cmp	r5, #0
 8009316:	460e      	mov	r6, r1
 8009318:	4619      	mov	r1, r3
 800931a:	462b      	mov	r3, r5
 800931c:	bfbb      	ittet	lt
 800931e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8009322:	461d      	movlt	r5, r3
 8009324:	2300      	movge	r3, #0
 8009326:	232d      	movlt	r3, #45	; 0x2d
 8009328:	700b      	strb	r3, [r1, #0]
 800932a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800932c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009330:	4691      	mov	r9, r2
 8009332:	f023 0820 	bic.w	r8, r3, #32
 8009336:	bfbc      	itt	lt
 8009338:	4622      	movlt	r2, r4
 800933a:	4614      	movlt	r4, r2
 800933c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8009340:	d005      	beq.n	800934e <__cvt+0x42>
 8009342:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8009346:	d100      	bne.n	800934a <__cvt+0x3e>
 8009348:	3601      	adds	r6, #1
 800934a:	2102      	movs	r1, #2
 800934c:	e000      	b.n	8009350 <__cvt+0x44>
 800934e:	2103      	movs	r1, #3
 8009350:	ab03      	add	r3, sp, #12
 8009352:	9301      	str	r3, [sp, #4]
 8009354:	ab02      	add	r3, sp, #8
 8009356:	9300      	str	r3, [sp, #0]
 8009358:	ec45 4b10 	vmov	d0, r4, r5
 800935c:	4653      	mov	r3, sl
 800935e:	4632      	mov	r2, r6
 8009360:	f002 ff0e 	bl	800c180 <_dtoa_r>
 8009364:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8009368:	4607      	mov	r7, r0
 800936a:	d102      	bne.n	8009372 <__cvt+0x66>
 800936c:	f019 0f01 	tst.w	r9, #1
 8009370:	d022      	beq.n	80093b8 <__cvt+0xac>
 8009372:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8009376:	eb07 0906 	add.w	r9, r7, r6
 800937a:	d110      	bne.n	800939e <__cvt+0x92>
 800937c:	783b      	ldrb	r3, [r7, #0]
 800937e:	2b30      	cmp	r3, #48	; 0x30
 8009380:	d10a      	bne.n	8009398 <__cvt+0x8c>
 8009382:	2200      	movs	r2, #0
 8009384:	2300      	movs	r3, #0
 8009386:	4620      	mov	r0, r4
 8009388:	4629      	mov	r1, r5
 800938a:	f7f7 fbb5 	bl	8000af8 <__aeabi_dcmpeq>
 800938e:	b918      	cbnz	r0, 8009398 <__cvt+0x8c>
 8009390:	f1c6 0601 	rsb	r6, r6, #1
 8009394:	f8ca 6000 	str.w	r6, [sl]
 8009398:	f8da 3000 	ldr.w	r3, [sl]
 800939c:	4499      	add	r9, r3
 800939e:	2200      	movs	r2, #0
 80093a0:	2300      	movs	r3, #0
 80093a2:	4620      	mov	r0, r4
 80093a4:	4629      	mov	r1, r5
 80093a6:	f7f7 fba7 	bl	8000af8 <__aeabi_dcmpeq>
 80093aa:	b108      	cbz	r0, 80093b0 <__cvt+0xa4>
 80093ac:	f8cd 900c 	str.w	r9, [sp, #12]
 80093b0:	2230      	movs	r2, #48	; 0x30
 80093b2:	9b03      	ldr	r3, [sp, #12]
 80093b4:	454b      	cmp	r3, r9
 80093b6:	d307      	bcc.n	80093c8 <__cvt+0xbc>
 80093b8:	9b03      	ldr	r3, [sp, #12]
 80093ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80093bc:	1bdb      	subs	r3, r3, r7
 80093be:	4638      	mov	r0, r7
 80093c0:	6013      	str	r3, [r2, #0]
 80093c2:	b004      	add	sp, #16
 80093c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093c8:	1c59      	adds	r1, r3, #1
 80093ca:	9103      	str	r1, [sp, #12]
 80093cc:	701a      	strb	r2, [r3, #0]
 80093ce:	e7f0      	b.n	80093b2 <__cvt+0xa6>

080093d0 <__exponent>:
 80093d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80093d2:	4603      	mov	r3, r0
 80093d4:	2900      	cmp	r1, #0
 80093d6:	bfb8      	it	lt
 80093d8:	4249      	neglt	r1, r1
 80093da:	f803 2b02 	strb.w	r2, [r3], #2
 80093de:	bfb4      	ite	lt
 80093e0:	222d      	movlt	r2, #45	; 0x2d
 80093e2:	222b      	movge	r2, #43	; 0x2b
 80093e4:	2909      	cmp	r1, #9
 80093e6:	7042      	strb	r2, [r0, #1]
 80093e8:	dd2a      	ble.n	8009440 <__exponent+0x70>
 80093ea:	f10d 0407 	add.w	r4, sp, #7
 80093ee:	46a4      	mov	ip, r4
 80093f0:	270a      	movs	r7, #10
 80093f2:	46a6      	mov	lr, r4
 80093f4:	460a      	mov	r2, r1
 80093f6:	fb91 f6f7 	sdiv	r6, r1, r7
 80093fa:	fb07 1516 	mls	r5, r7, r6, r1
 80093fe:	3530      	adds	r5, #48	; 0x30
 8009400:	2a63      	cmp	r2, #99	; 0x63
 8009402:	f104 34ff 	add.w	r4, r4, #4294967295
 8009406:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800940a:	4631      	mov	r1, r6
 800940c:	dcf1      	bgt.n	80093f2 <__exponent+0x22>
 800940e:	3130      	adds	r1, #48	; 0x30
 8009410:	f1ae 0502 	sub.w	r5, lr, #2
 8009414:	f804 1c01 	strb.w	r1, [r4, #-1]
 8009418:	1c44      	adds	r4, r0, #1
 800941a:	4629      	mov	r1, r5
 800941c:	4561      	cmp	r1, ip
 800941e:	d30a      	bcc.n	8009436 <__exponent+0x66>
 8009420:	f10d 0209 	add.w	r2, sp, #9
 8009424:	eba2 020e 	sub.w	r2, r2, lr
 8009428:	4565      	cmp	r5, ip
 800942a:	bf88      	it	hi
 800942c:	2200      	movhi	r2, #0
 800942e:	4413      	add	r3, r2
 8009430:	1a18      	subs	r0, r3, r0
 8009432:	b003      	add	sp, #12
 8009434:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009436:	f811 2b01 	ldrb.w	r2, [r1], #1
 800943a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800943e:	e7ed      	b.n	800941c <__exponent+0x4c>
 8009440:	2330      	movs	r3, #48	; 0x30
 8009442:	3130      	adds	r1, #48	; 0x30
 8009444:	7083      	strb	r3, [r0, #2]
 8009446:	70c1      	strb	r1, [r0, #3]
 8009448:	1d03      	adds	r3, r0, #4
 800944a:	e7f1      	b.n	8009430 <__exponent+0x60>

0800944c <_printf_float>:
 800944c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009450:	ed2d 8b02 	vpush	{d8}
 8009454:	b08d      	sub	sp, #52	; 0x34
 8009456:	460c      	mov	r4, r1
 8009458:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800945c:	4616      	mov	r6, r2
 800945e:	461f      	mov	r7, r3
 8009460:	4605      	mov	r5, r0
 8009462:	f004 f8f5 	bl	800d650 <_localeconv_r>
 8009466:	f8d0 a000 	ldr.w	sl, [r0]
 800946a:	4650      	mov	r0, sl
 800946c:	f7f6 fec2 	bl	80001f4 <strlen>
 8009470:	2300      	movs	r3, #0
 8009472:	930a      	str	r3, [sp, #40]	; 0x28
 8009474:	6823      	ldr	r3, [r4, #0]
 8009476:	9305      	str	r3, [sp, #20]
 8009478:	f8d8 3000 	ldr.w	r3, [r8]
 800947c:	f894 b018 	ldrb.w	fp, [r4, #24]
 8009480:	3307      	adds	r3, #7
 8009482:	f023 0307 	bic.w	r3, r3, #7
 8009486:	f103 0208 	add.w	r2, r3, #8
 800948a:	f8c8 2000 	str.w	r2, [r8]
 800948e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009492:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8009496:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800949a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800949e:	9307      	str	r3, [sp, #28]
 80094a0:	f8cd 8018 	str.w	r8, [sp, #24]
 80094a4:	ee08 0a10 	vmov	s16, r0
 80094a8:	4b9f      	ldr	r3, [pc, #636]	; (8009728 <_printf_float+0x2dc>)
 80094aa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80094ae:	f04f 32ff 	mov.w	r2, #4294967295
 80094b2:	f7f7 fb53 	bl	8000b5c <__aeabi_dcmpun>
 80094b6:	bb88      	cbnz	r0, 800951c <_printf_float+0xd0>
 80094b8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80094bc:	4b9a      	ldr	r3, [pc, #616]	; (8009728 <_printf_float+0x2dc>)
 80094be:	f04f 32ff 	mov.w	r2, #4294967295
 80094c2:	f7f7 fb2d 	bl	8000b20 <__aeabi_dcmple>
 80094c6:	bb48      	cbnz	r0, 800951c <_printf_float+0xd0>
 80094c8:	2200      	movs	r2, #0
 80094ca:	2300      	movs	r3, #0
 80094cc:	4640      	mov	r0, r8
 80094ce:	4649      	mov	r1, r9
 80094d0:	f7f7 fb1c 	bl	8000b0c <__aeabi_dcmplt>
 80094d4:	b110      	cbz	r0, 80094dc <_printf_float+0x90>
 80094d6:	232d      	movs	r3, #45	; 0x2d
 80094d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80094dc:	4b93      	ldr	r3, [pc, #588]	; (800972c <_printf_float+0x2e0>)
 80094de:	4894      	ldr	r0, [pc, #592]	; (8009730 <_printf_float+0x2e4>)
 80094e0:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80094e4:	bf94      	ite	ls
 80094e6:	4698      	movls	r8, r3
 80094e8:	4680      	movhi	r8, r0
 80094ea:	2303      	movs	r3, #3
 80094ec:	6123      	str	r3, [r4, #16]
 80094ee:	9b05      	ldr	r3, [sp, #20]
 80094f0:	f023 0204 	bic.w	r2, r3, #4
 80094f4:	6022      	str	r2, [r4, #0]
 80094f6:	f04f 0900 	mov.w	r9, #0
 80094fa:	9700      	str	r7, [sp, #0]
 80094fc:	4633      	mov	r3, r6
 80094fe:	aa0b      	add	r2, sp, #44	; 0x2c
 8009500:	4621      	mov	r1, r4
 8009502:	4628      	mov	r0, r5
 8009504:	f000 f9d8 	bl	80098b8 <_printf_common>
 8009508:	3001      	adds	r0, #1
 800950a:	f040 8090 	bne.w	800962e <_printf_float+0x1e2>
 800950e:	f04f 30ff 	mov.w	r0, #4294967295
 8009512:	b00d      	add	sp, #52	; 0x34
 8009514:	ecbd 8b02 	vpop	{d8}
 8009518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800951c:	4642      	mov	r2, r8
 800951e:	464b      	mov	r3, r9
 8009520:	4640      	mov	r0, r8
 8009522:	4649      	mov	r1, r9
 8009524:	f7f7 fb1a 	bl	8000b5c <__aeabi_dcmpun>
 8009528:	b140      	cbz	r0, 800953c <_printf_float+0xf0>
 800952a:	464b      	mov	r3, r9
 800952c:	2b00      	cmp	r3, #0
 800952e:	bfbc      	itt	lt
 8009530:	232d      	movlt	r3, #45	; 0x2d
 8009532:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8009536:	487f      	ldr	r0, [pc, #508]	; (8009734 <_printf_float+0x2e8>)
 8009538:	4b7f      	ldr	r3, [pc, #508]	; (8009738 <_printf_float+0x2ec>)
 800953a:	e7d1      	b.n	80094e0 <_printf_float+0x94>
 800953c:	6863      	ldr	r3, [r4, #4]
 800953e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8009542:	9206      	str	r2, [sp, #24]
 8009544:	1c5a      	adds	r2, r3, #1
 8009546:	d13f      	bne.n	80095c8 <_printf_float+0x17c>
 8009548:	2306      	movs	r3, #6
 800954a:	6063      	str	r3, [r4, #4]
 800954c:	9b05      	ldr	r3, [sp, #20]
 800954e:	6861      	ldr	r1, [r4, #4]
 8009550:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8009554:	2300      	movs	r3, #0
 8009556:	9303      	str	r3, [sp, #12]
 8009558:	ab0a      	add	r3, sp, #40	; 0x28
 800955a:	e9cd b301 	strd	fp, r3, [sp, #4]
 800955e:	ab09      	add	r3, sp, #36	; 0x24
 8009560:	ec49 8b10 	vmov	d0, r8, r9
 8009564:	9300      	str	r3, [sp, #0]
 8009566:	6022      	str	r2, [r4, #0]
 8009568:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800956c:	4628      	mov	r0, r5
 800956e:	f7ff fecd 	bl	800930c <__cvt>
 8009572:	9b06      	ldr	r3, [sp, #24]
 8009574:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009576:	2b47      	cmp	r3, #71	; 0x47
 8009578:	4680      	mov	r8, r0
 800957a:	d108      	bne.n	800958e <_printf_float+0x142>
 800957c:	1cc8      	adds	r0, r1, #3
 800957e:	db02      	blt.n	8009586 <_printf_float+0x13a>
 8009580:	6863      	ldr	r3, [r4, #4]
 8009582:	4299      	cmp	r1, r3
 8009584:	dd41      	ble.n	800960a <_printf_float+0x1be>
 8009586:	f1ab 0b02 	sub.w	fp, fp, #2
 800958a:	fa5f fb8b 	uxtb.w	fp, fp
 800958e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8009592:	d820      	bhi.n	80095d6 <_printf_float+0x18a>
 8009594:	3901      	subs	r1, #1
 8009596:	465a      	mov	r2, fp
 8009598:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800959c:	9109      	str	r1, [sp, #36]	; 0x24
 800959e:	f7ff ff17 	bl	80093d0 <__exponent>
 80095a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80095a4:	1813      	adds	r3, r2, r0
 80095a6:	2a01      	cmp	r2, #1
 80095a8:	4681      	mov	r9, r0
 80095aa:	6123      	str	r3, [r4, #16]
 80095ac:	dc02      	bgt.n	80095b4 <_printf_float+0x168>
 80095ae:	6822      	ldr	r2, [r4, #0]
 80095b0:	07d2      	lsls	r2, r2, #31
 80095b2:	d501      	bpl.n	80095b8 <_printf_float+0x16c>
 80095b4:	3301      	adds	r3, #1
 80095b6:	6123      	str	r3, [r4, #16]
 80095b8:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80095bc:	2b00      	cmp	r3, #0
 80095be:	d09c      	beq.n	80094fa <_printf_float+0xae>
 80095c0:	232d      	movs	r3, #45	; 0x2d
 80095c2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80095c6:	e798      	b.n	80094fa <_printf_float+0xae>
 80095c8:	9a06      	ldr	r2, [sp, #24]
 80095ca:	2a47      	cmp	r2, #71	; 0x47
 80095cc:	d1be      	bne.n	800954c <_printf_float+0x100>
 80095ce:	2b00      	cmp	r3, #0
 80095d0:	d1bc      	bne.n	800954c <_printf_float+0x100>
 80095d2:	2301      	movs	r3, #1
 80095d4:	e7b9      	b.n	800954a <_printf_float+0xfe>
 80095d6:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80095da:	d118      	bne.n	800960e <_printf_float+0x1c2>
 80095dc:	2900      	cmp	r1, #0
 80095de:	6863      	ldr	r3, [r4, #4]
 80095e0:	dd0b      	ble.n	80095fa <_printf_float+0x1ae>
 80095e2:	6121      	str	r1, [r4, #16]
 80095e4:	b913      	cbnz	r3, 80095ec <_printf_float+0x1a0>
 80095e6:	6822      	ldr	r2, [r4, #0]
 80095e8:	07d0      	lsls	r0, r2, #31
 80095ea:	d502      	bpl.n	80095f2 <_printf_float+0x1a6>
 80095ec:	3301      	adds	r3, #1
 80095ee:	440b      	add	r3, r1
 80095f0:	6123      	str	r3, [r4, #16]
 80095f2:	65a1      	str	r1, [r4, #88]	; 0x58
 80095f4:	f04f 0900 	mov.w	r9, #0
 80095f8:	e7de      	b.n	80095b8 <_printf_float+0x16c>
 80095fa:	b913      	cbnz	r3, 8009602 <_printf_float+0x1b6>
 80095fc:	6822      	ldr	r2, [r4, #0]
 80095fe:	07d2      	lsls	r2, r2, #31
 8009600:	d501      	bpl.n	8009606 <_printf_float+0x1ba>
 8009602:	3302      	adds	r3, #2
 8009604:	e7f4      	b.n	80095f0 <_printf_float+0x1a4>
 8009606:	2301      	movs	r3, #1
 8009608:	e7f2      	b.n	80095f0 <_printf_float+0x1a4>
 800960a:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800960e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009610:	4299      	cmp	r1, r3
 8009612:	db05      	blt.n	8009620 <_printf_float+0x1d4>
 8009614:	6823      	ldr	r3, [r4, #0]
 8009616:	6121      	str	r1, [r4, #16]
 8009618:	07d8      	lsls	r0, r3, #31
 800961a:	d5ea      	bpl.n	80095f2 <_printf_float+0x1a6>
 800961c:	1c4b      	adds	r3, r1, #1
 800961e:	e7e7      	b.n	80095f0 <_printf_float+0x1a4>
 8009620:	2900      	cmp	r1, #0
 8009622:	bfd4      	ite	le
 8009624:	f1c1 0202 	rsble	r2, r1, #2
 8009628:	2201      	movgt	r2, #1
 800962a:	4413      	add	r3, r2
 800962c:	e7e0      	b.n	80095f0 <_printf_float+0x1a4>
 800962e:	6823      	ldr	r3, [r4, #0]
 8009630:	055a      	lsls	r2, r3, #21
 8009632:	d407      	bmi.n	8009644 <_printf_float+0x1f8>
 8009634:	6923      	ldr	r3, [r4, #16]
 8009636:	4642      	mov	r2, r8
 8009638:	4631      	mov	r1, r6
 800963a:	4628      	mov	r0, r5
 800963c:	47b8      	blx	r7
 800963e:	3001      	adds	r0, #1
 8009640:	d12c      	bne.n	800969c <_printf_float+0x250>
 8009642:	e764      	b.n	800950e <_printf_float+0xc2>
 8009644:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8009648:	f240 80e0 	bls.w	800980c <_printf_float+0x3c0>
 800964c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8009650:	2200      	movs	r2, #0
 8009652:	2300      	movs	r3, #0
 8009654:	f7f7 fa50 	bl	8000af8 <__aeabi_dcmpeq>
 8009658:	2800      	cmp	r0, #0
 800965a:	d034      	beq.n	80096c6 <_printf_float+0x27a>
 800965c:	4a37      	ldr	r2, [pc, #220]	; (800973c <_printf_float+0x2f0>)
 800965e:	2301      	movs	r3, #1
 8009660:	4631      	mov	r1, r6
 8009662:	4628      	mov	r0, r5
 8009664:	47b8      	blx	r7
 8009666:	3001      	adds	r0, #1
 8009668:	f43f af51 	beq.w	800950e <_printf_float+0xc2>
 800966c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009670:	429a      	cmp	r2, r3
 8009672:	db02      	blt.n	800967a <_printf_float+0x22e>
 8009674:	6823      	ldr	r3, [r4, #0]
 8009676:	07d8      	lsls	r0, r3, #31
 8009678:	d510      	bpl.n	800969c <_printf_float+0x250>
 800967a:	ee18 3a10 	vmov	r3, s16
 800967e:	4652      	mov	r2, sl
 8009680:	4631      	mov	r1, r6
 8009682:	4628      	mov	r0, r5
 8009684:	47b8      	blx	r7
 8009686:	3001      	adds	r0, #1
 8009688:	f43f af41 	beq.w	800950e <_printf_float+0xc2>
 800968c:	f04f 0800 	mov.w	r8, #0
 8009690:	f104 091a 	add.w	r9, r4, #26
 8009694:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009696:	3b01      	subs	r3, #1
 8009698:	4543      	cmp	r3, r8
 800969a:	dc09      	bgt.n	80096b0 <_printf_float+0x264>
 800969c:	6823      	ldr	r3, [r4, #0]
 800969e:	079b      	lsls	r3, r3, #30
 80096a0:	f100 8105 	bmi.w	80098ae <_printf_float+0x462>
 80096a4:	68e0      	ldr	r0, [r4, #12]
 80096a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80096a8:	4298      	cmp	r0, r3
 80096aa:	bfb8      	it	lt
 80096ac:	4618      	movlt	r0, r3
 80096ae:	e730      	b.n	8009512 <_printf_float+0xc6>
 80096b0:	2301      	movs	r3, #1
 80096b2:	464a      	mov	r2, r9
 80096b4:	4631      	mov	r1, r6
 80096b6:	4628      	mov	r0, r5
 80096b8:	47b8      	blx	r7
 80096ba:	3001      	adds	r0, #1
 80096bc:	f43f af27 	beq.w	800950e <_printf_float+0xc2>
 80096c0:	f108 0801 	add.w	r8, r8, #1
 80096c4:	e7e6      	b.n	8009694 <_printf_float+0x248>
 80096c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80096c8:	2b00      	cmp	r3, #0
 80096ca:	dc39      	bgt.n	8009740 <_printf_float+0x2f4>
 80096cc:	4a1b      	ldr	r2, [pc, #108]	; (800973c <_printf_float+0x2f0>)
 80096ce:	2301      	movs	r3, #1
 80096d0:	4631      	mov	r1, r6
 80096d2:	4628      	mov	r0, r5
 80096d4:	47b8      	blx	r7
 80096d6:	3001      	adds	r0, #1
 80096d8:	f43f af19 	beq.w	800950e <_printf_float+0xc2>
 80096dc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80096e0:	4313      	orrs	r3, r2
 80096e2:	d102      	bne.n	80096ea <_printf_float+0x29e>
 80096e4:	6823      	ldr	r3, [r4, #0]
 80096e6:	07d9      	lsls	r1, r3, #31
 80096e8:	d5d8      	bpl.n	800969c <_printf_float+0x250>
 80096ea:	ee18 3a10 	vmov	r3, s16
 80096ee:	4652      	mov	r2, sl
 80096f0:	4631      	mov	r1, r6
 80096f2:	4628      	mov	r0, r5
 80096f4:	47b8      	blx	r7
 80096f6:	3001      	adds	r0, #1
 80096f8:	f43f af09 	beq.w	800950e <_printf_float+0xc2>
 80096fc:	f04f 0900 	mov.w	r9, #0
 8009700:	f104 0a1a 	add.w	sl, r4, #26
 8009704:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009706:	425b      	negs	r3, r3
 8009708:	454b      	cmp	r3, r9
 800970a:	dc01      	bgt.n	8009710 <_printf_float+0x2c4>
 800970c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800970e:	e792      	b.n	8009636 <_printf_float+0x1ea>
 8009710:	2301      	movs	r3, #1
 8009712:	4652      	mov	r2, sl
 8009714:	4631      	mov	r1, r6
 8009716:	4628      	mov	r0, r5
 8009718:	47b8      	blx	r7
 800971a:	3001      	adds	r0, #1
 800971c:	f43f aef7 	beq.w	800950e <_printf_float+0xc2>
 8009720:	f109 0901 	add.w	r9, r9, #1
 8009724:	e7ee      	b.n	8009704 <_printf_float+0x2b8>
 8009726:	bf00      	nop
 8009728:	7fefffff 	.word	0x7fefffff
 800972c:	0800fd20 	.word	0x0800fd20
 8009730:	0800fd24 	.word	0x0800fd24
 8009734:	0800fd2c 	.word	0x0800fd2c
 8009738:	0800fd28 	.word	0x0800fd28
 800973c:	08010401 	.word	0x08010401
 8009740:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009742:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8009744:	429a      	cmp	r2, r3
 8009746:	bfa8      	it	ge
 8009748:	461a      	movge	r2, r3
 800974a:	2a00      	cmp	r2, #0
 800974c:	4691      	mov	r9, r2
 800974e:	dc37      	bgt.n	80097c0 <_printf_float+0x374>
 8009750:	f04f 0b00 	mov.w	fp, #0
 8009754:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009758:	f104 021a 	add.w	r2, r4, #26
 800975c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800975e:	9305      	str	r3, [sp, #20]
 8009760:	eba3 0309 	sub.w	r3, r3, r9
 8009764:	455b      	cmp	r3, fp
 8009766:	dc33      	bgt.n	80097d0 <_printf_float+0x384>
 8009768:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800976c:	429a      	cmp	r2, r3
 800976e:	db3b      	blt.n	80097e8 <_printf_float+0x39c>
 8009770:	6823      	ldr	r3, [r4, #0]
 8009772:	07da      	lsls	r2, r3, #31
 8009774:	d438      	bmi.n	80097e8 <_printf_float+0x39c>
 8009776:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009778:	9a05      	ldr	r2, [sp, #20]
 800977a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800977c:	1a9a      	subs	r2, r3, r2
 800977e:	eba3 0901 	sub.w	r9, r3, r1
 8009782:	4591      	cmp	r9, r2
 8009784:	bfa8      	it	ge
 8009786:	4691      	movge	r9, r2
 8009788:	f1b9 0f00 	cmp.w	r9, #0
 800978c:	dc35      	bgt.n	80097fa <_printf_float+0x3ae>
 800978e:	f04f 0800 	mov.w	r8, #0
 8009792:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009796:	f104 0a1a 	add.w	sl, r4, #26
 800979a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800979e:	1a9b      	subs	r3, r3, r2
 80097a0:	eba3 0309 	sub.w	r3, r3, r9
 80097a4:	4543      	cmp	r3, r8
 80097a6:	f77f af79 	ble.w	800969c <_printf_float+0x250>
 80097aa:	2301      	movs	r3, #1
 80097ac:	4652      	mov	r2, sl
 80097ae:	4631      	mov	r1, r6
 80097b0:	4628      	mov	r0, r5
 80097b2:	47b8      	blx	r7
 80097b4:	3001      	adds	r0, #1
 80097b6:	f43f aeaa 	beq.w	800950e <_printf_float+0xc2>
 80097ba:	f108 0801 	add.w	r8, r8, #1
 80097be:	e7ec      	b.n	800979a <_printf_float+0x34e>
 80097c0:	4613      	mov	r3, r2
 80097c2:	4631      	mov	r1, r6
 80097c4:	4642      	mov	r2, r8
 80097c6:	4628      	mov	r0, r5
 80097c8:	47b8      	blx	r7
 80097ca:	3001      	adds	r0, #1
 80097cc:	d1c0      	bne.n	8009750 <_printf_float+0x304>
 80097ce:	e69e      	b.n	800950e <_printf_float+0xc2>
 80097d0:	2301      	movs	r3, #1
 80097d2:	4631      	mov	r1, r6
 80097d4:	4628      	mov	r0, r5
 80097d6:	9205      	str	r2, [sp, #20]
 80097d8:	47b8      	blx	r7
 80097da:	3001      	adds	r0, #1
 80097dc:	f43f ae97 	beq.w	800950e <_printf_float+0xc2>
 80097e0:	9a05      	ldr	r2, [sp, #20]
 80097e2:	f10b 0b01 	add.w	fp, fp, #1
 80097e6:	e7b9      	b.n	800975c <_printf_float+0x310>
 80097e8:	ee18 3a10 	vmov	r3, s16
 80097ec:	4652      	mov	r2, sl
 80097ee:	4631      	mov	r1, r6
 80097f0:	4628      	mov	r0, r5
 80097f2:	47b8      	blx	r7
 80097f4:	3001      	adds	r0, #1
 80097f6:	d1be      	bne.n	8009776 <_printf_float+0x32a>
 80097f8:	e689      	b.n	800950e <_printf_float+0xc2>
 80097fa:	9a05      	ldr	r2, [sp, #20]
 80097fc:	464b      	mov	r3, r9
 80097fe:	4442      	add	r2, r8
 8009800:	4631      	mov	r1, r6
 8009802:	4628      	mov	r0, r5
 8009804:	47b8      	blx	r7
 8009806:	3001      	adds	r0, #1
 8009808:	d1c1      	bne.n	800978e <_printf_float+0x342>
 800980a:	e680      	b.n	800950e <_printf_float+0xc2>
 800980c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800980e:	2a01      	cmp	r2, #1
 8009810:	dc01      	bgt.n	8009816 <_printf_float+0x3ca>
 8009812:	07db      	lsls	r3, r3, #31
 8009814:	d538      	bpl.n	8009888 <_printf_float+0x43c>
 8009816:	2301      	movs	r3, #1
 8009818:	4642      	mov	r2, r8
 800981a:	4631      	mov	r1, r6
 800981c:	4628      	mov	r0, r5
 800981e:	47b8      	blx	r7
 8009820:	3001      	adds	r0, #1
 8009822:	f43f ae74 	beq.w	800950e <_printf_float+0xc2>
 8009826:	ee18 3a10 	vmov	r3, s16
 800982a:	4652      	mov	r2, sl
 800982c:	4631      	mov	r1, r6
 800982e:	4628      	mov	r0, r5
 8009830:	47b8      	blx	r7
 8009832:	3001      	adds	r0, #1
 8009834:	f43f ae6b 	beq.w	800950e <_printf_float+0xc2>
 8009838:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800983c:	2200      	movs	r2, #0
 800983e:	2300      	movs	r3, #0
 8009840:	f7f7 f95a 	bl	8000af8 <__aeabi_dcmpeq>
 8009844:	b9d8      	cbnz	r0, 800987e <_printf_float+0x432>
 8009846:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009848:	f108 0201 	add.w	r2, r8, #1
 800984c:	3b01      	subs	r3, #1
 800984e:	4631      	mov	r1, r6
 8009850:	4628      	mov	r0, r5
 8009852:	47b8      	blx	r7
 8009854:	3001      	adds	r0, #1
 8009856:	d10e      	bne.n	8009876 <_printf_float+0x42a>
 8009858:	e659      	b.n	800950e <_printf_float+0xc2>
 800985a:	2301      	movs	r3, #1
 800985c:	4652      	mov	r2, sl
 800985e:	4631      	mov	r1, r6
 8009860:	4628      	mov	r0, r5
 8009862:	47b8      	blx	r7
 8009864:	3001      	adds	r0, #1
 8009866:	f43f ae52 	beq.w	800950e <_printf_float+0xc2>
 800986a:	f108 0801 	add.w	r8, r8, #1
 800986e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009870:	3b01      	subs	r3, #1
 8009872:	4543      	cmp	r3, r8
 8009874:	dcf1      	bgt.n	800985a <_printf_float+0x40e>
 8009876:	464b      	mov	r3, r9
 8009878:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800987c:	e6dc      	b.n	8009638 <_printf_float+0x1ec>
 800987e:	f04f 0800 	mov.w	r8, #0
 8009882:	f104 0a1a 	add.w	sl, r4, #26
 8009886:	e7f2      	b.n	800986e <_printf_float+0x422>
 8009888:	2301      	movs	r3, #1
 800988a:	4642      	mov	r2, r8
 800988c:	e7df      	b.n	800984e <_printf_float+0x402>
 800988e:	2301      	movs	r3, #1
 8009890:	464a      	mov	r2, r9
 8009892:	4631      	mov	r1, r6
 8009894:	4628      	mov	r0, r5
 8009896:	47b8      	blx	r7
 8009898:	3001      	adds	r0, #1
 800989a:	f43f ae38 	beq.w	800950e <_printf_float+0xc2>
 800989e:	f108 0801 	add.w	r8, r8, #1
 80098a2:	68e3      	ldr	r3, [r4, #12]
 80098a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80098a6:	1a5b      	subs	r3, r3, r1
 80098a8:	4543      	cmp	r3, r8
 80098aa:	dcf0      	bgt.n	800988e <_printf_float+0x442>
 80098ac:	e6fa      	b.n	80096a4 <_printf_float+0x258>
 80098ae:	f04f 0800 	mov.w	r8, #0
 80098b2:	f104 0919 	add.w	r9, r4, #25
 80098b6:	e7f4      	b.n	80098a2 <_printf_float+0x456>

080098b8 <_printf_common>:
 80098b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098bc:	4616      	mov	r6, r2
 80098be:	4699      	mov	r9, r3
 80098c0:	688a      	ldr	r2, [r1, #8]
 80098c2:	690b      	ldr	r3, [r1, #16]
 80098c4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80098c8:	4293      	cmp	r3, r2
 80098ca:	bfb8      	it	lt
 80098cc:	4613      	movlt	r3, r2
 80098ce:	6033      	str	r3, [r6, #0]
 80098d0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80098d4:	4607      	mov	r7, r0
 80098d6:	460c      	mov	r4, r1
 80098d8:	b10a      	cbz	r2, 80098de <_printf_common+0x26>
 80098da:	3301      	adds	r3, #1
 80098dc:	6033      	str	r3, [r6, #0]
 80098de:	6823      	ldr	r3, [r4, #0]
 80098e0:	0699      	lsls	r1, r3, #26
 80098e2:	bf42      	ittt	mi
 80098e4:	6833      	ldrmi	r3, [r6, #0]
 80098e6:	3302      	addmi	r3, #2
 80098e8:	6033      	strmi	r3, [r6, #0]
 80098ea:	6825      	ldr	r5, [r4, #0]
 80098ec:	f015 0506 	ands.w	r5, r5, #6
 80098f0:	d106      	bne.n	8009900 <_printf_common+0x48>
 80098f2:	f104 0a19 	add.w	sl, r4, #25
 80098f6:	68e3      	ldr	r3, [r4, #12]
 80098f8:	6832      	ldr	r2, [r6, #0]
 80098fa:	1a9b      	subs	r3, r3, r2
 80098fc:	42ab      	cmp	r3, r5
 80098fe:	dc26      	bgt.n	800994e <_printf_common+0x96>
 8009900:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8009904:	1e13      	subs	r3, r2, #0
 8009906:	6822      	ldr	r2, [r4, #0]
 8009908:	bf18      	it	ne
 800990a:	2301      	movne	r3, #1
 800990c:	0692      	lsls	r2, r2, #26
 800990e:	d42b      	bmi.n	8009968 <_printf_common+0xb0>
 8009910:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8009914:	4649      	mov	r1, r9
 8009916:	4638      	mov	r0, r7
 8009918:	47c0      	blx	r8
 800991a:	3001      	adds	r0, #1
 800991c:	d01e      	beq.n	800995c <_printf_common+0xa4>
 800991e:	6823      	ldr	r3, [r4, #0]
 8009920:	68e5      	ldr	r5, [r4, #12]
 8009922:	6832      	ldr	r2, [r6, #0]
 8009924:	f003 0306 	and.w	r3, r3, #6
 8009928:	2b04      	cmp	r3, #4
 800992a:	bf08      	it	eq
 800992c:	1aad      	subeq	r5, r5, r2
 800992e:	68a3      	ldr	r3, [r4, #8]
 8009930:	6922      	ldr	r2, [r4, #16]
 8009932:	bf0c      	ite	eq
 8009934:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8009938:	2500      	movne	r5, #0
 800993a:	4293      	cmp	r3, r2
 800993c:	bfc4      	itt	gt
 800993e:	1a9b      	subgt	r3, r3, r2
 8009940:	18ed      	addgt	r5, r5, r3
 8009942:	2600      	movs	r6, #0
 8009944:	341a      	adds	r4, #26
 8009946:	42b5      	cmp	r5, r6
 8009948:	d11a      	bne.n	8009980 <_printf_common+0xc8>
 800994a:	2000      	movs	r0, #0
 800994c:	e008      	b.n	8009960 <_printf_common+0xa8>
 800994e:	2301      	movs	r3, #1
 8009950:	4652      	mov	r2, sl
 8009952:	4649      	mov	r1, r9
 8009954:	4638      	mov	r0, r7
 8009956:	47c0      	blx	r8
 8009958:	3001      	adds	r0, #1
 800995a:	d103      	bne.n	8009964 <_printf_common+0xac>
 800995c:	f04f 30ff 	mov.w	r0, #4294967295
 8009960:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009964:	3501      	adds	r5, #1
 8009966:	e7c6      	b.n	80098f6 <_printf_common+0x3e>
 8009968:	18e1      	adds	r1, r4, r3
 800996a:	1c5a      	adds	r2, r3, #1
 800996c:	2030      	movs	r0, #48	; 0x30
 800996e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8009972:	4422      	add	r2, r4
 8009974:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8009978:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800997c:	3302      	adds	r3, #2
 800997e:	e7c7      	b.n	8009910 <_printf_common+0x58>
 8009980:	2301      	movs	r3, #1
 8009982:	4622      	mov	r2, r4
 8009984:	4649      	mov	r1, r9
 8009986:	4638      	mov	r0, r7
 8009988:	47c0      	blx	r8
 800998a:	3001      	adds	r0, #1
 800998c:	d0e6      	beq.n	800995c <_printf_common+0xa4>
 800998e:	3601      	adds	r6, #1
 8009990:	e7d9      	b.n	8009946 <_printf_common+0x8e>
	...

08009994 <_printf_i>:
 8009994:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009998:	7e0f      	ldrb	r7, [r1, #24]
 800999a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800999c:	2f78      	cmp	r7, #120	; 0x78
 800999e:	4691      	mov	r9, r2
 80099a0:	4680      	mov	r8, r0
 80099a2:	460c      	mov	r4, r1
 80099a4:	469a      	mov	sl, r3
 80099a6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80099aa:	d807      	bhi.n	80099bc <_printf_i+0x28>
 80099ac:	2f62      	cmp	r7, #98	; 0x62
 80099ae:	d80a      	bhi.n	80099c6 <_printf_i+0x32>
 80099b0:	2f00      	cmp	r7, #0
 80099b2:	f000 80d8 	beq.w	8009b66 <_printf_i+0x1d2>
 80099b6:	2f58      	cmp	r7, #88	; 0x58
 80099b8:	f000 80a3 	beq.w	8009b02 <_printf_i+0x16e>
 80099bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80099c0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80099c4:	e03a      	b.n	8009a3c <_printf_i+0xa8>
 80099c6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80099ca:	2b15      	cmp	r3, #21
 80099cc:	d8f6      	bhi.n	80099bc <_printf_i+0x28>
 80099ce:	a101      	add	r1, pc, #4	; (adr r1, 80099d4 <_printf_i+0x40>)
 80099d0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80099d4:	08009a2d 	.word	0x08009a2d
 80099d8:	08009a41 	.word	0x08009a41
 80099dc:	080099bd 	.word	0x080099bd
 80099e0:	080099bd 	.word	0x080099bd
 80099e4:	080099bd 	.word	0x080099bd
 80099e8:	080099bd 	.word	0x080099bd
 80099ec:	08009a41 	.word	0x08009a41
 80099f0:	080099bd 	.word	0x080099bd
 80099f4:	080099bd 	.word	0x080099bd
 80099f8:	080099bd 	.word	0x080099bd
 80099fc:	080099bd 	.word	0x080099bd
 8009a00:	08009b4d 	.word	0x08009b4d
 8009a04:	08009a71 	.word	0x08009a71
 8009a08:	08009b2f 	.word	0x08009b2f
 8009a0c:	080099bd 	.word	0x080099bd
 8009a10:	080099bd 	.word	0x080099bd
 8009a14:	08009b6f 	.word	0x08009b6f
 8009a18:	080099bd 	.word	0x080099bd
 8009a1c:	08009a71 	.word	0x08009a71
 8009a20:	080099bd 	.word	0x080099bd
 8009a24:	080099bd 	.word	0x080099bd
 8009a28:	08009b37 	.word	0x08009b37
 8009a2c:	682b      	ldr	r3, [r5, #0]
 8009a2e:	1d1a      	adds	r2, r3, #4
 8009a30:	681b      	ldr	r3, [r3, #0]
 8009a32:	602a      	str	r2, [r5, #0]
 8009a34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009a38:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009a3c:	2301      	movs	r3, #1
 8009a3e:	e0a3      	b.n	8009b88 <_printf_i+0x1f4>
 8009a40:	6820      	ldr	r0, [r4, #0]
 8009a42:	6829      	ldr	r1, [r5, #0]
 8009a44:	0606      	lsls	r6, r0, #24
 8009a46:	f101 0304 	add.w	r3, r1, #4
 8009a4a:	d50a      	bpl.n	8009a62 <_printf_i+0xce>
 8009a4c:	680e      	ldr	r6, [r1, #0]
 8009a4e:	602b      	str	r3, [r5, #0]
 8009a50:	2e00      	cmp	r6, #0
 8009a52:	da03      	bge.n	8009a5c <_printf_i+0xc8>
 8009a54:	232d      	movs	r3, #45	; 0x2d
 8009a56:	4276      	negs	r6, r6
 8009a58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009a5c:	485e      	ldr	r0, [pc, #376]	; (8009bd8 <_printf_i+0x244>)
 8009a5e:	230a      	movs	r3, #10
 8009a60:	e019      	b.n	8009a96 <_printf_i+0x102>
 8009a62:	680e      	ldr	r6, [r1, #0]
 8009a64:	602b      	str	r3, [r5, #0]
 8009a66:	f010 0f40 	tst.w	r0, #64	; 0x40
 8009a6a:	bf18      	it	ne
 8009a6c:	b236      	sxthne	r6, r6
 8009a6e:	e7ef      	b.n	8009a50 <_printf_i+0xbc>
 8009a70:	682b      	ldr	r3, [r5, #0]
 8009a72:	6820      	ldr	r0, [r4, #0]
 8009a74:	1d19      	adds	r1, r3, #4
 8009a76:	6029      	str	r1, [r5, #0]
 8009a78:	0601      	lsls	r1, r0, #24
 8009a7a:	d501      	bpl.n	8009a80 <_printf_i+0xec>
 8009a7c:	681e      	ldr	r6, [r3, #0]
 8009a7e:	e002      	b.n	8009a86 <_printf_i+0xf2>
 8009a80:	0646      	lsls	r6, r0, #25
 8009a82:	d5fb      	bpl.n	8009a7c <_printf_i+0xe8>
 8009a84:	881e      	ldrh	r6, [r3, #0]
 8009a86:	4854      	ldr	r0, [pc, #336]	; (8009bd8 <_printf_i+0x244>)
 8009a88:	2f6f      	cmp	r7, #111	; 0x6f
 8009a8a:	bf0c      	ite	eq
 8009a8c:	2308      	moveq	r3, #8
 8009a8e:	230a      	movne	r3, #10
 8009a90:	2100      	movs	r1, #0
 8009a92:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8009a96:	6865      	ldr	r5, [r4, #4]
 8009a98:	60a5      	str	r5, [r4, #8]
 8009a9a:	2d00      	cmp	r5, #0
 8009a9c:	bfa2      	ittt	ge
 8009a9e:	6821      	ldrge	r1, [r4, #0]
 8009aa0:	f021 0104 	bicge.w	r1, r1, #4
 8009aa4:	6021      	strge	r1, [r4, #0]
 8009aa6:	b90e      	cbnz	r6, 8009aac <_printf_i+0x118>
 8009aa8:	2d00      	cmp	r5, #0
 8009aaa:	d04d      	beq.n	8009b48 <_printf_i+0x1b4>
 8009aac:	4615      	mov	r5, r2
 8009aae:	fbb6 f1f3 	udiv	r1, r6, r3
 8009ab2:	fb03 6711 	mls	r7, r3, r1, r6
 8009ab6:	5dc7      	ldrb	r7, [r0, r7]
 8009ab8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8009abc:	4637      	mov	r7, r6
 8009abe:	42bb      	cmp	r3, r7
 8009ac0:	460e      	mov	r6, r1
 8009ac2:	d9f4      	bls.n	8009aae <_printf_i+0x11a>
 8009ac4:	2b08      	cmp	r3, #8
 8009ac6:	d10b      	bne.n	8009ae0 <_printf_i+0x14c>
 8009ac8:	6823      	ldr	r3, [r4, #0]
 8009aca:	07de      	lsls	r6, r3, #31
 8009acc:	d508      	bpl.n	8009ae0 <_printf_i+0x14c>
 8009ace:	6923      	ldr	r3, [r4, #16]
 8009ad0:	6861      	ldr	r1, [r4, #4]
 8009ad2:	4299      	cmp	r1, r3
 8009ad4:	bfde      	ittt	le
 8009ad6:	2330      	movle	r3, #48	; 0x30
 8009ad8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8009adc:	f105 35ff 	addle.w	r5, r5, #4294967295
 8009ae0:	1b52      	subs	r2, r2, r5
 8009ae2:	6122      	str	r2, [r4, #16]
 8009ae4:	f8cd a000 	str.w	sl, [sp]
 8009ae8:	464b      	mov	r3, r9
 8009aea:	aa03      	add	r2, sp, #12
 8009aec:	4621      	mov	r1, r4
 8009aee:	4640      	mov	r0, r8
 8009af0:	f7ff fee2 	bl	80098b8 <_printf_common>
 8009af4:	3001      	adds	r0, #1
 8009af6:	d14c      	bne.n	8009b92 <_printf_i+0x1fe>
 8009af8:	f04f 30ff 	mov.w	r0, #4294967295
 8009afc:	b004      	add	sp, #16
 8009afe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b02:	4835      	ldr	r0, [pc, #212]	; (8009bd8 <_printf_i+0x244>)
 8009b04:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8009b08:	6829      	ldr	r1, [r5, #0]
 8009b0a:	6823      	ldr	r3, [r4, #0]
 8009b0c:	f851 6b04 	ldr.w	r6, [r1], #4
 8009b10:	6029      	str	r1, [r5, #0]
 8009b12:	061d      	lsls	r5, r3, #24
 8009b14:	d514      	bpl.n	8009b40 <_printf_i+0x1ac>
 8009b16:	07df      	lsls	r7, r3, #31
 8009b18:	bf44      	itt	mi
 8009b1a:	f043 0320 	orrmi.w	r3, r3, #32
 8009b1e:	6023      	strmi	r3, [r4, #0]
 8009b20:	b91e      	cbnz	r6, 8009b2a <_printf_i+0x196>
 8009b22:	6823      	ldr	r3, [r4, #0]
 8009b24:	f023 0320 	bic.w	r3, r3, #32
 8009b28:	6023      	str	r3, [r4, #0]
 8009b2a:	2310      	movs	r3, #16
 8009b2c:	e7b0      	b.n	8009a90 <_printf_i+0xfc>
 8009b2e:	6823      	ldr	r3, [r4, #0]
 8009b30:	f043 0320 	orr.w	r3, r3, #32
 8009b34:	6023      	str	r3, [r4, #0]
 8009b36:	2378      	movs	r3, #120	; 0x78
 8009b38:	4828      	ldr	r0, [pc, #160]	; (8009bdc <_printf_i+0x248>)
 8009b3a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009b3e:	e7e3      	b.n	8009b08 <_printf_i+0x174>
 8009b40:	0659      	lsls	r1, r3, #25
 8009b42:	bf48      	it	mi
 8009b44:	b2b6      	uxthmi	r6, r6
 8009b46:	e7e6      	b.n	8009b16 <_printf_i+0x182>
 8009b48:	4615      	mov	r5, r2
 8009b4a:	e7bb      	b.n	8009ac4 <_printf_i+0x130>
 8009b4c:	682b      	ldr	r3, [r5, #0]
 8009b4e:	6826      	ldr	r6, [r4, #0]
 8009b50:	6961      	ldr	r1, [r4, #20]
 8009b52:	1d18      	adds	r0, r3, #4
 8009b54:	6028      	str	r0, [r5, #0]
 8009b56:	0635      	lsls	r5, r6, #24
 8009b58:	681b      	ldr	r3, [r3, #0]
 8009b5a:	d501      	bpl.n	8009b60 <_printf_i+0x1cc>
 8009b5c:	6019      	str	r1, [r3, #0]
 8009b5e:	e002      	b.n	8009b66 <_printf_i+0x1d2>
 8009b60:	0670      	lsls	r0, r6, #25
 8009b62:	d5fb      	bpl.n	8009b5c <_printf_i+0x1c8>
 8009b64:	8019      	strh	r1, [r3, #0]
 8009b66:	2300      	movs	r3, #0
 8009b68:	6123      	str	r3, [r4, #16]
 8009b6a:	4615      	mov	r5, r2
 8009b6c:	e7ba      	b.n	8009ae4 <_printf_i+0x150>
 8009b6e:	682b      	ldr	r3, [r5, #0]
 8009b70:	1d1a      	adds	r2, r3, #4
 8009b72:	602a      	str	r2, [r5, #0]
 8009b74:	681d      	ldr	r5, [r3, #0]
 8009b76:	6862      	ldr	r2, [r4, #4]
 8009b78:	2100      	movs	r1, #0
 8009b7a:	4628      	mov	r0, r5
 8009b7c:	f7f6 fb48 	bl	8000210 <memchr>
 8009b80:	b108      	cbz	r0, 8009b86 <_printf_i+0x1f2>
 8009b82:	1b40      	subs	r0, r0, r5
 8009b84:	6060      	str	r0, [r4, #4]
 8009b86:	6863      	ldr	r3, [r4, #4]
 8009b88:	6123      	str	r3, [r4, #16]
 8009b8a:	2300      	movs	r3, #0
 8009b8c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009b90:	e7a8      	b.n	8009ae4 <_printf_i+0x150>
 8009b92:	6923      	ldr	r3, [r4, #16]
 8009b94:	462a      	mov	r2, r5
 8009b96:	4649      	mov	r1, r9
 8009b98:	4640      	mov	r0, r8
 8009b9a:	47d0      	blx	sl
 8009b9c:	3001      	adds	r0, #1
 8009b9e:	d0ab      	beq.n	8009af8 <_printf_i+0x164>
 8009ba0:	6823      	ldr	r3, [r4, #0]
 8009ba2:	079b      	lsls	r3, r3, #30
 8009ba4:	d413      	bmi.n	8009bce <_printf_i+0x23a>
 8009ba6:	68e0      	ldr	r0, [r4, #12]
 8009ba8:	9b03      	ldr	r3, [sp, #12]
 8009baa:	4298      	cmp	r0, r3
 8009bac:	bfb8      	it	lt
 8009bae:	4618      	movlt	r0, r3
 8009bb0:	e7a4      	b.n	8009afc <_printf_i+0x168>
 8009bb2:	2301      	movs	r3, #1
 8009bb4:	4632      	mov	r2, r6
 8009bb6:	4649      	mov	r1, r9
 8009bb8:	4640      	mov	r0, r8
 8009bba:	47d0      	blx	sl
 8009bbc:	3001      	adds	r0, #1
 8009bbe:	d09b      	beq.n	8009af8 <_printf_i+0x164>
 8009bc0:	3501      	adds	r5, #1
 8009bc2:	68e3      	ldr	r3, [r4, #12]
 8009bc4:	9903      	ldr	r1, [sp, #12]
 8009bc6:	1a5b      	subs	r3, r3, r1
 8009bc8:	42ab      	cmp	r3, r5
 8009bca:	dcf2      	bgt.n	8009bb2 <_printf_i+0x21e>
 8009bcc:	e7eb      	b.n	8009ba6 <_printf_i+0x212>
 8009bce:	2500      	movs	r5, #0
 8009bd0:	f104 0619 	add.w	r6, r4, #25
 8009bd4:	e7f5      	b.n	8009bc2 <_printf_i+0x22e>
 8009bd6:	bf00      	nop
 8009bd8:	0800fd30 	.word	0x0800fd30
 8009bdc:	0800fd41 	.word	0x0800fd41

08009be0 <_scanf_float>:
 8009be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009be4:	b087      	sub	sp, #28
 8009be6:	4617      	mov	r7, r2
 8009be8:	9303      	str	r3, [sp, #12]
 8009bea:	688b      	ldr	r3, [r1, #8]
 8009bec:	1e5a      	subs	r2, r3, #1
 8009bee:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8009bf2:	bf83      	ittte	hi
 8009bf4:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8009bf8:	195b      	addhi	r3, r3, r5
 8009bfa:	9302      	strhi	r3, [sp, #8]
 8009bfc:	2300      	movls	r3, #0
 8009bfe:	bf86      	itte	hi
 8009c00:	f240 135d 	movwhi	r3, #349	; 0x15d
 8009c04:	608b      	strhi	r3, [r1, #8]
 8009c06:	9302      	strls	r3, [sp, #8]
 8009c08:	680b      	ldr	r3, [r1, #0]
 8009c0a:	468b      	mov	fp, r1
 8009c0c:	2500      	movs	r5, #0
 8009c0e:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8009c12:	f84b 3b1c 	str.w	r3, [fp], #28
 8009c16:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8009c1a:	4680      	mov	r8, r0
 8009c1c:	460c      	mov	r4, r1
 8009c1e:	465e      	mov	r6, fp
 8009c20:	46aa      	mov	sl, r5
 8009c22:	46a9      	mov	r9, r5
 8009c24:	9501      	str	r5, [sp, #4]
 8009c26:	68a2      	ldr	r2, [r4, #8]
 8009c28:	b152      	cbz	r2, 8009c40 <_scanf_float+0x60>
 8009c2a:	683b      	ldr	r3, [r7, #0]
 8009c2c:	781b      	ldrb	r3, [r3, #0]
 8009c2e:	2b4e      	cmp	r3, #78	; 0x4e
 8009c30:	d864      	bhi.n	8009cfc <_scanf_float+0x11c>
 8009c32:	2b40      	cmp	r3, #64	; 0x40
 8009c34:	d83c      	bhi.n	8009cb0 <_scanf_float+0xd0>
 8009c36:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8009c3a:	b2c8      	uxtb	r0, r1
 8009c3c:	280e      	cmp	r0, #14
 8009c3e:	d93a      	bls.n	8009cb6 <_scanf_float+0xd6>
 8009c40:	f1b9 0f00 	cmp.w	r9, #0
 8009c44:	d003      	beq.n	8009c4e <_scanf_float+0x6e>
 8009c46:	6823      	ldr	r3, [r4, #0]
 8009c48:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009c4c:	6023      	str	r3, [r4, #0]
 8009c4e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009c52:	f1ba 0f01 	cmp.w	sl, #1
 8009c56:	f200 8113 	bhi.w	8009e80 <_scanf_float+0x2a0>
 8009c5a:	455e      	cmp	r6, fp
 8009c5c:	f200 8105 	bhi.w	8009e6a <_scanf_float+0x28a>
 8009c60:	2501      	movs	r5, #1
 8009c62:	4628      	mov	r0, r5
 8009c64:	b007      	add	sp, #28
 8009c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c6a:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8009c6e:	2a0d      	cmp	r2, #13
 8009c70:	d8e6      	bhi.n	8009c40 <_scanf_float+0x60>
 8009c72:	a101      	add	r1, pc, #4	; (adr r1, 8009c78 <_scanf_float+0x98>)
 8009c74:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009c78:	08009db7 	.word	0x08009db7
 8009c7c:	08009c41 	.word	0x08009c41
 8009c80:	08009c41 	.word	0x08009c41
 8009c84:	08009c41 	.word	0x08009c41
 8009c88:	08009e17 	.word	0x08009e17
 8009c8c:	08009def 	.word	0x08009def
 8009c90:	08009c41 	.word	0x08009c41
 8009c94:	08009c41 	.word	0x08009c41
 8009c98:	08009dc5 	.word	0x08009dc5
 8009c9c:	08009c41 	.word	0x08009c41
 8009ca0:	08009c41 	.word	0x08009c41
 8009ca4:	08009c41 	.word	0x08009c41
 8009ca8:	08009c41 	.word	0x08009c41
 8009cac:	08009d7d 	.word	0x08009d7d
 8009cb0:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8009cb4:	e7db      	b.n	8009c6e <_scanf_float+0x8e>
 8009cb6:	290e      	cmp	r1, #14
 8009cb8:	d8c2      	bhi.n	8009c40 <_scanf_float+0x60>
 8009cba:	a001      	add	r0, pc, #4	; (adr r0, 8009cc0 <_scanf_float+0xe0>)
 8009cbc:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8009cc0:	08009d6f 	.word	0x08009d6f
 8009cc4:	08009c41 	.word	0x08009c41
 8009cc8:	08009d6f 	.word	0x08009d6f
 8009ccc:	08009e03 	.word	0x08009e03
 8009cd0:	08009c41 	.word	0x08009c41
 8009cd4:	08009d1d 	.word	0x08009d1d
 8009cd8:	08009d59 	.word	0x08009d59
 8009cdc:	08009d59 	.word	0x08009d59
 8009ce0:	08009d59 	.word	0x08009d59
 8009ce4:	08009d59 	.word	0x08009d59
 8009ce8:	08009d59 	.word	0x08009d59
 8009cec:	08009d59 	.word	0x08009d59
 8009cf0:	08009d59 	.word	0x08009d59
 8009cf4:	08009d59 	.word	0x08009d59
 8009cf8:	08009d59 	.word	0x08009d59
 8009cfc:	2b6e      	cmp	r3, #110	; 0x6e
 8009cfe:	d809      	bhi.n	8009d14 <_scanf_float+0x134>
 8009d00:	2b60      	cmp	r3, #96	; 0x60
 8009d02:	d8b2      	bhi.n	8009c6a <_scanf_float+0x8a>
 8009d04:	2b54      	cmp	r3, #84	; 0x54
 8009d06:	d077      	beq.n	8009df8 <_scanf_float+0x218>
 8009d08:	2b59      	cmp	r3, #89	; 0x59
 8009d0a:	d199      	bne.n	8009c40 <_scanf_float+0x60>
 8009d0c:	2d07      	cmp	r5, #7
 8009d0e:	d197      	bne.n	8009c40 <_scanf_float+0x60>
 8009d10:	2508      	movs	r5, #8
 8009d12:	e029      	b.n	8009d68 <_scanf_float+0x188>
 8009d14:	2b74      	cmp	r3, #116	; 0x74
 8009d16:	d06f      	beq.n	8009df8 <_scanf_float+0x218>
 8009d18:	2b79      	cmp	r3, #121	; 0x79
 8009d1a:	e7f6      	b.n	8009d0a <_scanf_float+0x12a>
 8009d1c:	6821      	ldr	r1, [r4, #0]
 8009d1e:	05c8      	lsls	r0, r1, #23
 8009d20:	d51a      	bpl.n	8009d58 <_scanf_float+0x178>
 8009d22:	9b02      	ldr	r3, [sp, #8]
 8009d24:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8009d28:	6021      	str	r1, [r4, #0]
 8009d2a:	f109 0901 	add.w	r9, r9, #1
 8009d2e:	b11b      	cbz	r3, 8009d38 <_scanf_float+0x158>
 8009d30:	3b01      	subs	r3, #1
 8009d32:	3201      	adds	r2, #1
 8009d34:	9302      	str	r3, [sp, #8]
 8009d36:	60a2      	str	r2, [r4, #8]
 8009d38:	68a3      	ldr	r3, [r4, #8]
 8009d3a:	3b01      	subs	r3, #1
 8009d3c:	60a3      	str	r3, [r4, #8]
 8009d3e:	6923      	ldr	r3, [r4, #16]
 8009d40:	3301      	adds	r3, #1
 8009d42:	6123      	str	r3, [r4, #16]
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	3b01      	subs	r3, #1
 8009d48:	2b00      	cmp	r3, #0
 8009d4a:	607b      	str	r3, [r7, #4]
 8009d4c:	f340 8084 	ble.w	8009e58 <_scanf_float+0x278>
 8009d50:	683b      	ldr	r3, [r7, #0]
 8009d52:	3301      	adds	r3, #1
 8009d54:	603b      	str	r3, [r7, #0]
 8009d56:	e766      	b.n	8009c26 <_scanf_float+0x46>
 8009d58:	eb1a 0f05 	cmn.w	sl, r5
 8009d5c:	f47f af70 	bne.w	8009c40 <_scanf_float+0x60>
 8009d60:	6822      	ldr	r2, [r4, #0]
 8009d62:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8009d66:	6022      	str	r2, [r4, #0]
 8009d68:	f806 3b01 	strb.w	r3, [r6], #1
 8009d6c:	e7e4      	b.n	8009d38 <_scanf_float+0x158>
 8009d6e:	6822      	ldr	r2, [r4, #0]
 8009d70:	0610      	lsls	r0, r2, #24
 8009d72:	f57f af65 	bpl.w	8009c40 <_scanf_float+0x60>
 8009d76:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009d7a:	e7f4      	b.n	8009d66 <_scanf_float+0x186>
 8009d7c:	f1ba 0f00 	cmp.w	sl, #0
 8009d80:	d10e      	bne.n	8009da0 <_scanf_float+0x1c0>
 8009d82:	f1b9 0f00 	cmp.w	r9, #0
 8009d86:	d10e      	bne.n	8009da6 <_scanf_float+0x1c6>
 8009d88:	6822      	ldr	r2, [r4, #0]
 8009d8a:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8009d8e:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8009d92:	d108      	bne.n	8009da6 <_scanf_float+0x1c6>
 8009d94:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009d98:	6022      	str	r2, [r4, #0]
 8009d9a:	f04f 0a01 	mov.w	sl, #1
 8009d9e:	e7e3      	b.n	8009d68 <_scanf_float+0x188>
 8009da0:	f1ba 0f02 	cmp.w	sl, #2
 8009da4:	d055      	beq.n	8009e52 <_scanf_float+0x272>
 8009da6:	2d01      	cmp	r5, #1
 8009da8:	d002      	beq.n	8009db0 <_scanf_float+0x1d0>
 8009daa:	2d04      	cmp	r5, #4
 8009dac:	f47f af48 	bne.w	8009c40 <_scanf_float+0x60>
 8009db0:	3501      	adds	r5, #1
 8009db2:	b2ed      	uxtb	r5, r5
 8009db4:	e7d8      	b.n	8009d68 <_scanf_float+0x188>
 8009db6:	f1ba 0f01 	cmp.w	sl, #1
 8009dba:	f47f af41 	bne.w	8009c40 <_scanf_float+0x60>
 8009dbe:	f04f 0a02 	mov.w	sl, #2
 8009dc2:	e7d1      	b.n	8009d68 <_scanf_float+0x188>
 8009dc4:	b97d      	cbnz	r5, 8009de6 <_scanf_float+0x206>
 8009dc6:	f1b9 0f00 	cmp.w	r9, #0
 8009dca:	f47f af3c 	bne.w	8009c46 <_scanf_float+0x66>
 8009dce:	6822      	ldr	r2, [r4, #0]
 8009dd0:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8009dd4:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8009dd8:	f47f af39 	bne.w	8009c4e <_scanf_float+0x6e>
 8009ddc:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009de0:	6022      	str	r2, [r4, #0]
 8009de2:	2501      	movs	r5, #1
 8009de4:	e7c0      	b.n	8009d68 <_scanf_float+0x188>
 8009de6:	2d03      	cmp	r5, #3
 8009de8:	d0e2      	beq.n	8009db0 <_scanf_float+0x1d0>
 8009dea:	2d05      	cmp	r5, #5
 8009dec:	e7de      	b.n	8009dac <_scanf_float+0x1cc>
 8009dee:	2d02      	cmp	r5, #2
 8009df0:	f47f af26 	bne.w	8009c40 <_scanf_float+0x60>
 8009df4:	2503      	movs	r5, #3
 8009df6:	e7b7      	b.n	8009d68 <_scanf_float+0x188>
 8009df8:	2d06      	cmp	r5, #6
 8009dfa:	f47f af21 	bne.w	8009c40 <_scanf_float+0x60>
 8009dfe:	2507      	movs	r5, #7
 8009e00:	e7b2      	b.n	8009d68 <_scanf_float+0x188>
 8009e02:	6822      	ldr	r2, [r4, #0]
 8009e04:	0591      	lsls	r1, r2, #22
 8009e06:	f57f af1b 	bpl.w	8009c40 <_scanf_float+0x60>
 8009e0a:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8009e0e:	6022      	str	r2, [r4, #0]
 8009e10:	f8cd 9004 	str.w	r9, [sp, #4]
 8009e14:	e7a8      	b.n	8009d68 <_scanf_float+0x188>
 8009e16:	6822      	ldr	r2, [r4, #0]
 8009e18:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8009e1c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8009e20:	d006      	beq.n	8009e30 <_scanf_float+0x250>
 8009e22:	0550      	lsls	r0, r2, #21
 8009e24:	f57f af0c 	bpl.w	8009c40 <_scanf_float+0x60>
 8009e28:	f1b9 0f00 	cmp.w	r9, #0
 8009e2c:	f43f af0f 	beq.w	8009c4e <_scanf_float+0x6e>
 8009e30:	0591      	lsls	r1, r2, #22
 8009e32:	bf58      	it	pl
 8009e34:	9901      	ldrpl	r1, [sp, #4]
 8009e36:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009e3a:	bf58      	it	pl
 8009e3c:	eba9 0101 	subpl.w	r1, r9, r1
 8009e40:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8009e44:	bf58      	it	pl
 8009e46:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8009e4a:	6022      	str	r2, [r4, #0]
 8009e4c:	f04f 0900 	mov.w	r9, #0
 8009e50:	e78a      	b.n	8009d68 <_scanf_float+0x188>
 8009e52:	f04f 0a03 	mov.w	sl, #3
 8009e56:	e787      	b.n	8009d68 <_scanf_float+0x188>
 8009e58:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8009e5c:	4639      	mov	r1, r7
 8009e5e:	4640      	mov	r0, r8
 8009e60:	4798      	blx	r3
 8009e62:	2800      	cmp	r0, #0
 8009e64:	f43f aedf 	beq.w	8009c26 <_scanf_float+0x46>
 8009e68:	e6ea      	b.n	8009c40 <_scanf_float+0x60>
 8009e6a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009e6e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009e72:	463a      	mov	r2, r7
 8009e74:	4640      	mov	r0, r8
 8009e76:	4798      	blx	r3
 8009e78:	6923      	ldr	r3, [r4, #16]
 8009e7a:	3b01      	subs	r3, #1
 8009e7c:	6123      	str	r3, [r4, #16]
 8009e7e:	e6ec      	b.n	8009c5a <_scanf_float+0x7a>
 8009e80:	1e6b      	subs	r3, r5, #1
 8009e82:	2b06      	cmp	r3, #6
 8009e84:	d825      	bhi.n	8009ed2 <_scanf_float+0x2f2>
 8009e86:	2d02      	cmp	r5, #2
 8009e88:	d836      	bhi.n	8009ef8 <_scanf_float+0x318>
 8009e8a:	455e      	cmp	r6, fp
 8009e8c:	f67f aee8 	bls.w	8009c60 <_scanf_float+0x80>
 8009e90:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009e94:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009e98:	463a      	mov	r2, r7
 8009e9a:	4640      	mov	r0, r8
 8009e9c:	4798      	blx	r3
 8009e9e:	6923      	ldr	r3, [r4, #16]
 8009ea0:	3b01      	subs	r3, #1
 8009ea2:	6123      	str	r3, [r4, #16]
 8009ea4:	e7f1      	b.n	8009e8a <_scanf_float+0x2aa>
 8009ea6:	9802      	ldr	r0, [sp, #8]
 8009ea8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009eac:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8009eb0:	9002      	str	r0, [sp, #8]
 8009eb2:	463a      	mov	r2, r7
 8009eb4:	4640      	mov	r0, r8
 8009eb6:	4798      	blx	r3
 8009eb8:	6923      	ldr	r3, [r4, #16]
 8009eba:	3b01      	subs	r3, #1
 8009ebc:	6123      	str	r3, [r4, #16]
 8009ebe:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009ec2:	fa5f fa8a 	uxtb.w	sl, sl
 8009ec6:	f1ba 0f02 	cmp.w	sl, #2
 8009eca:	d1ec      	bne.n	8009ea6 <_scanf_float+0x2c6>
 8009ecc:	3d03      	subs	r5, #3
 8009ece:	b2ed      	uxtb	r5, r5
 8009ed0:	1b76      	subs	r6, r6, r5
 8009ed2:	6823      	ldr	r3, [r4, #0]
 8009ed4:	05da      	lsls	r2, r3, #23
 8009ed6:	d52f      	bpl.n	8009f38 <_scanf_float+0x358>
 8009ed8:	055b      	lsls	r3, r3, #21
 8009eda:	d510      	bpl.n	8009efe <_scanf_float+0x31e>
 8009edc:	455e      	cmp	r6, fp
 8009ede:	f67f aebf 	bls.w	8009c60 <_scanf_float+0x80>
 8009ee2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009ee6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009eea:	463a      	mov	r2, r7
 8009eec:	4640      	mov	r0, r8
 8009eee:	4798      	blx	r3
 8009ef0:	6923      	ldr	r3, [r4, #16]
 8009ef2:	3b01      	subs	r3, #1
 8009ef4:	6123      	str	r3, [r4, #16]
 8009ef6:	e7f1      	b.n	8009edc <_scanf_float+0x2fc>
 8009ef8:	46aa      	mov	sl, r5
 8009efa:	9602      	str	r6, [sp, #8]
 8009efc:	e7df      	b.n	8009ebe <_scanf_float+0x2de>
 8009efe:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8009f02:	6923      	ldr	r3, [r4, #16]
 8009f04:	2965      	cmp	r1, #101	; 0x65
 8009f06:	f103 33ff 	add.w	r3, r3, #4294967295
 8009f0a:	f106 35ff 	add.w	r5, r6, #4294967295
 8009f0e:	6123      	str	r3, [r4, #16]
 8009f10:	d00c      	beq.n	8009f2c <_scanf_float+0x34c>
 8009f12:	2945      	cmp	r1, #69	; 0x45
 8009f14:	d00a      	beq.n	8009f2c <_scanf_float+0x34c>
 8009f16:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009f1a:	463a      	mov	r2, r7
 8009f1c:	4640      	mov	r0, r8
 8009f1e:	4798      	blx	r3
 8009f20:	6923      	ldr	r3, [r4, #16]
 8009f22:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8009f26:	3b01      	subs	r3, #1
 8009f28:	1eb5      	subs	r5, r6, #2
 8009f2a:	6123      	str	r3, [r4, #16]
 8009f2c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009f30:	463a      	mov	r2, r7
 8009f32:	4640      	mov	r0, r8
 8009f34:	4798      	blx	r3
 8009f36:	462e      	mov	r6, r5
 8009f38:	6825      	ldr	r5, [r4, #0]
 8009f3a:	f015 0510 	ands.w	r5, r5, #16
 8009f3e:	d159      	bne.n	8009ff4 <_scanf_float+0x414>
 8009f40:	7035      	strb	r5, [r6, #0]
 8009f42:	6823      	ldr	r3, [r4, #0]
 8009f44:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8009f48:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009f4c:	d11b      	bne.n	8009f86 <_scanf_float+0x3a6>
 8009f4e:	9b01      	ldr	r3, [sp, #4]
 8009f50:	454b      	cmp	r3, r9
 8009f52:	eba3 0209 	sub.w	r2, r3, r9
 8009f56:	d123      	bne.n	8009fa0 <_scanf_float+0x3c0>
 8009f58:	2200      	movs	r2, #0
 8009f5a:	4659      	mov	r1, fp
 8009f5c:	4640      	mov	r0, r8
 8009f5e:	f001 fcdd 	bl	800b91c <_strtod_r>
 8009f62:	6822      	ldr	r2, [r4, #0]
 8009f64:	9b03      	ldr	r3, [sp, #12]
 8009f66:	f012 0f02 	tst.w	r2, #2
 8009f6a:	ec57 6b10 	vmov	r6, r7, d0
 8009f6e:	681b      	ldr	r3, [r3, #0]
 8009f70:	d021      	beq.n	8009fb6 <_scanf_float+0x3d6>
 8009f72:	9903      	ldr	r1, [sp, #12]
 8009f74:	1d1a      	adds	r2, r3, #4
 8009f76:	600a      	str	r2, [r1, #0]
 8009f78:	681b      	ldr	r3, [r3, #0]
 8009f7a:	e9c3 6700 	strd	r6, r7, [r3]
 8009f7e:	68e3      	ldr	r3, [r4, #12]
 8009f80:	3301      	adds	r3, #1
 8009f82:	60e3      	str	r3, [r4, #12]
 8009f84:	e66d      	b.n	8009c62 <_scanf_float+0x82>
 8009f86:	9b04      	ldr	r3, [sp, #16]
 8009f88:	2b00      	cmp	r3, #0
 8009f8a:	d0e5      	beq.n	8009f58 <_scanf_float+0x378>
 8009f8c:	9905      	ldr	r1, [sp, #20]
 8009f8e:	230a      	movs	r3, #10
 8009f90:	462a      	mov	r2, r5
 8009f92:	3101      	adds	r1, #1
 8009f94:	4640      	mov	r0, r8
 8009f96:	f001 fd49 	bl	800ba2c <_strtol_r>
 8009f9a:	9b04      	ldr	r3, [sp, #16]
 8009f9c:	9e05      	ldr	r6, [sp, #20]
 8009f9e:	1ac2      	subs	r2, r0, r3
 8009fa0:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8009fa4:	429e      	cmp	r6, r3
 8009fa6:	bf28      	it	cs
 8009fa8:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8009fac:	4912      	ldr	r1, [pc, #72]	; (8009ff8 <_scanf_float+0x418>)
 8009fae:	4630      	mov	r0, r6
 8009fb0:	f000 f870 	bl	800a094 <siprintf>
 8009fb4:	e7d0      	b.n	8009f58 <_scanf_float+0x378>
 8009fb6:	9903      	ldr	r1, [sp, #12]
 8009fb8:	f012 0f04 	tst.w	r2, #4
 8009fbc:	f103 0204 	add.w	r2, r3, #4
 8009fc0:	600a      	str	r2, [r1, #0]
 8009fc2:	d1d9      	bne.n	8009f78 <_scanf_float+0x398>
 8009fc4:	f8d3 8000 	ldr.w	r8, [r3]
 8009fc8:	ee10 2a10 	vmov	r2, s0
 8009fcc:	ee10 0a10 	vmov	r0, s0
 8009fd0:	463b      	mov	r3, r7
 8009fd2:	4639      	mov	r1, r7
 8009fd4:	f7f6 fdc2 	bl	8000b5c <__aeabi_dcmpun>
 8009fd8:	b128      	cbz	r0, 8009fe6 <_scanf_float+0x406>
 8009fda:	4808      	ldr	r0, [pc, #32]	; (8009ffc <_scanf_float+0x41c>)
 8009fdc:	f000 f820 	bl	800a020 <nanf>
 8009fe0:	ed88 0a00 	vstr	s0, [r8]
 8009fe4:	e7cb      	b.n	8009f7e <_scanf_float+0x39e>
 8009fe6:	4630      	mov	r0, r6
 8009fe8:	4639      	mov	r1, r7
 8009fea:	f7f6 fe15 	bl	8000c18 <__aeabi_d2f>
 8009fee:	f8c8 0000 	str.w	r0, [r8]
 8009ff2:	e7c4      	b.n	8009f7e <_scanf_float+0x39e>
 8009ff4:	2500      	movs	r5, #0
 8009ff6:	e634      	b.n	8009c62 <_scanf_float+0x82>
 8009ff8:	0800fd52 	.word	0x0800fd52
 8009ffc:	0801009f 	.word	0x0801009f

0800a000 <_sbrk_r>:
 800a000:	b538      	push	{r3, r4, r5, lr}
 800a002:	4d06      	ldr	r5, [pc, #24]	; (800a01c <_sbrk_r+0x1c>)
 800a004:	2300      	movs	r3, #0
 800a006:	4604      	mov	r4, r0
 800a008:	4608      	mov	r0, r1
 800a00a:	602b      	str	r3, [r5, #0]
 800a00c:	f005 fa7c 	bl	800f508 <_sbrk>
 800a010:	1c43      	adds	r3, r0, #1
 800a012:	d102      	bne.n	800a01a <_sbrk_r+0x1a>
 800a014:	682b      	ldr	r3, [r5, #0]
 800a016:	b103      	cbz	r3, 800a01a <_sbrk_r+0x1a>
 800a018:	6023      	str	r3, [r4, #0]
 800a01a:	bd38      	pop	{r3, r4, r5, pc}
 800a01c:	20000360 	.word	0x20000360

0800a020 <nanf>:
 800a020:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800a028 <nanf+0x8>
 800a024:	4770      	bx	lr
 800a026:	bf00      	nop
 800a028:	7fc00000 	.word	0x7fc00000

0800a02c <sniprintf>:
 800a02c:	b40c      	push	{r2, r3}
 800a02e:	b530      	push	{r4, r5, lr}
 800a030:	4b17      	ldr	r3, [pc, #92]	; (800a090 <sniprintf+0x64>)
 800a032:	1e0c      	subs	r4, r1, #0
 800a034:	681d      	ldr	r5, [r3, #0]
 800a036:	b09d      	sub	sp, #116	; 0x74
 800a038:	da08      	bge.n	800a04c <sniprintf+0x20>
 800a03a:	238b      	movs	r3, #139	; 0x8b
 800a03c:	602b      	str	r3, [r5, #0]
 800a03e:	f04f 30ff 	mov.w	r0, #4294967295
 800a042:	b01d      	add	sp, #116	; 0x74
 800a044:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a048:	b002      	add	sp, #8
 800a04a:	4770      	bx	lr
 800a04c:	f44f 7302 	mov.w	r3, #520	; 0x208
 800a050:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a054:	bf14      	ite	ne
 800a056:	f104 33ff 	addne.w	r3, r4, #4294967295
 800a05a:	4623      	moveq	r3, r4
 800a05c:	9304      	str	r3, [sp, #16]
 800a05e:	9307      	str	r3, [sp, #28]
 800a060:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a064:	9002      	str	r0, [sp, #8]
 800a066:	9006      	str	r0, [sp, #24]
 800a068:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a06c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a06e:	ab21      	add	r3, sp, #132	; 0x84
 800a070:	a902      	add	r1, sp, #8
 800a072:	4628      	mov	r0, r5
 800a074:	9301      	str	r3, [sp, #4]
 800a076:	f004 f857 	bl	800e128 <_svfiprintf_r>
 800a07a:	1c43      	adds	r3, r0, #1
 800a07c:	bfbc      	itt	lt
 800a07e:	238b      	movlt	r3, #139	; 0x8b
 800a080:	602b      	strlt	r3, [r5, #0]
 800a082:	2c00      	cmp	r4, #0
 800a084:	d0dd      	beq.n	800a042 <sniprintf+0x16>
 800a086:	9b02      	ldr	r3, [sp, #8]
 800a088:	2200      	movs	r2, #0
 800a08a:	701a      	strb	r2, [r3, #0]
 800a08c:	e7d9      	b.n	800a042 <sniprintf+0x16>
 800a08e:	bf00      	nop
 800a090:	2000000c 	.word	0x2000000c

0800a094 <siprintf>:
 800a094:	b40e      	push	{r1, r2, r3}
 800a096:	b500      	push	{lr}
 800a098:	b09c      	sub	sp, #112	; 0x70
 800a09a:	ab1d      	add	r3, sp, #116	; 0x74
 800a09c:	9002      	str	r0, [sp, #8]
 800a09e:	9006      	str	r0, [sp, #24]
 800a0a0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800a0a4:	4809      	ldr	r0, [pc, #36]	; (800a0cc <siprintf+0x38>)
 800a0a6:	9107      	str	r1, [sp, #28]
 800a0a8:	9104      	str	r1, [sp, #16]
 800a0aa:	4909      	ldr	r1, [pc, #36]	; (800a0d0 <siprintf+0x3c>)
 800a0ac:	f853 2b04 	ldr.w	r2, [r3], #4
 800a0b0:	9105      	str	r1, [sp, #20]
 800a0b2:	6800      	ldr	r0, [r0, #0]
 800a0b4:	9301      	str	r3, [sp, #4]
 800a0b6:	a902      	add	r1, sp, #8
 800a0b8:	f004 f836 	bl	800e128 <_svfiprintf_r>
 800a0bc:	9b02      	ldr	r3, [sp, #8]
 800a0be:	2200      	movs	r2, #0
 800a0c0:	701a      	strb	r2, [r3, #0]
 800a0c2:	b01c      	add	sp, #112	; 0x70
 800a0c4:	f85d eb04 	ldr.w	lr, [sp], #4
 800a0c8:	b003      	add	sp, #12
 800a0ca:	4770      	bx	lr
 800a0cc:	2000000c 	.word	0x2000000c
 800a0d0:	ffff0208 	.word	0xffff0208

0800a0d4 <siscanf>:
 800a0d4:	b40e      	push	{r1, r2, r3}
 800a0d6:	b510      	push	{r4, lr}
 800a0d8:	b09f      	sub	sp, #124	; 0x7c
 800a0da:	ac21      	add	r4, sp, #132	; 0x84
 800a0dc:	f44f 7101 	mov.w	r1, #516	; 0x204
 800a0e0:	f854 2b04 	ldr.w	r2, [r4], #4
 800a0e4:	9201      	str	r2, [sp, #4]
 800a0e6:	f8ad 101c 	strh.w	r1, [sp, #28]
 800a0ea:	9004      	str	r0, [sp, #16]
 800a0ec:	9008      	str	r0, [sp, #32]
 800a0ee:	f7f6 f881 	bl	80001f4 <strlen>
 800a0f2:	4b0c      	ldr	r3, [pc, #48]	; (800a124 <siscanf+0x50>)
 800a0f4:	9005      	str	r0, [sp, #20]
 800a0f6:	9009      	str	r0, [sp, #36]	; 0x24
 800a0f8:	930d      	str	r3, [sp, #52]	; 0x34
 800a0fa:	480b      	ldr	r0, [pc, #44]	; (800a128 <siscanf+0x54>)
 800a0fc:	9a01      	ldr	r2, [sp, #4]
 800a0fe:	6800      	ldr	r0, [r0, #0]
 800a100:	9403      	str	r4, [sp, #12]
 800a102:	2300      	movs	r3, #0
 800a104:	9311      	str	r3, [sp, #68]	; 0x44
 800a106:	9316      	str	r3, [sp, #88]	; 0x58
 800a108:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a10c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a110:	a904      	add	r1, sp, #16
 800a112:	4623      	mov	r3, r4
 800a114:	f004 f962 	bl	800e3dc <__ssvfiscanf_r>
 800a118:	b01f      	add	sp, #124	; 0x7c
 800a11a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a11e:	b003      	add	sp, #12
 800a120:	4770      	bx	lr
 800a122:	bf00      	nop
 800a124:	0800a14f 	.word	0x0800a14f
 800a128:	2000000c 	.word	0x2000000c

0800a12c <__sread>:
 800a12c:	b510      	push	{r4, lr}
 800a12e:	460c      	mov	r4, r1
 800a130:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a134:	f004 fd76 	bl	800ec24 <_read_r>
 800a138:	2800      	cmp	r0, #0
 800a13a:	bfab      	itete	ge
 800a13c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800a13e:	89a3      	ldrhlt	r3, [r4, #12]
 800a140:	181b      	addge	r3, r3, r0
 800a142:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800a146:	bfac      	ite	ge
 800a148:	6563      	strge	r3, [r4, #84]	; 0x54
 800a14a:	81a3      	strhlt	r3, [r4, #12]
 800a14c:	bd10      	pop	{r4, pc}

0800a14e <__seofread>:
 800a14e:	2000      	movs	r0, #0
 800a150:	4770      	bx	lr

0800a152 <__swrite>:
 800a152:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a156:	461f      	mov	r7, r3
 800a158:	898b      	ldrh	r3, [r1, #12]
 800a15a:	05db      	lsls	r3, r3, #23
 800a15c:	4605      	mov	r5, r0
 800a15e:	460c      	mov	r4, r1
 800a160:	4616      	mov	r6, r2
 800a162:	d505      	bpl.n	800a170 <__swrite+0x1e>
 800a164:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a168:	2302      	movs	r3, #2
 800a16a:	2200      	movs	r2, #0
 800a16c:	f003 fa7a 	bl	800d664 <_lseek_r>
 800a170:	89a3      	ldrh	r3, [r4, #12]
 800a172:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a176:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a17a:	81a3      	strh	r3, [r4, #12]
 800a17c:	4632      	mov	r2, r6
 800a17e:	463b      	mov	r3, r7
 800a180:	4628      	mov	r0, r5
 800a182:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a186:	f001 bf17 	b.w	800bfb8 <_write_r>

0800a18a <__sseek>:
 800a18a:	b510      	push	{r4, lr}
 800a18c:	460c      	mov	r4, r1
 800a18e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a192:	f003 fa67 	bl	800d664 <_lseek_r>
 800a196:	1c43      	adds	r3, r0, #1
 800a198:	89a3      	ldrh	r3, [r4, #12]
 800a19a:	bf15      	itete	ne
 800a19c:	6560      	strne	r0, [r4, #84]	; 0x54
 800a19e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800a1a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800a1a6:	81a3      	strheq	r3, [r4, #12]
 800a1a8:	bf18      	it	ne
 800a1aa:	81a3      	strhne	r3, [r4, #12]
 800a1ac:	bd10      	pop	{r4, pc}

0800a1ae <__sclose>:
 800a1ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a1b2:	f001 bf35 	b.w	800c020 <_close_r>

0800a1b6 <strcat>:
 800a1b6:	b510      	push	{r4, lr}
 800a1b8:	4602      	mov	r2, r0
 800a1ba:	7814      	ldrb	r4, [r2, #0]
 800a1bc:	4613      	mov	r3, r2
 800a1be:	3201      	adds	r2, #1
 800a1c0:	2c00      	cmp	r4, #0
 800a1c2:	d1fa      	bne.n	800a1ba <strcat+0x4>
 800a1c4:	3b01      	subs	r3, #1
 800a1c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a1ca:	f803 2f01 	strb.w	r2, [r3, #1]!
 800a1ce:	2a00      	cmp	r2, #0
 800a1d0:	d1f9      	bne.n	800a1c6 <strcat+0x10>
 800a1d2:	bd10      	pop	{r4, pc}

0800a1d4 <strcpy>:
 800a1d4:	4603      	mov	r3, r0
 800a1d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a1da:	f803 2b01 	strb.w	r2, [r3], #1
 800a1de:	2a00      	cmp	r2, #0
 800a1e0:	d1f9      	bne.n	800a1d6 <strcpy+0x2>
 800a1e2:	4770      	bx	lr

0800a1e4 <iso_year_adjust>:
 800a1e4:	6942      	ldr	r2, [r0, #20]
 800a1e6:	2a00      	cmp	r2, #0
 800a1e8:	f240 736c 	movw	r3, #1900	; 0x76c
 800a1ec:	bfa8      	it	ge
 800a1ee:	f06f 0363 	mvnge.w	r3, #99	; 0x63
 800a1f2:	4413      	add	r3, r2
 800a1f4:	0792      	lsls	r2, r2, #30
 800a1f6:	d105      	bne.n	800a204 <iso_year_adjust+0x20>
 800a1f8:	2164      	movs	r1, #100	; 0x64
 800a1fa:	fb93 f2f1 	sdiv	r2, r3, r1
 800a1fe:	fb01 3212 	mls	r2, r1, r2, r3
 800a202:	b9da      	cbnz	r2, 800a23c <iso_year_adjust+0x58>
 800a204:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800a208:	fb93 f1f2 	sdiv	r1, r3, r2
 800a20c:	fb02 3311 	mls	r3, r2, r1, r3
 800a210:	fab3 f383 	clz	r3, r3
 800a214:	095b      	lsrs	r3, r3, #5
 800a216:	e9d0 0206 	ldrd	r0, r2, [r0, #24]
 800a21a:	0040      	lsls	r0, r0, #1
 800a21c:	eb00 1002 	add.w	r0, r0, r2, lsl #4
 800a220:	4418      	add	r0, r3
 800a222:	f241 63a2 	movw	r3, #5794	; 0x16a2
 800a226:	4298      	cmp	r0, r3
 800a228:	d03a      	beq.n	800a2a0 <iso_year_adjust+0xbc>
 800a22a:	dc21      	bgt.n	800a270 <iso_year_adjust+0x8c>
 800a22c:	2801      	cmp	r0, #1
 800a22e:	dc1a      	bgt.n	800a266 <iso_year_adjust+0x82>
 800a230:	2800      	cmp	r0, #0
 800a232:	bfb4      	ite	lt
 800a234:	2000      	movlt	r0, #0
 800a236:	f04f 30ff 	movge.w	r0, #4294967295
 800a23a:	4770      	bx	lr
 800a23c:	2301      	movs	r3, #1
 800a23e:	e7ea      	b.n	800a216 <iso_year_adjust+0x32>
 800a240:	2817      	cmp	r0, #23
 800a242:	d813      	bhi.n	800a26c <iso_year_adjust+0x88>
 800a244:	e8df f000 	tbb	[pc, r0]
 800a248:	0c0c0c0c 	.word	0x0c0c0c0c
 800a24c:	0c0c1212 	.word	0x0c0c1212
 800a250:	12121212 	.word	0x12121212
 800a254:	12121212 	.word	0x12121212
 800a258:	0c0c1212 	.word	0x0c0c1212
 800a25c:	0c0c1212 	.word	0x0c0c1212
 800a260:	f04f 30ff 	mov.w	r0, #4294967295
 800a264:	4770      	bx	lr
 800a266:	380a      	subs	r0, #10
 800a268:	2817      	cmp	r0, #23
 800a26a:	d9e9      	bls.n	800a240 <iso_year_adjust+0x5c>
 800a26c:	2000      	movs	r0, #0
 800a26e:	4770      	bx	lr
 800a270:	f241 63b4 	movw	r3, #5812	; 0x16b4
 800a274:	4298      	cmp	r0, r3
 800a276:	dc06      	bgt.n	800a286 <iso_year_adjust+0xa2>
 800a278:	f241 63b1 	movw	r3, #5809	; 0x16b1
 800a27c:	4298      	cmp	r0, r3
 800a27e:	bfd4      	ite	le
 800a280:	2000      	movle	r0, #0
 800a282:	2001      	movgt	r0, #1
 800a284:	4770      	bx	lr
 800a286:	f5a0 50b6 	sub.w	r0, r0, #5824	; 0x16c0
 800a28a:	3802      	subs	r0, #2
 800a28c:	2815      	cmp	r0, #21
 800a28e:	d8ed      	bhi.n	800a26c <iso_year_adjust+0x88>
 800a290:	2301      	movs	r3, #1
 800a292:	4083      	lsls	r3, r0
 800a294:	4803      	ldr	r0, [pc, #12]	; (800a2a4 <iso_year_adjust+0xc0>)
 800a296:	4018      	ands	r0, r3
 800a298:	3800      	subs	r0, #0
 800a29a:	bf18      	it	ne
 800a29c:	2001      	movne	r0, #1
 800a29e:	4770      	bx	lr
 800a2a0:	2001      	movs	r0, #1
 800a2a2:	4770      	bx	lr
 800a2a4:	002a001f 	.word	0x002a001f

0800a2a8 <__strftime.isra.0>:
 800a2a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2ac:	b08f      	sub	sp, #60	; 0x3c
 800a2ae:	461e      	mov	r6, r3
 800a2b0:	2300      	movs	r3, #0
 800a2b2:	4607      	mov	r7, r0
 800a2b4:	460d      	mov	r5, r1
 800a2b6:	9302      	str	r3, [sp, #8]
 800a2b8:	461c      	mov	r4, r3
 800a2ba:	7813      	ldrb	r3, [r2, #0]
 800a2bc:	2b00      	cmp	r3, #0
 800a2be:	f000 84ba 	beq.w	800ac36 <__strftime.isra.0+0x98e>
 800a2c2:	2b25      	cmp	r3, #37	; 0x25
 800a2c4:	d11f      	bne.n	800a306 <__strftime.isra.0+0x5e>
 800a2c6:	f892 b001 	ldrb.w	fp, [r2, #1]
 800a2ca:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
 800a2ce:	d024      	beq.n	800a31a <__strftime.isra.0+0x72>
 800a2d0:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 800a2d4:	d021      	beq.n	800a31a <__strftime.isra.0+0x72>
 800a2d6:	f102 0801 	add.w	r8, r2, #1
 800a2da:	f04f 0b00 	mov.w	fp, #0
 800a2de:	f898 2000 	ldrb.w	r2, [r8]
 800a2e2:	3a31      	subs	r2, #49	; 0x31
 800a2e4:	2a08      	cmp	r2, #8
 800a2e6:	d81b      	bhi.n	800a320 <__strftime.isra.0+0x78>
 800a2e8:	4640      	mov	r0, r8
 800a2ea:	220a      	movs	r2, #10
 800a2ec:	a906      	add	r1, sp, #24
 800a2ee:	f001 fc1d 	bl	800bb2c <strtoul>
 800a2f2:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800a2f6:	4681      	mov	r9, r0
 800a2f8:	f898 2000 	ldrb.w	r2, [r8]
 800a2fc:	2a45      	cmp	r2, #69	; 0x45
 800a2fe:	d112      	bne.n	800a326 <__strftime.isra.0+0x7e>
 800a300:	f108 0801 	add.w	r8, r8, #1
 800a304:	e011      	b.n	800a32a <__strftime.isra.0+0x82>
 800a306:	1e69      	subs	r1, r5, #1
 800a308:	42a1      	cmp	r1, r4
 800a30a:	d802      	bhi.n	800a312 <__strftime.isra.0+0x6a>
 800a30c:	2400      	movs	r4, #0
 800a30e:	f000 bc95 	b.w	800ac3c <__strftime.isra.0+0x994>
 800a312:	553b      	strb	r3, [r7, r4]
 800a314:	3201      	adds	r2, #1
 800a316:	3401      	adds	r4, #1
 800a318:	e7cf      	b.n	800a2ba <__strftime.isra.0+0x12>
 800a31a:	f102 0802 	add.w	r8, r2, #2
 800a31e:	e7de      	b.n	800a2de <__strftime.isra.0+0x36>
 800a320:	f04f 0900 	mov.w	r9, #0
 800a324:	e7e8      	b.n	800a2f8 <__strftime.isra.0+0x50>
 800a326:	2a4f      	cmp	r2, #79	; 0x4f
 800a328:	d0ea      	beq.n	800a300 <__strftime.isra.0+0x58>
 800a32a:	f898 0000 	ldrb.w	r0, [r8]
 800a32e:	f1a0 0225 	sub.w	r2, r0, #37	; 0x25
 800a332:	2a55      	cmp	r2, #85	; 0x55
 800a334:	d8ea      	bhi.n	800a30c <__strftime.isra.0+0x64>
 800a336:	a301      	add	r3, pc, #4	; (adr r3, 800a33c <__strftime.isra.0+0x94>)
 800a338:	f853 f022 	ldr.w	pc, [r3, r2, lsl #2]
 800a33c:	0800ac2b 	.word	0x0800ac2b
 800a340:	0800a30d 	.word	0x0800a30d
 800a344:	0800a30d 	.word	0x0800a30d
 800a348:	0800a30d 	.word	0x0800a30d
 800a34c:	0800a30d 	.word	0x0800a30d
 800a350:	0800a30d 	.word	0x0800a30d
 800a354:	0800a30d 	.word	0x0800a30d
 800a358:	0800a30d 	.word	0x0800a30d
 800a35c:	0800a30d 	.word	0x0800a30d
 800a360:	0800a30d 	.word	0x0800a30d
 800a364:	0800a30d 	.word	0x0800a30d
 800a368:	0800a30d 	.word	0x0800a30d
 800a36c:	0800a30d 	.word	0x0800a30d
 800a370:	0800a30d 	.word	0x0800a30d
 800a374:	0800a30d 	.word	0x0800a30d
 800a378:	0800a30d 	.word	0x0800a30d
 800a37c:	0800a30d 	.word	0x0800a30d
 800a380:	0800a30d 	.word	0x0800a30d
 800a384:	0800a30d 	.word	0x0800a30d
 800a388:	0800a30d 	.word	0x0800a30d
 800a38c:	0800a30d 	.word	0x0800a30d
 800a390:	0800a30d 	.word	0x0800a30d
 800a394:	0800a30d 	.word	0x0800a30d
 800a398:	0800a30d 	.word	0x0800a30d
 800a39c:	0800a30d 	.word	0x0800a30d
 800a3a0:	0800a30d 	.word	0x0800a30d
 800a3a4:	0800a30d 	.word	0x0800a30d
 800a3a8:	0800a30d 	.word	0x0800a30d
 800a3ac:	0800a4d1 	.word	0x0800a4d1
 800a3b0:	0800a529 	.word	0x0800a529
 800a3b4:	0800a597 	.word	0x0800a597
 800a3b8:	0800a635 	.word	0x0800a635
 800a3bc:	0800a30d 	.word	0x0800a30d
 800a3c0:	0800a681 	.word	0x0800a681
 800a3c4:	0800a76d 	.word	0x0800a76d
 800a3c8:	0800a847 	.word	0x0800a847
 800a3cc:	0800a855 	.word	0x0800a855
 800a3d0:	0800a30d 	.word	0x0800a30d
 800a3d4:	0800a30d 	.word	0x0800a30d
 800a3d8:	0800a30d 	.word	0x0800a30d
 800a3dc:	0800a885 	.word	0x0800a885
 800a3e0:	0800a30d 	.word	0x0800a30d
 800a3e4:	0800a30d 	.word	0x0800a30d
 800a3e8:	0800a899 	.word	0x0800a899
 800a3ec:	0800a30d 	.word	0x0800a30d
 800a3f0:	0800a8eb 	.word	0x0800a8eb
 800a3f4:	0800a9ff 	.word	0x0800a9ff
 800a3f8:	0800aa0f 	.word	0x0800aa0f
 800a3fc:	0800aa37 	.word	0x0800aa37
 800a400:	0800aa71 	.word	0x0800aa71
 800a404:	0800aae5 	.word	0x0800aae5
 800a408:	0800a58f 	.word	0x0800a58f
 800a40c:	0800ab11 	.word	0x0800ab11
 800a410:	0800abd9 	.word	0x0800abd9
 800a414:	0800a30d 	.word	0x0800a30d
 800a418:	0800a30d 	.word	0x0800a30d
 800a41c:	0800a30d 	.word	0x0800a30d
 800a420:	0800a30d 	.word	0x0800a30d
 800a424:	0800a30d 	.word	0x0800a30d
 800a428:	0800a30d 	.word	0x0800a30d
 800a42c:	0800a495 	.word	0x0800a495
 800a430:	0800a4ff 	.word	0x0800a4ff
 800a434:	0800a555 	.word	0x0800a555
 800a438:	0800a611 	.word	0x0800a611
 800a43c:	0800a611 	.word	0x0800a611
 800a440:	0800a30d 	.word	0x0800a30d
 800a444:	0800a6d3 	.word	0x0800a6d3
 800a448:	0800a4ff 	.word	0x0800a4ff
 800a44c:	0800a30d 	.word	0x0800a30d
 800a450:	0800a877 	.word	0x0800a877
 800a454:	0800a847 	.word	0x0800a847
 800a458:	0800a855 	.word	0x0800a855
 800a45c:	0800a87f 	.word	0x0800a87f
 800a460:	0800a889 	.word	0x0800a889
 800a464:	0800a30d 	.word	0x0800a30d
 800a468:	0800a899 	.word	0x0800a899
 800a46c:	0800a30d 	.word	0x0800a30d
 800a470:	0800a57f 	.word	0x0800a57f
 800a474:	0800a8fd 	.word	0x0800a8fd
 800a478:	0800aa03 	.word	0x0800aa03
 800a47c:	0800aa1d 	.word	0x0800aa1d
 800a480:	0800a30d 	.word	0x0800a30d
 800a484:	0800aad7 	.word	0x0800aad7
 800a488:	0800a587 	.word	0x0800a587
 800a48c:	0800aaf5 	.word	0x0800aaf5
 800a490:	0800ab63 	.word	0x0800ab63
 800a494:	69b3      	ldr	r3, [r6, #24]
 800a496:	4aa9      	ldr	r2, [pc, #676]	; (800a73c <__strftime.isra.0+0x494>)
 800a498:	3318      	adds	r3, #24
 800a49a:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 800a49e:	4648      	mov	r0, r9
 800a4a0:	f7f5 fea8 	bl	80001f4 <strlen>
 800a4a4:	f109 39ff 	add.w	r9, r9, #4294967295
 800a4a8:	4420      	add	r0, r4
 800a4aa:	1e6b      	subs	r3, r5, #1
 800a4ac:	42a0      	cmp	r0, r4
 800a4ae:	d107      	bne.n	800a4c0 <__strftime.isra.0+0x218>
 800a4b0:	f898 3000 	ldrb.w	r3, [r8]
 800a4b4:	2b00      	cmp	r3, #0
 800a4b6:	f000 83be 	beq.w	800ac36 <__strftime.isra.0+0x98e>
 800a4ba:	f108 0201 	add.w	r2, r8, #1
 800a4be:	e6fc      	b.n	800a2ba <__strftime.isra.0+0x12>
 800a4c0:	42a3      	cmp	r3, r4
 800a4c2:	f67f af23 	bls.w	800a30c <__strftime.isra.0+0x64>
 800a4c6:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a4ca:	553a      	strb	r2, [r7, r4]
 800a4cc:	3401      	adds	r4, #1
 800a4ce:	e7ed      	b.n	800a4ac <__strftime.isra.0+0x204>
 800a4d0:	69b2      	ldr	r2, [r6, #24]
 800a4d2:	4b9a      	ldr	r3, [pc, #616]	; (800a73c <__strftime.isra.0+0x494>)
 800a4d4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800a4d8:	f8d3 907c 	ldr.w	r9, [r3, #124]	; 0x7c
 800a4dc:	4648      	mov	r0, r9
 800a4de:	f7f5 fe89 	bl	80001f4 <strlen>
 800a4e2:	f109 39ff 	add.w	r9, r9, #4294967295
 800a4e6:	4420      	add	r0, r4
 800a4e8:	1e6b      	subs	r3, r5, #1
 800a4ea:	42a0      	cmp	r0, r4
 800a4ec:	d0e0      	beq.n	800a4b0 <__strftime.isra.0+0x208>
 800a4ee:	42a3      	cmp	r3, r4
 800a4f0:	f67f af0c 	bls.w	800a30c <__strftime.isra.0+0x64>
 800a4f4:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a4f8:	553a      	strb	r2, [r7, r4]
 800a4fa:	3401      	adds	r4, #1
 800a4fc:	e7f5      	b.n	800a4ea <__strftime.isra.0+0x242>
 800a4fe:	4b8f      	ldr	r3, [pc, #572]	; (800a73c <__strftime.isra.0+0x494>)
 800a500:	6932      	ldr	r2, [r6, #16]
 800a502:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 800a506:	4648      	mov	r0, r9
 800a508:	f7f5 fe74 	bl	80001f4 <strlen>
 800a50c:	f109 39ff 	add.w	r9, r9, #4294967295
 800a510:	4420      	add	r0, r4
 800a512:	1e6b      	subs	r3, r5, #1
 800a514:	42a0      	cmp	r0, r4
 800a516:	d0cb      	beq.n	800a4b0 <__strftime.isra.0+0x208>
 800a518:	42a3      	cmp	r3, r4
 800a51a:	f67f aef7 	bls.w	800a30c <__strftime.isra.0+0x64>
 800a51e:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a522:	553a      	strb	r2, [r7, r4]
 800a524:	3401      	adds	r4, #1
 800a526:	e7f5      	b.n	800a514 <__strftime.isra.0+0x26c>
 800a528:	6933      	ldr	r3, [r6, #16]
 800a52a:	4a84      	ldr	r2, [pc, #528]	; (800a73c <__strftime.isra.0+0x494>)
 800a52c:	330c      	adds	r3, #12
 800a52e:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 800a532:	4648      	mov	r0, r9
 800a534:	f7f5 fe5e 	bl	80001f4 <strlen>
 800a538:	f109 39ff 	add.w	r9, r9, #4294967295
 800a53c:	4420      	add	r0, r4
 800a53e:	1e6b      	subs	r3, r5, #1
 800a540:	42a0      	cmp	r0, r4
 800a542:	d0b5      	beq.n	800a4b0 <__strftime.isra.0+0x208>
 800a544:	42a3      	cmp	r3, r4
 800a546:	f67f aee1 	bls.w	800a30c <__strftime.isra.0+0x64>
 800a54a:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a54e:	553a      	strb	r2, [r7, r4]
 800a550:	3401      	adds	r4, #1
 800a552:	e7f5      	b.n	800a540 <__strftime.isra.0+0x298>
 800a554:	4b79      	ldr	r3, [pc, #484]	; (800a73c <__strftime.isra.0+0x494>)
 800a556:	f8d3 90a0 	ldr.w	r9, [r3, #160]	; 0xa0
 800a55a:	4648      	mov	r0, r9
 800a55c:	f7f5 fe4a 	bl	80001f4 <strlen>
 800a560:	f899 3000 	ldrb.w	r3, [r9]
 800a564:	2b00      	cmp	r3, #0
 800a566:	d0a3      	beq.n	800a4b0 <__strftime.isra.0+0x208>
 800a568:	4633      	mov	r3, r6
 800a56a:	464a      	mov	r2, r9
 800a56c:	1b29      	subs	r1, r5, r4
 800a56e:	1938      	adds	r0, r7, r4
 800a570:	f7ff fe9a 	bl	800a2a8 <__strftime.isra.0>
 800a574:	2800      	cmp	r0, #0
 800a576:	f77f aec9 	ble.w	800a30c <__strftime.isra.0+0x64>
 800a57a:	4404      	add	r4, r0
 800a57c:	e798      	b.n	800a4b0 <__strftime.isra.0+0x208>
 800a57e:	4b6f      	ldr	r3, [pc, #444]	; (800a73c <__strftime.isra.0+0x494>)
 800a580:	f8d3 90e4 	ldr.w	r9, [r3, #228]	; 0xe4
 800a584:	e7e9      	b.n	800a55a <__strftime.isra.0+0x2b2>
 800a586:	4b6d      	ldr	r3, [pc, #436]	; (800a73c <__strftime.isra.0+0x494>)
 800a588:	f8d3 909c 	ldr.w	r9, [r3, #156]	; 0x9c
 800a58c:	e7e5      	b.n	800a55a <__strftime.isra.0+0x2b2>
 800a58e:	4b6b      	ldr	r3, [pc, #428]	; (800a73c <__strftime.isra.0+0x494>)
 800a590:	f8d3 9098 	ldr.w	r9, [r3, #152]	; 0x98
 800a594:	e7e1      	b.n	800a55a <__strftime.isra.0+0x2b2>
 800a596:	496a      	ldr	r1, [pc, #424]	; (800a740 <__strftime.isra.0+0x498>)
 800a598:	f8d6 a014 	ldr.w	sl, [r6, #20]
 800a59c:	458a      	cmp	sl, r1
 800a59e:	bfac      	ite	ge
 800a5a0:	2100      	movge	r1, #0
 800a5a2:	2101      	movlt	r1, #1
 800a5a4:	f1ba 0f00 	cmp.w	sl, #0
 800a5a8:	db11      	blt.n	800a5ce <__strftime.isra.0+0x326>
 800a5aa:	2064      	movs	r0, #100	; 0x64
 800a5ac:	fb9a f0f0 	sdiv	r0, sl, r0
 800a5b0:	3013      	adds	r0, #19
 800a5b2:	f1bb 0f00 	cmp.w	fp, #0
 800a5b6:	d014      	beq.n	800a5e2 <__strftime.isra.0+0x33a>
 800a5b8:	2863      	cmp	r0, #99	; 0x63
 800a5ba:	dd27      	ble.n	800a60c <__strftime.isra.0+0x364>
 800a5bc:	4b61      	ldr	r3, [pc, #388]	; (800a744 <__strftime.isra.0+0x49c>)
 800a5be:	4a62      	ldr	r2, [pc, #392]	; (800a748 <__strftime.isra.0+0x4a0>)
 800a5c0:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 800a5c4:	bf18      	it	ne
 800a5c6:	461a      	movne	r2, r3
 800a5c8:	f8df c198 	ldr.w	ip, [pc, #408]	; 800a764 <__strftime.isra.0+0x4bc>
 800a5cc:	e00c      	b.n	800a5e8 <__strftime.isra.0+0x340>
 800a5ce:	f20a 706c 	addw	r0, sl, #1900	; 0x76c
 800a5d2:	9103      	str	r1, [sp, #12]
 800a5d4:	f001 fd02 	bl	800bfdc <abs>
 800a5d8:	2264      	movs	r2, #100	; 0x64
 800a5da:	9903      	ldr	r1, [sp, #12]
 800a5dc:	fb90 f0f2 	sdiv	r0, r0, r2
 800a5e0:	e7e7      	b.n	800a5b2 <__strftime.isra.0+0x30a>
 800a5e2:	4a58      	ldr	r2, [pc, #352]	; (800a744 <__strftime.isra.0+0x49c>)
 800a5e4:	f8df c180 	ldr.w	ip, [pc, #384]	; 800a768 <__strftime.isra.0+0x4c0>
 800a5e8:	4b58      	ldr	r3, [pc, #352]	; (800a74c <__strftime.isra.0+0x4a4>)
 800a5ea:	9001      	str	r0, [sp, #4]
 800a5ec:	f1b9 0f02 	cmp.w	r9, #2
 800a5f0:	bf2c      	ite	cs
 800a5f2:	ebc1 0109 	rsbcs	r1, r1, r9
 800a5f6:	f1c1 0102 	rsbcc	r1, r1, #2
 800a5fa:	9100      	str	r1, [sp, #0]
 800a5fc:	4950      	ldr	r1, [pc, #320]	; (800a740 <__strftime.isra.0+0x498>)
 800a5fe:	458a      	cmp	sl, r1
 800a600:	bfa8      	it	ge
 800a602:	4613      	movge	r3, r2
 800a604:	4662      	mov	r2, ip
 800a606:	1b29      	subs	r1, r5, r4
 800a608:	1938      	adds	r0, r7, r4
 800a60a:	e028      	b.n	800a65e <__strftime.isra.0+0x3b6>
 800a60c:	4a4d      	ldr	r2, [pc, #308]	; (800a744 <__strftime.isra.0+0x49c>)
 800a60e:	e7db      	b.n	800a5c8 <__strftime.isra.0+0x320>
 800a610:	494f      	ldr	r1, [pc, #316]	; (800a750 <__strftime.isra.0+0x4a8>)
 800a612:	4a50      	ldr	r2, [pc, #320]	; (800a754 <__strftime.isra.0+0x4ac>)
 800a614:	68f3      	ldr	r3, [r6, #12]
 800a616:	2864      	cmp	r0, #100	; 0x64
 800a618:	bf08      	it	eq
 800a61a:	460a      	moveq	r2, r1
 800a61c:	1b29      	subs	r1, r5, r4
 800a61e:	1938      	adds	r0, r7, r4
 800a620:	f7ff fd04 	bl	800a02c <sniprintf>
 800a624:	2800      	cmp	r0, #0
 800a626:	f6ff ae71 	blt.w	800a30c <__strftime.isra.0+0x64>
 800a62a:	4404      	add	r4, r0
 800a62c:	42a5      	cmp	r5, r4
 800a62e:	f63f af3f 	bhi.w	800a4b0 <__strftime.isra.0+0x208>
 800a632:	e66b      	b.n	800a30c <__strftime.isra.0+0x64>
 800a634:	6970      	ldr	r0, [r6, #20]
 800a636:	6933      	ldr	r3, [r6, #16]
 800a638:	f8d6 a00c 	ldr.w	sl, [r6, #12]
 800a63c:	2800      	cmp	r0, #0
 800a63e:	eb07 0904 	add.w	r9, r7, r4
 800a642:	eba5 0104 	sub.w	r1, r5, r4
 800a646:	f103 0301 	add.w	r3, r3, #1
 800a64a:	db0b      	blt.n	800a664 <__strftime.isra.0+0x3bc>
 800a64c:	2264      	movs	r2, #100	; 0x64
 800a64e:	fb90 fcf2 	sdiv	ip, r0, r2
 800a652:	fb02 001c 	mls	r0, r2, ip, r0
 800a656:	4a40      	ldr	r2, [pc, #256]	; (800a758 <__strftime.isra.0+0x4b0>)
 800a658:	e9cd a000 	strd	sl, r0, [sp]
 800a65c:	4648      	mov	r0, r9
 800a65e:	f7ff fce5 	bl	800a02c <sniprintf>
 800a662:	e7df      	b.n	800a624 <__strftime.isra.0+0x37c>
 800a664:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800a668:	e9cd 1303 	strd	r1, r3, [sp, #12]
 800a66c:	f001 fcb6 	bl	800bfdc <abs>
 800a670:	2264      	movs	r2, #100	; 0x64
 800a672:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
 800a676:	fb90 fcf2 	sdiv	ip, r0, r2
 800a67a:	fb0c 0012 	mls	r0, ip, r2, r0
 800a67e:	e7ea      	b.n	800a656 <__strftime.isra.0+0x3ae>
 800a680:	2225      	movs	r2, #37	; 0x25
 800a682:	f88d 2018 	strb.w	r2, [sp, #24]
 800a686:	f1bb 0f00 	cmp.w	fp, #0
 800a68a:	d011      	beq.n	800a6b0 <__strftime.isra.0+0x408>
 800a68c:	f1b9 0f06 	cmp.w	r9, #6
 800a690:	bf38      	it	cc
 800a692:	f04f 0906 	movcc.w	r9, #6
 800a696:	f1b9 0306 	subs.w	r3, r9, #6
 800a69a:	f88d b019 	strb.w	fp, [sp, #25]
 800a69e:	d10c      	bne.n	800a6ba <__strftime.isra.0+0x412>
 800a6a0:	f10d 001a 	add.w	r0, sp, #26
 800a6a4:	492d      	ldr	r1, [pc, #180]	; (800a75c <__strftime.isra.0+0x4b4>)
 800a6a6:	f7ff fd95 	bl	800a1d4 <strcpy>
 800a6aa:	4633      	mov	r3, r6
 800a6ac:	aa06      	add	r2, sp, #24
 800a6ae:	e75d      	b.n	800a56c <__strftime.isra.0+0x2c4>
 800a6b0:	f04f 0b2b 	mov.w	fp, #43	; 0x2b
 800a6b4:	f04f 090a 	mov.w	r9, #10
 800a6b8:	e7ed      	b.n	800a696 <__strftime.isra.0+0x3ee>
 800a6ba:	4a29      	ldr	r2, [pc, #164]	; (800a760 <__strftime.isra.0+0x4b8>)
 800a6bc:	211e      	movs	r1, #30
 800a6be:	f10d 001a 	add.w	r0, sp, #26
 800a6c2:	f7ff fcb3 	bl	800a02c <sniprintf>
 800a6c6:	2800      	cmp	r0, #0
 800a6c8:	ddea      	ble.n	800a6a0 <__strftime.isra.0+0x3f8>
 800a6ca:	f10d 031a 	add.w	r3, sp, #26
 800a6ce:	4418      	add	r0, r3
 800a6d0:	e7e8      	b.n	800a6a4 <__strftime.isra.0+0x3fc>
 800a6d2:	4630      	mov	r0, r6
 800a6d4:	f7ff fd86 	bl	800a1e4 <iso_year_adjust>
 800a6d8:	4681      	mov	r9, r0
 800a6da:	6970      	ldr	r0, [r6, #20]
 800a6dc:	2800      	cmp	r0, #0
 800a6de:	db11      	blt.n	800a704 <__strftime.isra.0+0x45c>
 800a6e0:	2364      	movs	r3, #100	; 0x64
 800a6e2:	fb90 f2f3 	sdiv	r2, r0, r3
 800a6e6:	fb03 0012 	mls	r0, r3, r2, r0
 800a6ea:	2264      	movs	r2, #100	; 0x64
 800a6ec:	4481      	add	r9, r0
 800a6ee:	fb99 f3f2 	sdiv	r3, r9, r2
 800a6f2:	fb02 9913 	mls	r9, r2, r3, r9
 800a6f6:	4491      	add	r9, r2
 800a6f8:	fbb9 f3f2 	udiv	r3, r9, r2
 800a6fc:	fb02 9313 	mls	r3, r2, r3, r9
 800a700:	4a13      	ldr	r2, [pc, #76]	; (800a750 <__strftime.isra.0+0x4a8>)
 800a702:	e78b      	b.n	800a61c <__strftime.isra.0+0x374>
 800a704:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800a708:	f001 fc68 	bl	800bfdc <abs>
 800a70c:	2364      	movs	r3, #100	; 0x64
 800a70e:	f1b9 0f00 	cmp.w	r9, #0
 800a712:	fb90 f2f3 	sdiv	r2, r0, r3
 800a716:	fb02 0013 	mls	r0, r2, r3, r0
 800a71a:	da07      	bge.n	800a72c <__strftime.isra.0+0x484>
 800a71c:	6972      	ldr	r2, [r6, #20]
 800a71e:	f2a3 73cf 	subw	r3, r3, #1999	; 0x7cf
 800a722:	429a      	cmp	r2, r3
 800a724:	bfb8      	it	lt
 800a726:	f04f 0901 	movlt.w	r9, #1
 800a72a:	e7de      	b.n	800a6ea <__strftime.isra.0+0x442>
 800a72c:	d0dd      	beq.n	800a6ea <__strftime.isra.0+0x442>
 800a72e:	6972      	ldr	r2, [r6, #20]
 800a730:	4b03      	ldr	r3, [pc, #12]	; (800a740 <__strftime.isra.0+0x498>)
 800a732:	429a      	cmp	r2, r3
 800a734:	bfb8      	it	lt
 800a736:	f04f 39ff 	movlt.w	r9, #4294967295
 800a73a:	e7d6      	b.n	800a6ea <__strftime.isra.0+0x442>
 800a73c:	0800ff2c 	.word	0x0800ff2c
 800a740:	fffff894 	.word	0xfffff894
 800a744:	0801009f 	.word	0x0801009f
 800a748:	0800fd66 	.word	0x0800fd66
 800a74c:	080103fe 	.word	0x080103fe
 800a750:	0800fd76 	.word	0x0800fd76
 800a754:	0800fd68 	.word	0x0800fd68
 800a758:	0800fd6c 	.word	0x0800fd6c
 800a75c:	0800fd7f 	.word	0x0800fd7f
 800a760:	0800fd7b 	.word	0x0800fd7b
 800a764:	0800fd5e 	.word	0x0800fd5e
 800a768:	0800fd57 	.word	0x0800fd57
 800a76c:	6971      	ldr	r1, [r6, #20]
 800a76e:	4ab6      	ldr	r2, [pc, #728]	; (800aa48 <__strftime.isra.0+0x7a0>)
 800a770:	4291      	cmp	r1, r2
 800a772:	bfac      	ite	ge
 800a774:	2300      	movge	r3, #0
 800a776:	2301      	movlt	r3, #1
 800a778:	4630      	mov	r0, r6
 800a77a:	e9cd 3103 	strd	r3, r1, [sp, #12]
 800a77e:	f7ff fd31 	bl	800a1e4 <iso_year_adjust>
 800a782:	9904      	ldr	r1, [sp, #16]
 800a784:	2900      	cmp	r1, #0
 800a786:	4682      	mov	sl, r0
 800a788:	db2c      	blt.n	800a7e4 <__strftime.isra.0+0x53c>
 800a78a:	2264      	movs	r2, #100	; 0x64
 800a78c:	fb91 f2f2 	sdiv	r2, r1, r2
 800a790:	3213      	adds	r2, #19
 800a792:	6970      	ldr	r0, [r6, #20]
 800a794:	2800      	cmp	r0, #0
 800a796:	db30      	blt.n	800a7fa <__strftime.isra.0+0x552>
 800a798:	f04f 0c64 	mov.w	ip, #100	; 0x64
 800a79c:	fb90 fefc 	sdiv	lr, r0, ip
 800a7a0:	fb0c 001e 	mls	r0, ip, lr, r0
 800a7a4:	f1ba 0f00 	cmp.w	sl, #0
 800a7a8:	da36      	bge.n	800a818 <__strftime.isra.0+0x570>
 800a7aa:	6971      	ldr	r1, [r6, #20]
 800a7ac:	4ba7      	ldr	r3, [pc, #668]	; (800aa4c <__strftime.isra.0+0x7a4>)
 800a7ae:	4299      	cmp	r1, r3
 800a7b0:	db3d      	blt.n	800a82e <__strftime.isra.0+0x586>
 800a7b2:	4482      	add	sl, r0
 800a7b4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a7b8:	d13e      	bne.n	800a838 <__strftime.isra.0+0x590>
 800a7ba:	3a01      	subs	r2, #1
 800a7bc:	f04f 0a63 	mov.w	sl, #99	; 0x63
 800a7c0:	9b03      	ldr	r3, [sp, #12]
 800a7c2:	2064      	movs	r0, #100	; 0x64
 800a7c4:	fb00 aa02 	mla	sl, r0, r2, sl
 800a7c8:	2b00      	cmp	r3, #0
 800a7ca:	f000 81ad 	beq.w	800ab28 <__strftime.isra.0+0x880>
 800a7ce:	222d      	movs	r2, #45	; 0x2d
 800a7d0:	f88d 2018 	strb.w	r2, [sp, #24]
 800a7d4:	f1b9 0f00 	cmp.w	r9, #0
 800a7d8:	d001      	beq.n	800a7de <__strftime.isra.0+0x536>
 800a7da:	f109 39ff 	add.w	r9, r9, #4294967295
 800a7de:	f10d 0219 	add.w	r2, sp, #25
 800a7e2:	e1ac      	b.n	800ab3e <__strftime.isra.0+0x896>
 800a7e4:	f201 706c 	addw	r0, r1, #1900	; 0x76c
 800a7e8:	9104      	str	r1, [sp, #16]
 800a7ea:	f001 fbf7 	bl	800bfdc <abs>
 800a7ee:	f04f 0c64 	mov.w	ip, #100	; 0x64
 800a7f2:	9904      	ldr	r1, [sp, #16]
 800a7f4:	fb90 f2fc 	sdiv	r2, r0, ip
 800a7f8:	e7cb      	b.n	800a792 <__strftime.isra.0+0x4ea>
 800a7fa:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800a7fe:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a802:	f001 fbeb 	bl	800bfdc <abs>
 800a806:	f04f 0c64 	mov.w	ip, #100	; 0x64
 800a80a:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
 800a80e:	fb90 fefc 	sdiv	lr, r0, ip
 800a812:	fb0e 001c 	mls	r0, lr, ip, r0
 800a816:	e7c5      	b.n	800a7a4 <__strftime.isra.0+0x4fc>
 800a818:	d0cb      	beq.n	800a7b2 <__strftime.isra.0+0x50a>
 800a81a:	4b8b      	ldr	r3, [pc, #556]	; (800aa48 <__strftime.isra.0+0x7a0>)
 800a81c:	4299      	cmp	r1, r3
 800a81e:	bfb4      	ite	lt
 800a820:	2301      	movlt	r3, #1
 800a822:	2300      	movge	r3, #0
 800a824:	9303      	str	r3, [sp, #12]
 800a826:	bfb8      	it	lt
 800a828:	f04f 3aff 	movlt.w	sl, #4294967295
 800a82c:	e7c1      	b.n	800a7b2 <__strftime.isra.0+0x50a>
 800a82e:	f04f 0a01 	mov.w	sl, #1
 800a832:	f8cd a00c 	str.w	sl, [sp, #12]
 800a836:	e7bc      	b.n	800a7b2 <__strftime.isra.0+0x50a>
 800a838:	f1ba 0f64 	cmp.w	sl, #100	; 0x64
 800a83c:	bf04      	itt	eq
 800a83e:	3201      	addeq	r2, #1
 800a840:	f04f 0a00 	moveq.w	sl, #0
 800a844:	e7bc      	b.n	800a7c0 <__strftime.isra.0+0x518>
 800a846:	4982      	ldr	r1, [pc, #520]	; (800aa50 <__strftime.isra.0+0x7a8>)
 800a848:	4a82      	ldr	r2, [pc, #520]	; (800aa54 <__strftime.isra.0+0x7ac>)
 800a84a:	68b3      	ldr	r3, [r6, #8]
 800a84c:	286b      	cmp	r0, #107	; 0x6b
 800a84e:	bf08      	it	eq
 800a850:	460a      	moveq	r2, r1
 800a852:	e6e3      	b.n	800a61c <__strftime.isra.0+0x374>
 800a854:	68b3      	ldr	r3, [r6, #8]
 800a856:	b163      	cbz	r3, 800a872 <__strftime.isra.0+0x5ca>
 800a858:	2b0c      	cmp	r3, #12
 800a85a:	d004      	beq.n	800a866 <__strftime.isra.0+0x5be>
 800a85c:	210c      	movs	r1, #12
 800a85e:	fb93 f2f1 	sdiv	r2, r3, r1
 800a862:	fb01 3312 	mls	r3, r1, r2, r3
 800a866:	497b      	ldr	r1, [pc, #492]	; (800aa54 <__strftime.isra.0+0x7ac>)
 800a868:	4a79      	ldr	r2, [pc, #484]	; (800aa50 <__strftime.isra.0+0x7a8>)
 800a86a:	2849      	cmp	r0, #73	; 0x49
 800a86c:	bf08      	it	eq
 800a86e:	460a      	moveq	r2, r1
 800a870:	e6d4      	b.n	800a61c <__strftime.isra.0+0x374>
 800a872:	230c      	movs	r3, #12
 800a874:	e7f7      	b.n	800a866 <__strftime.isra.0+0x5be>
 800a876:	69f3      	ldr	r3, [r6, #28]
 800a878:	4a77      	ldr	r2, [pc, #476]	; (800aa58 <__strftime.isra.0+0x7b0>)
 800a87a:	3301      	adds	r3, #1
 800a87c:	e6ce      	b.n	800a61c <__strftime.isra.0+0x374>
 800a87e:	6933      	ldr	r3, [r6, #16]
 800a880:	3301      	adds	r3, #1
 800a882:	e73d      	b.n	800a700 <__strftime.isra.0+0x458>
 800a884:	6873      	ldr	r3, [r6, #4]
 800a886:	e73b      	b.n	800a700 <__strftime.isra.0+0x458>
 800a888:	1e6b      	subs	r3, r5, #1
 800a88a:	429c      	cmp	r4, r3
 800a88c:	f4bf ad3e 	bcs.w	800a30c <__strftime.isra.0+0x64>
 800a890:	230a      	movs	r3, #10
 800a892:	553b      	strb	r3, [r7, r4]
 800a894:	3401      	adds	r4, #1
 800a896:	e60b      	b.n	800a4b0 <__strftime.isra.0+0x208>
 800a898:	68b3      	ldr	r3, [r6, #8]
 800a89a:	2b0b      	cmp	r3, #11
 800a89c:	4b6f      	ldr	r3, [pc, #444]	; (800aa5c <__strftime.isra.0+0x7b4>)
 800a89e:	bfd4      	ite	le
 800a8a0:	2200      	movle	r2, #0
 800a8a2:	2201      	movgt	r2, #1
 800a8a4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800a8a8:	f8d3 90a4 	ldr.w	r9, [r3, #164]	; 0xa4
 800a8ac:	4648      	mov	r0, r9
 800a8ae:	f7f5 fca1 	bl	80001f4 <strlen>
 800a8b2:	f109 32ff 	add.w	r2, r9, #4294967295
 800a8b6:	4420      	add	r0, r4
 800a8b8:	f105 3cff 	add.w	ip, r5, #4294967295
 800a8bc:	42a0      	cmp	r0, r4
 800a8be:	f43f adf7 	beq.w	800a4b0 <__strftime.isra.0+0x208>
 800a8c2:	45a4      	cmp	ip, r4
 800a8c4:	f67f ad22 	bls.w	800a30c <__strftime.isra.0+0x64>
 800a8c8:	f898 1000 	ldrb.w	r1, [r8]
 800a8cc:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a8d0:	2950      	cmp	r1, #80	; 0x50
 800a8d2:	d107      	bne.n	800a8e4 <__strftime.isra.0+0x63c>
 800a8d4:	4962      	ldr	r1, [pc, #392]	; (800aa60 <__strftime.isra.0+0x7b8>)
 800a8d6:	5cc9      	ldrb	r1, [r1, r3]
 800a8d8:	f001 0103 	and.w	r1, r1, #3
 800a8dc:	2901      	cmp	r1, #1
 800a8de:	bf08      	it	eq
 800a8e0:	3320      	addeq	r3, #32
 800a8e2:	b2db      	uxtb	r3, r3
 800a8e4:	553b      	strb	r3, [r7, r4]
 800a8e6:	3401      	adds	r4, #1
 800a8e8:	e7e8      	b.n	800a8bc <__strftime.isra.0+0x614>
 800a8ea:	6873      	ldr	r3, [r6, #4]
 800a8ec:	9300      	str	r3, [sp, #0]
 800a8ee:	4a5d      	ldr	r2, [pc, #372]	; (800aa64 <__strftime.isra.0+0x7bc>)
 800a8f0:	68b3      	ldr	r3, [r6, #8]
 800a8f2:	1b29      	subs	r1, r5, r4
 800a8f4:	1938      	adds	r0, r7, r4
 800a8f6:	f7ff fb99 	bl	800a02c <sniprintf>
 800a8fa:	e693      	b.n	800a624 <__strftime.isra.0+0x37c>
 800a8fc:	6a33      	ldr	r3, [r6, #32]
 800a8fe:	2b00      	cmp	r3, #0
 800a900:	db7a      	blt.n	800a9f8 <__strftime.isra.0+0x750>
 800a902:	f001 f9c7 	bl	800bc94 <__tz_lock>
 800a906:	9b02      	ldr	r3, [sp, #8]
 800a908:	b90b      	cbnz	r3, 800a90e <__strftime.isra.0+0x666>
 800a90a:	f001 f9cf 	bl	800bcac <_tzset_unlocked>
 800a90e:	f002 fdeb 	bl	800d4e8 <__gettzinfo>
 800a912:	6a33      	ldr	r3, [r6, #32]
 800a914:	2b00      	cmp	r3, #0
 800a916:	bfd4      	ite	le
 800a918:	2200      	movle	r2, #0
 800a91a:	2201      	movgt	r2, #1
 800a91c:	2328      	movs	r3, #40	; 0x28
 800a91e:	fb02 3303 	mla	r3, r2, r3, r3
 800a922:	58c3      	ldr	r3, [r0, r3]
 800a924:	f1c3 0900 	rsb	r9, r3, #0
 800a928:	f001 f9ba 	bl	800bca0 <__tz_unlock>
 800a92c:	2301      	movs	r3, #1
 800a92e:	9302      	str	r3, [sp, #8]
 800a930:	6972      	ldr	r2, [r6, #20]
 800a932:	f1b2 0345 	subs.w	r3, r2, #69	; 0x45
 800a936:	ea4f 7ce2 	mov.w	ip, r2, asr #31
 800a93a:	f16c 0c00 	sbc.w	ip, ip, #0
 800a93e:	f1bc 0f00 	cmp.w	ip, #0
 800a942:	eba5 0104 	sub.w	r1, r5, r4
 800a946:	eb07 0004 	add.w	r0, r7, r4
 800a94a:	da02      	bge.n	800a952 <__strftime.isra.0+0x6aa>
 800a94c:	3303      	adds	r3, #3
 800a94e:	f14c 0c00 	adc.w	ip, ip, #0
 800a952:	089b      	lsrs	r3, r3, #2
 800a954:	ea43 738c 	orr.w	r3, r3, ip, lsl #30
 800a958:	f102 3aff 	add.w	sl, r2, #4294967295
 800a95c:	ea4f 0cac 	mov.w	ip, ip, asr #2
 800a960:	f04f 0e64 	mov.w	lr, #100	; 0x64
 800a964:	fb9a fefe 	sdiv	lr, sl, lr
 800a968:	ebb3 030e 	subs.w	r3, r3, lr
 800a96c:	eb6c 7cee 	sbc.w	ip, ip, lr, asr #31
 800a970:	f202 1a2b 	addw	sl, r2, #299	; 0x12b
 800a974:	f44f 7ec8 	mov.w	lr, #400	; 0x190
 800a978:	fb9a fefe 	sdiv	lr, sl, lr
 800a97c:	eb13 030e 	adds.w	r3, r3, lr
 800a980:	eb4c 7eee 	adc.w	lr, ip, lr, asr #31
 800a984:	3a46      	subs	r2, #70	; 0x46
 800a986:	f240 1c6d 	movw	ip, #365	; 0x16d
 800a98a:	fb0c f202 	mul.w	r2, ip, r2
 800a98e:	189b      	adds	r3, r3, r2
 800a990:	eb4e 72e2 	adc.w	r2, lr, r2, asr #31
 800a994:	f8d6 e01c 	ldr.w	lr, [r6, #28]
 800a998:	f04f 0c18 	mov.w	ip, #24
 800a99c:	eb13 030e 	adds.w	r3, r3, lr
 800a9a0:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 800a9a4:	fba3 3e0c 	umull	r3, lr, r3, ip
 800a9a8:	fb0c e202 	mla	r2, ip, r2, lr
 800a9ac:	f8d6 e008 	ldr.w	lr, [r6, #8]
 800a9b0:	f04f 0c3c 	mov.w	ip, #60	; 0x3c
 800a9b4:	eb13 030e 	adds.w	r3, r3, lr
 800a9b8:	eb42 7eee 	adc.w	lr, r2, lr, asr #31
 800a9bc:	fba3 320c 	umull	r3, r2, r3, ip
 800a9c0:	fb0c 220e 	mla	r2, ip, lr, r2
 800a9c4:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800a9c8:	eb13 030e 	adds.w	r3, r3, lr
 800a9cc:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 800a9d0:	fba3 3e0c 	umull	r3, lr, r3, ip
 800a9d4:	fb0c e202 	mla	r2, ip, r2, lr
 800a9d8:	f8d6 e000 	ldr.w	lr, [r6]
 800a9dc:	eb13 030e 	adds.w	r3, r3, lr
 800a9e0:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 800a9e4:	ebb3 0309 	subs.w	r3, r3, r9
 800a9e8:	eb62 72e9 	sbc.w	r2, r2, r9, asr #31
 800a9ec:	e9cd 3200 	strd	r3, r2, [sp]
 800a9f0:	4a1d      	ldr	r2, [pc, #116]	; (800aa68 <__strftime.isra.0+0x7c0>)
 800a9f2:	f7ff fb1b 	bl	800a02c <sniprintf>
 800a9f6:	e615      	b.n	800a624 <__strftime.isra.0+0x37c>
 800a9f8:	f04f 0900 	mov.w	r9, #0
 800a9fc:	e798      	b.n	800a930 <__strftime.isra.0+0x688>
 800a9fe:	6833      	ldr	r3, [r6, #0]
 800aa00:	e67e      	b.n	800a700 <__strftime.isra.0+0x458>
 800aa02:	1e6b      	subs	r3, r5, #1
 800aa04:	429c      	cmp	r4, r3
 800aa06:	f4bf ac81 	bcs.w	800a30c <__strftime.isra.0+0x64>
 800aa0a:	2309      	movs	r3, #9
 800aa0c:	e741      	b.n	800a892 <__strftime.isra.0+0x5ea>
 800aa0e:	6833      	ldr	r3, [r6, #0]
 800aa10:	9301      	str	r3, [sp, #4]
 800aa12:	6873      	ldr	r3, [r6, #4]
 800aa14:	9300      	str	r3, [sp, #0]
 800aa16:	4a15      	ldr	r2, [pc, #84]	; (800aa6c <__strftime.isra.0+0x7c4>)
 800aa18:	68b3      	ldr	r3, [r6, #8]
 800aa1a:	e5f4      	b.n	800a606 <__strftime.isra.0+0x35e>
 800aa1c:	1e6b      	subs	r3, r5, #1
 800aa1e:	429c      	cmp	r4, r3
 800aa20:	f4bf ac74 	bcs.w	800a30c <__strftime.isra.0+0x64>
 800aa24:	69b3      	ldr	r3, [r6, #24]
 800aa26:	1c62      	adds	r2, r4, #1
 800aa28:	b91b      	cbnz	r3, 800aa32 <__strftime.isra.0+0x78a>
 800aa2a:	2337      	movs	r3, #55	; 0x37
 800aa2c:	553b      	strb	r3, [r7, r4]
 800aa2e:	4614      	mov	r4, r2
 800aa30:	e53e      	b.n	800a4b0 <__strftime.isra.0+0x208>
 800aa32:	3330      	adds	r3, #48	; 0x30
 800aa34:	e7fa      	b.n	800aa2c <__strftime.isra.0+0x784>
 800aa36:	69f3      	ldr	r3, [r6, #28]
 800aa38:	69b2      	ldr	r2, [r6, #24]
 800aa3a:	3307      	adds	r3, #7
 800aa3c:	1a9b      	subs	r3, r3, r2
 800aa3e:	2207      	movs	r2, #7
 800aa40:	fb93 f3f2 	sdiv	r3, r3, r2
 800aa44:	e65c      	b.n	800a700 <__strftime.isra.0+0x458>
 800aa46:	bf00      	nop
 800aa48:	fffff894 	.word	0xfffff894
 800aa4c:	fffff895 	.word	0xfffff895
 800aa50:	0800fd68 	.word	0x0800fd68
 800aa54:	0800fd76 	.word	0x0800fd76
 800aa58:	0800fd8b 	.word	0x0800fd8b
 800aa5c:	0800ff2c 	.word	0x0800ff2c
 800aa60:	080100a1 	.word	0x080100a1
 800aa64:	0800fd9a 	.word	0x0800fd9a
 800aa68:	0800fd90 	.word	0x0800fd90
 800aa6c:	0800fd95 	.word	0x0800fd95
 800aa70:	4630      	mov	r0, r6
 800aa72:	f7ff fbb7 	bl	800a1e4 <iso_year_adjust>
 800aa76:	69b2      	ldr	r2, [r6, #24]
 800aa78:	b132      	cbz	r2, 800aa88 <__strftime.isra.0+0x7e0>
 800aa7a:	3a01      	subs	r2, #1
 800aa7c:	2800      	cmp	r0, #0
 800aa7e:	dc28      	bgt.n	800aad2 <__strftime.isra.0+0x82a>
 800aa80:	69f3      	ldr	r3, [r6, #28]
 800aa82:	d103      	bne.n	800aa8c <__strftime.isra.0+0x7e4>
 800aa84:	330a      	adds	r3, #10
 800aa86:	e7d9      	b.n	800aa3c <__strftime.isra.0+0x794>
 800aa88:	2206      	movs	r2, #6
 800aa8a:	e7f7      	b.n	800aa7c <__strftime.isra.0+0x7d4>
 800aa8c:	6971      	ldr	r1, [r6, #20]
 800aa8e:	2900      	cmp	r1, #0
 800aa90:	eba2 0203 	sub.w	r2, r2, r3
 800aa94:	f240 736b 	movw	r3, #1899	; 0x76b
 800aa98:	bfa8      	it	ge
 800aa9a:	f06f 0364 	mvnge.w	r3, #100	; 0x64
 800aa9e:	440b      	add	r3, r1
 800aaa0:	0799      	lsls	r1, r3, #30
 800aaa2:	d105      	bne.n	800aab0 <__strftime.isra.0+0x808>
 800aaa4:	2064      	movs	r0, #100	; 0x64
 800aaa6:	fb93 f1f0 	sdiv	r1, r3, r0
 800aaaa:	fb00 3111 	mls	r1, r0, r1, r3
 800aaae:	b971      	cbnz	r1, 800aace <__strftime.isra.0+0x826>
 800aab0:	f44f 71c8 	mov.w	r1, #400	; 0x190
 800aab4:	fb93 f0f1 	sdiv	r0, r3, r1
 800aab8:	fb01 3310 	mls	r3, r1, r0, r3
 800aabc:	fab3 f383 	clz	r3, r3
 800aac0:	095b      	lsrs	r3, r3, #5
 800aac2:	1ad3      	subs	r3, r2, r3
 800aac4:	2b05      	cmp	r3, #5
 800aac6:	bfb4      	ite	lt
 800aac8:	2335      	movlt	r3, #53	; 0x35
 800aaca:	2334      	movge	r3, #52	; 0x34
 800aacc:	e618      	b.n	800a700 <__strftime.isra.0+0x458>
 800aace:	2301      	movs	r3, #1
 800aad0:	e7f7      	b.n	800aac2 <__strftime.isra.0+0x81a>
 800aad2:	2301      	movs	r3, #1
 800aad4:	e614      	b.n	800a700 <__strftime.isra.0+0x458>
 800aad6:	1e6b      	subs	r3, r5, #1
 800aad8:	429c      	cmp	r4, r3
 800aada:	f4bf ac17 	bcs.w	800a30c <__strftime.isra.0+0x64>
 800aade:	69b3      	ldr	r3, [r6, #24]
 800aae0:	3330      	adds	r3, #48	; 0x30
 800aae2:	e6d6      	b.n	800a892 <__strftime.isra.0+0x5ea>
 800aae4:	69b2      	ldr	r2, [r6, #24]
 800aae6:	b11a      	cbz	r2, 800aaf0 <__strftime.isra.0+0x848>
 800aae8:	3a01      	subs	r2, #1
 800aaea:	69f3      	ldr	r3, [r6, #28]
 800aaec:	3307      	adds	r3, #7
 800aaee:	e7a5      	b.n	800aa3c <__strftime.isra.0+0x794>
 800aaf0:	2206      	movs	r2, #6
 800aaf2:	e7fa      	b.n	800aaea <__strftime.isra.0+0x842>
 800aaf4:	6970      	ldr	r0, [r6, #20]
 800aaf6:	2800      	cmp	r0, #0
 800aaf8:	db05      	blt.n	800ab06 <__strftime.isra.0+0x85e>
 800aafa:	2364      	movs	r3, #100	; 0x64
 800aafc:	fb90 f2f3 	sdiv	r2, r0, r3
 800ab00:	fb02 0313 	mls	r3, r2, r3, r0
 800ab04:	e5fc      	b.n	800a700 <__strftime.isra.0+0x458>
 800ab06:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800ab0a:	f001 fa67 	bl	800bfdc <abs>
 800ab0e:	e7f4      	b.n	800aafa <__strftime.isra.0+0x852>
 800ab10:	6972      	ldr	r2, [r6, #20]
 800ab12:	494c      	ldr	r1, [pc, #304]	; (800ac44 <__strftime.isra.0+0x99c>)
 800ab14:	428a      	cmp	r2, r1
 800ab16:	da05      	bge.n	800ab24 <__strftime.isra.0+0x87c>
 800ab18:	202d      	movs	r0, #45	; 0x2d
 800ab1a:	f88d 0018 	strb.w	r0, [sp, #24]
 800ab1e:	eba1 0a02 	sub.w	sl, r1, r2
 800ab22:	e657      	b.n	800a7d4 <__strftime.isra.0+0x52c>
 800ab24:	f202 7a6c 	addw	sl, r2, #1900	; 0x76c
 800ab28:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 800ab2c:	d106      	bne.n	800ab3c <__strftime.isra.0+0x894>
 800ab2e:	f242 720f 	movw	r2, #9999	; 0x270f
 800ab32:	4592      	cmp	sl, r2
 800ab34:	d902      	bls.n	800ab3c <__strftime.isra.0+0x894>
 800ab36:	f88d b018 	strb.w	fp, [sp, #24]
 800ab3a:	e64b      	b.n	800a7d4 <__strftime.isra.0+0x52c>
 800ab3c:	aa06      	add	r2, sp, #24
 800ab3e:	2125      	movs	r1, #37	; 0x25
 800ab40:	7011      	strb	r1, [r2, #0]
 800ab42:	f1bb 0f00 	cmp.w	fp, #0
 800ab46:	d108      	bne.n	800ab5a <__strftime.isra.0+0x8b2>
 800ab48:	1c50      	adds	r0, r2, #1
 800ab4a:	493f      	ldr	r1, [pc, #252]	; (800ac48 <__strftime.isra.0+0x9a0>)
 800ab4c:	f7ff fb42 	bl	800a1d4 <strcpy>
 800ab50:	f8cd a000 	str.w	sl, [sp]
 800ab54:	464b      	mov	r3, r9
 800ab56:	aa06      	add	r2, sp, #24
 800ab58:	e6cb      	b.n	800a8f2 <__strftime.isra.0+0x64a>
 800ab5a:	2330      	movs	r3, #48	; 0x30
 800ab5c:	1c90      	adds	r0, r2, #2
 800ab5e:	7053      	strb	r3, [r2, #1]
 800ab60:	e7f3      	b.n	800ab4a <__strftime.isra.0+0x8a2>
 800ab62:	6a33      	ldr	r3, [r6, #32]
 800ab64:	2b00      	cmp	r3, #0
 800ab66:	f6ff aca3 	blt.w	800a4b0 <__strftime.isra.0+0x208>
 800ab6a:	f001 f893 	bl	800bc94 <__tz_lock>
 800ab6e:	9b02      	ldr	r3, [sp, #8]
 800ab70:	b90b      	cbnz	r3, 800ab76 <__strftime.isra.0+0x8ce>
 800ab72:	f001 f89b 	bl	800bcac <_tzset_unlocked>
 800ab76:	f002 fcb7 	bl	800d4e8 <__gettzinfo>
 800ab7a:	6a33      	ldr	r3, [r6, #32]
 800ab7c:	2b00      	cmp	r3, #0
 800ab7e:	bfd4      	ite	le
 800ab80:	2200      	movle	r2, #0
 800ab82:	2201      	movgt	r2, #1
 800ab84:	2328      	movs	r3, #40	; 0x28
 800ab86:	fb02 3303 	mla	r3, r2, r3, r3
 800ab8a:	eb07 0a04 	add.w	sl, r7, r4
 800ab8e:	58c3      	ldr	r3, [r0, r3]
 800ab90:	f1c3 0900 	rsb	r9, r3, #0
 800ab94:	f001 f884 	bl	800bca0 <__tz_unlock>
 800ab98:	233c      	movs	r3, #60	; 0x3c
 800ab9a:	fb99 f0f3 	sdiv	r0, r9, r3
 800ab9e:	f002 fd53 	bl	800d648 <labs>
 800aba2:	233c      	movs	r3, #60	; 0x3c
 800aba4:	eba5 0b04 	sub.w	fp, r5, r4
 800aba8:	fb90 f2f3 	sdiv	r2, r0, r3
 800abac:	fb02 0013 	mls	r0, r2, r3, r0
 800abb0:	9000      	str	r0, [sp, #0]
 800abb2:	4a26      	ldr	r2, [pc, #152]	; (800ac4c <__strftime.isra.0+0x9a4>)
 800abb4:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 800abb8:	4659      	mov	r1, fp
 800abba:	4650      	mov	r0, sl
 800abbc:	fb99 f3f3 	sdiv	r3, r9, r3
 800abc0:	f7ff fa34 	bl	800a02c <sniprintf>
 800abc4:	2800      	cmp	r0, #0
 800abc6:	f6ff aba1 	blt.w	800a30c <__strftime.isra.0+0x64>
 800abca:	4404      	add	r4, r0
 800abcc:	42a5      	cmp	r5, r4
 800abce:	f67f ab9d 	bls.w	800a30c <__strftime.isra.0+0x64>
 800abd2:	2301      	movs	r3, #1
 800abd4:	9302      	str	r3, [sp, #8]
 800abd6:	e46b      	b.n	800a4b0 <__strftime.isra.0+0x208>
 800abd8:	6a33      	ldr	r3, [r6, #32]
 800abda:	2b00      	cmp	r3, #0
 800abdc:	f6ff ac68 	blt.w	800a4b0 <__strftime.isra.0+0x208>
 800abe0:	f001 f858 	bl	800bc94 <__tz_lock>
 800abe4:	9b02      	ldr	r3, [sp, #8]
 800abe6:	b90b      	cbnz	r3, 800abec <__strftime.isra.0+0x944>
 800abe8:	f001 f860 	bl	800bcac <_tzset_unlocked>
 800abec:	6a33      	ldr	r3, [r6, #32]
 800abee:	4a18      	ldr	r2, [pc, #96]	; (800ac50 <__strftime.isra.0+0x9a8>)
 800abf0:	2b00      	cmp	r3, #0
 800abf2:	bfd4      	ite	le
 800abf4:	2300      	movle	r3, #0
 800abf6:	2301      	movgt	r3, #1
 800abf8:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 800abfc:	4648      	mov	r0, r9
 800abfe:	f7f5 faf9 	bl	80001f4 <strlen>
 800ac02:	f109 39ff 	add.w	r9, r9, #4294967295
 800ac06:	4420      	add	r0, r4
 800ac08:	1e6b      	subs	r3, r5, #1
 800ac0a:	42a0      	cmp	r0, r4
 800ac0c:	d102      	bne.n	800ac14 <__strftime.isra.0+0x96c>
 800ac0e:	f001 f847 	bl	800bca0 <__tz_unlock>
 800ac12:	e7de      	b.n	800abd2 <__strftime.isra.0+0x92a>
 800ac14:	42a3      	cmp	r3, r4
 800ac16:	d904      	bls.n	800ac22 <__strftime.isra.0+0x97a>
 800ac18:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800ac1c:	553a      	strb	r2, [r7, r4]
 800ac1e:	3401      	adds	r4, #1
 800ac20:	e7f3      	b.n	800ac0a <__strftime.isra.0+0x962>
 800ac22:	f001 f83d 	bl	800bca0 <__tz_unlock>
 800ac26:	f7ff bb71 	b.w	800a30c <__strftime.isra.0+0x64>
 800ac2a:	1e6b      	subs	r3, r5, #1
 800ac2c:	429c      	cmp	r4, r3
 800ac2e:	f4bf ab6d 	bcs.w	800a30c <__strftime.isra.0+0x64>
 800ac32:	2325      	movs	r3, #37	; 0x25
 800ac34:	e62d      	b.n	800a892 <__strftime.isra.0+0x5ea>
 800ac36:	b10d      	cbz	r5, 800ac3c <__strftime.isra.0+0x994>
 800ac38:	2300      	movs	r3, #0
 800ac3a:	553b      	strb	r3, [r7, r4]
 800ac3c:	4620      	mov	r0, r4
 800ac3e:	b00f      	add	sp, #60	; 0x3c
 800ac40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac44:	fffff894 	.word	0xfffff894
 800ac48:	0800fd87 	.word	0x0800fd87
 800ac4c:	0800fda4 	.word	0x0800fda4
 800ac50:	20000070 	.word	0x20000070

0800ac54 <strftime>:
 800ac54:	f7ff bb28 	b.w	800a2a8 <__strftime.isra.0>

0800ac58 <strncmp>:
 800ac58:	b510      	push	{r4, lr}
 800ac5a:	b17a      	cbz	r2, 800ac7c <strncmp+0x24>
 800ac5c:	4603      	mov	r3, r0
 800ac5e:	3901      	subs	r1, #1
 800ac60:	1884      	adds	r4, r0, r2
 800ac62:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ac66:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ac6a:	4290      	cmp	r0, r2
 800ac6c:	d101      	bne.n	800ac72 <strncmp+0x1a>
 800ac6e:	42a3      	cmp	r3, r4
 800ac70:	d101      	bne.n	800ac76 <strncmp+0x1e>
 800ac72:	1a80      	subs	r0, r0, r2
 800ac74:	bd10      	pop	{r4, pc}
 800ac76:	2800      	cmp	r0, #0
 800ac78:	d1f3      	bne.n	800ac62 <strncmp+0xa>
 800ac7a:	e7fa      	b.n	800ac72 <strncmp+0x1a>
 800ac7c:	4610      	mov	r0, r2
 800ac7e:	e7f9      	b.n	800ac74 <strncmp+0x1c>

0800ac80 <strncpy>:
 800ac80:	b510      	push	{r4, lr}
 800ac82:	3901      	subs	r1, #1
 800ac84:	4603      	mov	r3, r0
 800ac86:	b132      	cbz	r2, 800ac96 <strncpy+0x16>
 800ac88:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ac8c:	f803 4b01 	strb.w	r4, [r3], #1
 800ac90:	3a01      	subs	r2, #1
 800ac92:	2c00      	cmp	r4, #0
 800ac94:	d1f7      	bne.n	800ac86 <strncpy+0x6>
 800ac96:	441a      	add	r2, r3
 800ac98:	2100      	movs	r1, #0
 800ac9a:	4293      	cmp	r3, r2
 800ac9c:	d100      	bne.n	800aca0 <strncpy+0x20>
 800ac9e:	bd10      	pop	{r4, pc}
 800aca0:	f803 1b01 	strb.w	r1, [r3], #1
 800aca4:	e7f9      	b.n	800ac9a <strncpy+0x1a>

0800aca6 <strstr>:
 800aca6:	780a      	ldrb	r2, [r1, #0]
 800aca8:	b570      	push	{r4, r5, r6, lr}
 800acaa:	b96a      	cbnz	r2, 800acc8 <strstr+0x22>
 800acac:	bd70      	pop	{r4, r5, r6, pc}
 800acae:	429a      	cmp	r2, r3
 800acb0:	d109      	bne.n	800acc6 <strstr+0x20>
 800acb2:	460c      	mov	r4, r1
 800acb4:	4605      	mov	r5, r0
 800acb6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800acba:	2b00      	cmp	r3, #0
 800acbc:	d0f6      	beq.n	800acac <strstr+0x6>
 800acbe:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800acc2:	429e      	cmp	r6, r3
 800acc4:	d0f7      	beq.n	800acb6 <strstr+0x10>
 800acc6:	3001      	adds	r0, #1
 800acc8:	7803      	ldrb	r3, [r0, #0]
 800acca:	2b00      	cmp	r3, #0
 800accc:	d1ef      	bne.n	800acae <strstr+0x8>
 800acce:	4618      	mov	r0, r3
 800acd0:	e7ec      	b.n	800acac <strstr+0x6>

0800acd2 <sulp>:
 800acd2:	b570      	push	{r4, r5, r6, lr}
 800acd4:	4604      	mov	r4, r0
 800acd6:	460d      	mov	r5, r1
 800acd8:	ec45 4b10 	vmov	d0, r4, r5
 800acdc:	4616      	mov	r6, r2
 800acde:	f003 f863 	bl	800dda8 <__ulp>
 800ace2:	ec51 0b10 	vmov	r0, r1, d0
 800ace6:	b17e      	cbz	r6, 800ad08 <sulp+0x36>
 800ace8:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800acec:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800acf0:	2b00      	cmp	r3, #0
 800acf2:	dd09      	ble.n	800ad08 <sulp+0x36>
 800acf4:	051b      	lsls	r3, r3, #20
 800acf6:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800acfa:	2400      	movs	r4, #0
 800acfc:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800ad00:	4622      	mov	r2, r4
 800ad02:	462b      	mov	r3, r5
 800ad04:	f7f5 fc90 	bl	8000628 <__aeabi_dmul>
 800ad08:	bd70      	pop	{r4, r5, r6, pc}
 800ad0a:	0000      	movs	r0, r0
 800ad0c:	0000      	movs	r0, r0
	...

0800ad10 <_strtod_l>:
 800ad10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad14:	ed2d 8b02 	vpush	{d8}
 800ad18:	b09d      	sub	sp, #116	; 0x74
 800ad1a:	461f      	mov	r7, r3
 800ad1c:	2300      	movs	r3, #0
 800ad1e:	9318      	str	r3, [sp, #96]	; 0x60
 800ad20:	4ba2      	ldr	r3, [pc, #648]	; (800afac <_strtod_l+0x29c>)
 800ad22:	9213      	str	r2, [sp, #76]	; 0x4c
 800ad24:	681b      	ldr	r3, [r3, #0]
 800ad26:	9305      	str	r3, [sp, #20]
 800ad28:	4604      	mov	r4, r0
 800ad2a:	4618      	mov	r0, r3
 800ad2c:	4688      	mov	r8, r1
 800ad2e:	f7f5 fa61 	bl	80001f4 <strlen>
 800ad32:	f04f 0a00 	mov.w	sl, #0
 800ad36:	4605      	mov	r5, r0
 800ad38:	f04f 0b00 	mov.w	fp, #0
 800ad3c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800ad40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ad42:	781a      	ldrb	r2, [r3, #0]
 800ad44:	2a2b      	cmp	r2, #43	; 0x2b
 800ad46:	d04e      	beq.n	800ade6 <_strtod_l+0xd6>
 800ad48:	d83b      	bhi.n	800adc2 <_strtod_l+0xb2>
 800ad4a:	2a0d      	cmp	r2, #13
 800ad4c:	d834      	bhi.n	800adb8 <_strtod_l+0xa8>
 800ad4e:	2a08      	cmp	r2, #8
 800ad50:	d834      	bhi.n	800adbc <_strtod_l+0xac>
 800ad52:	2a00      	cmp	r2, #0
 800ad54:	d03e      	beq.n	800add4 <_strtod_l+0xc4>
 800ad56:	2300      	movs	r3, #0
 800ad58:	930a      	str	r3, [sp, #40]	; 0x28
 800ad5a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800ad5c:	7833      	ldrb	r3, [r6, #0]
 800ad5e:	2b30      	cmp	r3, #48	; 0x30
 800ad60:	f040 80b0 	bne.w	800aec4 <_strtod_l+0x1b4>
 800ad64:	7873      	ldrb	r3, [r6, #1]
 800ad66:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800ad6a:	2b58      	cmp	r3, #88	; 0x58
 800ad6c:	d168      	bne.n	800ae40 <_strtod_l+0x130>
 800ad6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ad70:	9301      	str	r3, [sp, #4]
 800ad72:	ab18      	add	r3, sp, #96	; 0x60
 800ad74:	9702      	str	r7, [sp, #8]
 800ad76:	9300      	str	r3, [sp, #0]
 800ad78:	4a8d      	ldr	r2, [pc, #564]	; (800afb0 <_strtod_l+0x2a0>)
 800ad7a:	ab19      	add	r3, sp, #100	; 0x64
 800ad7c:	a917      	add	r1, sp, #92	; 0x5c
 800ad7e:	4620      	mov	r0, r4
 800ad80:	f002 f866 	bl	800ce50 <__gethex>
 800ad84:	f010 0707 	ands.w	r7, r0, #7
 800ad88:	4605      	mov	r5, r0
 800ad8a:	d005      	beq.n	800ad98 <_strtod_l+0x88>
 800ad8c:	2f06      	cmp	r7, #6
 800ad8e:	d12c      	bne.n	800adea <_strtod_l+0xda>
 800ad90:	3601      	adds	r6, #1
 800ad92:	2300      	movs	r3, #0
 800ad94:	9617      	str	r6, [sp, #92]	; 0x5c
 800ad96:	930a      	str	r3, [sp, #40]	; 0x28
 800ad98:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ad9a:	2b00      	cmp	r3, #0
 800ad9c:	f040 8590 	bne.w	800b8c0 <_strtod_l+0xbb0>
 800ada0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ada2:	b1eb      	cbz	r3, 800ade0 <_strtod_l+0xd0>
 800ada4:	4652      	mov	r2, sl
 800ada6:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800adaa:	ec43 2b10 	vmov	d0, r2, r3
 800adae:	b01d      	add	sp, #116	; 0x74
 800adb0:	ecbd 8b02 	vpop	{d8}
 800adb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800adb8:	2a20      	cmp	r2, #32
 800adba:	d1cc      	bne.n	800ad56 <_strtod_l+0x46>
 800adbc:	3301      	adds	r3, #1
 800adbe:	9317      	str	r3, [sp, #92]	; 0x5c
 800adc0:	e7be      	b.n	800ad40 <_strtod_l+0x30>
 800adc2:	2a2d      	cmp	r2, #45	; 0x2d
 800adc4:	d1c7      	bne.n	800ad56 <_strtod_l+0x46>
 800adc6:	2201      	movs	r2, #1
 800adc8:	920a      	str	r2, [sp, #40]	; 0x28
 800adca:	1c5a      	adds	r2, r3, #1
 800adcc:	9217      	str	r2, [sp, #92]	; 0x5c
 800adce:	785b      	ldrb	r3, [r3, #1]
 800add0:	2b00      	cmp	r3, #0
 800add2:	d1c2      	bne.n	800ad5a <_strtod_l+0x4a>
 800add4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800add6:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800adda:	2b00      	cmp	r3, #0
 800addc:	f040 856e 	bne.w	800b8bc <_strtod_l+0xbac>
 800ade0:	4652      	mov	r2, sl
 800ade2:	465b      	mov	r3, fp
 800ade4:	e7e1      	b.n	800adaa <_strtod_l+0x9a>
 800ade6:	2200      	movs	r2, #0
 800ade8:	e7ee      	b.n	800adc8 <_strtod_l+0xb8>
 800adea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800adec:	b13a      	cbz	r2, 800adfe <_strtod_l+0xee>
 800adee:	2135      	movs	r1, #53	; 0x35
 800adf0:	a81a      	add	r0, sp, #104	; 0x68
 800adf2:	f003 f8e4 	bl	800dfbe <__copybits>
 800adf6:	9918      	ldr	r1, [sp, #96]	; 0x60
 800adf8:	4620      	mov	r0, r4
 800adfa:	f002 fca3 	bl	800d744 <_Bfree>
 800adfe:	3f01      	subs	r7, #1
 800ae00:	2f04      	cmp	r7, #4
 800ae02:	d806      	bhi.n	800ae12 <_strtod_l+0x102>
 800ae04:	e8df f007 	tbb	[pc, r7]
 800ae08:	1714030a 	.word	0x1714030a
 800ae0c:	0a          	.byte	0x0a
 800ae0d:	00          	.byte	0x00
 800ae0e:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 800ae12:	0728      	lsls	r0, r5, #28
 800ae14:	d5c0      	bpl.n	800ad98 <_strtod_l+0x88>
 800ae16:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 800ae1a:	e7bd      	b.n	800ad98 <_strtod_l+0x88>
 800ae1c:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 800ae20:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800ae22:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800ae26:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800ae2a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800ae2e:	e7f0      	b.n	800ae12 <_strtod_l+0x102>
 800ae30:	f8df b180 	ldr.w	fp, [pc, #384]	; 800afb4 <_strtod_l+0x2a4>
 800ae34:	e7ed      	b.n	800ae12 <_strtod_l+0x102>
 800ae36:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800ae3a:	f04f 3aff 	mov.w	sl, #4294967295
 800ae3e:	e7e8      	b.n	800ae12 <_strtod_l+0x102>
 800ae40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ae42:	1c5a      	adds	r2, r3, #1
 800ae44:	9217      	str	r2, [sp, #92]	; 0x5c
 800ae46:	785b      	ldrb	r3, [r3, #1]
 800ae48:	2b30      	cmp	r3, #48	; 0x30
 800ae4a:	d0f9      	beq.n	800ae40 <_strtod_l+0x130>
 800ae4c:	2b00      	cmp	r3, #0
 800ae4e:	d0a3      	beq.n	800ad98 <_strtod_l+0x88>
 800ae50:	2301      	movs	r3, #1
 800ae52:	f04f 0900 	mov.w	r9, #0
 800ae56:	9304      	str	r3, [sp, #16]
 800ae58:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ae5a:	9308      	str	r3, [sp, #32]
 800ae5c:	f8cd 901c 	str.w	r9, [sp, #28]
 800ae60:	464f      	mov	r7, r9
 800ae62:	220a      	movs	r2, #10
 800ae64:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800ae66:	7806      	ldrb	r6, [r0, #0]
 800ae68:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800ae6c:	b2d9      	uxtb	r1, r3
 800ae6e:	2909      	cmp	r1, #9
 800ae70:	d92a      	bls.n	800aec8 <_strtod_l+0x1b8>
 800ae72:	9905      	ldr	r1, [sp, #20]
 800ae74:	462a      	mov	r2, r5
 800ae76:	f7ff feef 	bl	800ac58 <strncmp>
 800ae7a:	b398      	cbz	r0, 800aee4 <_strtod_l+0x1d4>
 800ae7c:	2000      	movs	r0, #0
 800ae7e:	4632      	mov	r2, r6
 800ae80:	463d      	mov	r5, r7
 800ae82:	9005      	str	r0, [sp, #20]
 800ae84:	4603      	mov	r3, r0
 800ae86:	2a65      	cmp	r2, #101	; 0x65
 800ae88:	d001      	beq.n	800ae8e <_strtod_l+0x17e>
 800ae8a:	2a45      	cmp	r2, #69	; 0x45
 800ae8c:	d118      	bne.n	800aec0 <_strtod_l+0x1b0>
 800ae8e:	b91d      	cbnz	r5, 800ae98 <_strtod_l+0x188>
 800ae90:	9a04      	ldr	r2, [sp, #16]
 800ae92:	4302      	orrs	r2, r0
 800ae94:	d09e      	beq.n	800add4 <_strtod_l+0xc4>
 800ae96:	2500      	movs	r5, #0
 800ae98:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800ae9c:	f108 0201 	add.w	r2, r8, #1
 800aea0:	9217      	str	r2, [sp, #92]	; 0x5c
 800aea2:	f898 2001 	ldrb.w	r2, [r8, #1]
 800aea6:	2a2b      	cmp	r2, #43	; 0x2b
 800aea8:	d075      	beq.n	800af96 <_strtod_l+0x286>
 800aeaa:	2a2d      	cmp	r2, #45	; 0x2d
 800aeac:	d07b      	beq.n	800afa6 <_strtod_l+0x296>
 800aeae:	f04f 0c00 	mov.w	ip, #0
 800aeb2:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800aeb6:	2909      	cmp	r1, #9
 800aeb8:	f240 8082 	bls.w	800afc0 <_strtod_l+0x2b0>
 800aebc:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800aec0:	2600      	movs	r6, #0
 800aec2:	e09d      	b.n	800b000 <_strtod_l+0x2f0>
 800aec4:	2300      	movs	r3, #0
 800aec6:	e7c4      	b.n	800ae52 <_strtod_l+0x142>
 800aec8:	2f08      	cmp	r7, #8
 800aeca:	bfd8      	it	le
 800aecc:	9907      	ldrle	r1, [sp, #28]
 800aece:	f100 0001 	add.w	r0, r0, #1
 800aed2:	bfda      	itte	le
 800aed4:	fb02 3301 	mlale	r3, r2, r1, r3
 800aed8:	9307      	strle	r3, [sp, #28]
 800aeda:	fb02 3909 	mlagt	r9, r2, r9, r3
 800aede:	3701      	adds	r7, #1
 800aee0:	9017      	str	r0, [sp, #92]	; 0x5c
 800aee2:	e7bf      	b.n	800ae64 <_strtod_l+0x154>
 800aee4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800aee6:	195a      	adds	r2, r3, r5
 800aee8:	9217      	str	r2, [sp, #92]	; 0x5c
 800aeea:	5d5a      	ldrb	r2, [r3, r5]
 800aeec:	2f00      	cmp	r7, #0
 800aeee:	d037      	beq.n	800af60 <_strtod_l+0x250>
 800aef0:	9005      	str	r0, [sp, #20]
 800aef2:	463d      	mov	r5, r7
 800aef4:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800aef8:	2b09      	cmp	r3, #9
 800aefa:	d912      	bls.n	800af22 <_strtod_l+0x212>
 800aefc:	2301      	movs	r3, #1
 800aefe:	e7c2      	b.n	800ae86 <_strtod_l+0x176>
 800af00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800af02:	1c5a      	adds	r2, r3, #1
 800af04:	9217      	str	r2, [sp, #92]	; 0x5c
 800af06:	785a      	ldrb	r2, [r3, #1]
 800af08:	3001      	adds	r0, #1
 800af0a:	2a30      	cmp	r2, #48	; 0x30
 800af0c:	d0f8      	beq.n	800af00 <_strtod_l+0x1f0>
 800af0e:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800af12:	2b08      	cmp	r3, #8
 800af14:	f200 84d9 	bhi.w	800b8ca <_strtod_l+0xbba>
 800af18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800af1a:	9005      	str	r0, [sp, #20]
 800af1c:	2000      	movs	r0, #0
 800af1e:	9308      	str	r3, [sp, #32]
 800af20:	4605      	mov	r5, r0
 800af22:	3a30      	subs	r2, #48	; 0x30
 800af24:	f100 0301 	add.w	r3, r0, #1
 800af28:	d014      	beq.n	800af54 <_strtod_l+0x244>
 800af2a:	9905      	ldr	r1, [sp, #20]
 800af2c:	4419      	add	r1, r3
 800af2e:	9105      	str	r1, [sp, #20]
 800af30:	462b      	mov	r3, r5
 800af32:	eb00 0e05 	add.w	lr, r0, r5
 800af36:	210a      	movs	r1, #10
 800af38:	4573      	cmp	r3, lr
 800af3a:	d113      	bne.n	800af64 <_strtod_l+0x254>
 800af3c:	182b      	adds	r3, r5, r0
 800af3e:	2b08      	cmp	r3, #8
 800af40:	f105 0501 	add.w	r5, r5, #1
 800af44:	4405      	add	r5, r0
 800af46:	dc1c      	bgt.n	800af82 <_strtod_l+0x272>
 800af48:	9907      	ldr	r1, [sp, #28]
 800af4a:	230a      	movs	r3, #10
 800af4c:	fb03 2301 	mla	r3, r3, r1, r2
 800af50:	9307      	str	r3, [sp, #28]
 800af52:	2300      	movs	r3, #0
 800af54:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800af56:	1c51      	adds	r1, r2, #1
 800af58:	9117      	str	r1, [sp, #92]	; 0x5c
 800af5a:	7852      	ldrb	r2, [r2, #1]
 800af5c:	4618      	mov	r0, r3
 800af5e:	e7c9      	b.n	800aef4 <_strtod_l+0x1e4>
 800af60:	4638      	mov	r0, r7
 800af62:	e7d2      	b.n	800af0a <_strtod_l+0x1fa>
 800af64:	2b08      	cmp	r3, #8
 800af66:	dc04      	bgt.n	800af72 <_strtod_l+0x262>
 800af68:	9e07      	ldr	r6, [sp, #28]
 800af6a:	434e      	muls	r6, r1
 800af6c:	9607      	str	r6, [sp, #28]
 800af6e:	3301      	adds	r3, #1
 800af70:	e7e2      	b.n	800af38 <_strtod_l+0x228>
 800af72:	f103 0c01 	add.w	ip, r3, #1
 800af76:	f1bc 0f10 	cmp.w	ip, #16
 800af7a:	bfd8      	it	le
 800af7c:	fb01 f909 	mulle.w	r9, r1, r9
 800af80:	e7f5      	b.n	800af6e <_strtod_l+0x25e>
 800af82:	2d10      	cmp	r5, #16
 800af84:	bfdc      	itt	le
 800af86:	230a      	movle	r3, #10
 800af88:	fb03 2909 	mlale	r9, r3, r9, r2
 800af8c:	e7e1      	b.n	800af52 <_strtod_l+0x242>
 800af8e:	2300      	movs	r3, #0
 800af90:	9305      	str	r3, [sp, #20]
 800af92:	2301      	movs	r3, #1
 800af94:	e77c      	b.n	800ae90 <_strtod_l+0x180>
 800af96:	f04f 0c00 	mov.w	ip, #0
 800af9a:	f108 0202 	add.w	r2, r8, #2
 800af9e:	9217      	str	r2, [sp, #92]	; 0x5c
 800afa0:	f898 2002 	ldrb.w	r2, [r8, #2]
 800afa4:	e785      	b.n	800aeb2 <_strtod_l+0x1a2>
 800afa6:	f04f 0c01 	mov.w	ip, #1
 800afaa:	e7f6      	b.n	800af9a <_strtod_l+0x28a>
 800afac:	08010280 	.word	0x08010280
 800afb0:	0800fdb0 	.word	0x0800fdb0
 800afb4:	7ff00000 	.word	0x7ff00000
 800afb8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800afba:	1c51      	adds	r1, r2, #1
 800afbc:	9117      	str	r1, [sp, #92]	; 0x5c
 800afbe:	7852      	ldrb	r2, [r2, #1]
 800afc0:	2a30      	cmp	r2, #48	; 0x30
 800afc2:	d0f9      	beq.n	800afb8 <_strtod_l+0x2a8>
 800afc4:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800afc8:	2908      	cmp	r1, #8
 800afca:	f63f af79 	bhi.w	800aec0 <_strtod_l+0x1b0>
 800afce:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800afd2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800afd4:	9206      	str	r2, [sp, #24]
 800afd6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800afd8:	1c51      	adds	r1, r2, #1
 800afda:	9117      	str	r1, [sp, #92]	; 0x5c
 800afdc:	7852      	ldrb	r2, [r2, #1]
 800afde:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 800afe2:	2e09      	cmp	r6, #9
 800afe4:	d937      	bls.n	800b056 <_strtod_l+0x346>
 800afe6:	9e06      	ldr	r6, [sp, #24]
 800afe8:	1b89      	subs	r1, r1, r6
 800afea:	2908      	cmp	r1, #8
 800afec:	f644 661f 	movw	r6, #19999	; 0x4e1f
 800aff0:	dc02      	bgt.n	800aff8 <_strtod_l+0x2e8>
 800aff2:	4576      	cmp	r6, lr
 800aff4:	bfa8      	it	ge
 800aff6:	4676      	movge	r6, lr
 800aff8:	f1bc 0f00 	cmp.w	ip, #0
 800affc:	d000      	beq.n	800b000 <_strtod_l+0x2f0>
 800affe:	4276      	negs	r6, r6
 800b000:	2d00      	cmp	r5, #0
 800b002:	d14d      	bne.n	800b0a0 <_strtod_l+0x390>
 800b004:	9904      	ldr	r1, [sp, #16]
 800b006:	4301      	orrs	r1, r0
 800b008:	f47f aec6 	bne.w	800ad98 <_strtod_l+0x88>
 800b00c:	2b00      	cmp	r3, #0
 800b00e:	f47f aee1 	bne.w	800add4 <_strtod_l+0xc4>
 800b012:	2a69      	cmp	r2, #105	; 0x69
 800b014:	d027      	beq.n	800b066 <_strtod_l+0x356>
 800b016:	dc24      	bgt.n	800b062 <_strtod_l+0x352>
 800b018:	2a49      	cmp	r2, #73	; 0x49
 800b01a:	d024      	beq.n	800b066 <_strtod_l+0x356>
 800b01c:	2a4e      	cmp	r2, #78	; 0x4e
 800b01e:	f47f aed9 	bne.w	800add4 <_strtod_l+0xc4>
 800b022:	499f      	ldr	r1, [pc, #636]	; (800b2a0 <_strtod_l+0x590>)
 800b024:	a817      	add	r0, sp, #92	; 0x5c
 800b026:	f002 f96b 	bl	800d300 <__match>
 800b02a:	2800      	cmp	r0, #0
 800b02c:	f43f aed2 	beq.w	800add4 <_strtod_l+0xc4>
 800b030:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b032:	781b      	ldrb	r3, [r3, #0]
 800b034:	2b28      	cmp	r3, #40	; 0x28
 800b036:	d12d      	bne.n	800b094 <_strtod_l+0x384>
 800b038:	499a      	ldr	r1, [pc, #616]	; (800b2a4 <_strtod_l+0x594>)
 800b03a:	aa1a      	add	r2, sp, #104	; 0x68
 800b03c:	a817      	add	r0, sp, #92	; 0x5c
 800b03e:	f002 f973 	bl	800d328 <__hexnan>
 800b042:	2805      	cmp	r0, #5
 800b044:	d126      	bne.n	800b094 <_strtod_l+0x384>
 800b046:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800b048:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 800b04c:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 800b050:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 800b054:	e6a0      	b.n	800ad98 <_strtod_l+0x88>
 800b056:	210a      	movs	r1, #10
 800b058:	fb01 2e0e 	mla	lr, r1, lr, r2
 800b05c:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 800b060:	e7b9      	b.n	800afd6 <_strtod_l+0x2c6>
 800b062:	2a6e      	cmp	r2, #110	; 0x6e
 800b064:	e7db      	b.n	800b01e <_strtod_l+0x30e>
 800b066:	4990      	ldr	r1, [pc, #576]	; (800b2a8 <_strtod_l+0x598>)
 800b068:	a817      	add	r0, sp, #92	; 0x5c
 800b06a:	f002 f949 	bl	800d300 <__match>
 800b06e:	2800      	cmp	r0, #0
 800b070:	f43f aeb0 	beq.w	800add4 <_strtod_l+0xc4>
 800b074:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b076:	498d      	ldr	r1, [pc, #564]	; (800b2ac <_strtod_l+0x59c>)
 800b078:	3b01      	subs	r3, #1
 800b07a:	a817      	add	r0, sp, #92	; 0x5c
 800b07c:	9317      	str	r3, [sp, #92]	; 0x5c
 800b07e:	f002 f93f 	bl	800d300 <__match>
 800b082:	b910      	cbnz	r0, 800b08a <_strtod_l+0x37a>
 800b084:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b086:	3301      	adds	r3, #1
 800b088:	9317      	str	r3, [sp, #92]	; 0x5c
 800b08a:	f8df b230 	ldr.w	fp, [pc, #560]	; 800b2bc <_strtod_l+0x5ac>
 800b08e:	f04f 0a00 	mov.w	sl, #0
 800b092:	e681      	b.n	800ad98 <_strtod_l+0x88>
 800b094:	4886      	ldr	r0, [pc, #536]	; (800b2b0 <_strtod_l+0x5a0>)
 800b096:	f7fd fbf3 	bl	8008880 <nan>
 800b09a:	ec5b ab10 	vmov	sl, fp, d0
 800b09e:	e67b      	b.n	800ad98 <_strtod_l+0x88>
 800b0a0:	9b05      	ldr	r3, [sp, #20]
 800b0a2:	9807      	ldr	r0, [sp, #28]
 800b0a4:	1af3      	subs	r3, r6, r3
 800b0a6:	2f00      	cmp	r7, #0
 800b0a8:	bf08      	it	eq
 800b0aa:	462f      	moveq	r7, r5
 800b0ac:	2d10      	cmp	r5, #16
 800b0ae:	9306      	str	r3, [sp, #24]
 800b0b0:	46a8      	mov	r8, r5
 800b0b2:	bfa8      	it	ge
 800b0b4:	f04f 0810 	movge.w	r8, #16
 800b0b8:	f7f5 fa3c 	bl	8000534 <__aeabi_ui2d>
 800b0bc:	2d09      	cmp	r5, #9
 800b0be:	4682      	mov	sl, r0
 800b0c0:	468b      	mov	fp, r1
 800b0c2:	dd13      	ble.n	800b0ec <_strtod_l+0x3dc>
 800b0c4:	4b7b      	ldr	r3, [pc, #492]	; (800b2b4 <_strtod_l+0x5a4>)
 800b0c6:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800b0ca:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800b0ce:	f7f5 faab 	bl	8000628 <__aeabi_dmul>
 800b0d2:	4682      	mov	sl, r0
 800b0d4:	4648      	mov	r0, r9
 800b0d6:	468b      	mov	fp, r1
 800b0d8:	f7f5 fa2c 	bl	8000534 <__aeabi_ui2d>
 800b0dc:	4602      	mov	r2, r0
 800b0de:	460b      	mov	r3, r1
 800b0e0:	4650      	mov	r0, sl
 800b0e2:	4659      	mov	r1, fp
 800b0e4:	f7f5 f8ea 	bl	80002bc <__adddf3>
 800b0e8:	4682      	mov	sl, r0
 800b0ea:	468b      	mov	fp, r1
 800b0ec:	2d0f      	cmp	r5, #15
 800b0ee:	dc38      	bgt.n	800b162 <_strtod_l+0x452>
 800b0f0:	9b06      	ldr	r3, [sp, #24]
 800b0f2:	2b00      	cmp	r3, #0
 800b0f4:	f43f ae50 	beq.w	800ad98 <_strtod_l+0x88>
 800b0f8:	dd24      	ble.n	800b144 <_strtod_l+0x434>
 800b0fa:	2b16      	cmp	r3, #22
 800b0fc:	dc0b      	bgt.n	800b116 <_strtod_l+0x406>
 800b0fe:	496d      	ldr	r1, [pc, #436]	; (800b2b4 <_strtod_l+0x5a4>)
 800b100:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b104:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b108:	4652      	mov	r2, sl
 800b10a:	465b      	mov	r3, fp
 800b10c:	f7f5 fa8c 	bl	8000628 <__aeabi_dmul>
 800b110:	4682      	mov	sl, r0
 800b112:	468b      	mov	fp, r1
 800b114:	e640      	b.n	800ad98 <_strtod_l+0x88>
 800b116:	9a06      	ldr	r2, [sp, #24]
 800b118:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 800b11c:	4293      	cmp	r3, r2
 800b11e:	db20      	blt.n	800b162 <_strtod_l+0x452>
 800b120:	4c64      	ldr	r4, [pc, #400]	; (800b2b4 <_strtod_l+0x5a4>)
 800b122:	f1c5 050f 	rsb	r5, r5, #15
 800b126:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800b12a:	4652      	mov	r2, sl
 800b12c:	465b      	mov	r3, fp
 800b12e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b132:	f7f5 fa79 	bl	8000628 <__aeabi_dmul>
 800b136:	9b06      	ldr	r3, [sp, #24]
 800b138:	1b5d      	subs	r5, r3, r5
 800b13a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800b13e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b142:	e7e3      	b.n	800b10c <_strtod_l+0x3fc>
 800b144:	9b06      	ldr	r3, [sp, #24]
 800b146:	3316      	adds	r3, #22
 800b148:	db0b      	blt.n	800b162 <_strtod_l+0x452>
 800b14a:	9b05      	ldr	r3, [sp, #20]
 800b14c:	1b9e      	subs	r6, r3, r6
 800b14e:	4b59      	ldr	r3, [pc, #356]	; (800b2b4 <_strtod_l+0x5a4>)
 800b150:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 800b154:	e9d6 2300 	ldrd	r2, r3, [r6]
 800b158:	4650      	mov	r0, sl
 800b15a:	4659      	mov	r1, fp
 800b15c:	f7f5 fb8e 	bl	800087c <__aeabi_ddiv>
 800b160:	e7d6      	b.n	800b110 <_strtod_l+0x400>
 800b162:	9b06      	ldr	r3, [sp, #24]
 800b164:	eba5 0808 	sub.w	r8, r5, r8
 800b168:	4498      	add	r8, r3
 800b16a:	f1b8 0f00 	cmp.w	r8, #0
 800b16e:	dd74      	ble.n	800b25a <_strtod_l+0x54a>
 800b170:	f018 030f 	ands.w	r3, r8, #15
 800b174:	d00a      	beq.n	800b18c <_strtod_l+0x47c>
 800b176:	494f      	ldr	r1, [pc, #316]	; (800b2b4 <_strtod_l+0x5a4>)
 800b178:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b17c:	4652      	mov	r2, sl
 800b17e:	465b      	mov	r3, fp
 800b180:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b184:	f7f5 fa50 	bl	8000628 <__aeabi_dmul>
 800b188:	4682      	mov	sl, r0
 800b18a:	468b      	mov	fp, r1
 800b18c:	f038 080f 	bics.w	r8, r8, #15
 800b190:	d04f      	beq.n	800b232 <_strtod_l+0x522>
 800b192:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800b196:	dd22      	ble.n	800b1de <_strtod_l+0x4ce>
 800b198:	2500      	movs	r5, #0
 800b19a:	462e      	mov	r6, r5
 800b19c:	9507      	str	r5, [sp, #28]
 800b19e:	9505      	str	r5, [sp, #20]
 800b1a0:	2322      	movs	r3, #34	; 0x22
 800b1a2:	f8df b118 	ldr.w	fp, [pc, #280]	; 800b2bc <_strtod_l+0x5ac>
 800b1a6:	6023      	str	r3, [r4, #0]
 800b1a8:	f04f 0a00 	mov.w	sl, #0
 800b1ac:	9b07      	ldr	r3, [sp, #28]
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	f43f adf2 	beq.w	800ad98 <_strtod_l+0x88>
 800b1b4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b1b6:	4620      	mov	r0, r4
 800b1b8:	f002 fac4 	bl	800d744 <_Bfree>
 800b1bc:	9905      	ldr	r1, [sp, #20]
 800b1be:	4620      	mov	r0, r4
 800b1c0:	f002 fac0 	bl	800d744 <_Bfree>
 800b1c4:	4631      	mov	r1, r6
 800b1c6:	4620      	mov	r0, r4
 800b1c8:	f002 fabc 	bl	800d744 <_Bfree>
 800b1cc:	9907      	ldr	r1, [sp, #28]
 800b1ce:	4620      	mov	r0, r4
 800b1d0:	f002 fab8 	bl	800d744 <_Bfree>
 800b1d4:	4629      	mov	r1, r5
 800b1d6:	4620      	mov	r0, r4
 800b1d8:	f002 fab4 	bl	800d744 <_Bfree>
 800b1dc:	e5dc      	b.n	800ad98 <_strtod_l+0x88>
 800b1de:	4b36      	ldr	r3, [pc, #216]	; (800b2b8 <_strtod_l+0x5a8>)
 800b1e0:	9304      	str	r3, [sp, #16]
 800b1e2:	2300      	movs	r3, #0
 800b1e4:	ea4f 1828 	mov.w	r8, r8, asr #4
 800b1e8:	4650      	mov	r0, sl
 800b1ea:	4659      	mov	r1, fp
 800b1ec:	4699      	mov	r9, r3
 800b1ee:	f1b8 0f01 	cmp.w	r8, #1
 800b1f2:	dc21      	bgt.n	800b238 <_strtod_l+0x528>
 800b1f4:	b10b      	cbz	r3, 800b1fa <_strtod_l+0x4ea>
 800b1f6:	4682      	mov	sl, r0
 800b1f8:	468b      	mov	fp, r1
 800b1fa:	4b2f      	ldr	r3, [pc, #188]	; (800b2b8 <_strtod_l+0x5a8>)
 800b1fc:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 800b200:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800b204:	4652      	mov	r2, sl
 800b206:	465b      	mov	r3, fp
 800b208:	e9d9 0100 	ldrd	r0, r1, [r9]
 800b20c:	f7f5 fa0c 	bl	8000628 <__aeabi_dmul>
 800b210:	4b2a      	ldr	r3, [pc, #168]	; (800b2bc <_strtod_l+0x5ac>)
 800b212:	460a      	mov	r2, r1
 800b214:	400b      	ands	r3, r1
 800b216:	492a      	ldr	r1, [pc, #168]	; (800b2c0 <_strtod_l+0x5b0>)
 800b218:	428b      	cmp	r3, r1
 800b21a:	4682      	mov	sl, r0
 800b21c:	d8bc      	bhi.n	800b198 <_strtod_l+0x488>
 800b21e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800b222:	428b      	cmp	r3, r1
 800b224:	bf86      	itte	hi
 800b226:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 800b2c4 <_strtod_l+0x5b4>
 800b22a:	f04f 3aff 	movhi.w	sl, #4294967295
 800b22e:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 800b232:	2300      	movs	r3, #0
 800b234:	9304      	str	r3, [sp, #16]
 800b236:	e084      	b.n	800b342 <_strtod_l+0x632>
 800b238:	f018 0f01 	tst.w	r8, #1
 800b23c:	d005      	beq.n	800b24a <_strtod_l+0x53a>
 800b23e:	9b04      	ldr	r3, [sp, #16]
 800b240:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b244:	f7f5 f9f0 	bl	8000628 <__aeabi_dmul>
 800b248:	2301      	movs	r3, #1
 800b24a:	9a04      	ldr	r2, [sp, #16]
 800b24c:	3208      	adds	r2, #8
 800b24e:	f109 0901 	add.w	r9, r9, #1
 800b252:	ea4f 0868 	mov.w	r8, r8, asr #1
 800b256:	9204      	str	r2, [sp, #16]
 800b258:	e7c9      	b.n	800b1ee <_strtod_l+0x4de>
 800b25a:	d0ea      	beq.n	800b232 <_strtod_l+0x522>
 800b25c:	f1c8 0800 	rsb	r8, r8, #0
 800b260:	f018 020f 	ands.w	r2, r8, #15
 800b264:	d00a      	beq.n	800b27c <_strtod_l+0x56c>
 800b266:	4b13      	ldr	r3, [pc, #76]	; (800b2b4 <_strtod_l+0x5a4>)
 800b268:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800b26c:	4650      	mov	r0, sl
 800b26e:	4659      	mov	r1, fp
 800b270:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b274:	f7f5 fb02 	bl	800087c <__aeabi_ddiv>
 800b278:	4682      	mov	sl, r0
 800b27a:	468b      	mov	fp, r1
 800b27c:	ea5f 1828 	movs.w	r8, r8, asr #4
 800b280:	d0d7      	beq.n	800b232 <_strtod_l+0x522>
 800b282:	f1b8 0f1f 	cmp.w	r8, #31
 800b286:	dd1f      	ble.n	800b2c8 <_strtod_l+0x5b8>
 800b288:	2500      	movs	r5, #0
 800b28a:	462e      	mov	r6, r5
 800b28c:	9507      	str	r5, [sp, #28]
 800b28e:	9505      	str	r5, [sp, #20]
 800b290:	2322      	movs	r3, #34	; 0x22
 800b292:	f04f 0a00 	mov.w	sl, #0
 800b296:	f04f 0b00 	mov.w	fp, #0
 800b29a:	6023      	str	r3, [r4, #0]
 800b29c:	e786      	b.n	800b1ac <_strtod_l+0x49c>
 800b29e:	bf00      	nop
 800b2a0:	0800fe01 	.word	0x0800fe01
 800b2a4:	0800fdc4 	.word	0x0800fdc4
 800b2a8:	0800fd25 	.word	0x0800fd25
 800b2ac:	080101a4 	.word	0x080101a4
 800b2b0:	0801009f 	.word	0x0801009f
 800b2b4:	08010318 	.word	0x08010318
 800b2b8:	080102f0 	.word	0x080102f0
 800b2bc:	7ff00000 	.word	0x7ff00000
 800b2c0:	7ca00000 	.word	0x7ca00000
 800b2c4:	7fefffff 	.word	0x7fefffff
 800b2c8:	f018 0310 	ands.w	r3, r8, #16
 800b2cc:	bf18      	it	ne
 800b2ce:	236a      	movne	r3, #106	; 0x6a
 800b2d0:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 800b680 <_strtod_l+0x970>
 800b2d4:	9304      	str	r3, [sp, #16]
 800b2d6:	4650      	mov	r0, sl
 800b2d8:	4659      	mov	r1, fp
 800b2da:	2300      	movs	r3, #0
 800b2dc:	f018 0f01 	tst.w	r8, #1
 800b2e0:	d004      	beq.n	800b2ec <_strtod_l+0x5dc>
 800b2e2:	e9d9 2300 	ldrd	r2, r3, [r9]
 800b2e6:	f7f5 f99f 	bl	8000628 <__aeabi_dmul>
 800b2ea:	2301      	movs	r3, #1
 800b2ec:	ea5f 0868 	movs.w	r8, r8, asr #1
 800b2f0:	f109 0908 	add.w	r9, r9, #8
 800b2f4:	d1f2      	bne.n	800b2dc <_strtod_l+0x5cc>
 800b2f6:	b10b      	cbz	r3, 800b2fc <_strtod_l+0x5ec>
 800b2f8:	4682      	mov	sl, r0
 800b2fa:	468b      	mov	fp, r1
 800b2fc:	9b04      	ldr	r3, [sp, #16]
 800b2fe:	b1c3      	cbz	r3, 800b332 <_strtod_l+0x622>
 800b300:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800b304:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800b308:	2b00      	cmp	r3, #0
 800b30a:	4659      	mov	r1, fp
 800b30c:	dd11      	ble.n	800b332 <_strtod_l+0x622>
 800b30e:	2b1f      	cmp	r3, #31
 800b310:	f340 8124 	ble.w	800b55c <_strtod_l+0x84c>
 800b314:	2b34      	cmp	r3, #52	; 0x34
 800b316:	bfde      	ittt	le
 800b318:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800b31c:	f04f 33ff 	movle.w	r3, #4294967295
 800b320:	fa03 f202 	lslle.w	r2, r3, r2
 800b324:	f04f 0a00 	mov.w	sl, #0
 800b328:	bfcc      	ite	gt
 800b32a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 800b32e:	ea02 0b01 	andle.w	fp, r2, r1
 800b332:	2200      	movs	r2, #0
 800b334:	2300      	movs	r3, #0
 800b336:	4650      	mov	r0, sl
 800b338:	4659      	mov	r1, fp
 800b33a:	f7f5 fbdd 	bl	8000af8 <__aeabi_dcmpeq>
 800b33e:	2800      	cmp	r0, #0
 800b340:	d1a2      	bne.n	800b288 <_strtod_l+0x578>
 800b342:	9b07      	ldr	r3, [sp, #28]
 800b344:	9300      	str	r3, [sp, #0]
 800b346:	9908      	ldr	r1, [sp, #32]
 800b348:	462b      	mov	r3, r5
 800b34a:	463a      	mov	r2, r7
 800b34c:	4620      	mov	r0, r4
 800b34e:	f002 fa61 	bl	800d814 <__s2b>
 800b352:	9007      	str	r0, [sp, #28]
 800b354:	2800      	cmp	r0, #0
 800b356:	f43f af1f 	beq.w	800b198 <_strtod_l+0x488>
 800b35a:	9b05      	ldr	r3, [sp, #20]
 800b35c:	1b9e      	subs	r6, r3, r6
 800b35e:	9b06      	ldr	r3, [sp, #24]
 800b360:	2b00      	cmp	r3, #0
 800b362:	bfb4      	ite	lt
 800b364:	4633      	movlt	r3, r6
 800b366:	2300      	movge	r3, #0
 800b368:	930c      	str	r3, [sp, #48]	; 0x30
 800b36a:	9b06      	ldr	r3, [sp, #24]
 800b36c:	2500      	movs	r5, #0
 800b36e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b372:	9312      	str	r3, [sp, #72]	; 0x48
 800b374:	462e      	mov	r6, r5
 800b376:	9b07      	ldr	r3, [sp, #28]
 800b378:	4620      	mov	r0, r4
 800b37a:	6859      	ldr	r1, [r3, #4]
 800b37c:	f002 f9a2 	bl	800d6c4 <_Balloc>
 800b380:	9005      	str	r0, [sp, #20]
 800b382:	2800      	cmp	r0, #0
 800b384:	f43f af0c 	beq.w	800b1a0 <_strtod_l+0x490>
 800b388:	9b07      	ldr	r3, [sp, #28]
 800b38a:	691a      	ldr	r2, [r3, #16]
 800b38c:	3202      	adds	r2, #2
 800b38e:	f103 010c 	add.w	r1, r3, #12
 800b392:	0092      	lsls	r2, r2, #2
 800b394:	300c      	adds	r0, #12
 800b396:	f7fd fc51 	bl	8008c3c <memcpy>
 800b39a:	ec4b ab10 	vmov	d0, sl, fp
 800b39e:	aa1a      	add	r2, sp, #104	; 0x68
 800b3a0:	a919      	add	r1, sp, #100	; 0x64
 800b3a2:	4620      	mov	r0, r4
 800b3a4:	f002 fd7c 	bl	800dea0 <__d2b>
 800b3a8:	ec4b ab18 	vmov	d8, sl, fp
 800b3ac:	9018      	str	r0, [sp, #96]	; 0x60
 800b3ae:	2800      	cmp	r0, #0
 800b3b0:	f43f aef6 	beq.w	800b1a0 <_strtod_l+0x490>
 800b3b4:	2101      	movs	r1, #1
 800b3b6:	4620      	mov	r0, r4
 800b3b8:	f002 fac6 	bl	800d948 <__i2b>
 800b3bc:	4606      	mov	r6, r0
 800b3be:	2800      	cmp	r0, #0
 800b3c0:	f43f aeee 	beq.w	800b1a0 <_strtod_l+0x490>
 800b3c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b3c6:	9904      	ldr	r1, [sp, #16]
 800b3c8:	2b00      	cmp	r3, #0
 800b3ca:	bfab      	itete	ge
 800b3cc:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800b3ce:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 800b3d0:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 800b3d2:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 800b3d6:	bfac      	ite	ge
 800b3d8:	eb03 0902 	addge.w	r9, r3, r2
 800b3dc:	1ad7      	sublt	r7, r2, r3
 800b3de:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800b3e0:	eba3 0801 	sub.w	r8, r3, r1
 800b3e4:	4490      	add	r8, r2
 800b3e6:	4ba1      	ldr	r3, [pc, #644]	; (800b66c <_strtod_l+0x95c>)
 800b3e8:	f108 38ff 	add.w	r8, r8, #4294967295
 800b3ec:	4598      	cmp	r8, r3
 800b3ee:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800b3f2:	f280 80c7 	bge.w	800b584 <_strtod_l+0x874>
 800b3f6:	eba3 0308 	sub.w	r3, r3, r8
 800b3fa:	2b1f      	cmp	r3, #31
 800b3fc:	eba2 0203 	sub.w	r2, r2, r3
 800b400:	f04f 0101 	mov.w	r1, #1
 800b404:	f300 80b1 	bgt.w	800b56a <_strtod_l+0x85a>
 800b408:	fa01 f303 	lsl.w	r3, r1, r3
 800b40c:	930d      	str	r3, [sp, #52]	; 0x34
 800b40e:	2300      	movs	r3, #0
 800b410:	9308      	str	r3, [sp, #32]
 800b412:	eb09 0802 	add.w	r8, r9, r2
 800b416:	9b04      	ldr	r3, [sp, #16]
 800b418:	45c1      	cmp	r9, r8
 800b41a:	4417      	add	r7, r2
 800b41c:	441f      	add	r7, r3
 800b41e:	464b      	mov	r3, r9
 800b420:	bfa8      	it	ge
 800b422:	4643      	movge	r3, r8
 800b424:	42bb      	cmp	r3, r7
 800b426:	bfa8      	it	ge
 800b428:	463b      	movge	r3, r7
 800b42a:	2b00      	cmp	r3, #0
 800b42c:	bfc2      	ittt	gt
 800b42e:	eba8 0803 	subgt.w	r8, r8, r3
 800b432:	1aff      	subgt	r7, r7, r3
 800b434:	eba9 0903 	subgt.w	r9, r9, r3
 800b438:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b43a:	2b00      	cmp	r3, #0
 800b43c:	dd17      	ble.n	800b46e <_strtod_l+0x75e>
 800b43e:	4631      	mov	r1, r6
 800b440:	461a      	mov	r2, r3
 800b442:	4620      	mov	r0, r4
 800b444:	f002 fb40 	bl	800dac8 <__pow5mult>
 800b448:	4606      	mov	r6, r0
 800b44a:	2800      	cmp	r0, #0
 800b44c:	f43f aea8 	beq.w	800b1a0 <_strtod_l+0x490>
 800b450:	4601      	mov	r1, r0
 800b452:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b454:	4620      	mov	r0, r4
 800b456:	f002 fa8d 	bl	800d974 <__multiply>
 800b45a:	900b      	str	r0, [sp, #44]	; 0x2c
 800b45c:	2800      	cmp	r0, #0
 800b45e:	f43f ae9f 	beq.w	800b1a0 <_strtod_l+0x490>
 800b462:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b464:	4620      	mov	r0, r4
 800b466:	f002 f96d 	bl	800d744 <_Bfree>
 800b46a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b46c:	9318      	str	r3, [sp, #96]	; 0x60
 800b46e:	f1b8 0f00 	cmp.w	r8, #0
 800b472:	f300 808c 	bgt.w	800b58e <_strtod_l+0x87e>
 800b476:	9b06      	ldr	r3, [sp, #24]
 800b478:	2b00      	cmp	r3, #0
 800b47a:	dd08      	ble.n	800b48e <_strtod_l+0x77e>
 800b47c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b47e:	9905      	ldr	r1, [sp, #20]
 800b480:	4620      	mov	r0, r4
 800b482:	f002 fb21 	bl	800dac8 <__pow5mult>
 800b486:	9005      	str	r0, [sp, #20]
 800b488:	2800      	cmp	r0, #0
 800b48a:	f43f ae89 	beq.w	800b1a0 <_strtod_l+0x490>
 800b48e:	2f00      	cmp	r7, #0
 800b490:	dd08      	ble.n	800b4a4 <_strtod_l+0x794>
 800b492:	9905      	ldr	r1, [sp, #20]
 800b494:	463a      	mov	r2, r7
 800b496:	4620      	mov	r0, r4
 800b498:	f002 fb70 	bl	800db7c <__lshift>
 800b49c:	9005      	str	r0, [sp, #20]
 800b49e:	2800      	cmp	r0, #0
 800b4a0:	f43f ae7e 	beq.w	800b1a0 <_strtod_l+0x490>
 800b4a4:	f1b9 0f00 	cmp.w	r9, #0
 800b4a8:	dd08      	ble.n	800b4bc <_strtod_l+0x7ac>
 800b4aa:	4631      	mov	r1, r6
 800b4ac:	464a      	mov	r2, r9
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	f002 fb64 	bl	800db7c <__lshift>
 800b4b4:	4606      	mov	r6, r0
 800b4b6:	2800      	cmp	r0, #0
 800b4b8:	f43f ae72 	beq.w	800b1a0 <_strtod_l+0x490>
 800b4bc:	9a05      	ldr	r2, [sp, #20]
 800b4be:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b4c0:	4620      	mov	r0, r4
 800b4c2:	f002 fbe7 	bl	800dc94 <__mdiff>
 800b4c6:	4605      	mov	r5, r0
 800b4c8:	2800      	cmp	r0, #0
 800b4ca:	f43f ae69 	beq.w	800b1a0 <_strtod_l+0x490>
 800b4ce:	68c3      	ldr	r3, [r0, #12]
 800b4d0:	930b      	str	r3, [sp, #44]	; 0x2c
 800b4d2:	2300      	movs	r3, #0
 800b4d4:	60c3      	str	r3, [r0, #12]
 800b4d6:	4631      	mov	r1, r6
 800b4d8:	f002 fbc0 	bl	800dc5c <__mcmp>
 800b4dc:	2800      	cmp	r0, #0
 800b4de:	da60      	bge.n	800b5a2 <_strtod_l+0x892>
 800b4e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b4e2:	ea53 030a 	orrs.w	r3, r3, sl
 800b4e6:	f040 8082 	bne.w	800b5ee <_strtod_l+0x8de>
 800b4ea:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b4ee:	2b00      	cmp	r3, #0
 800b4f0:	d17d      	bne.n	800b5ee <_strtod_l+0x8de>
 800b4f2:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800b4f6:	0d1b      	lsrs	r3, r3, #20
 800b4f8:	051b      	lsls	r3, r3, #20
 800b4fa:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800b4fe:	d976      	bls.n	800b5ee <_strtod_l+0x8de>
 800b500:	696b      	ldr	r3, [r5, #20]
 800b502:	b913      	cbnz	r3, 800b50a <_strtod_l+0x7fa>
 800b504:	692b      	ldr	r3, [r5, #16]
 800b506:	2b01      	cmp	r3, #1
 800b508:	dd71      	ble.n	800b5ee <_strtod_l+0x8de>
 800b50a:	4629      	mov	r1, r5
 800b50c:	2201      	movs	r2, #1
 800b50e:	4620      	mov	r0, r4
 800b510:	f002 fb34 	bl	800db7c <__lshift>
 800b514:	4631      	mov	r1, r6
 800b516:	4605      	mov	r5, r0
 800b518:	f002 fba0 	bl	800dc5c <__mcmp>
 800b51c:	2800      	cmp	r0, #0
 800b51e:	dd66      	ble.n	800b5ee <_strtod_l+0x8de>
 800b520:	9904      	ldr	r1, [sp, #16]
 800b522:	4a53      	ldr	r2, [pc, #332]	; (800b670 <_strtod_l+0x960>)
 800b524:	465b      	mov	r3, fp
 800b526:	2900      	cmp	r1, #0
 800b528:	f000 8081 	beq.w	800b62e <_strtod_l+0x91e>
 800b52c:	ea02 010b 	and.w	r1, r2, fp
 800b530:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800b534:	dc7b      	bgt.n	800b62e <_strtod_l+0x91e>
 800b536:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800b53a:	f77f aea9 	ble.w	800b290 <_strtod_l+0x580>
 800b53e:	4b4d      	ldr	r3, [pc, #308]	; (800b674 <_strtod_l+0x964>)
 800b540:	4650      	mov	r0, sl
 800b542:	4659      	mov	r1, fp
 800b544:	2200      	movs	r2, #0
 800b546:	f7f5 f86f 	bl	8000628 <__aeabi_dmul>
 800b54a:	460b      	mov	r3, r1
 800b54c:	4303      	orrs	r3, r0
 800b54e:	bf08      	it	eq
 800b550:	2322      	moveq	r3, #34	; 0x22
 800b552:	4682      	mov	sl, r0
 800b554:	468b      	mov	fp, r1
 800b556:	bf08      	it	eq
 800b558:	6023      	streq	r3, [r4, #0]
 800b55a:	e62b      	b.n	800b1b4 <_strtod_l+0x4a4>
 800b55c:	f04f 32ff 	mov.w	r2, #4294967295
 800b560:	fa02 f303 	lsl.w	r3, r2, r3
 800b564:	ea03 0a0a 	and.w	sl, r3, sl
 800b568:	e6e3      	b.n	800b332 <_strtod_l+0x622>
 800b56a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 800b56e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 800b572:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 800b576:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 800b57a:	fa01 f308 	lsl.w	r3, r1, r8
 800b57e:	9308      	str	r3, [sp, #32]
 800b580:	910d      	str	r1, [sp, #52]	; 0x34
 800b582:	e746      	b.n	800b412 <_strtod_l+0x702>
 800b584:	2300      	movs	r3, #0
 800b586:	9308      	str	r3, [sp, #32]
 800b588:	2301      	movs	r3, #1
 800b58a:	930d      	str	r3, [sp, #52]	; 0x34
 800b58c:	e741      	b.n	800b412 <_strtod_l+0x702>
 800b58e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b590:	4642      	mov	r2, r8
 800b592:	4620      	mov	r0, r4
 800b594:	f002 faf2 	bl	800db7c <__lshift>
 800b598:	9018      	str	r0, [sp, #96]	; 0x60
 800b59a:	2800      	cmp	r0, #0
 800b59c:	f47f af6b 	bne.w	800b476 <_strtod_l+0x766>
 800b5a0:	e5fe      	b.n	800b1a0 <_strtod_l+0x490>
 800b5a2:	465f      	mov	r7, fp
 800b5a4:	d16e      	bne.n	800b684 <_strtod_l+0x974>
 800b5a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b5a8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b5ac:	b342      	cbz	r2, 800b600 <_strtod_l+0x8f0>
 800b5ae:	4a32      	ldr	r2, [pc, #200]	; (800b678 <_strtod_l+0x968>)
 800b5b0:	4293      	cmp	r3, r2
 800b5b2:	d128      	bne.n	800b606 <_strtod_l+0x8f6>
 800b5b4:	9b04      	ldr	r3, [sp, #16]
 800b5b6:	4651      	mov	r1, sl
 800b5b8:	b1eb      	cbz	r3, 800b5f6 <_strtod_l+0x8e6>
 800b5ba:	4b2d      	ldr	r3, [pc, #180]	; (800b670 <_strtod_l+0x960>)
 800b5bc:	403b      	ands	r3, r7
 800b5be:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800b5c2:	f04f 32ff 	mov.w	r2, #4294967295
 800b5c6:	d819      	bhi.n	800b5fc <_strtod_l+0x8ec>
 800b5c8:	0d1b      	lsrs	r3, r3, #20
 800b5ca:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800b5ce:	fa02 f303 	lsl.w	r3, r2, r3
 800b5d2:	4299      	cmp	r1, r3
 800b5d4:	d117      	bne.n	800b606 <_strtod_l+0x8f6>
 800b5d6:	4b29      	ldr	r3, [pc, #164]	; (800b67c <_strtod_l+0x96c>)
 800b5d8:	429f      	cmp	r7, r3
 800b5da:	d102      	bne.n	800b5e2 <_strtod_l+0x8d2>
 800b5dc:	3101      	adds	r1, #1
 800b5de:	f43f addf 	beq.w	800b1a0 <_strtod_l+0x490>
 800b5e2:	4b23      	ldr	r3, [pc, #140]	; (800b670 <_strtod_l+0x960>)
 800b5e4:	403b      	ands	r3, r7
 800b5e6:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 800b5ea:	f04f 0a00 	mov.w	sl, #0
 800b5ee:	9b04      	ldr	r3, [sp, #16]
 800b5f0:	2b00      	cmp	r3, #0
 800b5f2:	d1a4      	bne.n	800b53e <_strtod_l+0x82e>
 800b5f4:	e5de      	b.n	800b1b4 <_strtod_l+0x4a4>
 800b5f6:	f04f 33ff 	mov.w	r3, #4294967295
 800b5fa:	e7ea      	b.n	800b5d2 <_strtod_l+0x8c2>
 800b5fc:	4613      	mov	r3, r2
 800b5fe:	e7e8      	b.n	800b5d2 <_strtod_l+0x8c2>
 800b600:	ea53 030a 	orrs.w	r3, r3, sl
 800b604:	d08c      	beq.n	800b520 <_strtod_l+0x810>
 800b606:	9b08      	ldr	r3, [sp, #32]
 800b608:	b1db      	cbz	r3, 800b642 <_strtod_l+0x932>
 800b60a:	423b      	tst	r3, r7
 800b60c:	d0ef      	beq.n	800b5ee <_strtod_l+0x8de>
 800b60e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b610:	9a04      	ldr	r2, [sp, #16]
 800b612:	4650      	mov	r0, sl
 800b614:	4659      	mov	r1, fp
 800b616:	b1c3      	cbz	r3, 800b64a <_strtod_l+0x93a>
 800b618:	f7ff fb5b 	bl	800acd2 <sulp>
 800b61c:	4602      	mov	r2, r0
 800b61e:	460b      	mov	r3, r1
 800b620:	ec51 0b18 	vmov	r0, r1, d8
 800b624:	f7f4 fe4a 	bl	80002bc <__adddf3>
 800b628:	4682      	mov	sl, r0
 800b62a:	468b      	mov	fp, r1
 800b62c:	e7df      	b.n	800b5ee <_strtod_l+0x8de>
 800b62e:	4013      	ands	r3, r2
 800b630:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800b634:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800b638:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800b63c:	f04f 3aff 	mov.w	sl, #4294967295
 800b640:	e7d5      	b.n	800b5ee <_strtod_l+0x8de>
 800b642:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b644:	ea13 0f0a 	tst.w	r3, sl
 800b648:	e7e0      	b.n	800b60c <_strtod_l+0x8fc>
 800b64a:	f7ff fb42 	bl	800acd2 <sulp>
 800b64e:	4602      	mov	r2, r0
 800b650:	460b      	mov	r3, r1
 800b652:	ec51 0b18 	vmov	r0, r1, d8
 800b656:	f7f4 fe2f 	bl	80002b8 <__aeabi_dsub>
 800b65a:	2200      	movs	r2, #0
 800b65c:	2300      	movs	r3, #0
 800b65e:	4682      	mov	sl, r0
 800b660:	468b      	mov	fp, r1
 800b662:	f7f5 fa49 	bl	8000af8 <__aeabi_dcmpeq>
 800b666:	2800      	cmp	r0, #0
 800b668:	d0c1      	beq.n	800b5ee <_strtod_l+0x8de>
 800b66a:	e611      	b.n	800b290 <_strtod_l+0x580>
 800b66c:	fffffc02 	.word	0xfffffc02
 800b670:	7ff00000 	.word	0x7ff00000
 800b674:	39500000 	.word	0x39500000
 800b678:	000fffff 	.word	0x000fffff
 800b67c:	7fefffff 	.word	0x7fefffff
 800b680:	0800fdd8 	.word	0x0800fdd8
 800b684:	4631      	mov	r1, r6
 800b686:	4628      	mov	r0, r5
 800b688:	f002 fc66 	bl	800df58 <__ratio>
 800b68c:	ec59 8b10 	vmov	r8, r9, d0
 800b690:	ee10 0a10 	vmov	r0, s0
 800b694:	2200      	movs	r2, #0
 800b696:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b69a:	4649      	mov	r1, r9
 800b69c:	f7f5 fa40 	bl	8000b20 <__aeabi_dcmple>
 800b6a0:	2800      	cmp	r0, #0
 800b6a2:	d07a      	beq.n	800b79a <_strtod_l+0xa8a>
 800b6a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b6a6:	2b00      	cmp	r3, #0
 800b6a8:	d04a      	beq.n	800b740 <_strtod_l+0xa30>
 800b6aa:	4b95      	ldr	r3, [pc, #596]	; (800b900 <_strtod_l+0xbf0>)
 800b6ac:	2200      	movs	r2, #0
 800b6ae:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b6b2:	f8df 924c 	ldr.w	r9, [pc, #588]	; 800b900 <_strtod_l+0xbf0>
 800b6b6:	f04f 0800 	mov.w	r8, #0
 800b6ba:	4b92      	ldr	r3, [pc, #584]	; (800b904 <_strtod_l+0xbf4>)
 800b6bc:	403b      	ands	r3, r7
 800b6be:	930d      	str	r3, [sp, #52]	; 0x34
 800b6c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b6c2:	4b91      	ldr	r3, [pc, #580]	; (800b908 <_strtod_l+0xbf8>)
 800b6c4:	429a      	cmp	r2, r3
 800b6c6:	f040 80b0 	bne.w	800b82a <_strtod_l+0xb1a>
 800b6ca:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b6ce:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 800b6d2:	ec4b ab10 	vmov	d0, sl, fp
 800b6d6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800b6da:	f002 fb65 	bl	800dda8 <__ulp>
 800b6de:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b6e2:	ec53 2b10 	vmov	r2, r3, d0
 800b6e6:	f7f4 ff9f 	bl	8000628 <__aeabi_dmul>
 800b6ea:	4652      	mov	r2, sl
 800b6ec:	465b      	mov	r3, fp
 800b6ee:	f7f4 fde5 	bl	80002bc <__adddf3>
 800b6f2:	460b      	mov	r3, r1
 800b6f4:	4983      	ldr	r1, [pc, #524]	; (800b904 <_strtod_l+0xbf4>)
 800b6f6:	4a85      	ldr	r2, [pc, #532]	; (800b90c <_strtod_l+0xbfc>)
 800b6f8:	4019      	ands	r1, r3
 800b6fa:	4291      	cmp	r1, r2
 800b6fc:	4682      	mov	sl, r0
 800b6fe:	d960      	bls.n	800b7c2 <_strtod_l+0xab2>
 800b700:	ee18 3a90 	vmov	r3, s17
 800b704:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800b708:	4293      	cmp	r3, r2
 800b70a:	d104      	bne.n	800b716 <_strtod_l+0xa06>
 800b70c:	ee18 3a10 	vmov	r3, s16
 800b710:	3301      	adds	r3, #1
 800b712:	f43f ad45 	beq.w	800b1a0 <_strtod_l+0x490>
 800b716:	f8df b200 	ldr.w	fp, [pc, #512]	; 800b918 <_strtod_l+0xc08>
 800b71a:	f04f 3aff 	mov.w	sl, #4294967295
 800b71e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b720:	4620      	mov	r0, r4
 800b722:	f002 f80f 	bl	800d744 <_Bfree>
 800b726:	9905      	ldr	r1, [sp, #20]
 800b728:	4620      	mov	r0, r4
 800b72a:	f002 f80b 	bl	800d744 <_Bfree>
 800b72e:	4631      	mov	r1, r6
 800b730:	4620      	mov	r0, r4
 800b732:	f002 f807 	bl	800d744 <_Bfree>
 800b736:	4629      	mov	r1, r5
 800b738:	4620      	mov	r0, r4
 800b73a:	f002 f803 	bl	800d744 <_Bfree>
 800b73e:	e61a      	b.n	800b376 <_strtod_l+0x666>
 800b740:	f1ba 0f00 	cmp.w	sl, #0
 800b744:	d11b      	bne.n	800b77e <_strtod_l+0xa6e>
 800b746:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b74a:	b9f3      	cbnz	r3, 800b78a <_strtod_l+0xa7a>
 800b74c:	4b6c      	ldr	r3, [pc, #432]	; (800b900 <_strtod_l+0xbf0>)
 800b74e:	2200      	movs	r2, #0
 800b750:	4640      	mov	r0, r8
 800b752:	4649      	mov	r1, r9
 800b754:	f7f5 f9da 	bl	8000b0c <__aeabi_dcmplt>
 800b758:	b9d0      	cbnz	r0, 800b790 <_strtod_l+0xa80>
 800b75a:	4640      	mov	r0, r8
 800b75c:	4649      	mov	r1, r9
 800b75e:	4b6c      	ldr	r3, [pc, #432]	; (800b910 <_strtod_l+0xc00>)
 800b760:	2200      	movs	r2, #0
 800b762:	f7f4 ff61 	bl	8000628 <__aeabi_dmul>
 800b766:	4680      	mov	r8, r0
 800b768:	4689      	mov	r9, r1
 800b76a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800b76e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 800b772:	9315      	str	r3, [sp, #84]	; 0x54
 800b774:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 800b778:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b77c:	e79d      	b.n	800b6ba <_strtod_l+0x9aa>
 800b77e:	f1ba 0f01 	cmp.w	sl, #1
 800b782:	d102      	bne.n	800b78a <_strtod_l+0xa7a>
 800b784:	2f00      	cmp	r7, #0
 800b786:	f43f ad83 	beq.w	800b290 <_strtod_l+0x580>
 800b78a:	4b62      	ldr	r3, [pc, #392]	; (800b914 <_strtod_l+0xc04>)
 800b78c:	2200      	movs	r2, #0
 800b78e:	e78e      	b.n	800b6ae <_strtod_l+0x99e>
 800b790:	f8df 917c 	ldr.w	r9, [pc, #380]	; 800b910 <_strtod_l+0xc00>
 800b794:	f04f 0800 	mov.w	r8, #0
 800b798:	e7e7      	b.n	800b76a <_strtod_l+0xa5a>
 800b79a:	4b5d      	ldr	r3, [pc, #372]	; (800b910 <_strtod_l+0xc00>)
 800b79c:	4640      	mov	r0, r8
 800b79e:	4649      	mov	r1, r9
 800b7a0:	2200      	movs	r2, #0
 800b7a2:	f7f4 ff41 	bl	8000628 <__aeabi_dmul>
 800b7a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b7a8:	4680      	mov	r8, r0
 800b7aa:	4689      	mov	r9, r1
 800b7ac:	b933      	cbnz	r3, 800b7bc <_strtod_l+0xaac>
 800b7ae:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800b7b2:	900e      	str	r0, [sp, #56]	; 0x38
 800b7b4:	930f      	str	r3, [sp, #60]	; 0x3c
 800b7b6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800b7ba:	e7dd      	b.n	800b778 <_strtod_l+0xa68>
 800b7bc:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 800b7c0:	e7f9      	b.n	800b7b6 <_strtod_l+0xaa6>
 800b7c2:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 800b7c6:	9b04      	ldr	r3, [sp, #16]
 800b7c8:	2b00      	cmp	r3, #0
 800b7ca:	d1a8      	bne.n	800b71e <_strtod_l+0xa0e>
 800b7cc:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800b7d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b7d2:	0d1b      	lsrs	r3, r3, #20
 800b7d4:	051b      	lsls	r3, r3, #20
 800b7d6:	429a      	cmp	r2, r3
 800b7d8:	d1a1      	bne.n	800b71e <_strtod_l+0xa0e>
 800b7da:	4640      	mov	r0, r8
 800b7dc:	4649      	mov	r1, r9
 800b7de:	f7f5 fad3 	bl	8000d88 <__aeabi_d2lz>
 800b7e2:	f7f4 fef3 	bl	80005cc <__aeabi_l2d>
 800b7e6:	4602      	mov	r2, r0
 800b7e8:	460b      	mov	r3, r1
 800b7ea:	4640      	mov	r0, r8
 800b7ec:	4649      	mov	r1, r9
 800b7ee:	f7f4 fd63 	bl	80002b8 <__aeabi_dsub>
 800b7f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b7f4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b7f8:	ea43 030a 	orr.w	r3, r3, sl
 800b7fc:	4313      	orrs	r3, r2
 800b7fe:	4680      	mov	r8, r0
 800b800:	4689      	mov	r9, r1
 800b802:	d055      	beq.n	800b8b0 <_strtod_l+0xba0>
 800b804:	a336      	add	r3, pc, #216	; (adr r3, 800b8e0 <_strtod_l+0xbd0>)
 800b806:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b80a:	f7f5 f97f 	bl	8000b0c <__aeabi_dcmplt>
 800b80e:	2800      	cmp	r0, #0
 800b810:	f47f acd0 	bne.w	800b1b4 <_strtod_l+0x4a4>
 800b814:	a334      	add	r3, pc, #208	; (adr r3, 800b8e8 <_strtod_l+0xbd8>)
 800b816:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b81a:	4640      	mov	r0, r8
 800b81c:	4649      	mov	r1, r9
 800b81e:	f7f5 f993 	bl	8000b48 <__aeabi_dcmpgt>
 800b822:	2800      	cmp	r0, #0
 800b824:	f43f af7b 	beq.w	800b71e <_strtod_l+0xa0e>
 800b828:	e4c4      	b.n	800b1b4 <_strtod_l+0x4a4>
 800b82a:	9b04      	ldr	r3, [sp, #16]
 800b82c:	b333      	cbz	r3, 800b87c <_strtod_l+0xb6c>
 800b82e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b830:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800b834:	d822      	bhi.n	800b87c <_strtod_l+0xb6c>
 800b836:	a32e      	add	r3, pc, #184	; (adr r3, 800b8f0 <_strtod_l+0xbe0>)
 800b838:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b83c:	4640      	mov	r0, r8
 800b83e:	4649      	mov	r1, r9
 800b840:	f7f5 f96e 	bl	8000b20 <__aeabi_dcmple>
 800b844:	b1a0      	cbz	r0, 800b870 <_strtod_l+0xb60>
 800b846:	4649      	mov	r1, r9
 800b848:	4640      	mov	r0, r8
 800b84a:	f7f5 f9c5 	bl	8000bd8 <__aeabi_d2uiz>
 800b84e:	2801      	cmp	r0, #1
 800b850:	bf38      	it	cc
 800b852:	2001      	movcc	r0, #1
 800b854:	f7f4 fe6e 	bl	8000534 <__aeabi_ui2d>
 800b858:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b85a:	4680      	mov	r8, r0
 800b85c:	4689      	mov	r9, r1
 800b85e:	bb23      	cbnz	r3, 800b8aa <_strtod_l+0xb9a>
 800b860:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800b864:	9010      	str	r0, [sp, #64]	; 0x40
 800b866:	9311      	str	r3, [sp, #68]	; 0x44
 800b868:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800b86c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b870:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b872:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b874:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800b878:	1a9b      	subs	r3, r3, r2
 800b87a:	9309      	str	r3, [sp, #36]	; 0x24
 800b87c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b880:	eeb0 0a48 	vmov.f32	s0, s16
 800b884:	eef0 0a68 	vmov.f32	s1, s17
 800b888:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800b88c:	f002 fa8c 	bl	800dda8 <__ulp>
 800b890:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b894:	ec53 2b10 	vmov	r2, r3, d0
 800b898:	f7f4 fec6 	bl	8000628 <__aeabi_dmul>
 800b89c:	ec53 2b18 	vmov	r2, r3, d8
 800b8a0:	f7f4 fd0c 	bl	80002bc <__adddf3>
 800b8a4:	4682      	mov	sl, r0
 800b8a6:	468b      	mov	fp, r1
 800b8a8:	e78d      	b.n	800b7c6 <_strtod_l+0xab6>
 800b8aa:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800b8ae:	e7db      	b.n	800b868 <_strtod_l+0xb58>
 800b8b0:	a311      	add	r3, pc, #68	; (adr r3, 800b8f8 <_strtod_l+0xbe8>)
 800b8b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b8b6:	f7f5 f929 	bl	8000b0c <__aeabi_dcmplt>
 800b8ba:	e7b2      	b.n	800b822 <_strtod_l+0xb12>
 800b8bc:	2300      	movs	r3, #0
 800b8be:	930a      	str	r3, [sp, #40]	; 0x28
 800b8c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b8c2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b8c4:	6013      	str	r3, [r2, #0]
 800b8c6:	f7ff ba6b 	b.w	800ada0 <_strtod_l+0x90>
 800b8ca:	2a65      	cmp	r2, #101	; 0x65
 800b8cc:	f43f ab5f 	beq.w	800af8e <_strtod_l+0x27e>
 800b8d0:	2a45      	cmp	r2, #69	; 0x45
 800b8d2:	f43f ab5c 	beq.w	800af8e <_strtod_l+0x27e>
 800b8d6:	2301      	movs	r3, #1
 800b8d8:	f7ff bb94 	b.w	800b004 <_strtod_l+0x2f4>
 800b8dc:	f3af 8000 	nop.w
 800b8e0:	94a03595 	.word	0x94a03595
 800b8e4:	3fdfffff 	.word	0x3fdfffff
 800b8e8:	35afe535 	.word	0x35afe535
 800b8ec:	3fe00000 	.word	0x3fe00000
 800b8f0:	ffc00000 	.word	0xffc00000
 800b8f4:	41dfffff 	.word	0x41dfffff
 800b8f8:	94a03595 	.word	0x94a03595
 800b8fc:	3fcfffff 	.word	0x3fcfffff
 800b900:	3ff00000 	.word	0x3ff00000
 800b904:	7ff00000 	.word	0x7ff00000
 800b908:	7fe00000 	.word	0x7fe00000
 800b90c:	7c9fffff 	.word	0x7c9fffff
 800b910:	3fe00000 	.word	0x3fe00000
 800b914:	bff00000 	.word	0xbff00000
 800b918:	7fefffff 	.word	0x7fefffff

0800b91c <_strtod_r>:
 800b91c:	4b01      	ldr	r3, [pc, #4]	; (800b924 <_strtod_r+0x8>)
 800b91e:	f7ff b9f7 	b.w	800ad10 <_strtod_l>
 800b922:	bf00      	nop
 800b924:	200000d4 	.word	0x200000d4

0800b928 <_strtol_l.constprop.0>:
 800b928:	2b01      	cmp	r3, #1
 800b92a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b92e:	d001      	beq.n	800b934 <_strtol_l.constprop.0+0xc>
 800b930:	2b24      	cmp	r3, #36	; 0x24
 800b932:	d906      	bls.n	800b942 <_strtol_l.constprop.0+0x1a>
 800b934:	f7fd f836 	bl	80089a4 <__errno>
 800b938:	2316      	movs	r3, #22
 800b93a:	6003      	str	r3, [r0, #0]
 800b93c:	2000      	movs	r0, #0
 800b93e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b942:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800ba28 <_strtol_l.constprop.0+0x100>
 800b946:	460d      	mov	r5, r1
 800b948:	462e      	mov	r6, r5
 800b94a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800b94e:	f814 700c 	ldrb.w	r7, [r4, ip]
 800b952:	f017 0708 	ands.w	r7, r7, #8
 800b956:	d1f7      	bne.n	800b948 <_strtol_l.constprop.0+0x20>
 800b958:	2c2d      	cmp	r4, #45	; 0x2d
 800b95a:	d132      	bne.n	800b9c2 <_strtol_l.constprop.0+0x9a>
 800b95c:	782c      	ldrb	r4, [r5, #0]
 800b95e:	2701      	movs	r7, #1
 800b960:	1cb5      	adds	r5, r6, #2
 800b962:	2b00      	cmp	r3, #0
 800b964:	d05b      	beq.n	800ba1e <_strtol_l.constprop.0+0xf6>
 800b966:	2b10      	cmp	r3, #16
 800b968:	d109      	bne.n	800b97e <_strtol_l.constprop.0+0x56>
 800b96a:	2c30      	cmp	r4, #48	; 0x30
 800b96c:	d107      	bne.n	800b97e <_strtol_l.constprop.0+0x56>
 800b96e:	782c      	ldrb	r4, [r5, #0]
 800b970:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 800b974:	2c58      	cmp	r4, #88	; 0x58
 800b976:	d14d      	bne.n	800ba14 <_strtol_l.constprop.0+0xec>
 800b978:	786c      	ldrb	r4, [r5, #1]
 800b97a:	2310      	movs	r3, #16
 800b97c:	3502      	adds	r5, #2
 800b97e:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 800b982:	f108 38ff 	add.w	r8, r8, #4294967295
 800b986:	f04f 0c00 	mov.w	ip, #0
 800b98a:	fbb8 f9f3 	udiv	r9, r8, r3
 800b98e:	4666      	mov	r6, ip
 800b990:	fb03 8a19 	mls	sl, r3, r9, r8
 800b994:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 800b998:	f1be 0f09 	cmp.w	lr, #9
 800b99c:	d816      	bhi.n	800b9cc <_strtol_l.constprop.0+0xa4>
 800b99e:	4674      	mov	r4, lr
 800b9a0:	42a3      	cmp	r3, r4
 800b9a2:	dd24      	ble.n	800b9ee <_strtol_l.constprop.0+0xc6>
 800b9a4:	f1bc 0f00 	cmp.w	ip, #0
 800b9a8:	db1e      	blt.n	800b9e8 <_strtol_l.constprop.0+0xc0>
 800b9aa:	45b1      	cmp	r9, r6
 800b9ac:	d31c      	bcc.n	800b9e8 <_strtol_l.constprop.0+0xc0>
 800b9ae:	d101      	bne.n	800b9b4 <_strtol_l.constprop.0+0x8c>
 800b9b0:	45a2      	cmp	sl, r4
 800b9b2:	db19      	blt.n	800b9e8 <_strtol_l.constprop.0+0xc0>
 800b9b4:	fb06 4603 	mla	r6, r6, r3, r4
 800b9b8:	f04f 0c01 	mov.w	ip, #1
 800b9bc:	f815 4b01 	ldrb.w	r4, [r5], #1
 800b9c0:	e7e8      	b.n	800b994 <_strtol_l.constprop.0+0x6c>
 800b9c2:	2c2b      	cmp	r4, #43	; 0x2b
 800b9c4:	bf04      	itt	eq
 800b9c6:	782c      	ldrbeq	r4, [r5, #0]
 800b9c8:	1cb5      	addeq	r5, r6, #2
 800b9ca:	e7ca      	b.n	800b962 <_strtol_l.constprop.0+0x3a>
 800b9cc:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 800b9d0:	f1be 0f19 	cmp.w	lr, #25
 800b9d4:	d801      	bhi.n	800b9da <_strtol_l.constprop.0+0xb2>
 800b9d6:	3c37      	subs	r4, #55	; 0x37
 800b9d8:	e7e2      	b.n	800b9a0 <_strtol_l.constprop.0+0x78>
 800b9da:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 800b9de:	f1be 0f19 	cmp.w	lr, #25
 800b9e2:	d804      	bhi.n	800b9ee <_strtol_l.constprop.0+0xc6>
 800b9e4:	3c57      	subs	r4, #87	; 0x57
 800b9e6:	e7db      	b.n	800b9a0 <_strtol_l.constprop.0+0x78>
 800b9e8:	f04f 3cff 	mov.w	ip, #4294967295
 800b9ec:	e7e6      	b.n	800b9bc <_strtol_l.constprop.0+0x94>
 800b9ee:	f1bc 0f00 	cmp.w	ip, #0
 800b9f2:	da05      	bge.n	800ba00 <_strtol_l.constprop.0+0xd8>
 800b9f4:	2322      	movs	r3, #34	; 0x22
 800b9f6:	6003      	str	r3, [r0, #0]
 800b9f8:	4646      	mov	r6, r8
 800b9fa:	b942      	cbnz	r2, 800ba0e <_strtol_l.constprop.0+0xe6>
 800b9fc:	4630      	mov	r0, r6
 800b9fe:	e79e      	b.n	800b93e <_strtol_l.constprop.0+0x16>
 800ba00:	b107      	cbz	r7, 800ba04 <_strtol_l.constprop.0+0xdc>
 800ba02:	4276      	negs	r6, r6
 800ba04:	2a00      	cmp	r2, #0
 800ba06:	d0f9      	beq.n	800b9fc <_strtol_l.constprop.0+0xd4>
 800ba08:	f1bc 0f00 	cmp.w	ip, #0
 800ba0c:	d000      	beq.n	800ba10 <_strtol_l.constprop.0+0xe8>
 800ba0e:	1e69      	subs	r1, r5, #1
 800ba10:	6011      	str	r1, [r2, #0]
 800ba12:	e7f3      	b.n	800b9fc <_strtol_l.constprop.0+0xd4>
 800ba14:	2430      	movs	r4, #48	; 0x30
 800ba16:	2b00      	cmp	r3, #0
 800ba18:	d1b1      	bne.n	800b97e <_strtol_l.constprop.0+0x56>
 800ba1a:	2308      	movs	r3, #8
 800ba1c:	e7af      	b.n	800b97e <_strtol_l.constprop.0+0x56>
 800ba1e:	2c30      	cmp	r4, #48	; 0x30
 800ba20:	d0a5      	beq.n	800b96e <_strtol_l.constprop.0+0x46>
 800ba22:	230a      	movs	r3, #10
 800ba24:	e7ab      	b.n	800b97e <_strtol_l.constprop.0+0x56>
 800ba26:	bf00      	nop
 800ba28:	080100a1 	.word	0x080100a1

0800ba2c <_strtol_r>:
 800ba2c:	f7ff bf7c 	b.w	800b928 <_strtol_l.constprop.0>

0800ba30 <strtol>:
 800ba30:	4613      	mov	r3, r2
 800ba32:	460a      	mov	r2, r1
 800ba34:	4601      	mov	r1, r0
 800ba36:	4802      	ldr	r0, [pc, #8]	; (800ba40 <strtol+0x10>)
 800ba38:	6800      	ldr	r0, [r0, #0]
 800ba3a:	f7ff bf75 	b.w	800b928 <_strtol_l.constprop.0>
 800ba3e:	bf00      	nop
 800ba40:	2000000c 	.word	0x2000000c

0800ba44 <_strtoul_l.constprop.0>:
 800ba44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba48:	4f36      	ldr	r7, [pc, #216]	; (800bb24 <_strtoul_l.constprop.0+0xe0>)
 800ba4a:	4686      	mov	lr, r0
 800ba4c:	460d      	mov	r5, r1
 800ba4e:	4628      	mov	r0, r5
 800ba50:	f815 4b01 	ldrb.w	r4, [r5], #1
 800ba54:	5de6      	ldrb	r6, [r4, r7]
 800ba56:	f016 0608 	ands.w	r6, r6, #8
 800ba5a:	d1f8      	bne.n	800ba4e <_strtoul_l.constprop.0+0xa>
 800ba5c:	2c2d      	cmp	r4, #45	; 0x2d
 800ba5e:	d12f      	bne.n	800bac0 <_strtoul_l.constprop.0+0x7c>
 800ba60:	782c      	ldrb	r4, [r5, #0]
 800ba62:	2601      	movs	r6, #1
 800ba64:	1c85      	adds	r5, r0, #2
 800ba66:	2b00      	cmp	r3, #0
 800ba68:	d057      	beq.n	800bb1a <_strtoul_l.constprop.0+0xd6>
 800ba6a:	2b10      	cmp	r3, #16
 800ba6c:	d109      	bne.n	800ba82 <_strtoul_l.constprop.0+0x3e>
 800ba6e:	2c30      	cmp	r4, #48	; 0x30
 800ba70:	d107      	bne.n	800ba82 <_strtoul_l.constprop.0+0x3e>
 800ba72:	7828      	ldrb	r0, [r5, #0]
 800ba74:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800ba78:	2858      	cmp	r0, #88	; 0x58
 800ba7a:	d149      	bne.n	800bb10 <_strtoul_l.constprop.0+0xcc>
 800ba7c:	786c      	ldrb	r4, [r5, #1]
 800ba7e:	2310      	movs	r3, #16
 800ba80:	3502      	adds	r5, #2
 800ba82:	f04f 38ff 	mov.w	r8, #4294967295
 800ba86:	2700      	movs	r7, #0
 800ba88:	fbb8 f8f3 	udiv	r8, r8, r3
 800ba8c:	fb03 f908 	mul.w	r9, r3, r8
 800ba90:	ea6f 0909 	mvn.w	r9, r9
 800ba94:	4638      	mov	r0, r7
 800ba96:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800ba9a:	f1bc 0f09 	cmp.w	ip, #9
 800ba9e:	d814      	bhi.n	800baca <_strtoul_l.constprop.0+0x86>
 800baa0:	4664      	mov	r4, ip
 800baa2:	42a3      	cmp	r3, r4
 800baa4:	dd22      	ble.n	800baec <_strtoul_l.constprop.0+0xa8>
 800baa6:	2f00      	cmp	r7, #0
 800baa8:	db1d      	blt.n	800bae6 <_strtoul_l.constprop.0+0xa2>
 800baaa:	4580      	cmp	r8, r0
 800baac:	d31b      	bcc.n	800bae6 <_strtoul_l.constprop.0+0xa2>
 800baae:	d101      	bne.n	800bab4 <_strtoul_l.constprop.0+0x70>
 800bab0:	45a1      	cmp	r9, r4
 800bab2:	db18      	blt.n	800bae6 <_strtoul_l.constprop.0+0xa2>
 800bab4:	fb00 4003 	mla	r0, r0, r3, r4
 800bab8:	2701      	movs	r7, #1
 800baba:	f815 4b01 	ldrb.w	r4, [r5], #1
 800babe:	e7ea      	b.n	800ba96 <_strtoul_l.constprop.0+0x52>
 800bac0:	2c2b      	cmp	r4, #43	; 0x2b
 800bac2:	bf04      	itt	eq
 800bac4:	782c      	ldrbeq	r4, [r5, #0]
 800bac6:	1c85      	addeq	r5, r0, #2
 800bac8:	e7cd      	b.n	800ba66 <_strtoul_l.constprop.0+0x22>
 800baca:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800bace:	f1bc 0f19 	cmp.w	ip, #25
 800bad2:	d801      	bhi.n	800bad8 <_strtoul_l.constprop.0+0x94>
 800bad4:	3c37      	subs	r4, #55	; 0x37
 800bad6:	e7e4      	b.n	800baa2 <_strtoul_l.constprop.0+0x5e>
 800bad8:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800badc:	f1bc 0f19 	cmp.w	ip, #25
 800bae0:	d804      	bhi.n	800baec <_strtoul_l.constprop.0+0xa8>
 800bae2:	3c57      	subs	r4, #87	; 0x57
 800bae4:	e7dd      	b.n	800baa2 <_strtoul_l.constprop.0+0x5e>
 800bae6:	f04f 37ff 	mov.w	r7, #4294967295
 800baea:	e7e6      	b.n	800baba <_strtoul_l.constprop.0+0x76>
 800baec:	2f00      	cmp	r7, #0
 800baee:	da07      	bge.n	800bb00 <_strtoul_l.constprop.0+0xbc>
 800baf0:	2322      	movs	r3, #34	; 0x22
 800baf2:	f8ce 3000 	str.w	r3, [lr]
 800baf6:	f04f 30ff 	mov.w	r0, #4294967295
 800bafa:	b932      	cbnz	r2, 800bb0a <_strtoul_l.constprop.0+0xc6>
 800bafc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bb00:	b106      	cbz	r6, 800bb04 <_strtoul_l.constprop.0+0xc0>
 800bb02:	4240      	negs	r0, r0
 800bb04:	2a00      	cmp	r2, #0
 800bb06:	d0f9      	beq.n	800bafc <_strtoul_l.constprop.0+0xb8>
 800bb08:	b107      	cbz	r7, 800bb0c <_strtoul_l.constprop.0+0xc8>
 800bb0a:	1e69      	subs	r1, r5, #1
 800bb0c:	6011      	str	r1, [r2, #0]
 800bb0e:	e7f5      	b.n	800bafc <_strtoul_l.constprop.0+0xb8>
 800bb10:	2430      	movs	r4, #48	; 0x30
 800bb12:	2b00      	cmp	r3, #0
 800bb14:	d1b5      	bne.n	800ba82 <_strtoul_l.constprop.0+0x3e>
 800bb16:	2308      	movs	r3, #8
 800bb18:	e7b3      	b.n	800ba82 <_strtoul_l.constprop.0+0x3e>
 800bb1a:	2c30      	cmp	r4, #48	; 0x30
 800bb1c:	d0a9      	beq.n	800ba72 <_strtoul_l.constprop.0+0x2e>
 800bb1e:	230a      	movs	r3, #10
 800bb20:	e7af      	b.n	800ba82 <_strtoul_l.constprop.0+0x3e>
 800bb22:	bf00      	nop
 800bb24:	080100a1 	.word	0x080100a1

0800bb28 <_strtoul_r>:
 800bb28:	f7ff bf8c 	b.w	800ba44 <_strtoul_l.constprop.0>

0800bb2c <strtoul>:
 800bb2c:	4613      	mov	r3, r2
 800bb2e:	460a      	mov	r2, r1
 800bb30:	4601      	mov	r1, r0
 800bb32:	4802      	ldr	r0, [pc, #8]	; (800bb3c <strtoul+0x10>)
 800bb34:	6800      	ldr	r0, [r0, #0]
 800bb36:	f7ff bf85 	b.w	800ba44 <_strtoul_l.constprop.0>
 800bb3a:	bf00      	nop
 800bb3c:	2000000c 	.word	0x2000000c

0800bb40 <__tzcalc_limits>:
 800bb40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb44:	4605      	mov	r5, r0
 800bb46:	f001 fccf 	bl	800d4e8 <__gettzinfo>
 800bb4a:	f240 73b1 	movw	r3, #1969	; 0x7b1
 800bb4e:	429d      	cmp	r5, r3
 800bb50:	f340 8099 	ble.w	800bc86 <__tzcalc_limits+0x146>
 800bb54:	f46f 62f6 	mvn.w	r2, #1968	; 0x7b0
 800bb58:	18ac      	adds	r4, r5, r2
 800bb5a:	f2a5 73b2 	subw	r3, r5, #1970	; 0x7b2
 800bb5e:	f240 126d 	movw	r2, #365	; 0x16d
 800bb62:	10a4      	asrs	r4, r4, #2
 800bb64:	fb02 4403 	mla	r4, r2, r3, r4
 800bb68:	f06f 0263 	mvn.w	r2, #99	; 0x63
 800bb6c:	f2a5 736d 	subw	r3, r5, #1901	; 0x76d
 800bb70:	fb93 f3f2 	sdiv	r3, r3, r2
 800bb74:	441c      	add	r4, r3
 800bb76:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800bb7a:	f46f 61c8 	mvn.w	r1, #1600	; 0x640
 800bb7e:	fb95 fcf3 	sdiv	ip, r5, r3
 800bb82:	fb03 5c1c 	mls	ip, r3, ip, r5
 800bb86:	186a      	adds	r2, r5, r1
 800bb88:	fabc f68c 	clz	r6, ip
 800bb8c:	fbb2 f2f3 	udiv	r2, r2, r3
 800bb90:	f005 0303 	and.w	r3, r5, #3
 800bb94:	4414      	add	r4, r2
 800bb96:	2264      	movs	r2, #100	; 0x64
 800bb98:	6045      	str	r5, [r0, #4]
 800bb9a:	fb95 f7f2 	sdiv	r7, r5, r2
 800bb9e:	0976      	lsrs	r6, r6, #5
 800bba0:	fb02 5717 	mls	r7, r2, r7, r5
 800bba4:	4601      	mov	r1, r0
 800bba6:	f100 0b50 	add.w	fp, r0, #80	; 0x50
 800bbaa:	9300      	str	r3, [sp, #0]
 800bbac:	f04f 0a07 	mov.w	sl, #7
 800bbb0:	7a0d      	ldrb	r5, [r1, #8]
 800bbb2:	694b      	ldr	r3, [r1, #20]
 800bbb4:	2d4a      	cmp	r5, #74	; 0x4a
 800bbb6:	d12d      	bne.n	800bc14 <__tzcalc_limits+0xd4>
 800bbb8:	9a00      	ldr	r2, [sp, #0]
 800bbba:	eb04 0e03 	add.w	lr, r4, r3
 800bbbe:	b902      	cbnz	r2, 800bbc2 <__tzcalc_limits+0x82>
 800bbc0:	b917      	cbnz	r7, 800bbc8 <__tzcalc_limits+0x88>
 800bbc2:	f1bc 0f00 	cmp.w	ip, #0
 800bbc6:	d123      	bne.n	800bc10 <__tzcalc_limits+0xd0>
 800bbc8:	2b3b      	cmp	r3, #59	; 0x3b
 800bbca:	bfd4      	ite	le
 800bbcc:	2300      	movle	r3, #0
 800bbce:	2301      	movgt	r3, #1
 800bbd0:	4473      	add	r3, lr
 800bbd2:	3b01      	subs	r3, #1
 800bbd4:	698d      	ldr	r5, [r1, #24]
 800bbd6:	4a2d      	ldr	r2, [pc, #180]	; (800bc8c <__tzcalc_limits+0x14c>)
 800bbd8:	ea4f 7ee5 	mov.w	lr, r5, asr #31
 800bbdc:	fbc3 5e02 	smlal	r5, lr, r3, r2
 800bbe0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 800bbe2:	18ed      	adds	r5, r5, r3
 800bbe4:	eb4e 73e3 	adc.w	r3, lr, r3, asr #31
 800bbe8:	e9c1 5308 	strd	r5, r3, [r1, #32]
 800bbec:	3128      	adds	r1, #40	; 0x28
 800bbee:	458b      	cmp	fp, r1
 800bbf0:	d1de      	bne.n	800bbb0 <__tzcalc_limits+0x70>
 800bbf2:	e9d0 1312 	ldrd	r1, r3, [r0, #72]	; 0x48
 800bbf6:	e9d0 4208 	ldrd	r4, r2, [r0, #32]
 800bbfa:	428c      	cmp	r4, r1
 800bbfc:	eb72 0303 	sbcs.w	r3, r2, r3
 800bc00:	bfb4      	ite	lt
 800bc02:	2301      	movlt	r3, #1
 800bc04:	2300      	movge	r3, #0
 800bc06:	6003      	str	r3, [r0, #0]
 800bc08:	2001      	movs	r0, #1
 800bc0a:	b003      	add	sp, #12
 800bc0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc10:	2300      	movs	r3, #0
 800bc12:	e7dd      	b.n	800bbd0 <__tzcalc_limits+0x90>
 800bc14:	2d44      	cmp	r5, #68	; 0x44
 800bc16:	d101      	bne.n	800bc1c <__tzcalc_limits+0xdc>
 800bc18:	4423      	add	r3, r4
 800bc1a:	e7db      	b.n	800bbd4 <__tzcalc_limits+0x94>
 800bc1c:	9a00      	ldr	r2, [sp, #0]
 800bc1e:	bb62      	cbnz	r2, 800bc7a <__tzcalc_limits+0x13a>
 800bc20:	2f00      	cmp	r7, #0
 800bc22:	bf0c      	ite	eq
 800bc24:	4635      	moveq	r5, r6
 800bc26:	2501      	movne	r5, #1
 800bc28:	68ca      	ldr	r2, [r1, #12]
 800bc2a:	9201      	str	r2, [sp, #4]
 800bc2c:	4a18      	ldr	r2, [pc, #96]	; (800bc90 <__tzcalc_limits+0x150>)
 800bc2e:	f04f 0930 	mov.w	r9, #48	; 0x30
 800bc32:	fb09 2505 	mla	r5, r9, r5, r2
 800bc36:	46a6      	mov	lr, r4
 800bc38:	f04f 0800 	mov.w	r8, #0
 800bc3c:	3d04      	subs	r5, #4
 800bc3e:	9a01      	ldr	r2, [sp, #4]
 800bc40:	f108 0801 	add.w	r8, r8, #1
 800bc44:	4542      	cmp	r2, r8
 800bc46:	f855 9028 	ldr.w	r9, [r5, r8, lsl #2]
 800bc4a:	dc18      	bgt.n	800bc7e <__tzcalc_limits+0x13e>
 800bc4c:	f10e 0504 	add.w	r5, lr, #4
 800bc50:	fb95 f8fa 	sdiv	r8, r5, sl
 800bc54:	ebc8 08c8 	rsb	r8, r8, r8, lsl #3
 800bc58:	eba5 0808 	sub.w	r8, r5, r8
 800bc5c:	ebb3 0808 	subs.w	r8, r3, r8
 800bc60:	690b      	ldr	r3, [r1, #16]
 800bc62:	f103 33ff 	add.w	r3, r3, #4294967295
 800bc66:	bf48      	it	mi
 800bc68:	f108 0807 	addmi.w	r8, r8, #7
 800bc6c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800bc70:	4443      	add	r3, r8
 800bc72:	454b      	cmp	r3, r9
 800bc74:	da05      	bge.n	800bc82 <__tzcalc_limits+0x142>
 800bc76:	4473      	add	r3, lr
 800bc78:	e7ac      	b.n	800bbd4 <__tzcalc_limits+0x94>
 800bc7a:	4635      	mov	r5, r6
 800bc7c:	e7d4      	b.n	800bc28 <__tzcalc_limits+0xe8>
 800bc7e:	44ce      	add	lr, r9
 800bc80:	e7dd      	b.n	800bc3e <__tzcalc_limits+0xfe>
 800bc82:	3b07      	subs	r3, #7
 800bc84:	e7f5      	b.n	800bc72 <__tzcalc_limits+0x132>
 800bc86:	2000      	movs	r0, #0
 800bc88:	e7bf      	b.n	800bc0a <__tzcalc_limits+0xca>
 800bc8a:	bf00      	nop
 800bc8c:	00015180 	.word	0x00015180
 800bc90:	0800fcc0 	.word	0x0800fcc0

0800bc94 <__tz_lock>:
 800bc94:	4801      	ldr	r0, [pc, #4]	; (800bc9c <__tz_lock+0x8>)
 800bc96:	f001 bce0 	b.w	800d65a <__retarget_lock_acquire>
 800bc9a:	bf00      	nop
 800bc9c:	2000035c 	.word	0x2000035c

0800bca0 <__tz_unlock>:
 800bca0:	4801      	ldr	r0, [pc, #4]	; (800bca8 <__tz_unlock+0x8>)
 800bca2:	f001 bcdc 	b.w	800d65e <__retarget_lock_release>
 800bca6:	bf00      	nop
 800bca8:	2000035c 	.word	0x2000035c

0800bcac <_tzset_unlocked>:
 800bcac:	4b01      	ldr	r3, [pc, #4]	; (800bcb4 <_tzset_unlocked+0x8>)
 800bcae:	6818      	ldr	r0, [r3, #0]
 800bcb0:	f000 b802 	b.w	800bcb8 <_tzset_unlocked_r>
 800bcb4:	2000000c 	.word	0x2000000c

0800bcb8 <_tzset_unlocked_r>:
 800bcb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcbc:	b08d      	sub	sp, #52	; 0x34
 800bcbe:	4607      	mov	r7, r0
 800bcc0:	f001 fc12 	bl	800d4e8 <__gettzinfo>
 800bcc4:	49b0      	ldr	r1, [pc, #704]	; (800bf88 <_tzset_unlocked_r+0x2d0>)
 800bcc6:	4eb1      	ldr	r6, [pc, #708]	; (800bf8c <_tzset_unlocked_r+0x2d4>)
 800bcc8:	4605      	mov	r5, r0
 800bcca:	4638      	mov	r0, r7
 800bccc:	f001 fc04 	bl	800d4d8 <_getenv_r>
 800bcd0:	4604      	mov	r4, r0
 800bcd2:	b970      	cbnz	r0, 800bcf2 <_tzset_unlocked_r+0x3a>
 800bcd4:	4bae      	ldr	r3, [pc, #696]	; (800bf90 <_tzset_unlocked_r+0x2d8>)
 800bcd6:	4aaf      	ldr	r2, [pc, #700]	; (800bf94 <_tzset_unlocked_r+0x2dc>)
 800bcd8:	6018      	str	r0, [r3, #0]
 800bcda:	4baf      	ldr	r3, [pc, #700]	; (800bf98 <_tzset_unlocked_r+0x2e0>)
 800bcdc:	6018      	str	r0, [r3, #0]
 800bcde:	4baf      	ldr	r3, [pc, #700]	; (800bf9c <_tzset_unlocked_r+0x2e4>)
 800bce0:	6830      	ldr	r0, [r6, #0]
 800bce2:	e9c3 2200 	strd	r2, r2, [r3]
 800bce6:	f7fc ffa1 	bl	8008c2c <free>
 800bcea:	6034      	str	r4, [r6, #0]
 800bcec:	b00d      	add	sp, #52	; 0x34
 800bcee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcf2:	6831      	ldr	r1, [r6, #0]
 800bcf4:	2900      	cmp	r1, #0
 800bcf6:	d162      	bne.n	800bdbe <_tzset_unlocked_r+0x106>
 800bcf8:	6830      	ldr	r0, [r6, #0]
 800bcfa:	f7fc ff97 	bl	8008c2c <free>
 800bcfe:	4620      	mov	r0, r4
 800bd00:	f7f4 fa78 	bl	80001f4 <strlen>
 800bd04:	1c41      	adds	r1, r0, #1
 800bd06:	4638      	mov	r0, r7
 800bd08:	f7fd fa8c 	bl	8009224 <_malloc_r>
 800bd0c:	6030      	str	r0, [r6, #0]
 800bd0e:	2800      	cmp	r0, #0
 800bd10:	d15a      	bne.n	800bdc8 <_tzset_unlocked_r+0x110>
 800bd12:	7823      	ldrb	r3, [r4, #0]
 800bd14:	4aa2      	ldr	r2, [pc, #648]	; (800bfa0 <_tzset_unlocked_r+0x2e8>)
 800bd16:	49a3      	ldr	r1, [pc, #652]	; (800bfa4 <_tzset_unlocked_r+0x2ec>)
 800bd18:	2b3a      	cmp	r3, #58	; 0x3a
 800bd1a:	bf08      	it	eq
 800bd1c:	3401      	addeq	r4, #1
 800bd1e:	ae0a      	add	r6, sp, #40	; 0x28
 800bd20:	4633      	mov	r3, r6
 800bd22:	4620      	mov	r0, r4
 800bd24:	f7fe f9d6 	bl	800a0d4 <siscanf>
 800bd28:	2800      	cmp	r0, #0
 800bd2a:	dddf      	ble.n	800bcec <_tzset_unlocked_r+0x34>
 800bd2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bd2e:	18e7      	adds	r7, r4, r3
 800bd30:	5ce3      	ldrb	r3, [r4, r3]
 800bd32:	2b2d      	cmp	r3, #45	; 0x2d
 800bd34:	d14c      	bne.n	800bdd0 <_tzset_unlocked_r+0x118>
 800bd36:	3701      	adds	r7, #1
 800bd38:	f04f 38ff 	mov.w	r8, #4294967295
 800bd3c:	f10d 0a20 	add.w	sl, sp, #32
 800bd40:	f10d 0b1e 	add.w	fp, sp, #30
 800bd44:	2400      	movs	r4, #0
 800bd46:	e9cd 6a01 	strd	r6, sl, [sp, #4]
 800bd4a:	4997      	ldr	r1, [pc, #604]	; (800bfa8 <_tzset_unlocked_r+0x2f0>)
 800bd4c:	9603      	str	r6, [sp, #12]
 800bd4e:	f8cd b000 	str.w	fp, [sp]
 800bd52:	4633      	mov	r3, r6
 800bd54:	aa07      	add	r2, sp, #28
 800bd56:	4638      	mov	r0, r7
 800bd58:	f8ad 401e 	strh.w	r4, [sp, #30]
 800bd5c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800bd60:	f7fe f9b8 	bl	800a0d4 <siscanf>
 800bd64:	42a0      	cmp	r0, r4
 800bd66:	ddc1      	ble.n	800bcec <_tzset_unlocked_r+0x34>
 800bd68:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800bd6c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bd70:	f8df 9240 	ldr.w	r9, [pc, #576]	; 800bfb4 <_tzset_unlocked_r+0x2fc>
 800bd74:	213c      	movs	r1, #60	; 0x3c
 800bd76:	fb01 3302 	mla	r3, r1, r2, r3
 800bd7a:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800bd7e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800bd82:	fb01 3302 	mla	r3, r1, r2, r3
 800bd86:	fb08 f303 	mul.w	r3, r8, r3
 800bd8a:	f8df 8210 	ldr.w	r8, [pc, #528]	; 800bf9c <_tzset_unlocked_r+0x2e4>
 800bd8e:	62ab      	str	r3, [r5, #40]	; 0x28
 800bd90:	4b83      	ldr	r3, [pc, #524]	; (800bfa0 <_tzset_unlocked_r+0x2e8>)
 800bd92:	f8c8 3000 	str.w	r3, [r8]
 800bd96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bd98:	4982      	ldr	r1, [pc, #520]	; (800bfa4 <_tzset_unlocked_r+0x2ec>)
 800bd9a:	441f      	add	r7, r3
 800bd9c:	464a      	mov	r2, r9
 800bd9e:	4633      	mov	r3, r6
 800bda0:	4638      	mov	r0, r7
 800bda2:	f7fe f997 	bl	800a0d4 <siscanf>
 800bda6:	42a0      	cmp	r0, r4
 800bda8:	dc18      	bgt.n	800bddc <_tzset_unlocked_r+0x124>
 800bdaa:	f8d8 3000 	ldr.w	r3, [r8]
 800bdae:	f8c8 3004 	str.w	r3, [r8, #4]
 800bdb2:	4b77      	ldr	r3, [pc, #476]	; (800bf90 <_tzset_unlocked_r+0x2d8>)
 800bdb4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800bdb6:	601a      	str	r2, [r3, #0]
 800bdb8:	4b77      	ldr	r3, [pc, #476]	; (800bf98 <_tzset_unlocked_r+0x2e0>)
 800bdba:	601c      	str	r4, [r3, #0]
 800bdbc:	e796      	b.n	800bcec <_tzset_unlocked_r+0x34>
 800bdbe:	f7f4 fa0f 	bl	80001e0 <strcmp>
 800bdc2:	2800      	cmp	r0, #0
 800bdc4:	d198      	bne.n	800bcf8 <_tzset_unlocked_r+0x40>
 800bdc6:	e791      	b.n	800bcec <_tzset_unlocked_r+0x34>
 800bdc8:	4621      	mov	r1, r4
 800bdca:	f7fe fa03 	bl	800a1d4 <strcpy>
 800bdce:	e7a0      	b.n	800bd12 <_tzset_unlocked_r+0x5a>
 800bdd0:	2b2b      	cmp	r3, #43	; 0x2b
 800bdd2:	bf08      	it	eq
 800bdd4:	3701      	addeq	r7, #1
 800bdd6:	f04f 0801 	mov.w	r8, #1
 800bdda:	e7af      	b.n	800bd3c <_tzset_unlocked_r+0x84>
 800bddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bdde:	f8c8 9004 	str.w	r9, [r8, #4]
 800bde2:	18fc      	adds	r4, r7, r3
 800bde4:	5cfb      	ldrb	r3, [r7, r3]
 800bde6:	2b2d      	cmp	r3, #45	; 0x2d
 800bde8:	f040 808b 	bne.w	800bf02 <_tzset_unlocked_r+0x24a>
 800bdec:	3401      	adds	r4, #1
 800bdee:	f04f 37ff 	mov.w	r7, #4294967295
 800bdf2:	2300      	movs	r3, #0
 800bdf4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bdf8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bdfc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800be00:	930a      	str	r3, [sp, #40]	; 0x28
 800be02:	e9cd a602 	strd	sl, r6, [sp, #8]
 800be06:	e9cd b600 	strd	fp, r6, [sp]
 800be0a:	4967      	ldr	r1, [pc, #412]	; (800bfa8 <_tzset_unlocked_r+0x2f0>)
 800be0c:	4633      	mov	r3, r6
 800be0e:	aa07      	add	r2, sp, #28
 800be10:	4620      	mov	r0, r4
 800be12:	f7fe f95f 	bl	800a0d4 <siscanf>
 800be16:	2800      	cmp	r0, #0
 800be18:	dc78      	bgt.n	800bf0c <_tzset_unlocked_r+0x254>
 800be1a:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800be1c:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
 800be20:	652b      	str	r3, [r5, #80]	; 0x50
 800be22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800be24:	462f      	mov	r7, r5
 800be26:	441c      	add	r4, r3
 800be28:	f04f 0900 	mov.w	r9, #0
 800be2c:	7823      	ldrb	r3, [r4, #0]
 800be2e:	2b2c      	cmp	r3, #44	; 0x2c
 800be30:	bf08      	it	eq
 800be32:	3401      	addeq	r4, #1
 800be34:	f894 8000 	ldrb.w	r8, [r4]
 800be38:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
 800be3c:	d178      	bne.n	800bf30 <_tzset_unlocked_r+0x278>
 800be3e:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 800be42:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800be46:	ab09      	add	r3, sp, #36	; 0x24
 800be48:	9300      	str	r3, [sp, #0]
 800be4a:	4958      	ldr	r1, [pc, #352]	; (800bfac <_tzset_unlocked_r+0x2f4>)
 800be4c:	9603      	str	r6, [sp, #12]
 800be4e:	4633      	mov	r3, r6
 800be50:	f10d 0222 	add.w	r2, sp, #34	; 0x22
 800be54:	4620      	mov	r0, r4
 800be56:	f7fe f93d 	bl	800a0d4 <siscanf>
 800be5a:	2803      	cmp	r0, #3
 800be5c:	f47f af46 	bne.w	800bcec <_tzset_unlocked_r+0x34>
 800be60:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800be64:	1e4b      	subs	r3, r1, #1
 800be66:	2b0b      	cmp	r3, #11
 800be68:	f63f af40 	bhi.w	800bcec <_tzset_unlocked_r+0x34>
 800be6c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800be70:	1e53      	subs	r3, r2, #1
 800be72:	2b04      	cmp	r3, #4
 800be74:	f63f af3a 	bhi.w	800bcec <_tzset_unlocked_r+0x34>
 800be78:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800be7c:	2b06      	cmp	r3, #6
 800be7e:	f63f af35 	bhi.w	800bcec <_tzset_unlocked_r+0x34>
 800be82:	e9c7 1203 	strd	r1, r2, [r7, #12]
 800be86:	f887 8008 	strb.w	r8, [r7, #8]
 800be8a:	617b      	str	r3, [r7, #20]
 800be8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800be8e:	eb04 0803 	add.w	r8, r4, r3
 800be92:	2302      	movs	r3, #2
 800be94:	f8ad 301c 	strh.w	r3, [sp, #28]
 800be98:	2300      	movs	r3, #0
 800be9a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800be9e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bea2:	930a      	str	r3, [sp, #40]	; 0x28
 800bea4:	f898 3000 	ldrb.w	r3, [r8]
 800bea8:	2b2f      	cmp	r3, #47	; 0x2f
 800beaa:	d109      	bne.n	800bec0 <_tzset_unlocked_r+0x208>
 800beac:	e9cd a602 	strd	sl, r6, [sp, #8]
 800beb0:	e9cd b600 	strd	fp, r6, [sp]
 800beb4:	493e      	ldr	r1, [pc, #248]	; (800bfb0 <_tzset_unlocked_r+0x2f8>)
 800beb6:	4633      	mov	r3, r6
 800beb8:	aa07      	add	r2, sp, #28
 800beba:	4640      	mov	r0, r8
 800bebc:	f7fe f90a 	bl	800a0d4 <siscanf>
 800bec0:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800bec4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bec8:	213c      	movs	r1, #60	; 0x3c
 800beca:	fb01 3302 	mla	r3, r1, r2, r3
 800bece:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800bed2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800bed6:	fb01 3302 	mla	r3, r1, r2, r3
 800beda:	61bb      	str	r3, [r7, #24]
 800bedc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bede:	3728      	adds	r7, #40	; 0x28
 800bee0:	4444      	add	r4, r8
 800bee2:	f1b9 0f00 	cmp.w	r9, #0
 800bee6:	d020      	beq.n	800bf2a <_tzset_unlocked_r+0x272>
 800bee8:	6868      	ldr	r0, [r5, #4]
 800beea:	f7ff fe29 	bl	800bb40 <__tzcalc_limits>
 800beee:	4b28      	ldr	r3, [pc, #160]	; (800bf90 <_tzset_unlocked_r+0x2d8>)
 800bef0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800bef2:	601a      	str	r2, [r3, #0]
 800bef4:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 800bef6:	1a9b      	subs	r3, r3, r2
 800bef8:	4a27      	ldr	r2, [pc, #156]	; (800bf98 <_tzset_unlocked_r+0x2e0>)
 800befa:	bf18      	it	ne
 800befc:	2301      	movne	r3, #1
 800befe:	6013      	str	r3, [r2, #0]
 800bf00:	e6f4      	b.n	800bcec <_tzset_unlocked_r+0x34>
 800bf02:	2b2b      	cmp	r3, #43	; 0x2b
 800bf04:	bf08      	it	eq
 800bf06:	3401      	addeq	r4, #1
 800bf08:	2701      	movs	r7, #1
 800bf0a:	e772      	b.n	800bdf2 <_tzset_unlocked_r+0x13a>
 800bf0c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800bf10:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bf14:	213c      	movs	r1, #60	; 0x3c
 800bf16:	fb01 3302 	mla	r3, r1, r2, r3
 800bf1a:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800bf1e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800bf22:	fb01 3302 	mla	r3, r1, r2, r3
 800bf26:	437b      	muls	r3, r7
 800bf28:	e77a      	b.n	800be20 <_tzset_unlocked_r+0x168>
 800bf2a:	f04f 0901 	mov.w	r9, #1
 800bf2e:	e77d      	b.n	800be2c <_tzset_unlocked_r+0x174>
 800bf30:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
 800bf34:	bf06      	itte	eq
 800bf36:	3401      	addeq	r4, #1
 800bf38:	4643      	moveq	r3, r8
 800bf3a:	2344      	movne	r3, #68	; 0x44
 800bf3c:	220a      	movs	r2, #10
 800bf3e:	a90b      	add	r1, sp, #44	; 0x2c
 800bf40:	4620      	mov	r0, r4
 800bf42:	9305      	str	r3, [sp, #20]
 800bf44:	f7ff fdf2 	bl	800bb2c <strtoul>
 800bf48:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 800bf4c:	9b05      	ldr	r3, [sp, #20]
 800bf4e:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
 800bf52:	45a0      	cmp	r8, r4
 800bf54:	d114      	bne.n	800bf80 <_tzset_unlocked_r+0x2c8>
 800bf56:	234d      	movs	r3, #77	; 0x4d
 800bf58:	f1b9 0f00 	cmp.w	r9, #0
 800bf5c:	d107      	bne.n	800bf6e <_tzset_unlocked_r+0x2b6>
 800bf5e:	722b      	strb	r3, [r5, #8]
 800bf60:	2103      	movs	r1, #3
 800bf62:	2302      	movs	r3, #2
 800bf64:	e9c5 1303 	strd	r1, r3, [r5, #12]
 800bf68:	f8c5 9014 	str.w	r9, [r5, #20]
 800bf6c:	e791      	b.n	800be92 <_tzset_unlocked_r+0x1da>
 800bf6e:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
 800bf72:	220b      	movs	r2, #11
 800bf74:	2301      	movs	r3, #1
 800bf76:	e9c5 230d 	strd	r2, r3, [r5, #52]	; 0x34
 800bf7a:	2300      	movs	r3, #0
 800bf7c:	63eb      	str	r3, [r5, #60]	; 0x3c
 800bf7e:	e788      	b.n	800be92 <_tzset_unlocked_r+0x1da>
 800bf80:	b280      	uxth	r0, r0
 800bf82:	723b      	strb	r3, [r7, #8]
 800bf84:	6178      	str	r0, [r7, #20]
 800bf86:	e784      	b.n	800be92 <_tzset_unlocked_r+0x1da>
 800bf88:	08010028 	.word	0x08010028
 800bf8c:	2000034c 	.word	0x2000034c
 800bf90:	20000354 	.word	0x20000354
 800bf94:	0801002b 	.word	0x0801002b
 800bf98:	20000350 	.word	0x20000350
 800bf9c:	20000070 	.word	0x20000070
 800bfa0:	2000033f 	.word	0x2000033f
 800bfa4:	0801002f 	.word	0x0801002f
 800bfa8:	08010052 	.word	0x08010052
 800bfac:	0801003e 	.word	0x0801003e
 800bfb0:	08010051 	.word	0x08010051
 800bfb4:	20000334 	.word	0x20000334

0800bfb8 <_write_r>:
 800bfb8:	b538      	push	{r3, r4, r5, lr}
 800bfba:	4d07      	ldr	r5, [pc, #28]	; (800bfd8 <_write_r+0x20>)
 800bfbc:	4604      	mov	r4, r0
 800bfbe:	4608      	mov	r0, r1
 800bfc0:	4611      	mov	r1, r2
 800bfc2:	2200      	movs	r2, #0
 800bfc4:	602a      	str	r2, [r5, #0]
 800bfc6:	461a      	mov	r2, r3
 800bfc8:	f003 faac 	bl	800f524 <_write>
 800bfcc:	1c43      	adds	r3, r0, #1
 800bfce:	d102      	bne.n	800bfd6 <_write_r+0x1e>
 800bfd0:	682b      	ldr	r3, [r5, #0]
 800bfd2:	b103      	cbz	r3, 800bfd6 <_write_r+0x1e>
 800bfd4:	6023      	str	r3, [r4, #0]
 800bfd6:	bd38      	pop	{r3, r4, r5, pc}
 800bfd8:	20000360 	.word	0x20000360

0800bfdc <abs>:
 800bfdc:	2800      	cmp	r0, #0
 800bfde:	bfb8      	it	lt
 800bfe0:	4240      	neglt	r0, r0
 800bfe2:	4770      	bx	lr

0800bfe4 <__assert_func>:
 800bfe4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bfe6:	4614      	mov	r4, r2
 800bfe8:	461a      	mov	r2, r3
 800bfea:	4b09      	ldr	r3, [pc, #36]	; (800c010 <__assert_func+0x2c>)
 800bfec:	681b      	ldr	r3, [r3, #0]
 800bfee:	4605      	mov	r5, r0
 800bff0:	68d8      	ldr	r0, [r3, #12]
 800bff2:	b14c      	cbz	r4, 800c008 <__assert_func+0x24>
 800bff4:	4b07      	ldr	r3, [pc, #28]	; (800c014 <__assert_func+0x30>)
 800bff6:	9100      	str	r1, [sp, #0]
 800bff8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bffc:	4906      	ldr	r1, [pc, #24]	; (800c018 <__assert_func+0x34>)
 800bffe:	462b      	mov	r3, r5
 800c000:	f000 feac 	bl	800cd5c <fiprintf>
 800c004:	f002 ff60 	bl	800eec8 <abort>
 800c008:	4b04      	ldr	r3, [pc, #16]	; (800c01c <__assert_func+0x38>)
 800c00a:	461c      	mov	r4, r3
 800c00c:	e7f3      	b.n	800bff6 <__assert_func+0x12>
 800c00e:	bf00      	nop
 800c010:	2000000c 	.word	0x2000000c
 800c014:	08010064 	.word	0x08010064
 800c018:	08010071 	.word	0x08010071
 800c01c:	0801009f 	.word	0x0801009f

0800c020 <_close_r>:
 800c020:	b538      	push	{r3, r4, r5, lr}
 800c022:	4d06      	ldr	r5, [pc, #24]	; (800c03c <_close_r+0x1c>)
 800c024:	2300      	movs	r3, #0
 800c026:	4604      	mov	r4, r0
 800c028:	4608      	mov	r0, r1
 800c02a:	602b      	str	r3, [r5, #0]
 800c02c:	f003 fa34 	bl	800f498 <_close>
 800c030:	1c43      	adds	r3, r0, #1
 800c032:	d102      	bne.n	800c03a <_close_r+0x1a>
 800c034:	682b      	ldr	r3, [r5, #0]
 800c036:	b103      	cbz	r3, 800c03a <_close_r+0x1a>
 800c038:	6023      	str	r3, [r4, #0]
 800c03a:	bd38      	pop	{r3, r4, r5, pc}
 800c03c:	20000360 	.word	0x20000360

0800c040 <div>:
 800c040:	2900      	cmp	r1, #0
 800c042:	b510      	push	{r4, lr}
 800c044:	fb91 f4f2 	sdiv	r4, r1, r2
 800c048:	fb02 1314 	mls	r3, r2, r4, r1
 800c04c:	db06      	blt.n	800c05c <div+0x1c>
 800c04e:	2b00      	cmp	r3, #0
 800c050:	da01      	bge.n	800c056 <div+0x16>
 800c052:	3401      	adds	r4, #1
 800c054:	1a9b      	subs	r3, r3, r2
 800c056:	e9c0 4300 	strd	r4, r3, [r0]
 800c05a:	bd10      	pop	{r4, pc}
 800c05c:	2b00      	cmp	r3, #0
 800c05e:	bfc4      	itt	gt
 800c060:	f104 34ff 	addgt.w	r4, r4, #4294967295
 800c064:	189b      	addgt	r3, r3, r2
 800c066:	e7f6      	b.n	800c056 <div+0x16>

0800c068 <quorem>:
 800c068:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c06c:	6903      	ldr	r3, [r0, #16]
 800c06e:	690c      	ldr	r4, [r1, #16]
 800c070:	42a3      	cmp	r3, r4
 800c072:	4607      	mov	r7, r0
 800c074:	f2c0 8081 	blt.w	800c17a <quorem+0x112>
 800c078:	3c01      	subs	r4, #1
 800c07a:	f101 0814 	add.w	r8, r1, #20
 800c07e:	f100 0514 	add.w	r5, r0, #20
 800c082:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c086:	9301      	str	r3, [sp, #4]
 800c088:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800c08c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c090:	3301      	adds	r3, #1
 800c092:	429a      	cmp	r2, r3
 800c094:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800c098:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800c09c:	fbb2 f6f3 	udiv	r6, r2, r3
 800c0a0:	d331      	bcc.n	800c106 <quorem+0x9e>
 800c0a2:	f04f 0e00 	mov.w	lr, #0
 800c0a6:	4640      	mov	r0, r8
 800c0a8:	46ac      	mov	ip, r5
 800c0aa:	46f2      	mov	sl, lr
 800c0ac:	f850 2b04 	ldr.w	r2, [r0], #4
 800c0b0:	b293      	uxth	r3, r2
 800c0b2:	fb06 e303 	mla	r3, r6, r3, lr
 800c0b6:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800c0ba:	b29b      	uxth	r3, r3
 800c0bc:	ebaa 0303 	sub.w	r3, sl, r3
 800c0c0:	f8dc a000 	ldr.w	sl, [ip]
 800c0c4:	0c12      	lsrs	r2, r2, #16
 800c0c6:	fa13 f38a 	uxtah	r3, r3, sl
 800c0ca:	fb06 e202 	mla	r2, r6, r2, lr
 800c0ce:	9300      	str	r3, [sp, #0]
 800c0d0:	9b00      	ldr	r3, [sp, #0]
 800c0d2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800c0d6:	b292      	uxth	r2, r2
 800c0d8:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800c0dc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c0e0:	f8bd 3000 	ldrh.w	r3, [sp]
 800c0e4:	4581      	cmp	r9, r0
 800c0e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c0ea:	f84c 3b04 	str.w	r3, [ip], #4
 800c0ee:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800c0f2:	d2db      	bcs.n	800c0ac <quorem+0x44>
 800c0f4:	f855 300b 	ldr.w	r3, [r5, fp]
 800c0f8:	b92b      	cbnz	r3, 800c106 <quorem+0x9e>
 800c0fa:	9b01      	ldr	r3, [sp, #4]
 800c0fc:	3b04      	subs	r3, #4
 800c0fe:	429d      	cmp	r5, r3
 800c100:	461a      	mov	r2, r3
 800c102:	d32e      	bcc.n	800c162 <quorem+0xfa>
 800c104:	613c      	str	r4, [r7, #16]
 800c106:	4638      	mov	r0, r7
 800c108:	f001 fda8 	bl	800dc5c <__mcmp>
 800c10c:	2800      	cmp	r0, #0
 800c10e:	db24      	blt.n	800c15a <quorem+0xf2>
 800c110:	3601      	adds	r6, #1
 800c112:	4628      	mov	r0, r5
 800c114:	f04f 0c00 	mov.w	ip, #0
 800c118:	f858 2b04 	ldr.w	r2, [r8], #4
 800c11c:	f8d0 e000 	ldr.w	lr, [r0]
 800c120:	b293      	uxth	r3, r2
 800c122:	ebac 0303 	sub.w	r3, ip, r3
 800c126:	0c12      	lsrs	r2, r2, #16
 800c128:	fa13 f38e 	uxtah	r3, r3, lr
 800c12c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800c130:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c134:	b29b      	uxth	r3, r3
 800c136:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c13a:	45c1      	cmp	r9, r8
 800c13c:	f840 3b04 	str.w	r3, [r0], #4
 800c140:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800c144:	d2e8      	bcs.n	800c118 <quorem+0xb0>
 800c146:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c14a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c14e:	b922      	cbnz	r2, 800c15a <quorem+0xf2>
 800c150:	3b04      	subs	r3, #4
 800c152:	429d      	cmp	r5, r3
 800c154:	461a      	mov	r2, r3
 800c156:	d30a      	bcc.n	800c16e <quorem+0x106>
 800c158:	613c      	str	r4, [r7, #16]
 800c15a:	4630      	mov	r0, r6
 800c15c:	b003      	add	sp, #12
 800c15e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c162:	6812      	ldr	r2, [r2, #0]
 800c164:	3b04      	subs	r3, #4
 800c166:	2a00      	cmp	r2, #0
 800c168:	d1cc      	bne.n	800c104 <quorem+0x9c>
 800c16a:	3c01      	subs	r4, #1
 800c16c:	e7c7      	b.n	800c0fe <quorem+0x96>
 800c16e:	6812      	ldr	r2, [r2, #0]
 800c170:	3b04      	subs	r3, #4
 800c172:	2a00      	cmp	r2, #0
 800c174:	d1f0      	bne.n	800c158 <quorem+0xf0>
 800c176:	3c01      	subs	r4, #1
 800c178:	e7eb      	b.n	800c152 <quorem+0xea>
 800c17a:	2000      	movs	r0, #0
 800c17c:	e7ee      	b.n	800c15c <quorem+0xf4>
	...

0800c180 <_dtoa_r>:
 800c180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c184:	ed2d 8b04 	vpush	{d8-d9}
 800c188:	ec57 6b10 	vmov	r6, r7, d0
 800c18c:	b093      	sub	sp, #76	; 0x4c
 800c18e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800c190:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800c194:	9106      	str	r1, [sp, #24]
 800c196:	ee10 aa10 	vmov	sl, s0
 800c19a:	4604      	mov	r4, r0
 800c19c:	9209      	str	r2, [sp, #36]	; 0x24
 800c19e:	930c      	str	r3, [sp, #48]	; 0x30
 800c1a0:	46bb      	mov	fp, r7
 800c1a2:	b975      	cbnz	r5, 800c1c2 <_dtoa_r+0x42>
 800c1a4:	2010      	movs	r0, #16
 800c1a6:	f7fc fd39 	bl	8008c1c <malloc>
 800c1aa:	4602      	mov	r2, r0
 800c1ac:	6260      	str	r0, [r4, #36]	; 0x24
 800c1ae:	b920      	cbnz	r0, 800c1ba <_dtoa_r+0x3a>
 800c1b0:	4ba7      	ldr	r3, [pc, #668]	; (800c450 <_dtoa_r+0x2d0>)
 800c1b2:	21ea      	movs	r1, #234	; 0xea
 800c1b4:	48a7      	ldr	r0, [pc, #668]	; (800c454 <_dtoa_r+0x2d4>)
 800c1b6:	f7ff ff15 	bl	800bfe4 <__assert_func>
 800c1ba:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800c1be:	6005      	str	r5, [r0, #0]
 800c1c0:	60c5      	str	r5, [r0, #12]
 800c1c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c1c4:	6819      	ldr	r1, [r3, #0]
 800c1c6:	b151      	cbz	r1, 800c1de <_dtoa_r+0x5e>
 800c1c8:	685a      	ldr	r2, [r3, #4]
 800c1ca:	604a      	str	r2, [r1, #4]
 800c1cc:	2301      	movs	r3, #1
 800c1ce:	4093      	lsls	r3, r2
 800c1d0:	608b      	str	r3, [r1, #8]
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	f001 fab6 	bl	800d744 <_Bfree>
 800c1d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c1da:	2200      	movs	r2, #0
 800c1dc:	601a      	str	r2, [r3, #0]
 800c1de:	1e3b      	subs	r3, r7, #0
 800c1e0:	bfaa      	itet	ge
 800c1e2:	2300      	movge	r3, #0
 800c1e4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800c1e8:	f8c8 3000 	strge.w	r3, [r8]
 800c1ec:	4b9a      	ldr	r3, [pc, #616]	; (800c458 <_dtoa_r+0x2d8>)
 800c1ee:	bfbc      	itt	lt
 800c1f0:	2201      	movlt	r2, #1
 800c1f2:	f8c8 2000 	strlt.w	r2, [r8]
 800c1f6:	ea33 030b 	bics.w	r3, r3, fp
 800c1fa:	d11b      	bne.n	800c234 <_dtoa_r+0xb4>
 800c1fc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c1fe:	f242 730f 	movw	r3, #9999	; 0x270f
 800c202:	6013      	str	r3, [r2, #0]
 800c204:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c208:	4333      	orrs	r3, r6
 800c20a:	f000 8592 	beq.w	800cd32 <_dtoa_r+0xbb2>
 800c20e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c210:	b963      	cbnz	r3, 800c22c <_dtoa_r+0xac>
 800c212:	4b92      	ldr	r3, [pc, #584]	; (800c45c <_dtoa_r+0x2dc>)
 800c214:	e022      	b.n	800c25c <_dtoa_r+0xdc>
 800c216:	4b92      	ldr	r3, [pc, #584]	; (800c460 <_dtoa_r+0x2e0>)
 800c218:	9301      	str	r3, [sp, #4]
 800c21a:	3308      	adds	r3, #8
 800c21c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c21e:	6013      	str	r3, [r2, #0]
 800c220:	9801      	ldr	r0, [sp, #4]
 800c222:	b013      	add	sp, #76	; 0x4c
 800c224:	ecbd 8b04 	vpop	{d8-d9}
 800c228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c22c:	4b8b      	ldr	r3, [pc, #556]	; (800c45c <_dtoa_r+0x2dc>)
 800c22e:	9301      	str	r3, [sp, #4]
 800c230:	3303      	adds	r3, #3
 800c232:	e7f3      	b.n	800c21c <_dtoa_r+0x9c>
 800c234:	2200      	movs	r2, #0
 800c236:	2300      	movs	r3, #0
 800c238:	4650      	mov	r0, sl
 800c23a:	4659      	mov	r1, fp
 800c23c:	f7f4 fc5c 	bl	8000af8 <__aeabi_dcmpeq>
 800c240:	ec4b ab19 	vmov	d9, sl, fp
 800c244:	4680      	mov	r8, r0
 800c246:	b158      	cbz	r0, 800c260 <_dtoa_r+0xe0>
 800c248:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c24a:	2301      	movs	r3, #1
 800c24c:	6013      	str	r3, [r2, #0]
 800c24e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c250:	2b00      	cmp	r3, #0
 800c252:	f000 856b 	beq.w	800cd2c <_dtoa_r+0xbac>
 800c256:	4883      	ldr	r0, [pc, #524]	; (800c464 <_dtoa_r+0x2e4>)
 800c258:	6018      	str	r0, [r3, #0]
 800c25a:	1e43      	subs	r3, r0, #1
 800c25c:	9301      	str	r3, [sp, #4]
 800c25e:	e7df      	b.n	800c220 <_dtoa_r+0xa0>
 800c260:	ec4b ab10 	vmov	d0, sl, fp
 800c264:	aa10      	add	r2, sp, #64	; 0x40
 800c266:	a911      	add	r1, sp, #68	; 0x44
 800c268:	4620      	mov	r0, r4
 800c26a:	f001 fe19 	bl	800dea0 <__d2b>
 800c26e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800c272:	ee08 0a10 	vmov	s16, r0
 800c276:	2d00      	cmp	r5, #0
 800c278:	f000 8084 	beq.w	800c384 <_dtoa_r+0x204>
 800c27c:	ee19 3a90 	vmov	r3, s19
 800c280:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c284:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800c288:	4656      	mov	r6, sl
 800c28a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800c28e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800c292:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800c296:	4b74      	ldr	r3, [pc, #464]	; (800c468 <_dtoa_r+0x2e8>)
 800c298:	2200      	movs	r2, #0
 800c29a:	4630      	mov	r0, r6
 800c29c:	4639      	mov	r1, r7
 800c29e:	f7f4 f80b 	bl	80002b8 <__aeabi_dsub>
 800c2a2:	a365      	add	r3, pc, #404	; (adr r3, 800c438 <_dtoa_r+0x2b8>)
 800c2a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c2a8:	f7f4 f9be 	bl	8000628 <__aeabi_dmul>
 800c2ac:	a364      	add	r3, pc, #400	; (adr r3, 800c440 <_dtoa_r+0x2c0>)
 800c2ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c2b2:	f7f4 f803 	bl	80002bc <__adddf3>
 800c2b6:	4606      	mov	r6, r0
 800c2b8:	4628      	mov	r0, r5
 800c2ba:	460f      	mov	r7, r1
 800c2bc:	f7f4 f94a 	bl	8000554 <__aeabi_i2d>
 800c2c0:	a361      	add	r3, pc, #388	; (adr r3, 800c448 <_dtoa_r+0x2c8>)
 800c2c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c2c6:	f7f4 f9af 	bl	8000628 <__aeabi_dmul>
 800c2ca:	4602      	mov	r2, r0
 800c2cc:	460b      	mov	r3, r1
 800c2ce:	4630      	mov	r0, r6
 800c2d0:	4639      	mov	r1, r7
 800c2d2:	f7f3 fff3 	bl	80002bc <__adddf3>
 800c2d6:	4606      	mov	r6, r0
 800c2d8:	460f      	mov	r7, r1
 800c2da:	f7f4 fc55 	bl	8000b88 <__aeabi_d2iz>
 800c2de:	2200      	movs	r2, #0
 800c2e0:	9000      	str	r0, [sp, #0]
 800c2e2:	2300      	movs	r3, #0
 800c2e4:	4630      	mov	r0, r6
 800c2e6:	4639      	mov	r1, r7
 800c2e8:	f7f4 fc10 	bl	8000b0c <__aeabi_dcmplt>
 800c2ec:	b150      	cbz	r0, 800c304 <_dtoa_r+0x184>
 800c2ee:	9800      	ldr	r0, [sp, #0]
 800c2f0:	f7f4 f930 	bl	8000554 <__aeabi_i2d>
 800c2f4:	4632      	mov	r2, r6
 800c2f6:	463b      	mov	r3, r7
 800c2f8:	f7f4 fbfe 	bl	8000af8 <__aeabi_dcmpeq>
 800c2fc:	b910      	cbnz	r0, 800c304 <_dtoa_r+0x184>
 800c2fe:	9b00      	ldr	r3, [sp, #0]
 800c300:	3b01      	subs	r3, #1
 800c302:	9300      	str	r3, [sp, #0]
 800c304:	9b00      	ldr	r3, [sp, #0]
 800c306:	2b16      	cmp	r3, #22
 800c308:	d85a      	bhi.n	800c3c0 <_dtoa_r+0x240>
 800c30a:	9a00      	ldr	r2, [sp, #0]
 800c30c:	4b57      	ldr	r3, [pc, #348]	; (800c46c <_dtoa_r+0x2ec>)
 800c30e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c312:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c316:	ec51 0b19 	vmov	r0, r1, d9
 800c31a:	f7f4 fbf7 	bl	8000b0c <__aeabi_dcmplt>
 800c31e:	2800      	cmp	r0, #0
 800c320:	d050      	beq.n	800c3c4 <_dtoa_r+0x244>
 800c322:	9b00      	ldr	r3, [sp, #0]
 800c324:	3b01      	subs	r3, #1
 800c326:	9300      	str	r3, [sp, #0]
 800c328:	2300      	movs	r3, #0
 800c32a:	930b      	str	r3, [sp, #44]	; 0x2c
 800c32c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c32e:	1b5d      	subs	r5, r3, r5
 800c330:	1e6b      	subs	r3, r5, #1
 800c332:	9305      	str	r3, [sp, #20]
 800c334:	bf45      	ittet	mi
 800c336:	f1c5 0301 	rsbmi	r3, r5, #1
 800c33a:	9304      	strmi	r3, [sp, #16]
 800c33c:	2300      	movpl	r3, #0
 800c33e:	2300      	movmi	r3, #0
 800c340:	bf4c      	ite	mi
 800c342:	9305      	strmi	r3, [sp, #20]
 800c344:	9304      	strpl	r3, [sp, #16]
 800c346:	9b00      	ldr	r3, [sp, #0]
 800c348:	2b00      	cmp	r3, #0
 800c34a:	db3d      	blt.n	800c3c8 <_dtoa_r+0x248>
 800c34c:	9b05      	ldr	r3, [sp, #20]
 800c34e:	9a00      	ldr	r2, [sp, #0]
 800c350:	920a      	str	r2, [sp, #40]	; 0x28
 800c352:	4413      	add	r3, r2
 800c354:	9305      	str	r3, [sp, #20]
 800c356:	2300      	movs	r3, #0
 800c358:	9307      	str	r3, [sp, #28]
 800c35a:	9b06      	ldr	r3, [sp, #24]
 800c35c:	2b09      	cmp	r3, #9
 800c35e:	f200 8089 	bhi.w	800c474 <_dtoa_r+0x2f4>
 800c362:	2b05      	cmp	r3, #5
 800c364:	bfc4      	itt	gt
 800c366:	3b04      	subgt	r3, #4
 800c368:	9306      	strgt	r3, [sp, #24]
 800c36a:	9b06      	ldr	r3, [sp, #24]
 800c36c:	f1a3 0302 	sub.w	r3, r3, #2
 800c370:	bfcc      	ite	gt
 800c372:	2500      	movgt	r5, #0
 800c374:	2501      	movle	r5, #1
 800c376:	2b03      	cmp	r3, #3
 800c378:	f200 8087 	bhi.w	800c48a <_dtoa_r+0x30a>
 800c37c:	e8df f003 	tbb	[pc, r3]
 800c380:	59383a2d 	.word	0x59383a2d
 800c384:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800c388:	441d      	add	r5, r3
 800c38a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800c38e:	2b20      	cmp	r3, #32
 800c390:	bfc1      	itttt	gt
 800c392:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800c396:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800c39a:	fa0b f303 	lslgt.w	r3, fp, r3
 800c39e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800c3a2:	bfda      	itte	le
 800c3a4:	f1c3 0320 	rsble	r3, r3, #32
 800c3a8:	fa06 f003 	lslle.w	r0, r6, r3
 800c3ac:	4318      	orrgt	r0, r3
 800c3ae:	f7f4 f8c1 	bl	8000534 <__aeabi_ui2d>
 800c3b2:	2301      	movs	r3, #1
 800c3b4:	4606      	mov	r6, r0
 800c3b6:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800c3ba:	3d01      	subs	r5, #1
 800c3bc:	930e      	str	r3, [sp, #56]	; 0x38
 800c3be:	e76a      	b.n	800c296 <_dtoa_r+0x116>
 800c3c0:	2301      	movs	r3, #1
 800c3c2:	e7b2      	b.n	800c32a <_dtoa_r+0x1aa>
 800c3c4:	900b      	str	r0, [sp, #44]	; 0x2c
 800c3c6:	e7b1      	b.n	800c32c <_dtoa_r+0x1ac>
 800c3c8:	9b04      	ldr	r3, [sp, #16]
 800c3ca:	9a00      	ldr	r2, [sp, #0]
 800c3cc:	1a9b      	subs	r3, r3, r2
 800c3ce:	9304      	str	r3, [sp, #16]
 800c3d0:	4253      	negs	r3, r2
 800c3d2:	9307      	str	r3, [sp, #28]
 800c3d4:	2300      	movs	r3, #0
 800c3d6:	930a      	str	r3, [sp, #40]	; 0x28
 800c3d8:	e7bf      	b.n	800c35a <_dtoa_r+0x1da>
 800c3da:	2300      	movs	r3, #0
 800c3dc:	9308      	str	r3, [sp, #32]
 800c3de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c3e0:	2b00      	cmp	r3, #0
 800c3e2:	dc55      	bgt.n	800c490 <_dtoa_r+0x310>
 800c3e4:	2301      	movs	r3, #1
 800c3e6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c3ea:	461a      	mov	r2, r3
 800c3ec:	9209      	str	r2, [sp, #36]	; 0x24
 800c3ee:	e00c      	b.n	800c40a <_dtoa_r+0x28a>
 800c3f0:	2301      	movs	r3, #1
 800c3f2:	e7f3      	b.n	800c3dc <_dtoa_r+0x25c>
 800c3f4:	2300      	movs	r3, #0
 800c3f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c3f8:	9308      	str	r3, [sp, #32]
 800c3fa:	9b00      	ldr	r3, [sp, #0]
 800c3fc:	4413      	add	r3, r2
 800c3fe:	9302      	str	r3, [sp, #8]
 800c400:	3301      	adds	r3, #1
 800c402:	2b01      	cmp	r3, #1
 800c404:	9303      	str	r3, [sp, #12]
 800c406:	bfb8      	it	lt
 800c408:	2301      	movlt	r3, #1
 800c40a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800c40c:	2200      	movs	r2, #0
 800c40e:	6042      	str	r2, [r0, #4]
 800c410:	2204      	movs	r2, #4
 800c412:	f102 0614 	add.w	r6, r2, #20
 800c416:	429e      	cmp	r6, r3
 800c418:	6841      	ldr	r1, [r0, #4]
 800c41a:	d93d      	bls.n	800c498 <_dtoa_r+0x318>
 800c41c:	4620      	mov	r0, r4
 800c41e:	f001 f951 	bl	800d6c4 <_Balloc>
 800c422:	9001      	str	r0, [sp, #4]
 800c424:	2800      	cmp	r0, #0
 800c426:	d13b      	bne.n	800c4a0 <_dtoa_r+0x320>
 800c428:	4b11      	ldr	r3, [pc, #68]	; (800c470 <_dtoa_r+0x2f0>)
 800c42a:	4602      	mov	r2, r0
 800c42c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800c430:	e6c0      	b.n	800c1b4 <_dtoa_r+0x34>
 800c432:	2301      	movs	r3, #1
 800c434:	e7df      	b.n	800c3f6 <_dtoa_r+0x276>
 800c436:	bf00      	nop
 800c438:	636f4361 	.word	0x636f4361
 800c43c:	3fd287a7 	.word	0x3fd287a7
 800c440:	8b60c8b3 	.word	0x8b60c8b3
 800c444:	3fc68a28 	.word	0x3fc68a28
 800c448:	509f79fb 	.word	0x509f79fb
 800c44c:	3fd34413 	.word	0x3fd34413
 800c450:	0800fbec 	.word	0x0800fbec
 800c454:	080101ae 	.word	0x080101ae
 800c458:	7ff00000 	.word	0x7ff00000
 800c45c:	080101aa 	.word	0x080101aa
 800c460:	080101a1 	.word	0x080101a1
 800c464:	08010402 	.word	0x08010402
 800c468:	3ff80000 	.word	0x3ff80000
 800c46c:	08010318 	.word	0x08010318
 800c470:	08010209 	.word	0x08010209
 800c474:	2501      	movs	r5, #1
 800c476:	2300      	movs	r3, #0
 800c478:	9306      	str	r3, [sp, #24]
 800c47a:	9508      	str	r5, [sp, #32]
 800c47c:	f04f 33ff 	mov.w	r3, #4294967295
 800c480:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c484:	2200      	movs	r2, #0
 800c486:	2312      	movs	r3, #18
 800c488:	e7b0      	b.n	800c3ec <_dtoa_r+0x26c>
 800c48a:	2301      	movs	r3, #1
 800c48c:	9308      	str	r3, [sp, #32]
 800c48e:	e7f5      	b.n	800c47c <_dtoa_r+0x2fc>
 800c490:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c492:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c496:	e7b8      	b.n	800c40a <_dtoa_r+0x28a>
 800c498:	3101      	adds	r1, #1
 800c49a:	6041      	str	r1, [r0, #4]
 800c49c:	0052      	lsls	r2, r2, #1
 800c49e:	e7b8      	b.n	800c412 <_dtoa_r+0x292>
 800c4a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c4a2:	9a01      	ldr	r2, [sp, #4]
 800c4a4:	601a      	str	r2, [r3, #0]
 800c4a6:	9b03      	ldr	r3, [sp, #12]
 800c4a8:	2b0e      	cmp	r3, #14
 800c4aa:	f200 809d 	bhi.w	800c5e8 <_dtoa_r+0x468>
 800c4ae:	2d00      	cmp	r5, #0
 800c4b0:	f000 809a 	beq.w	800c5e8 <_dtoa_r+0x468>
 800c4b4:	9b00      	ldr	r3, [sp, #0]
 800c4b6:	2b00      	cmp	r3, #0
 800c4b8:	dd32      	ble.n	800c520 <_dtoa_r+0x3a0>
 800c4ba:	4ab7      	ldr	r2, [pc, #732]	; (800c798 <_dtoa_r+0x618>)
 800c4bc:	f003 030f 	and.w	r3, r3, #15
 800c4c0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800c4c4:	e9d3 8900 	ldrd	r8, r9, [r3]
 800c4c8:	9b00      	ldr	r3, [sp, #0]
 800c4ca:	05d8      	lsls	r0, r3, #23
 800c4cc:	ea4f 1723 	mov.w	r7, r3, asr #4
 800c4d0:	d516      	bpl.n	800c500 <_dtoa_r+0x380>
 800c4d2:	4bb2      	ldr	r3, [pc, #712]	; (800c79c <_dtoa_r+0x61c>)
 800c4d4:	ec51 0b19 	vmov	r0, r1, d9
 800c4d8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800c4dc:	f7f4 f9ce 	bl	800087c <__aeabi_ddiv>
 800c4e0:	f007 070f 	and.w	r7, r7, #15
 800c4e4:	4682      	mov	sl, r0
 800c4e6:	468b      	mov	fp, r1
 800c4e8:	2503      	movs	r5, #3
 800c4ea:	4eac      	ldr	r6, [pc, #688]	; (800c79c <_dtoa_r+0x61c>)
 800c4ec:	b957      	cbnz	r7, 800c504 <_dtoa_r+0x384>
 800c4ee:	4642      	mov	r2, r8
 800c4f0:	464b      	mov	r3, r9
 800c4f2:	4650      	mov	r0, sl
 800c4f4:	4659      	mov	r1, fp
 800c4f6:	f7f4 f9c1 	bl	800087c <__aeabi_ddiv>
 800c4fa:	4682      	mov	sl, r0
 800c4fc:	468b      	mov	fp, r1
 800c4fe:	e028      	b.n	800c552 <_dtoa_r+0x3d2>
 800c500:	2502      	movs	r5, #2
 800c502:	e7f2      	b.n	800c4ea <_dtoa_r+0x36a>
 800c504:	07f9      	lsls	r1, r7, #31
 800c506:	d508      	bpl.n	800c51a <_dtoa_r+0x39a>
 800c508:	4640      	mov	r0, r8
 800c50a:	4649      	mov	r1, r9
 800c50c:	e9d6 2300 	ldrd	r2, r3, [r6]
 800c510:	f7f4 f88a 	bl	8000628 <__aeabi_dmul>
 800c514:	3501      	adds	r5, #1
 800c516:	4680      	mov	r8, r0
 800c518:	4689      	mov	r9, r1
 800c51a:	107f      	asrs	r7, r7, #1
 800c51c:	3608      	adds	r6, #8
 800c51e:	e7e5      	b.n	800c4ec <_dtoa_r+0x36c>
 800c520:	f000 809b 	beq.w	800c65a <_dtoa_r+0x4da>
 800c524:	9b00      	ldr	r3, [sp, #0]
 800c526:	4f9d      	ldr	r7, [pc, #628]	; (800c79c <_dtoa_r+0x61c>)
 800c528:	425e      	negs	r6, r3
 800c52a:	4b9b      	ldr	r3, [pc, #620]	; (800c798 <_dtoa_r+0x618>)
 800c52c:	f006 020f 	and.w	r2, r6, #15
 800c530:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c534:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c538:	ec51 0b19 	vmov	r0, r1, d9
 800c53c:	f7f4 f874 	bl	8000628 <__aeabi_dmul>
 800c540:	1136      	asrs	r6, r6, #4
 800c542:	4682      	mov	sl, r0
 800c544:	468b      	mov	fp, r1
 800c546:	2300      	movs	r3, #0
 800c548:	2502      	movs	r5, #2
 800c54a:	2e00      	cmp	r6, #0
 800c54c:	d17a      	bne.n	800c644 <_dtoa_r+0x4c4>
 800c54e:	2b00      	cmp	r3, #0
 800c550:	d1d3      	bne.n	800c4fa <_dtoa_r+0x37a>
 800c552:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c554:	2b00      	cmp	r3, #0
 800c556:	f000 8082 	beq.w	800c65e <_dtoa_r+0x4de>
 800c55a:	4b91      	ldr	r3, [pc, #580]	; (800c7a0 <_dtoa_r+0x620>)
 800c55c:	2200      	movs	r2, #0
 800c55e:	4650      	mov	r0, sl
 800c560:	4659      	mov	r1, fp
 800c562:	f7f4 fad3 	bl	8000b0c <__aeabi_dcmplt>
 800c566:	2800      	cmp	r0, #0
 800c568:	d079      	beq.n	800c65e <_dtoa_r+0x4de>
 800c56a:	9b03      	ldr	r3, [sp, #12]
 800c56c:	2b00      	cmp	r3, #0
 800c56e:	d076      	beq.n	800c65e <_dtoa_r+0x4de>
 800c570:	9b02      	ldr	r3, [sp, #8]
 800c572:	2b00      	cmp	r3, #0
 800c574:	dd36      	ble.n	800c5e4 <_dtoa_r+0x464>
 800c576:	9b00      	ldr	r3, [sp, #0]
 800c578:	4650      	mov	r0, sl
 800c57a:	4659      	mov	r1, fp
 800c57c:	1e5f      	subs	r7, r3, #1
 800c57e:	2200      	movs	r2, #0
 800c580:	4b88      	ldr	r3, [pc, #544]	; (800c7a4 <_dtoa_r+0x624>)
 800c582:	f7f4 f851 	bl	8000628 <__aeabi_dmul>
 800c586:	9e02      	ldr	r6, [sp, #8]
 800c588:	4682      	mov	sl, r0
 800c58a:	468b      	mov	fp, r1
 800c58c:	3501      	adds	r5, #1
 800c58e:	4628      	mov	r0, r5
 800c590:	f7f3 ffe0 	bl	8000554 <__aeabi_i2d>
 800c594:	4652      	mov	r2, sl
 800c596:	465b      	mov	r3, fp
 800c598:	f7f4 f846 	bl	8000628 <__aeabi_dmul>
 800c59c:	4b82      	ldr	r3, [pc, #520]	; (800c7a8 <_dtoa_r+0x628>)
 800c59e:	2200      	movs	r2, #0
 800c5a0:	f7f3 fe8c 	bl	80002bc <__adddf3>
 800c5a4:	46d0      	mov	r8, sl
 800c5a6:	46d9      	mov	r9, fp
 800c5a8:	4682      	mov	sl, r0
 800c5aa:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800c5ae:	2e00      	cmp	r6, #0
 800c5b0:	d158      	bne.n	800c664 <_dtoa_r+0x4e4>
 800c5b2:	4b7e      	ldr	r3, [pc, #504]	; (800c7ac <_dtoa_r+0x62c>)
 800c5b4:	2200      	movs	r2, #0
 800c5b6:	4640      	mov	r0, r8
 800c5b8:	4649      	mov	r1, r9
 800c5ba:	f7f3 fe7d 	bl	80002b8 <__aeabi_dsub>
 800c5be:	4652      	mov	r2, sl
 800c5c0:	465b      	mov	r3, fp
 800c5c2:	4680      	mov	r8, r0
 800c5c4:	4689      	mov	r9, r1
 800c5c6:	f7f4 fabf 	bl	8000b48 <__aeabi_dcmpgt>
 800c5ca:	2800      	cmp	r0, #0
 800c5cc:	f040 8295 	bne.w	800cafa <_dtoa_r+0x97a>
 800c5d0:	4652      	mov	r2, sl
 800c5d2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800c5d6:	4640      	mov	r0, r8
 800c5d8:	4649      	mov	r1, r9
 800c5da:	f7f4 fa97 	bl	8000b0c <__aeabi_dcmplt>
 800c5de:	2800      	cmp	r0, #0
 800c5e0:	f040 8289 	bne.w	800caf6 <_dtoa_r+0x976>
 800c5e4:	ec5b ab19 	vmov	sl, fp, d9
 800c5e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c5ea:	2b00      	cmp	r3, #0
 800c5ec:	f2c0 8148 	blt.w	800c880 <_dtoa_r+0x700>
 800c5f0:	9a00      	ldr	r2, [sp, #0]
 800c5f2:	2a0e      	cmp	r2, #14
 800c5f4:	f300 8144 	bgt.w	800c880 <_dtoa_r+0x700>
 800c5f8:	4b67      	ldr	r3, [pc, #412]	; (800c798 <_dtoa_r+0x618>)
 800c5fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c5fe:	e9d3 8900 	ldrd	r8, r9, [r3]
 800c602:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c604:	2b00      	cmp	r3, #0
 800c606:	f280 80d5 	bge.w	800c7b4 <_dtoa_r+0x634>
 800c60a:	9b03      	ldr	r3, [sp, #12]
 800c60c:	2b00      	cmp	r3, #0
 800c60e:	f300 80d1 	bgt.w	800c7b4 <_dtoa_r+0x634>
 800c612:	f040 826f 	bne.w	800caf4 <_dtoa_r+0x974>
 800c616:	4b65      	ldr	r3, [pc, #404]	; (800c7ac <_dtoa_r+0x62c>)
 800c618:	2200      	movs	r2, #0
 800c61a:	4640      	mov	r0, r8
 800c61c:	4649      	mov	r1, r9
 800c61e:	f7f4 f803 	bl	8000628 <__aeabi_dmul>
 800c622:	4652      	mov	r2, sl
 800c624:	465b      	mov	r3, fp
 800c626:	f7f4 fa85 	bl	8000b34 <__aeabi_dcmpge>
 800c62a:	9e03      	ldr	r6, [sp, #12]
 800c62c:	4637      	mov	r7, r6
 800c62e:	2800      	cmp	r0, #0
 800c630:	f040 8245 	bne.w	800cabe <_dtoa_r+0x93e>
 800c634:	9d01      	ldr	r5, [sp, #4]
 800c636:	2331      	movs	r3, #49	; 0x31
 800c638:	f805 3b01 	strb.w	r3, [r5], #1
 800c63c:	9b00      	ldr	r3, [sp, #0]
 800c63e:	3301      	adds	r3, #1
 800c640:	9300      	str	r3, [sp, #0]
 800c642:	e240      	b.n	800cac6 <_dtoa_r+0x946>
 800c644:	07f2      	lsls	r2, r6, #31
 800c646:	d505      	bpl.n	800c654 <_dtoa_r+0x4d4>
 800c648:	e9d7 2300 	ldrd	r2, r3, [r7]
 800c64c:	f7f3 ffec 	bl	8000628 <__aeabi_dmul>
 800c650:	3501      	adds	r5, #1
 800c652:	2301      	movs	r3, #1
 800c654:	1076      	asrs	r6, r6, #1
 800c656:	3708      	adds	r7, #8
 800c658:	e777      	b.n	800c54a <_dtoa_r+0x3ca>
 800c65a:	2502      	movs	r5, #2
 800c65c:	e779      	b.n	800c552 <_dtoa_r+0x3d2>
 800c65e:	9f00      	ldr	r7, [sp, #0]
 800c660:	9e03      	ldr	r6, [sp, #12]
 800c662:	e794      	b.n	800c58e <_dtoa_r+0x40e>
 800c664:	9901      	ldr	r1, [sp, #4]
 800c666:	4b4c      	ldr	r3, [pc, #304]	; (800c798 <_dtoa_r+0x618>)
 800c668:	4431      	add	r1, r6
 800c66a:	910d      	str	r1, [sp, #52]	; 0x34
 800c66c:	9908      	ldr	r1, [sp, #32]
 800c66e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800c672:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800c676:	2900      	cmp	r1, #0
 800c678:	d043      	beq.n	800c702 <_dtoa_r+0x582>
 800c67a:	494d      	ldr	r1, [pc, #308]	; (800c7b0 <_dtoa_r+0x630>)
 800c67c:	2000      	movs	r0, #0
 800c67e:	f7f4 f8fd 	bl	800087c <__aeabi_ddiv>
 800c682:	4652      	mov	r2, sl
 800c684:	465b      	mov	r3, fp
 800c686:	f7f3 fe17 	bl	80002b8 <__aeabi_dsub>
 800c68a:	9d01      	ldr	r5, [sp, #4]
 800c68c:	4682      	mov	sl, r0
 800c68e:	468b      	mov	fp, r1
 800c690:	4649      	mov	r1, r9
 800c692:	4640      	mov	r0, r8
 800c694:	f7f4 fa78 	bl	8000b88 <__aeabi_d2iz>
 800c698:	4606      	mov	r6, r0
 800c69a:	f7f3 ff5b 	bl	8000554 <__aeabi_i2d>
 800c69e:	4602      	mov	r2, r0
 800c6a0:	460b      	mov	r3, r1
 800c6a2:	4640      	mov	r0, r8
 800c6a4:	4649      	mov	r1, r9
 800c6a6:	f7f3 fe07 	bl	80002b8 <__aeabi_dsub>
 800c6aa:	3630      	adds	r6, #48	; 0x30
 800c6ac:	f805 6b01 	strb.w	r6, [r5], #1
 800c6b0:	4652      	mov	r2, sl
 800c6b2:	465b      	mov	r3, fp
 800c6b4:	4680      	mov	r8, r0
 800c6b6:	4689      	mov	r9, r1
 800c6b8:	f7f4 fa28 	bl	8000b0c <__aeabi_dcmplt>
 800c6bc:	2800      	cmp	r0, #0
 800c6be:	d163      	bne.n	800c788 <_dtoa_r+0x608>
 800c6c0:	4642      	mov	r2, r8
 800c6c2:	464b      	mov	r3, r9
 800c6c4:	4936      	ldr	r1, [pc, #216]	; (800c7a0 <_dtoa_r+0x620>)
 800c6c6:	2000      	movs	r0, #0
 800c6c8:	f7f3 fdf6 	bl	80002b8 <__aeabi_dsub>
 800c6cc:	4652      	mov	r2, sl
 800c6ce:	465b      	mov	r3, fp
 800c6d0:	f7f4 fa1c 	bl	8000b0c <__aeabi_dcmplt>
 800c6d4:	2800      	cmp	r0, #0
 800c6d6:	f040 80b5 	bne.w	800c844 <_dtoa_r+0x6c4>
 800c6da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c6dc:	429d      	cmp	r5, r3
 800c6de:	d081      	beq.n	800c5e4 <_dtoa_r+0x464>
 800c6e0:	4b30      	ldr	r3, [pc, #192]	; (800c7a4 <_dtoa_r+0x624>)
 800c6e2:	2200      	movs	r2, #0
 800c6e4:	4650      	mov	r0, sl
 800c6e6:	4659      	mov	r1, fp
 800c6e8:	f7f3 ff9e 	bl	8000628 <__aeabi_dmul>
 800c6ec:	4b2d      	ldr	r3, [pc, #180]	; (800c7a4 <_dtoa_r+0x624>)
 800c6ee:	4682      	mov	sl, r0
 800c6f0:	468b      	mov	fp, r1
 800c6f2:	4640      	mov	r0, r8
 800c6f4:	4649      	mov	r1, r9
 800c6f6:	2200      	movs	r2, #0
 800c6f8:	f7f3 ff96 	bl	8000628 <__aeabi_dmul>
 800c6fc:	4680      	mov	r8, r0
 800c6fe:	4689      	mov	r9, r1
 800c700:	e7c6      	b.n	800c690 <_dtoa_r+0x510>
 800c702:	4650      	mov	r0, sl
 800c704:	4659      	mov	r1, fp
 800c706:	f7f3 ff8f 	bl	8000628 <__aeabi_dmul>
 800c70a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c70c:	9d01      	ldr	r5, [sp, #4]
 800c70e:	930f      	str	r3, [sp, #60]	; 0x3c
 800c710:	4682      	mov	sl, r0
 800c712:	468b      	mov	fp, r1
 800c714:	4649      	mov	r1, r9
 800c716:	4640      	mov	r0, r8
 800c718:	f7f4 fa36 	bl	8000b88 <__aeabi_d2iz>
 800c71c:	4606      	mov	r6, r0
 800c71e:	f7f3 ff19 	bl	8000554 <__aeabi_i2d>
 800c722:	3630      	adds	r6, #48	; 0x30
 800c724:	4602      	mov	r2, r0
 800c726:	460b      	mov	r3, r1
 800c728:	4640      	mov	r0, r8
 800c72a:	4649      	mov	r1, r9
 800c72c:	f7f3 fdc4 	bl	80002b8 <__aeabi_dsub>
 800c730:	f805 6b01 	strb.w	r6, [r5], #1
 800c734:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c736:	429d      	cmp	r5, r3
 800c738:	4680      	mov	r8, r0
 800c73a:	4689      	mov	r9, r1
 800c73c:	f04f 0200 	mov.w	r2, #0
 800c740:	d124      	bne.n	800c78c <_dtoa_r+0x60c>
 800c742:	4b1b      	ldr	r3, [pc, #108]	; (800c7b0 <_dtoa_r+0x630>)
 800c744:	4650      	mov	r0, sl
 800c746:	4659      	mov	r1, fp
 800c748:	f7f3 fdb8 	bl	80002bc <__adddf3>
 800c74c:	4602      	mov	r2, r0
 800c74e:	460b      	mov	r3, r1
 800c750:	4640      	mov	r0, r8
 800c752:	4649      	mov	r1, r9
 800c754:	f7f4 f9f8 	bl	8000b48 <__aeabi_dcmpgt>
 800c758:	2800      	cmp	r0, #0
 800c75a:	d173      	bne.n	800c844 <_dtoa_r+0x6c4>
 800c75c:	4652      	mov	r2, sl
 800c75e:	465b      	mov	r3, fp
 800c760:	4913      	ldr	r1, [pc, #76]	; (800c7b0 <_dtoa_r+0x630>)
 800c762:	2000      	movs	r0, #0
 800c764:	f7f3 fda8 	bl	80002b8 <__aeabi_dsub>
 800c768:	4602      	mov	r2, r0
 800c76a:	460b      	mov	r3, r1
 800c76c:	4640      	mov	r0, r8
 800c76e:	4649      	mov	r1, r9
 800c770:	f7f4 f9cc 	bl	8000b0c <__aeabi_dcmplt>
 800c774:	2800      	cmp	r0, #0
 800c776:	f43f af35 	beq.w	800c5e4 <_dtoa_r+0x464>
 800c77a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800c77c:	1e6b      	subs	r3, r5, #1
 800c77e:	930f      	str	r3, [sp, #60]	; 0x3c
 800c780:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800c784:	2b30      	cmp	r3, #48	; 0x30
 800c786:	d0f8      	beq.n	800c77a <_dtoa_r+0x5fa>
 800c788:	9700      	str	r7, [sp, #0]
 800c78a:	e049      	b.n	800c820 <_dtoa_r+0x6a0>
 800c78c:	4b05      	ldr	r3, [pc, #20]	; (800c7a4 <_dtoa_r+0x624>)
 800c78e:	f7f3 ff4b 	bl	8000628 <__aeabi_dmul>
 800c792:	4680      	mov	r8, r0
 800c794:	4689      	mov	r9, r1
 800c796:	e7bd      	b.n	800c714 <_dtoa_r+0x594>
 800c798:	08010318 	.word	0x08010318
 800c79c:	080102f0 	.word	0x080102f0
 800c7a0:	3ff00000 	.word	0x3ff00000
 800c7a4:	40240000 	.word	0x40240000
 800c7a8:	401c0000 	.word	0x401c0000
 800c7ac:	40140000 	.word	0x40140000
 800c7b0:	3fe00000 	.word	0x3fe00000
 800c7b4:	9d01      	ldr	r5, [sp, #4]
 800c7b6:	4656      	mov	r6, sl
 800c7b8:	465f      	mov	r7, fp
 800c7ba:	4642      	mov	r2, r8
 800c7bc:	464b      	mov	r3, r9
 800c7be:	4630      	mov	r0, r6
 800c7c0:	4639      	mov	r1, r7
 800c7c2:	f7f4 f85b 	bl	800087c <__aeabi_ddiv>
 800c7c6:	f7f4 f9df 	bl	8000b88 <__aeabi_d2iz>
 800c7ca:	4682      	mov	sl, r0
 800c7cc:	f7f3 fec2 	bl	8000554 <__aeabi_i2d>
 800c7d0:	4642      	mov	r2, r8
 800c7d2:	464b      	mov	r3, r9
 800c7d4:	f7f3 ff28 	bl	8000628 <__aeabi_dmul>
 800c7d8:	4602      	mov	r2, r0
 800c7da:	460b      	mov	r3, r1
 800c7dc:	4630      	mov	r0, r6
 800c7de:	4639      	mov	r1, r7
 800c7e0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800c7e4:	f7f3 fd68 	bl	80002b8 <__aeabi_dsub>
 800c7e8:	f805 6b01 	strb.w	r6, [r5], #1
 800c7ec:	9e01      	ldr	r6, [sp, #4]
 800c7ee:	9f03      	ldr	r7, [sp, #12]
 800c7f0:	1bae      	subs	r6, r5, r6
 800c7f2:	42b7      	cmp	r7, r6
 800c7f4:	4602      	mov	r2, r0
 800c7f6:	460b      	mov	r3, r1
 800c7f8:	d135      	bne.n	800c866 <_dtoa_r+0x6e6>
 800c7fa:	f7f3 fd5f 	bl	80002bc <__adddf3>
 800c7fe:	4642      	mov	r2, r8
 800c800:	464b      	mov	r3, r9
 800c802:	4606      	mov	r6, r0
 800c804:	460f      	mov	r7, r1
 800c806:	f7f4 f99f 	bl	8000b48 <__aeabi_dcmpgt>
 800c80a:	b9d0      	cbnz	r0, 800c842 <_dtoa_r+0x6c2>
 800c80c:	4642      	mov	r2, r8
 800c80e:	464b      	mov	r3, r9
 800c810:	4630      	mov	r0, r6
 800c812:	4639      	mov	r1, r7
 800c814:	f7f4 f970 	bl	8000af8 <__aeabi_dcmpeq>
 800c818:	b110      	cbz	r0, 800c820 <_dtoa_r+0x6a0>
 800c81a:	f01a 0f01 	tst.w	sl, #1
 800c81e:	d110      	bne.n	800c842 <_dtoa_r+0x6c2>
 800c820:	4620      	mov	r0, r4
 800c822:	ee18 1a10 	vmov	r1, s16
 800c826:	f000 ff8d 	bl	800d744 <_Bfree>
 800c82a:	2300      	movs	r3, #0
 800c82c:	9800      	ldr	r0, [sp, #0]
 800c82e:	702b      	strb	r3, [r5, #0]
 800c830:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c832:	3001      	adds	r0, #1
 800c834:	6018      	str	r0, [r3, #0]
 800c836:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c838:	2b00      	cmp	r3, #0
 800c83a:	f43f acf1 	beq.w	800c220 <_dtoa_r+0xa0>
 800c83e:	601d      	str	r5, [r3, #0]
 800c840:	e4ee      	b.n	800c220 <_dtoa_r+0xa0>
 800c842:	9f00      	ldr	r7, [sp, #0]
 800c844:	462b      	mov	r3, r5
 800c846:	461d      	mov	r5, r3
 800c848:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c84c:	2a39      	cmp	r2, #57	; 0x39
 800c84e:	d106      	bne.n	800c85e <_dtoa_r+0x6de>
 800c850:	9a01      	ldr	r2, [sp, #4]
 800c852:	429a      	cmp	r2, r3
 800c854:	d1f7      	bne.n	800c846 <_dtoa_r+0x6c6>
 800c856:	9901      	ldr	r1, [sp, #4]
 800c858:	2230      	movs	r2, #48	; 0x30
 800c85a:	3701      	adds	r7, #1
 800c85c:	700a      	strb	r2, [r1, #0]
 800c85e:	781a      	ldrb	r2, [r3, #0]
 800c860:	3201      	adds	r2, #1
 800c862:	701a      	strb	r2, [r3, #0]
 800c864:	e790      	b.n	800c788 <_dtoa_r+0x608>
 800c866:	4ba6      	ldr	r3, [pc, #664]	; (800cb00 <_dtoa_r+0x980>)
 800c868:	2200      	movs	r2, #0
 800c86a:	f7f3 fedd 	bl	8000628 <__aeabi_dmul>
 800c86e:	2200      	movs	r2, #0
 800c870:	2300      	movs	r3, #0
 800c872:	4606      	mov	r6, r0
 800c874:	460f      	mov	r7, r1
 800c876:	f7f4 f93f 	bl	8000af8 <__aeabi_dcmpeq>
 800c87a:	2800      	cmp	r0, #0
 800c87c:	d09d      	beq.n	800c7ba <_dtoa_r+0x63a>
 800c87e:	e7cf      	b.n	800c820 <_dtoa_r+0x6a0>
 800c880:	9a08      	ldr	r2, [sp, #32]
 800c882:	2a00      	cmp	r2, #0
 800c884:	f000 80d7 	beq.w	800ca36 <_dtoa_r+0x8b6>
 800c888:	9a06      	ldr	r2, [sp, #24]
 800c88a:	2a01      	cmp	r2, #1
 800c88c:	f300 80ba 	bgt.w	800ca04 <_dtoa_r+0x884>
 800c890:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c892:	2a00      	cmp	r2, #0
 800c894:	f000 80b2 	beq.w	800c9fc <_dtoa_r+0x87c>
 800c898:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800c89c:	9e07      	ldr	r6, [sp, #28]
 800c89e:	9d04      	ldr	r5, [sp, #16]
 800c8a0:	9a04      	ldr	r2, [sp, #16]
 800c8a2:	441a      	add	r2, r3
 800c8a4:	9204      	str	r2, [sp, #16]
 800c8a6:	9a05      	ldr	r2, [sp, #20]
 800c8a8:	2101      	movs	r1, #1
 800c8aa:	441a      	add	r2, r3
 800c8ac:	4620      	mov	r0, r4
 800c8ae:	9205      	str	r2, [sp, #20]
 800c8b0:	f001 f84a 	bl	800d948 <__i2b>
 800c8b4:	4607      	mov	r7, r0
 800c8b6:	2d00      	cmp	r5, #0
 800c8b8:	dd0c      	ble.n	800c8d4 <_dtoa_r+0x754>
 800c8ba:	9b05      	ldr	r3, [sp, #20]
 800c8bc:	2b00      	cmp	r3, #0
 800c8be:	dd09      	ble.n	800c8d4 <_dtoa_r+0x754>
 800c8c0:	42ab      	cmp	r3, r5
 800c8c2:	9a04      	ldr	r2, [sp, #16]
 800c8c4:	bfa8      	it	ge
 800c8c6:	462b      	movge	r3, r5
 800c8c8:	1ad2      	subs	r2, r2, r3
 800c8ca:	9204      	str	r2, [sp, #16]
 800c8cc:	9a05      	ldr	r2, [sp, #20]
 800c8ce:	1aed      	subs	r5, r5, r3
 800c8d0:	1ad3      	subs	r3, r2, r3
 800c8d2:	9305      	str	r3, [sp, #20]
 800c8d4:	9b07      	ldr	r3, [sp, #28]
 800c8d6:	b31b      	cbz	r3, 800c920 <_dtoa_r+0x7a0>
 800c8d8:	9b08      	ldr	r3, [sp, #32]
 800c8da:	2b00      	cmp	r3, #0
 800c8dc:	f000 80af 	beq.w	800ca3e <_dtoa_r+0x8be>
 800c8e0:	2e00      	cmp	r6, #0
 800c8e2:	dd13      	ble.n	800c90c <_dtoa_r+0x78c>
 800c8e4:	4639      	mov	r1, r7
 800c8e6:	4632      	mov	r2, r6
 800c8e8:	4620      	mov	r0, r4
 800c8ea:	f001 f8ed 	bl	800dac8 <__pow5mult>
 800c8ee:	ee18 2a10 	vmov	r2, s16
 800c8f2:	4601      	mov	r1, r0
 800c8f4:	4607      	mov	r7, r0
 800c8f6:	4620      	mov	r0, r4
 800c8f8:	f001 f83c 	bl	800d974 <__multiply>
 800c8fc:	ee18 1a10 	vmov	r1, s16
 800c900:	4680      	mov	r8, r0
 800c902:	4620      	mov	r0, r4
 800c904:	f000 ff1e 	bl	800d744 <_Bfree>
 800c908:	ee08 8a10 	vmov	s16, r8
 800c90c:	9b07      	ldr	r3, [sp, #28]
 800c90e:	1b9a      	subs	r2, r3, r6
 800c910:	d006      	beq.n	800c920 <_dtoa_r+0x7a0>
 800c912:	ee18 1a10 	vmov	r1, s16
 800c916:	4620      	mov	r0, r4
 800c918:	f001 f8d6 	bl	800dac8 <__pow5mult>
 800c91c:	ee08 0a10 	vmov	s16, r0
 800c920:	2101      	movs	r1, #1
 800c922:	4620      	mov	r0, r4
 800c924:	f001 f810 	bl	800d948 <__i2b>
 800c928:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c92a:	2b00      	cmp	r3, #0
 800c92c:	4606      	mov	r6, r0
 800c92e:	f340 8088 	ble.w	800ca42 <_dtoa_r+0x8c2>
 800c932:	461a      	mov	r2, r3
 800c934:	4601      	mov	r1, r0
 800c936:	4620      	mov	r0, r4
 800c938:	f001 f8c6 	bl	800dac8 <__pow5mult>
 800c93c:	9b06      	ldr	r3, [sp, #24]
 800c93e:	2b01      	cmp	r3, #1
 800c940:	4606      	mov	r6, r0
 800c942:	f340 8081 	ble.w	800ca48 <_dtoa_r+0x8c8>
 800c946:	f04f 0800 	mov.w	r8, #0
 800c94a:	6933      	ldr	r3, [r6, #16]
 800c94c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800c950:	6918      	ldr	r0, [r3, #16]
 800c952:	f000 ffa9 	bl	800d8a8 <__hi0bits>
 800c956:	f1c0 0020 	rsb	r0, r0, #32
 800c95a:	9b05      	ldr	r3, [sp, #20]
 800c95c:	4418      	add	r0, r3
 800c95e:	f010 001f 	ands.w	r0, r0, #31
 800c962:	f000 8092 	beq.w	800ca8a <_dtoa_r+0x90a>
 800c966:	f1c0 0320 	rsb	r3, r0, #32
 800c96a:	2b04      	cmp	r3, #4
 800c96c:	f340 808a 	ble.w	800ca84 <_dtoa_r+0x904>
 800c970:	f1c0 001c 	rsb	r0, r0, #28
 800c974:	9b04      	ldr	r3, [sp, #16]
 800c976:	4403      	add	r3, r0
 800c978:	9304      	str	r3, [sp, #16]
 800c97a:	9b05      	ldr	r3, [sp, #20]
 800c97c:	4403      	add	r3, r0
 800c97e:	4405      	add	r5, r0
 800c980:	9305      	str	r3, [sp, #20]
 800c982:	9b04      	ldr	r3, [sp, #16]
 800c984:	2b00      	cmp	r3, #0
 800c986:	dd07      	ble.n	800c998 <_dtoa_r+0x818>
 800c988:	ee18 1a10 	vmov	r1, s16
 800c98c:	461a      	mov	r2, r3
 800c98e:	4620      	mov	r0, r4
 800c990:	f001 f8f4 	bl	800db7c <__lshift>
 800c994:	ee08 0a10 	vmov	s16, r0
 800c998:	9b05      	ldr	r3, [sp, #20]
 800c99a:	2b00      	cmp	r3, #0
 800c99c:	dd05      	ble.n	800c9aa <_dtoa_r+0x82a>
 800c99e:	4631      	mov	r1, r6
 800c9a0:	461a      	mov	r2, r3
 800c9a2:	4620      	mov	r0, r4
 800c9a4:	f001 f8ea 	bl	800db7c <__lshift>
 800c9a8:	4606      	mov	r6, r0
 800c9aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c9ac:	2b00      	cmp	r3, #0
 800c9ae:	d06e      	beq.n	800ca8e <_dtoa_r+0x90e>
 800c9b0:	ee18 0a10 	vmov	r0, s16
 800c9b4:	4631      	mov	r1, r6
 800c9b6:	f001 f951 	bl	800dc5c <__mcmp>
 800c9ba:	2800      	cmp	r0, #0
 800c9bc:	da67      	bge.n	800ca8e <_dtoa_r+0x90e>
 800c9be:	9b00      	ldr	r3, [sp, #0]
 800c9c0:	3b01      	subs	r3, #1
 800c9c2:	ee18 1a10 	vmov	r1, s16
 800c9c6:	9300      	str	r3, [sp, #0]
 800c9c8:	220a      	movs	r2, #10
 800c9ca:	2300      	movs	r3, #0
 800c9cc:	4620      	mov	r0, r4
 800c9ce:	f000 fedb 	bl	800d788 <__multadd>
 800c9d2:	9b08      	ldr	r3, [sp, #32]
 800c9d4:	ee08 0a10 	vmov	s16, r0
 800c9d8:	2b00      	cmp	r3, #0
 800c9da:	f000 81b1 	beq.w	800cd40 <_dtoa_r+0xbc0>
 800c9de:	2300      	movs	r3, #0
 800c9e0:	4639      	mov	r1, r7
 800c9e2:	220a      	movs	r2, #10
 800c9e4:	4620      	mov	r0, r4
 800c9e6:	f000 fecf 	bl	800d788 <__multadd>
 800c9ea:	9b02      	ldr	r3, [sp, #8]
 800c9ec:	2b00      	cmp	r3, #0
 800c9ee:	4607      	mov	r7, r0
 800c9f0:	f300 808e 	bgt.w	800cb10 <_dtoa_r+0x990>
 800c9f4:	9b06      	ldr	r3, [sp, #24]
 800c9f6:	2b02      	cmp	r3, #2
 800c9f8:	dc51      	bgt.n	800ca9e <_dtoa_r+0x91e>
 800c9fa:	e089      	b.n	800cb10 <_dtoa_r+0x990>
 800c9fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c9fe:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800ca02:	e74b      	b.n	800c89c <_dtoa_r+0x71c>
 800ca04:	9b03      	ldr	r3, [sp, #12]
 800ca06:	1e5e      	subs	r6, r3, #1
 800ca08:	9b07      	ldr	r3, [sp, #28]
 800ca0a:	42b3      	cmp	r3, r6
 800ca0c:	bfbf      	itttt	lt
 800ca0e:	9b07      	ldrlt	r3, [sp, #28]
 800ca10:	9607      	strlt	r6, [sp, #28]
 800ca12:	1af2      	sublt	r2, r6, r3
 800ca14:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800ca16:	bfb6      	itet	lt
 800ca18:	189b      	addlt	r3, r3, r2
 800ca1a:	1b9e      	subge	r6, r3, r6
 800ca1c:	930a      	strlt	r3, [sp, #40]	; 0x28
 800ca1e:	9b03      	ldr	r3, [sp, #12]
 800ca20:	bfb8      	it	lt
 800ca22:	2600      	movlt	r6, #0
 800ca24:	2b00      	cmp	r3, #0
 800ca26:	bfb7      	itett	lt
 800ca28:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800ca2c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800ca30:	1a9d      	sublt	r5, r3, r2
 800ca32:	2300      	movlt	r3, #0
 800ca34:	e734      	b.n	800c8a0 <_dtoa_r+0x720>
 800ca36:	9e07      	ldr	r6, [sp, #28]
 800ca38:	9d04      	ldr	r5, [sp, #16]
 800ca3a:	9f08      	ldr	r7, [sp, #32]
 800ca3c:	e73b      	b.n	800c8b6 <_dtoa_r+0x736>
 800ca3e:	9a07      	ldr	r2, [sp, #28]
 800ca40:	e767      	b.n	800c912 <_dtoa_r+0x792>
 800ca42:	9b06      	ldr	r3, [sp, #24]
 800ca44:	2b01      	cmp	r3, #1
 800ca46:	dc18      	bgt.n	800ca7a <_dtoa_r+0x8fa>
 800ca48:	f1ba 0f00 	cmp.w	sl, #0
 800ca4c:	d115      	bne.n	800ca7a <_dtoa_r+0x8fa>
 800ca4e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800ca52:	b993      	cbnz	r3, 800ca7a <_dtoa_r+0x8fa>
 800ca54:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800ca58:	0d1b      	lsrs	r3, r3, #20
 800ca5a:	051b      	lsls	r3, r3, #20
 800ca5c:	b183      	cbz	r3, 800ca80 <_dtoa_r+0x900>
 800ca5e:	9b04      	ldr	r3, [sp, #16]
 800ca60:	3301      	adds	r3, #1
 800ca62:	9304      	str	r3, [sp, #16]
 800ca64:	9b05      	ldr	r3, [sp, #20]
 800ca66:	3301      	adds	r3, #1
 800ca68:	9305      	str	r3, [sp, #20]
 800ca6a:	f04f 0801 	mov.w	r8, #1
 800ca6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	f47f af6a 	bne.w	800c94a <_dtoa_r+0x7ca>
 800ca76:	2001      	movs	r0, #1
 800ca78:	e76f      	b.n	800c95a <_dtoa_r+0x7da>
 800ca7a:	f04f 0800 	mov.w	r8, #0
 800ca7e:	e7f6      	b.n	800ca6e <_dtoa_r+0x8ee>
 800ca80:	4698      	mov	r8, r3
 800ca82:	e7f4      	b.n	800ca6e <_dtoa_r+0x8ee>
 800ca84:	f43f af7d 	beq.w	800c982 <_dtoa_r+0x802>
 800ca88:	4618      	mov	r0, r3
 800ca8a:	301c      	adds	r0, #28
 800ca8c:	e772      	b.n	800c974 <_dtoa_r+0x7f4>
 800ca8e:	9b03      	ldr	r3, [sp, #12]
 800ca90:	2b00      	cmp	r3, #0
 800ca92:	dc37      	bgt.n	800cb04 <_dtoa_r+0x984>
 800ca94:	9b06      	ldr	r3, [sp, #24]
 800ca96:	2b02      	cmp	r3, #2
 800ca98:	dd34      	ble.n	800cb04 <_dtoa_r+0x984>
 800ca9a:	9b03      	ldr	r3, [sp, #12]
 800ca9c:	9302      	str	r3, [sp, #8]
 800ca9e:	9b02      	ldr	r3, [sp, #8]
 800caa0:	b96b      	cbnz	r3, 800cabe <_dtoa_r+0x93e>
 800caa2:	4631      	mov	r1, r6
 800caa4:	2205      	movs	r2, #5
 800caa6:	4620      	mov	r0, r4
 800caa8:	f000 fe6e 	bl	800d788 <__multadd>
 800caac:	4601      	mov	r1, r0
 800caae:	4606      	mov	r6, r0
 800cab0:	ee18 0a10 	vmov	r0, s16
 800cab4:	f001 f8d2 	bl	800dc5c <__mcmp>
 800cab8:	2800      	cmp	r0, #0
 800caba:	f73f adbb 	bgt.w	800c634 <_dtoa_r+0x4b4>
 800cabe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cac0:	9d01      	ldr	r5, [sp, #4]
 800cac2:	43db      	mvns	r3, r3
 800cac4:	9300      	str	r3, [sp, #0]
 800cac6:	f04f 0800 	mov.w	r8, #0
 800caca:	4631      	mov	r1, r6
 800cacc:	4620      	mov	r0, r4
 800cace:	f000 fe39 	bl	800d744 <_Bfree>
 800cad2:	2f00      	cmp	r7, #0
 800cad4:	f43f aea4 	beq.w	800c820 <_dtoa_r+0x6a0>
 800cad8:	f1b8 0f00 	cmp.w	r8, #0
 800cadc:	d005      	beq.n	800caea <_dtoa_r+0x96a>
 800cade:	45b8      	cmp	r8, r7
 800cae0:	d003      	beq.n	800caea <_dtoa_r+0x96a>
 800cae2:	4641      	mov	r1, r8
 800cae4:	4620      	mov	r0, r4
 800cae6:	f000 fe2d 	bl	800d744 <_Bfree>
 800caea:	4639      	mov	r1, r7
 800caec:	4620      	mov	r0, r4
 800caee:	f000 fe29 	bl	800d744 <_Bfree>
 800caf2:	e695      	b.n	800c820 <_dtoa_r+0x6a0>
 800caf4:	2600      	movs	r6, #0
 800caf6:	4637      	mov	r7, r6
 800caf8:	e7e1      	b.n	800cabe <_dtoa_r+0x93e>
 800cafa:	9700      	str	r7, [sp, #0]
 800cafc:	4637      	mov	r7, r6
 800cafe:	e599      	b.n	800c634 <_dtoa_r+0x4b4>
 800cb00:	40240000 	.word	0x40240000
 800cb04:	9b08      	ldr	r3, [sp, #32]
 800cb06:	2b00      	cmp	r3, #0
 800cb08:	f000 80ca 	beq.w	800cca0 <_dtoa_r+0xb20>
 800cb0c:	9b03      	ldr	r3, [sp, #12]
 800cb0e:	9302      	str	r3, [sp, #8]
 800cb10:	2d00      	cmp	r5, #0
 800cb12:	dd05      	ble.n	800cb20 <_dtoa_r+0x9a0>
 800cb14:	4639      	mov	r1, r7
 800cb16:	462a      	mov	r2, r5
 800cb18:	4620      	mov	r0, r4
 800cb1a:	f001 f82f 	bl	800db7c <__lshift>
 800cb1e:	4607      	mov	r7, r0
 800cb20:	f1b8 0f00 	cmp.w	r8, #0
 800cb24:	d05b      	beq.n	800cbde <_dtoa_r+0xa5e>
 800cb26:	6879      	ldr	r1, [r7, #4]
 800cb28:	4620      	mov	r0, r4
 800cb2a:	f000 fdcb 	bl	800d6c4 <_Balloc>
 800cb2e:	4605      	mov	r5, r0
 800cb30:	b928      	cbnz	r0, 800cb3e <_dtoa_r+0x9be>
 800cb32:	4b87      	ldr	r3, [pc, #540]	; (800cd50 <_dtoa_r+0xbd0>)
 800cb34:	4602      	mov	r2, r0
 800cb36:	f240 21ea 	movw	r1, #746	; 0x2ea
 800cb3a:	f7ff bb3b 	b.w	800c1b4 <_dtoa_r+0x34>
 800cb3e:	693a      	ldr	r2, [r7, #16]
 800cb40:	3202      	adds	r2, #2
 800cb42:	0092      	lsls	r2, r2, #2
 800cb44:	f107 010c 	add.w	r1, r7, #12
 800cb48:	300c      	adds	r0, #12
 800cb4a:	f7fc f877 	bl	8008c3c <memcpy>
 800cb4e:	2201      	movs	r2, #1
 800cb50:	4629      	mov	r1, r5
 800cb52:	4620      	mov	r0, r4
 800cb54:	f001 f812 	bl	800db7c <__lshift>
 800cb58:	9b01      	ldr	r3, [sp, #4]
 800cb5a:	f103 0901 	add.w	r9, r3, #1
 800cb5e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800cb62:	4413      	add	r3, r2
 800cb64:	9305      	str	r3, [sp, #20]
 800cb66:	f00a 0301 	and.w	r3, sl, #1
 800cb6a:	46b8      	mov	r8, r7
 800cb6c:	9304      	str	r3, [sp, #16]
 800cb6e:	4607      	mov	r7, r0
 800cb70:	4631      	mov	r1, r6
 800cb72:	ee18 0a10 	vmov	r0, s16
 800cb76:	f7ff fa77 	bl	800c068 <quorem>
 800cb7a:	4641      	mov	r1, r8
 800cb7c:	9002      	str	r0, [sp, #8]
 800cb7e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800cb82:	ee18 0a10 	vmov	r0, s16
 800cb86:	f001 f869 	bl	800dc5c <__mcmp>
 800cb8a:	463a      	mov	r2, r7
 800cb8c:	9003      	str	r0, [sp, #12]
 800cb8e:	4631      	mov	r1, r6
 800cb90:	4620      	mov	r0, r4
 800cb92:	f001 f87f 	bl	800dc94 <__mdiff>
 800cb96:	68c2      	ldr	r2, [r0, #12]
 800cb98:	f109 3bff 	add.w	fp, r9, #4294967295
 800cb9c:	4605      	mov	r5, r0
 800cb9e:	bb02      	cbnz	r2, 800cbe2 <_dtoa_r+0xa62>
 800cba0:	4601      	mov	r1, r0
 800cba2:	ee18 0a10 	vmov	r0, s16
 800cba6:	f001 f859 	bl	800dc5c <__mcmp>
 800cbaa:	4602      	mov	r2, r0
 800cbac:	4629      	mov	r1, r5
 800cbae:	4620      	mov	r0, r4
 800cbb0:	9207      	str	r2, [sp, #28]
 800cbb2:	f000 fdc7 	bl	800d744 <_Bfree>
 800cbb6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800cbba:	ea43 0102 	orr.w	r1, r3, r2
 800cbbe:	9b04      	ldr	r3, [sp, #16]
 800cbc0:	430b      	orrs	r3, r1
 800cbc2:	464d      	mov	r5, r9
 800cbc4:	d10f      	bne.n	800cbe6 <_dtoa_r+0xa66>
 800cbc6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800cbca:	d02a      	beq.n	800cc22 <_dtoa_r+0xaa2>
 800cbcc:	9b03      	ldr	r3, [sp, #12]
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	dd02      	ble.n	800cbd8 <_dtoa_r+0xa58>
 800cbd2:	9b02      	ldr	r3, [sp, #8]
 800cbd4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800cbd8:	f88b a000 	strb.w	sl, [fp]
 800cbdc:	e775      	b.n	800caca <_dtoa_r+0x94a>
 800cbde:	4638      	mov	r0, r7
 800cbe0:	e7ba      	b.n	800cb58 <_dtoa_r+0x9d8>
 800cbe2:	2201      	movs	r2, #1
 800cbe4:	e7e2      	b.n	800cbac <_dtoa_r+0xa2c>
 800cbe6:	9b03      	ldr	r3, [sp, #12]
 800cbe8:	2b00      	cmp	r3, #0
 800cbea:	db04      	blt.n	800cbf6 <_dtoa_r+0xa76>
 800cbec:	9906      	ldr	r1, [sp, #24]
 800cbee:	430b      	orrs	r3, r1
 800cbf0:	9904      	ldr	r1, [sp, #16]
 800cbf2:	430b      	orrs	r3, r1
 800cbf4:	d122      	bne.n	800cc3c <_dtoa_r+0xabc>
 800cbf6:	2a00      	cmp	r2, #0
 800cbf8:	ddee      	ble.n	800cbd8 <_dtoa_r+0xa58>
 800cbfa:	ee18 1a10 	vmov	r1, s16
 800cbfe:	2201      	movs	r2, #1
 800cc00:	4620      	mov	r0, r4
 800cc02:	f000 ffbb 	bl	800db7c <__lshift>
 800cc06:	4631      	mov	r1, r6
 800cc08:	ee08 0a10 	vmov	s16, r0
 800cc0c:	f001 f826 	bl	800dc5c <__mcmp>
 800cc10:	2800      	cmp	r0, #0
 800cc12:	dc03      	bgt.n	800cc1c <_dtoa_r+0xa9c>
 800cc14:	d1e0      	bne.n	800cbd8 <_dtoa_r+0xa58>
 800cc16:	f01a 0f01 	tst.w	sl, #1
 800cc1a:	d0dd      	beq.n	800cbd8 <_dtoa_r+0xa58>
 800cc1c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800cc20:	d1d7      	bne.n	800cbd2 <_dtoa_r+0xa52>
 800cc22:	2339      	movs	r3, #57	; 0x39
 800cc24:	f88b 3000 	strb.w	r3, [fp]
 800cc28:	462b      	mov	r3, r5
 800cc2a:	461d      	mov	r5, r3
 800cc2c:	3b01      	subs	r3, #1
 800cc2e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800cc32:	2a39      	cmp	r2, #57	; 0x39
 800cc34:	d071      	beq.n	800cd1a <_dtoa_r+0xb9a>
 800cc36:	3201      	adds	r2, #1
 800cc38:	701a      	strb	r2, [r3, #0]
 800cc3a:	e746      	b.n	800caca <_dtoa_r+0x94a>
 800cc3c:	2a00      	cmp	r2, #0
 800cc3e:	dd07      	ble.n	800cc50 <_dtoa_r+0xad0>
 800cc40:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800cc44:	d0ed      	beq.n	800cc22 <_dtoa_r+0xaa2>
 800cc46:	f10a 0301 	add.w	r3, sl, #1
 800cc4a:	f88b 3000 	strb.w	r3, [fp]
 800cc4e:	e73c      	b.n	800caca <_dtoa_r+0x94a>
 800cc50:	9b05      	ldr	r3, [sp, #20]
 800cc52:	f809 ac01 	strb.w	sl, [r9, #-1]
 800cc56:	4599      	cmp	r9, r3
 800cc58:	d047      	beq.n	800ccea <_dtoa_r+0xb6a>
 800cc5a:	ee18 1a10 	vmov	r1, s16
 800cc5e:	2300      	movs	r3, #0
 800cc60:	220a      	movs	r2, #10
 800cc62:	4620      	mov	r0, r4
 800cc64:	f000 fd90 	bl	800d788 <__multadd>
 800cc68:	45b8      	cmp	r8, r7
 800cc6a:	ee08 0a10 	vmov	s16, r0
 800cc6e:	f04f 0300 	mov.w	r3, #0
 800cc72:	f04f 020a 	mov.w	r2, #10
 800cc76:	4641      	mov	r1, r8
 800cc78:	4620      	mov	r0, r4
 800cc7a:	d106      	bne.n	800cc8a <_dtoa_r+0xb0a>
 800cc7c:	f000 fd84 	bl	800d788 <__multadd>
 800cc80:	4680      	mov	r8, r0
 800cc82:	4607      	mov	r7, r0
 800cc84:	f109 0901 	add.w	r9, r9, #1
 800cc88:	e772      	b.n	800cb70 <_dtoa_r+0x9f0>
 800cc8a:	f000 fd7d 	bl	800d788 <__multadd>
 800cc8e:	4639      	mov	r1, r7
 800cc90:	4680      	mov	r8, r0
 800cc92:	2300      	movs	r3, #0
 800cc94:	220a      	movs	r2, #10
 800cc96:	4620      	mov	r0, r4
 800cc98:	f000 fd76 	bl	800d788 <__multadd>
 800cc9c:	4607      	mov	r7, r0
 800cc9e:	e7f1      	b.n	800cc84 <_dtoa_r+0xb04>
 800cca0:	9b03      	ldr	r3, [sp, #12]
 800cca2:	9302      	str	r3, [sp, #8]
 800cca4:	9d01      	ldr	r5, [sp, #4]
 800cca6:	ee18 0a10 	vmov	r0, s16
 800ccaa:	4631      	mov	r1, r6
 800ccac:	f7ff f9dc 	bl	800c068 <quorem>
 800ccb0:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800ccb4:	9b01      	ldr	r3, [sp, #4]
 800ccb6:	f805 ab01 	strb.w	sl, [r5], #1
 800ccba:	1aea      	subs	r2, r5, r3
 800ccbc:	9b02      	ldr	r3, [sp, #8]
 800ccbe:	4293      	cmp	r3, r2
 800ccc0:	dd09      	ble.n	800ccd6 <_dtoa_r+0xb56>
 800ccc2:	ee18 1a10 	vmov	r1, s16
 800ccc6:	2300      	movs	r3, #0
 800ccc8:	220a      	movs	r2, #10
 800ccca:	4620      	mov	r0, r4
 800cccc:	f000 fd5c 	bl	800d788 <__multadd>
 800ccd0:	ee08 0a10 	vmov	s16, r0
 800ccd4:	e7e7      	b.n	800cca6 <_dtoa_r+0xb26>
 800ccd6:	9b02      	ldr	r3, [sp, #8]
 800ccd8:	2b00      	cmp	r3, #0
 800ccda:	bfc8      	it	gt
 800ccdc:	461d      	movgt	r5, r3
 800ccde:	9b01      	ldr	r3, [sp, #4]
 800cce0:	bfd8      	it	le
 800cce2:	2501      	movle	r5, #1
 800cce4:	441d      	add	r5, r3
 800cce6:	f04f 0800 	mov.w	r8, #0
 800ccea:	ee18 1a10 	vmov	r1, s16
 800ccee:	2201      	movs	r2, #1
 800ccf0:	4620      	mov	r0, r4
 800ccf2:	f000 ff43 	bl	800db7c <__lshift>
 800ccf6:	4631      	mov	r1, r6
 800ccf8:	ee08 0a10 	vmov	s16, r0
 800ccfc:	f000 ffae 	bl	800dc5c <__mcmp>
 800cd00:	2800      	cmp	r0, #0
 800cd02:	dc91      	bgt.n	800cc28 <_dtoa_r+0xaa8>
 800cd04:	d102      	bne.n	800cd0c <_dtoa_r+0xb8c>
 800cd06:	f01a 0f01 	tst.w	sl, #1
 800cd0a:	d18d      	bne.n	800cc28 <_dtoa_r+0xaa8>
 800cd0c:	462b      	mov	r3, r5
 800cd0e:	461d      	mov	r5, r3
 800cd10:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800cd14:	2a30      	cmp	r2, #48	; 0x30
 800cd16:	d0fa      	beq.n	800cd0e <_dtoa_r+0xb8e>
 800cd18:	e6d7      	b.n	800caca <_dtoa_r+0x94a>
 800cd1a:	9a01      	ldr	r2, [sp, #4]
 800cd1c:	429a      	cmp	r2, r3
 800cd1e:	d184      	bne.n	800cc2a <_dtoa_r+0xaaa>
 800cd20:	9b00      	ldr	r3, [sp, #0]
 800cd22:	3301      	adds	r3, #1
 800cd24:	9300      	str	r3, [sp, #0]
 800cd26:	2331      	movs	r3, #49	; 0x31
 800cd28:	7013      	strb	r3, [r2, #0]
 800cd2a:	e6ce      	b.n	800caca <_dtoa_r+0x94a>
 800cd2c:	4b09      	ldr	r3, [pc, #36]	; (800cd54 <_dtoa_r+0xbd4>)
 800cd2e:	f7ff ba95 	b.w	800c25c <_dtoa_r+0xdc>
 800cd32:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cd34:	2b00      	cmp	r3, #0
 800cd36:	f47f aa6e 	bne.w	800c216 <_dtoa_r+0x96>
 800cd3a:	4b07      	ldr	r3, [pc, #28]	; (800cd58 <_dtoa_r+0xbd8>)
 800cd3c:	f7ff ba8e 	b.w	800c25c <_dtoa_r+0xdc>
 800cd40:	9b02      	ldr	r3, [sp, #8]
 800cd42:	2b00      	cmp	r3, #0
 800cd44:	dcae      	bgt.n	800cca4 <_dtoa_r+0xb24>
 800cd46:	9b06      	ldr	r3, [sp, #24]
 800cd48:	2b02      	cmp	r3, #2
 800cd4a:	f73f aea8 	bgt.w	800ca9e <_dtoa_r+0x91e>
 800cd4e:	e7a9      	b.n	800cca4 <_dtoa_r+0xb24>
 800cd50:	08010209 	.word	0x08010209
 800cd54:	08010401 	.word	0x08010401
 800cd58:	080101a1 	.word	0x080101a1

0800cd5c <fiprintf>:
 800cd5c:	b40e      	push	{r1, r2, r3}
 800cd5e:	b503      	push	{r0, r1, lr}
 800cd60:	4601      	mov	r1, r0
 800cd62:	ab03      	add	r3, sp, #12
 800cd64:	4805      	ldr	r0, [pc, #20]	; (800cd7c <fiprintf+0x20>)
 800cd66:	f853 2b04 	ldr.w	r2, [r3], #4
 800cd6a:	6800      	ldr	r0, [r0, #0]
 800cd6c:	9301      	str	r3, [sp, #4]
 800cd6e:	f001 fcd7 	bl	800e720 <_vfiprintf_r>
 800cd72:	b002      	add	sp, #8
 800cd74:	f85d eb04 	ldr.w	lr, [sp], #4
 800cd78:	b003      	add	sp, #12
 800cd7a:	4770      	bx	lr
 800cd7c:	2000000c 	.word	0x2000000c

0800cd80 <rshift>:
 800cd80:	6903      	ldr	r3, [r0, #16]
 800cd82:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800cd86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd8a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800cd8e:	f100 0414 	add.w	r4, r0, #20
 800cd92:	dd45      	ble.n	800ce20 <rshift+0xa0>
 800cd94:	f011 011f 	ands.w	r1, r1, #31
 800cd98:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800cd9c:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800cda0:	d10c      	bne.n	800cdbc <rshift+0x3c>
 800cda2:	f100 0710 	add.w	r7, r0, #16
 800cda6:	4629      	mov	r1, r5
 800cda8:	42b1      	cmp	r1, r6
 800cdaa:	d334      	bcc.n	800ce16 <rshift+0x96>
 800cdac:	1a9b      	subs	r3, r3, r2
 800cdae:	009b      	lsls	r3, r3, #2
 800cdb0:	1eea      	subs	r2, r5, #3
 800cdb2:	4296      	cmp	r6, r2
 800cdb4:	bf38      	it	cc
 800cdb6:	2300      	movcc	r3, #0
 800cdb8:	4423      	add	r3, r4
 800cdba:	e015      	b.n	800cde8 <rshift+0x68>
 800cdbc:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800cdc0:	f1c1 0820 	rsb	r8, r1, #32
 800cdc4:	40cf      	lsrs	r7, r1
 800cdc6:	f105 0e04 	add.w	lr, r5, #4
 800cdca:	46a1      	mov	r9, r4
 800cdcc:	4576      	cmp	r6, lr
 800cdce:	46f4      	mov	ip, lr
 800cdd0:	d815      	bhi.n	800cdfe <rshift+0x7e>
 800cdd2:	1a9a      	subs	r2, r3, r2
 800cdd4:	0092      	lsls	r2, r2, #2
 800cdd6:	3a04      	subs	r2, #4
 800cdd8:	3501      	adds	r5, #1
 800cdda:	42ae      	cmp	r6, r5
 800cddc:	bf38      	it	cc
 800cdde:	2200      	movcc	r2, #0
 800cde0:	18a3      	adds	r3, r4, r2
 800cde2:	50a7      	str	r7, [r4, r2]
 800cde4:	b107      	cbz	r7, 800cde8 <rshift+0x68>
 800cde6:	3304      	adds	r3, #4
 800cde8:	1b1a      	subs	r2, r3, r4
 800cdea:	42a3      	cmp	r3, r4
 800cdec:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800cdf0:	bf08      	it	eq
 800cdf2:	2300      	moveq	r3, #0
 800cdf4:	6102      	str	r2, [r0, #16]
 800cdf6:	bf08      	it	eq
 800cdf8:	6143      	streq	r3, [r0, #20]
 800cdfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cdfe:	f8dc c000 	ldr.w	ip, [ip]
 800ce02:	fa0c fc08 	lsl.w	ip, ip, r8
 800ce06:	ea4c 0707 	orr.w	r7, ip, r7
 800ce0a:	f849 7b04 	str.w	r7, [r9], #4
 800ce0e:	f85e 7b04 	ldr.w	r7, [lr], #4
 800ce12:	40cf      	lsrs	r7, r1
 800ce14:	e7da      	b.n	800cdcc <rshift+0x4c>
 800ce16:	f851 cb04 	ldr.w	ip, [r1], #4
 800ce1a:	f847 cf04 	str.w	ip, [r7, #4]!
 800ce1e:	e7c3      	b.n	800cda8 <rshift+0x28>
 800ce20:	4623      	mov	r3, r4
 800ce22:	e7e1      	b.n	800cde8 <rshift+0x68>

0800ce24 <__hexdig_fun>:
 800ce24:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800ce28:	2b09      	cmp	r3, #9
 800ce2a:	d802      	bhi.n	800ce32 <__hexdig_fun+0xe>
 800ce2c:	3820      	subs	r0, #32
 800ce2e:	b2c0      	uxtb	r0, r0
 800ce30:	4770      	bx	lr
 800ce32:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800ce36:	2b05      	cmp	r3, #5
 800ce38:	d801      	bhi.n	800ce3e <__hexdig_fun+0x1a>
 800ce3a:	3847      	subs	r0, #71	; 0x47
 800ce3c:	e7f7      	b.n	800ce2e <__hexdig_fun+0xa>
 800ce3e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800ce42:	2b05      	cmp	r3, #5
 800ce44:	d801      	bhi.n	800ce4a <__hexdig_fun+0x26>
 800ce46:	3827      	subs	r0, #39	; 0x27
 800ce48:	e7f1      	b.n	800ce2e <__hexdig_fun+0xa>
 800ce4a:	2000      	movs	r0, #0
 800ce4c:	4770      	bx	lr
	...

0800ce50 <__gethex>:
 800ce50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce54:	ed2d 8b02 	vpush	{d8}
 800ce58:	b089      	sub	sp, #36	; 0x24
 800ce5a:	ee08 0a10 	vmov	s16, r0
 800ce5e:	9304      	str	r3, [sp, #16]
 800ce60:	4bb4      	ldr	r3, [pc, #720]	; (800d134 <__gethex+0x2e4>)
 800ce62:	681b      	ldr	r3, [r3, #0]
 800ce64:	9301      	str	r3, [sp, #4]
 800ce66:	4618      	mov	r0, r3
 800ce68:	468b      	mov	fp, r1
 800ce6a:	4690      	mov	r8, r2
 800ce6c:	f7f3 f9c2 	bl	80001f4 <strlen>
 800ce70:	9b01      	ldr	r3, [sp, #4]
 800ce72:	f8db 2000 	ldr.w	r2, [fp]
 800ce76:	4403      	add	r3, r0
 800ce78:	4682      	mov	sl, r0
 800ce7a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800ce7e:	9305      	str	r3, [sp, #20]
 800ce80:	1c93      	adds	r3, r2, #2
 800ce82:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800ce86:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800ce8a:	32fe      	adds	r2, #254	; 0xfe
 800ce8c:	18d1      	adds	r1, r2, r3
 800ce8e:	461f      	mov	r7, r3
 800ce90:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ce94:	9100      	str	r1, [sp, #0]
 800ce96:	2830      	cmp	r0, #48	; 0x30
 800ce98:	d0f8      	beq.n	800ce8c <__gethex+0x3c>
 800ce9a:	f7ff ffc3 	bl	800ce24 <__hexdig_fun>
 800ce9e:	4604      	mov	r4, r0
 800cea0:	2800      	cmp	r0, #0
 800cea2:	d13a      	bne.n	800cf1a <__gethex+0xca>
 800cea4:	9901      	ldr	r1, [sp, #4]
 800cea6:	4652      	mov	r2, sl
 800cea8:	4638      	mov	r0, r7
 800ceaa:	f7fd fed5 	bl	800ac58 <strncmp>
 800ceae:	4605      	mov	r5, r0
 800ceb0:	2800      	cmp	r0, #0
 800ceb2:	d168      	bne.n	800cf86 <__gethex+0x136>
 800ceb4:	f817 000a 	ldrb.w	r0, [r7, sl]
 800ceb8:	eb07 060a 	add.w	r6, r7, sl
 800cebc:	f7ff ffb2 	bl	800ce24 <__hexdig_fun>
 800cec0:	2800      	cmp	r0, #0
 800cec2:	d062      	beq.n	800cf8a <__gethex+0x13a>
 800cec4:	4633      	mov	r3, r6
 800cec6:	7818      	ldrb	r0, [r3, #0]
 800cec8:	2830      	cmp	r0, #48	; 0x30
 800ceca:	461f      	mov	r7, r3
 800cecc:	f103 0301 	add.w	r3, r3, #1
 800ced0:	d0f9      	beq.n	800cec6 <__gethex+0x76>
 800ced2:	f7ff ffa7 	bl	800ce24 <__hexdig_fun>
 800ced6:	2301      	movs	r3, #1
 800ced8:	fab0 f480 	clz	r4, r0
 800cedc:	0964      	lsrs	r4, r4, #5
 800cede:	4635      	mov	r5, r6
 800cee0:	9300      	str	r3, [sp, #0]
 800cee2:	463a      	mov	r2, r7
 800cee4:	4616      	mov	r6, r2
 800cee6:	3201      	adds	r2, #1
 800cee8:	7830      	ldrb	r0, [r6, #0]
 800ceea:	f7ff ff9b 	bl	800ce24 <__hexdig_fun>
 800ceee:	2800      	cmp	r0, #0
 800cef0:	d1f8      	bne.n	800cee4 <__gethex+0x94>
 800cef2:	9901      	ldr	r1, [sp, #4]
 800cef4:	4652      	mov	r2, sl
 800cef6:	4630      	mov	r0, r6
 800cef8:	f7fd feae 	bl	800ac58 <strncmp>
 800cefc:	b980      	cbnz	r0, 800cf20 <__gethex+0xd0>
 800cefe:	b94d      	cbnz	r5, 800cf14 <__gethex+0xc4>
 800cf00:	eb06 050a 	add.w	r5, r6, sl
 800cf04:	462a      	mov	r2, r5
 800cf06:	4616      	mov	r6, r2
 800cf08:	3201      	adds	r2, #1
 800cf0a:	7830      	ldrb	r0, [r6, #0]
 800cf0c:	f7ff ff8a 	bl	800ce24 <__hexdig_fun>
 800cf10:	2800      	cmp	r0, #0
 800cf12:	d1f8      	bne.n	800cf06 <__gethex+0xb6>
 800cf14:	1bad      	subs	r5, r5, r6
 800cf16:	00ad      	lsls	r5, r5, #2
 800cf18:	e004      	b.n	800cf24 <__gethex+0xd4>
 800cf1a:	2400      	movs	r4, #0
 800cf1c:	4625      	mov	r5, r4
 800cf1e:	e7e0      	b.n	800cee2 <__gethex+0x92>
 800cf20:	2d00      	cmp	r5, #0
 800cf22:	d1f7      	bne.n	800cf14 <__gethex+0xc4>
 800cf24:	7833      	ldrb	r3, [r6, #0]
 800cf26:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800cf2a:	2b50      	cmp	r3, #80	; 0x50
 800cf2c:	d13b      	bne.n	800cfa6 <__gethex+0x156>
 800cf2e:	7873      	ldrb	r3, [r6, #1]
 800cf30:	2b2b      	cmp	r3, #43	; 0x2b
 800cf32:	d02c      	beq.n	800cf8e <__gethex+0x13e>
 800cf34:	2b2d      	cmp	r3, #45	; 0x2d
 800cf36:	d02e      	beq.n	800cf96 <__gethex+0x146>
 800cf38:	1c71      	adds	r1, r6, #1
 800cf3a:	f04f 0900 	mov.w	r9, #0
 800cf3e:	7808      	ldrb	r0, [r1, #0]
 800cf40:	f7ff ff70 	bl	800ce24 <__hexdig_fun>
 800cf44:	1e43      	subs	r3, r0, #1
 800cf46:	b2db      	uxtb	r3, r3
 800cf48:	2b18      	cmp	r3, #24
 800cf4a:	d82c      	bhi.n	800cfa6 <__gethex+0x156>
 800cf4c:	f1a0 0210 	sub.w	r2, r0, #16
 800cf50:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800cf54:	f7ff ff66 	bl	800ce24 <__hexdig_fun>
 800cf58:	1e43      	subs	r3, r0, #1
 800cf5a:	b2db      	uxtb	r3, r3
 800cf5c:	2b18      	cmp	r3, #24
 800cf5e:	d91d      	bls.n	800cf9c <__gethex+0x14c>
 800cf60:	f1b9 0f00 	cmp.w	r9, #0
 800cf64:	d000      	beq.n	800cf68 <__gethex+0x118>
 800cf66:	4252      	negs	r2, r2
 800cf68:	4415      	add	r5, r2
 800cf6a:	f8cb 1000 	str.w	r1, [fp]
 800cf6e:	b1e4      	cbz	r4, 800cfaa <__gethex+0x15a>
 800cf70:	9b00      	ldr	r3, [sp, #0]
 800cf72:	2b00      	cmp	r3, #0
 800cf74:	bf14      	ite	ne
 800cf76:	2700      	movne	r7, #0
 800cf78:	2706      	moveq	r7, #6
 800cf7a:	4638      	mov	r0, r7
 800cf7c:	b009      	add	sp, #36	; 0x24
 800cf7e:	ecbd 8b02 	vpop	{d8}
 800cf82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf86:	463e      	mov	r6, r7
 800cf88:	4625      	mov	r5, r4
 800cf8a:	2401      	movs	r4, #1
 800cf8c:	e7ca      	b.n	800cf24 <__gethex+0xd4>
 800cf8e:	f04f 0900 	mov.w	r9, #0
 800cf92:	1cb1      	adds	r1, r6, #2
 800cf94:	e7d3      	b.n	800cf3e <__gethex+0xee>
 800cf96:	f04f 0901 	mov.w	r9, #1
 800cf9a:	e7fa      	b.n	800cf92 <__gethex+0x142>
 800cf9c:	230a      	movs	r3, #10
 800cf9e:	fb03 0202 	mla	r2, r3, r2, r0
 800cfa2:	3a10      	subs	r2, #16
 800cfa4:	e7d4      	b.n	800cf50 <__gethex+0x100>
 800cfa6:	4631      	mov	r1, r6
 800cfa8:	e7df      	b.n	800cf6a <__gethex+0x11a>
 800cfaa:	1bf3      	subs	r3, r6, r7
 800cfac:	3b01      	subs	r3, #1
 800cfae:	4621      	mov	r1, r4
 800cfb0:	2b07      	cmp	r3, #7
 800cfb2:	dc0b      	bgt.n	800cfcc <__gethex+0x17c>
 800cfb4:	ee18 0a10 	vmov	r0, s16
 800cfb8:	f000 fb84 	bl	800d6c4 <_Balloc>
 800cfbc:	4604      	mov	r4, r0
 800cfbe:	b940      	cbnz	r0, 800cfd2 <__gethex+0x182>
 800cfc0:	4b5d      	ldr	r3, [pc, #372]	; (800d138 <__gethex+0x2e8>)
 800cfc2:	4602      	mov	r2, r0
 800cfc4:	21de      	movs	r1, #222	; 0xde
 800cfc6:	485d      	ldr	r0, [pc, #372]	; (800d13c <__gethex+0x2ec>)
 800cfc8:	f7ff f80c 	bl	800bfe4 <__assert_func>
 800cfcc:	3101      	adds	r1, #1
 800cfce:	105b      	asrs	r3, r3, #1
 800cfd0:	e7ee      	b.n	800cfb0 <__gethex+0x160>
 800cfd2:	f100 0914 	add.w	r9, r0, #20
 800cfd6:	f04f 0b00 	mov.w	fp, #0
 800cfda:	f1ca 0301 	rsb	r3, sl, #1
 800cfde:	f8cd 9008 	str.w	r9, [sp, #8]
 800cfe2:	f8cd b000 	str.w	fp, [sp]
 800cfe6:	9306      	str	r3, [sp, #24]
 800cfe8:	42b7      	cmp	r7, r6
 800cfea:	d340      	bcc.n	800d06e <__gethex+0x21e>
 800cfec:	9802      	ldr	r0, [sp, #8]
 800cfee:	9b00      	ldr	r3, [sp, #0]
 800cff0:	f840 3b04 	str.w	r3, [r0], #4
 800cff4:	eba0 0009 	sub.w	r0, r0, r9
 800cff8:	1080      	asrs	r0, r0, #2
 800cffa:	0146      	lsls	r6, r0, #5
 800cffc:	6120      	str	r0, [r4, #16]
 800cffe:	4618      	mov	r0, r3
 800d000:	f000 fc52 	bl	800d8a8 <__hi0bits>
 800d004:	1a30      	subs	r0, r6, r0
 800d006:	f8d8 6000 	ldr.w	r6, [r8]
 800d00a:	42b0      	cmp	r0, r6
 800d00c:	dd63      	ble.n	800d0d6 <__gethex+0x286>
 800d00e:	1b87      	subs	r7, r0, r6
 800d010:	4639      	mov	r1, r7
 800d012:	4620      	mov	r0, r4
 800d014:	f000 fff6 	bl	800e004 <__any_on>
 800d018:	4682      	mov	sl, r0
 800d01a:	b1a8      	cbz	r0, 800d048 <__gethex+0x1f8>
 800d01c:	1e7b      	subs	r3, r7, #1
 800d01e:	1159      	asrs	r1, r3, #5
 800d020:	f003 021f 	and.w	r2, r3, #31
 800d024:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800d028:	f04f 0a01 	mov.w	sl, #1
 800d02c:	fa0a f202 	lsl.w	r2, sl, r2
 800d030:	420a      	tst	r2, r1
 800d032:	d009      	beq.n	800d048 <__gethex+0x1f8>
 800d034:	4553      	cmp	r3, sl
 800d036:	dd05      	ble.n	800d044 <__gethex+0x1f4>
 800d038:	1eb9      	subs	r1, r7, #2
 800d03a:	4620      	mov	r0, r4
 800d03c:	f000 ffe2 	bl	800e004 <__any_on>
 800d040:	2800      	cmp	r0, #0
 800d042:	d145      	bne.n	800d0d0 <__gethex+0x280>
 800d044:	f04f 0a02 	mov.w	sl, #2
 800d048:	4639      	mov	r1, r7
 800d04a:	4620      	mov	r0, r4
 800d04c:	f7ff fe98 	bl	800cd80 <rshift>
 800d050:	443d      	add	r5, r7
 800d052:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d056:	42ab      	cmp	r3, r5
 800d058:	da4c      	bge.n	800d0f4 <__gethex+0x2a4>
 800d05a:	ee18 0a10 	vmov	r0, s16
 800d05e:	4621      	mov	r1, r4
 800d060:	f000 fb70 	bl	800d744 <_Bfree>
 800d064:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d066:	2300      	movs	r3, #0
 800d068:	6013      	str	r3, [r2, #0]
 800d06a:	27a3      	movs	r7, #163	; 0xa3
 800d06c:	e785      	b.n	800cf7a <__gethex+0x12a>
 800d06e:	1e73      	subs	r3, r6, #1
 800d070:	9a05      	ldr	r2, [sp, #20]
 800d072:	9303      	str	r3, [sp, #12]
 800d074:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800d078:	4293      	cmp	r3, r2
 800d07a:	d019      	beq.n	800d0b0 <__gethex+0x260>
 800d07c:	f1bb 0f20 	cmp.w	fp, #32
 800d080:	d107      	bne.n	800d092 <__gethex+0x242>
 800d082:	9b02      	ldr	r3, [sp, #8]
 800d084:	9a00      	ldr	r2, [sp, #0]
 800d086:	f843 2b04 	str.w	r2, [r3], #4
 800d08a:	9302      	str	r3, [sp, #8]
 800d08c:	2300      	movs	r3, #0
 800d08e:	9300      	str	r3, [sp, #0]
 800d090:	469b      	mov	fp, r3
 800d092:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800d096:	f7ff fec5 	bl	800ce24 <__hexdig_fun>
 800d09a:	9b00      	ldr	r3, [sp, #0]
 800d09c:	f000 000f 	and.w	r0, r0, #15
 800d0a0:	fa00 f00b 	lsl.w	r0, r0, fp
 800d0a4:	4303      	orrs	r3, r0
 800d0a6:	9300      	str	r3, [sp, #0]
 800d0a8:	f10b 0b04 	add.w	fp, fp, #4
 800d0ac:	9b03      	ldr	r3, [sp, #12]
 800d0ae:	e00d      	b.n	800d0cc <__gethex+0x27c>
 800d0b0:	9b03      	ldr	r3, [sp, #12]
 800d0b2:	9a06      	ldr	r2, [sp, #24]
 800d0b4:	4413      	add	r3, r2
 800d0b6:	42bb      	cmp	r3, r7
 800d0b8:	d3e0      	bcc.n	800d07c <__gethex+0x22c>
 800d0ba:	4618      	mov	r0, r3
 800d0bc:	9901      	ldr	r1, [sp, #4]
 800d0be:	9307      	str	r3, [sp, #28]
 800d0c0:	4652      	mov	r2, sl
 800d0c2:	f7fd fdc9 	bl	800ac58 <strncmp>
 800d0c6:	9b07      	ldr	r3, [sp, #28]
 800d0c8:	2800      	cmp	r0, #0
 800d0ca:	d1d7      	bne.n	800d07c <__gethex+0x22c>
 800d0cc:	461e      	mov	r6, r3
 800d0ce:	e78b      	b.n	800cfe8 <__gethex+0x198>
 800d0d0:	f04f 0a03 	mov.w	sl, #3
 800d0d4:	e7b8      	b.n	800d048 <__gethex+0x1f8>
 800d0d6:	da0a      	bge.n	800d0ee <__gethex+0x29e>
 800d0d8:	1a37      	subs	r7, r6, r0
 800d0da:	4621      	mov	r1, r4
 800d0dc:	ee18 0a10 	vmov	r0, s16
 800d0e0:	463a      	mov	r2, r7
 800d0e2:	f000 fd4b 	bl	800db7c <__lshift>
 800d0e6:	1bed      	subs	r5, r5, r7
 800d0e8:	4604      	mov	r4, r0
 800d0ea:	f100 0914 	add.w	r9, r0, #20
 800d0ee:	f04f 0a00 	mov.w	sl, #0
 800d0f2:	e7ae      	b.n	800d052 <__gethex+0x202>
 800d0f4:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d0f8:	42a8      	cmp	r0, r5
 800d0fa:	dd72      	ble.n	800d1e2 <__gethex+0x392>
 800d0fc:	1b45      	subs	r5, r0, r5
 800d0fe:	42ae      	cmp	r6, r5
 800d100:	dc36      	bgt.n	800d170 <__gethex+0x320>
 800d102:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d106:	2b02      	cmp	r3, #2
 800d108:	d02a      	beq.n	800d160 <__gethex+0x310>
 800d10a:	2b03      	cmp	r3, #3
 800d10c:	d02c      	beq.n	800d168 <__gethex+0x318>
 800d10e:	2b01      	cmp	r3, #1
 800d110:	d11c      	bne.n	800d14c <__gethex+0x2fc>
 800d112:	42ae      	cmp	r6, r5
 800d114:	d11a      	bne.n	800d14c <__gethex+0x2fc>
 800d116:	2e01      	cmp	r6, #1
 800d118:	d112      	bne.n	800d140 <__gethex+0x2f0>
 800d11a:	9a04      	ldr	r2, [sp, #16]
 800d11c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d120:	6013      	str	r3, [r2, #0]
 800d122:	2301      	movs	r3, #1
 800d124:	6123      	str	r3, [r4, #16]
 800d126:	f8c9 3000 	str.w	r3, [r9]
 800d12a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d12c:	2762      	movs	r7, #98	; 0x62
 800d12e:	601c      	str	r4, [r3, #0]
 800d130:	e723      	b.n	800cf7a <__gethex+0x12a>
 800d132:	bf00      	nop
 800d134:	08010280 	.word	0x08010280
 800d138:	08010209 	.word	0x08010209
 800d13c:	0801021a 	.word	0x0801021a
 800d140:	1e71      	subs	r1, r6, #1
 800d142:	4620      	mov	r0, r4
 800d144:	f000 ff5e 	bl	800e004 <__any_on>
 800d148:	2800      	cmp	r0, #0
 800d14a:	d1e6      	bne.n	800d11a <__gethex+0x2ca>
 800d14c:	ee18 0a10 	vmov	r0, s16
 800d150:	4621      	mov	r1, r4
 800d152:	f000 faf7 	bl	800d744 <_Bfree>
 800d156:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d158:	2300      	movs	r3, #0
 800d15a:	6013      	str	r3, [r2, #0]
 800d15c:	2750      	movs	r7, #80	; 0x50
 800d15e:	e70c      	b.n	800cf7a <__gethex+0x12a>
 800d160:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d162:	2b00      	cmp	r3, #0
 800d164:	d1f2      	bne.n	800d14c <__gethex+0x2fc>
 800d166:	e7d8      	b.n	800d11a <__gethex+0x2ca>
 800d168:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d16a:	2b00      	cmp	r3, #0
 800d16c:	d1d5      	bne.n	800d11a <__gethex+0x2ca>
 800d16e:	e7ed      	b.n	800d14c <__gethex+0x2fc>
 800d170:	1e6f      	subs	r7, r5, #1
 800d172:	f1ba 0f00 	cmp.w	sl, #0
 800d176:	d131      	bne.n	800d1dc <__gethex+0x38c>
 800d178:	b127      	cbz	r7, 800d184 <__gethex+0x334>
 800d17a:	4639      	mov	r1, r7
 800d17c:	4620      	mov	r0, r4
 800d17e:	f000 ff41 	bl	800e004 <__any_on>
 800d182:	4682      	mov	sl, r0
 800d184:	117b      	asrs	r3, r7, #5
 800d186:	2101      	movs	r1, #1
 800d188:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800d18c:	f007 071f 	and.w	r7, r7, #31
 800d190:	fa01 f707 	lsl.w	r7, r1, r7
 800d194:	421f      	tst	r7, r3
 800d196:	4629      	mov	r1, r5
 800d198:	4620      	mov	r0, r4
 800d19a:	bf18      	it	ne
 800d19c:	f04a 0a02 	orrne.w	sl, sl, #2
 800d1a0:	1b76      	subs	r6, r6, r5
 800d1a2:	f7ff fded 	bl	800cd80 <rshift>
 800d1a6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d1aa:	2702      	movs	r7, #2
 800d1ac:	f1ba 0f00 	cmp.w	sl, #0
 800d1b0:	d048      	beq.n	800d244 <__gethex+0x3f4>
 800d1b2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d1b6:	2b02      	cmp	r3, #2
 800d1b8:	d015      	beq.n	800d1e6 <__gethex+0x396>
 800d1ba:	2b03      	cmp	r3, #3
 800d1bc:	d017      	beq.n	800d1ee <__gethex+0x39e>
 800d1be:	2b01      	cmp	r3, #1
 800d1c0:	d109      	bne.n	800d1d6 <__gethex+0x386>
 800d1c2:	f01a 0f02 	tst.w	sl, #2
 800d1c6:	d006      	beq.n	800d1d6 <__gethex+0x386>
 800d1c8:	f8d9 0000 	ldr.w	r0, [r9]
 800d1cc:	ea4a 0a00 	orr.w	sl, sl, r0
 800d1d0:	f01a 0f01 	tst.w	sl, #1
 800d1d4:	d10e      	bne.n	800d1f4 <__gethex+0x3a4>
 800d1d6:	f047 0710 	orr.w	r7, r7, #16
 800d1da:	e033      	b.n	800d244 <__gethex+0x3f4>
 800d1dc:	f04f 0a01 	mov.w	sl, #1
 800d1e0:	e7d0      	b.n	800d184 <__gethex+0x334>
 800d1e2:	2701      	movs	r7, #1
 800d1e4:	e7e2      	b.n	800d1ac <__gethex+0x35c>
 800d1e6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d1e8:	f1c3 0301 	rsb	r3, r3, #1
 800d1ec:	9315      	str	r3, [sp, #84]	; 0x54
 800d1ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d1f0:	2b00      	cmp	r3, #0
 800d1f2:	d0f0      	beq.n	800d1d6 <__gethex+0x386>
 800d1f4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800d1f8:	f104 0314 	add.w	r3, r4, #20
 800d1fc:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800d200:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800d204:	f04f 0c00 	mov.w	ip, #0
 800d208:	4618      	mov	r0, r3
 800d20a:	f853 2b04 	ldr.w	r2, [r3], #4
 800d20e:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d212:	d01c      	beq.n	800d24e <__gethex+0x3fe>
 800d214:	3201      	adds	r2, #1
 800d216:	6002      	str	r2, [r0, #0]
 800d218:	2f02      	cmp	r7, #2
 800d21a:	f104 0314 	add.w	r3, r4, #20
 800d21e:	d13f      	bne.n	800d2a0 <__gethex+0x450>
 800d220:	f8d8 2000 	ldr.w	r2, [r8]
 800d224:	3a01      	subs	r2, #1
 800d226:	42b2      	cmp	r2, r6
 800d228:	d10a      	bne.n	800d240 <__gethex+0x3f0>
 800d22a:	1171      	asrs	r1, r6, #5
 800d22c:	2201      	movs	r2, #1
 800d22e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d232:	f006 061f 	and.w	r6, r6, #31
 800d236:	fa02 f606 	lsl.w	r6, r2, r6
 800d23a:	421e      	tst	r6, r3
 800d23c:	bf18      	it	ne
 800d23e:	4617      	movne	r7, r2
 800d240:	f047 0720 	orr.w	r7, r7, #32
 800d244:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d246:	601c      	str	r4, [r3, #0]
 800d248:	9b04      	ldr	r3, [sp, #16]
 800d24a:	601d      	str	r5, [r3, #0]
 800d24c:	e695      	b.n	800cf7a <__gethex+0x12a>
 800d24e:	4299      	cmp	r1, r3
 800d250:	f843 cc04 	str.w	ip, [r3, #-4]
 800d254:	d8d8      	bhi.n	800d208 <__gethex+0x3b8>
 800d256:	68a3      	ldr	r3, [r4, #8]
 800d258:	459b      	cmp	fp, r3
 800d25a:	db19      	blt.n	800d290 <__gethex+0x440>
 800d25c:	6861      	ldr	r1, [r4, #4]
 800d25e:	ee18 0a10 	vmov	r0, s16
 800d262:	3101      	adds	r1, #1
 800d264:	f000 fa2e 	bl	800d6c4 <_Balloc>
 800d268:	4681      	mov	r9, r0
 800d26a:	b918      	cbnz	r0, 800d274 <__gethex+0x424>
 800d26c:	4b1a      	ldr	r3, [pc, #104]	; (800d2d8 <__gethex+0x488>)
 800d26e:	4602      	mov	r2, r0
 800d270:	2184      	movs	r1, #132	; 0x84
 800d272:	e6a8      	b.n	800cfc6 <__gethex+0x176>
 800d274:	6922      	ldr	r2, [r4, #16]
 800d276:	3202      	adds	r2, #2
 800d278:	f104 010c 	add.w	r1, r4, #12
 800d27c:	0092      	lsls	r2, r2, #2
 800d27e:	300c      	adds	r0, #12
 800d280:	f7fb fcdc 	bl	8008c3c <memcpy>
 800d284:	4621      	mov	r1, r4
 800d286:	ee18 0a10 	vmov	r0, s16
 800d28a:	f000 fa5b 	bl	800d744 <_Bfree>
 800d28e:	464c      	mov	r4, r9
 800d290:	6923      	ldr	r3, [r4, #16]
 800d292:	1c5a      	adds	r2, r3, #1
 800d294:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d298:	6122      	str	r2, [r4, #16]
 800d29a:	2201      	movs	r2, #1
 800d29c:	615a      	str	r2, [r3, #20]
 800d29e:	e7bb      	b.n	800d218 <__gethex+0x3c8>
 800d2a0:	6922      	ldr	r2, [r4, #16]
 800d2a2:	455a      	cmp	r2, fp
 800d2a4:	dd0b      	ble.n	800d2be <__gethex+0x46e>
 800d2a6:	2101      	movs	r1, #1
 800d2a8:	4620      	mov	r0, r4
 800d2aa:	f7ff fd69 	bl	800cd80 <rshift>
 800d2ae:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d2b2:	3501      	adds	r5, #1
 800d2b4:	42ab      	cmp	r3, r5
 800d2b6:	f6ff aed0 	blt.w	800d05a <__gethex+0x20a>
 800d2ba:	2701      	movs	r7, #1
 800d2bc:	e7c0      	b.n	800d240 <__gethex+0x3f0>
 800d2be:	f016 061f 	ands.w	r6, r6, #31
 800d2c2:	d0fa      	beq.n	800d2ba <__gethex+0x46a>
 800d2c4:	4453      	add	r3, sl
 800d2c6:	f1c6 0620 	rsb	r6, r6, #32
 800d2ca:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800d2ce:	f000 faeb 	bl	800d8a8 <__hi0bits>
 800d2d2:	42b0      	cmp	r0, r6
 800d2d4:	dbe7      	blt.n	800d2a6 <__gethex+0x456>
 800d2d6:	e7f0      	b.n	800d2ba <__gethex+0x46a>
 800d2d8:	08010209 	.word	0x08010209

0800d2dc <L_shift>:
 800d2dc:	f1c2 0208 	rsb	r2, r2, #8
 800d2e0:	0092      	lsls	r2, r2, #2
 800d2e2:	b570      	push	{r4, r5, r6, lr}
 800d2e4:	f1c2 0620 	rsb	r6, r2, #32
 800d2e8:	6843      	ldr	r3, [r0, #4]
 800d2ea:	6804      	ldr	r4, [r0, #0]
 800d2ec:	fa03 f506 	lsl.w	r5, r3, r6
 800d2f0:	432c      	orrs	r4, r5
 800d2f2:	40d3      	lsrs	r3, r2
 800d2f4:	6004      	str	r4, [r0, #0]
 800d2f6:	f840 3f04 	str.w	r3, [r0, #4]!
 800d2fa:	4288      	cmp	r0, r1
 800d2fc:	d3f4      	bcc.n	800d2e8 <L_shift+0xc>
 800d2fe:	bd70      	pop	{r4, r5, r6, pc}

0800d300 <__match>:
 800d300:	b530      	push	{r4, r5, lr}
 800d302:	6803      	ldr	r3, [r0, #0]
 800d304:	3301      	adds	r3, #1
 800d306:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d30a:	b914      	cbnz	r4, 800d312 <__match+0x12>
 800d30c:	6003      	str	r3, [r0, #0]
 800d30e:	2001      	movs	r0, #1
 800d310:	bd30      	pop	{r4, r5, pc}
 800d312:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d316:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800d31a:	2d19      	cmp	r5, #25
 800d31c:	bf98      	it	ls
 800d31e:	3220      	addls	r2, #32
 800d320:	42a2      	cmp	r2, r4
 800d322:	d0f0      	beq.n	800d306 <__match+0x6>
 800d324:	2000      	movs	r0, #0
 800d326:	e7f3      	b.n	800d310 <__match+0x10>

0800d328 <__hexnan>:
 800d328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d32c:	680b      	ldr	r3, [r1, #0]
 800d32e:	115e      	asrs	r6, r3, #5
 800d330:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800d334:	f013 031f 	ands.w	r3, r3, #31
 800d338:	b087      	sub	sp, #28
 800d33a:	bf18      	it	ne
 800d33c:	3604      	addne	r6, #4
 800d33e:	2500      	movs	r5, #0
 800d340:	1f37      	subs	r7, r6, #4
 800d342:	4690      	mov	r8, r2
 800d344:	6802      	ldr	r2, [r0, #0]
 800d346:	9301      	str	r3, [sp, #4]
 800d348:	4682      	mov	sl, r0
 800d34a:	f846 5c04 	str.w	r5, [r6, #-4]
 800d34e:	46b9      	mov	r9, r7
 800d350:	463c      	mov	r4, r7
 800d352:	9502      	str	r5, [sp, #8]
 800d354:	46ab      	mov	fp, r5
 800d356:	7851      	ldrb	r1, [r2, #1]
 800d358:	1c53      	adds	r3, r2, #1
 800d35a:	9303      	str	r3, [sp, #12]
 800d35c:	b341      	cbz	r1, 800d3b0 <__hexnan+0x88>
 800d35e:	4608      	mov	r0, r1
 800d360:	9205      	str	r2, [sp, #20]
 800d362:	9104      	str	r1, [sp, #16]
 800d364:	f7ff fd5e 	bl	800ce24 <__hexdig_fun>
 800d368:	2800      	cmp	r0, #0
 800d36a:	d14f      	bne.n	800d40c <__hexnan+0xe4>
 800d36c:	9904      	ldr	r1, [sp, #16]
 800d36e:	9a05      	ldr	r2, [sp, #20]
 800d370:	2920      	cmp	r1, #32
 800d372:	d818      	bhi.n	800d3a6 <__hexnan+0x7e>
 800d374:	9b02      	ldr	r3, [sp, #8]
 800d376:	459b      	cmp	fp, r3
 800d378:	dd13      	ble.n	800d3a2 <__hexnan+0x7a>
 800d37a:	454c      	cmp	r4, r9
 800d37c:	d206      	bcs.n	800d38c <__hexnan+0x64>
 800d37e:	2d07      	cmp	r5, #7
 800d380:	dc04      	bgt.n	800d38c <__hexnan+0x64>
 800d382:	462a      	mov	r2, r5
 800d384:	4649      	mov	r1, r9
 800d386:	4620      	mov	r0, r4
 800d388:	f7ff ffa8 	bl	800d2dc <L_shift>
 800d38c:	4544      	cmp	r4, r8
 800d38e:	d950      	bls.n	800d432 <__hexnan+0x10a>
 800d390:	2300      	movs	r3, #0
 800d392:	f1a4 0904 	sub.w	r9, r4, #4
 800d396:	f844 3c04 	str.w	r3, [r4, #-4]
 800d39a:	f8cd b008 	str.w	fp, [sp, #8]
 800d39e:	464c      	mov	r4, r9
 800d3a0:	461d      	mov	r5, r3
 800d3a2:	9a03      	ldr	r2, [sp, #12]
 800d3a4:	e7d7      	b.n	800d356 <__hexnan+0x2e>
 800d3a6:	2929      	cmp	r1, #41	; 0x29
 800d3a8:	d156      	bne.n	800d458 <__hexnan+0x130>
 800d3aa:	3202      	adds	r2, #2
 800d3ac:	f8ca 2000 	str.w	r2, [sl]
 800d3b0:	f1bb 0f00 	cmp.w	fp, #0
 800d3b4:	d050      	beq.n	800d458 <__hexnan+0x130>
 800d3b6:	454c      	cmp	r4, r9
 800d3b8:	d206      	bcs.n	800d3c8 <__hexnan+0xa0>
 800d3ba:	2d07      	cmp	r5, #7
 800d3bc:	dc04      	bgt.n	800d3c8 <__hexnan+0xa0>
 800d3be:	462a      	mov	r2, r5
 800d3c0:	4649      	mov	r1, r9
 800d3c2:	4620      	mov	r0, r4
 800d3c4:	f7ff ff8a 	bl	800d2dc <L_shift>
 800d3c8:	4544      	cmp	r4, r8
 800d3ca:	d934      	bls.n	800d436 <__hexnan+0x10e>
 800d3cc:	f1a8 0204 	sub.w	r2, r8, #4
 800d3d0:	4623      	mov	r3, r4
 800d3d2:	f853 1b04 	ldr.w	r1, [r3], #4
 800d3d6:	f842 1f04 	str.w	r1, [r2, #4]!
 800d3da:	429f      	cmp	r7, r3
 800d3dc:	d2f9      	bcs.n	800d3d2 <__hexnan+0xaa>
 800d3de:	1b3b      	subs	r3, r7, r4
 800d3e0:	f023 0303 	bic.w	r3, r3, #3
 800d3e4:	3304      	adds	r3, #4
 800d3e6:	3401      	adds	r4, #1
 800d3e8:	3e03      	subs	r6, #3
 800d3ea:	42b4      	cmp	r4, r6
 800d3ec:	bf88      	it	hi
 800d3ee:	2304      	movhi	r3, #4
 800d3f0:	4443      	add	r3, r8
 800d3f2:	2200      	movs	r2, #0
 800d3f4:	f843 2b04 	str.w	r2, [r3], #4
 800d3f8:	429f      	cmp	r7, r3
 800d3fa:	d2fb      	bcs.n	800d3f4 <__hexnan+0xcc>
 800d3fc:	683b      	ldr	r3, [r7, #0]
 800d3fe:	b91b      	cbnz	r3, 800d408 <__hexnan+0xe0>
 800d400:	4547      	cmp	r7, r8
 800d402:	d127      	bne.n	800d454 <__hexnan+0x12c>
 800d404:	2301      	movs	r3, #1
 800d406:	603b      	str	r3, [r7, #0]
 800d408:	2005      	movs	r0, #5
 800d40a:	e026      	b.n	800d45a <__hexnan+0x132>
 800d40c:	3501      	adds	r5, #1
 800d40e:	2d08      	cmp	r5, #8
 800d410:	f10b 0b01 	add.w	fp, fp, #1
 800d414:	dd06      	ble.n	800d424 <__hexnan+0xfc>
 800d416:	4544      	cmp	r4, r8
 800d418:	d9c3      	bls.n	800d3a2 <__hexnan+0x7a>
 800d41a:	2300      	movs	r3, #0
 800d41c:	f844 3c04 	str.w	r3, [r4, #-4]
 800d420:	2501      	movs	r5, #1
 800d422:	3c04      	subs	r4, #4
 800d424:	6822      	ldr	r2, [r4, #0]
 800d426:	f000 000f 	and.w	r0, r0, #15
 800d42a:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800d42e:	6022      	str	r2, [r4, #0]
 800d430:	e7b7      	b.n	800d3a2 <__hexnan+0x7a>
 800d432:	2508      	movs	r5, #8
 800d434:	e7b5      	b.n	800d3a2 <__hexnan+0x7a>
 800d436:	9b01      	ldr	r3, [sp, #4]
 800d438:	2b00      	cmp	r3, #0
 800d43a:	d0df      	beq.n	800d3fc <__hexnan+0xd4>
 800d43c:	f04f 32ff 	mov.w	r2, #4294967295
 800d440:	f1c3 0320 	rsb	r3, r3, #32
 800d444:	fa22 f303 	lsr.w	r3, r2, r3
 800d448:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800d44c:	401a      	ands	r2, r3
 800d44e:	f846 2c04 	str.w	r2, [r6, #-4]
 800d452:	e7d3      	b.n	800d3fc <__hexnan+0xd4>
 800d454:	3f04      	subs	r7, #4
 800d456:	e7d1      	b.n	800d3fc <__hexnan+0xd4>
 800d458:	2004      	movs	r0, #4
 800d45a:	b007      	add	sp, #28
 800d45c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d460 <_findenv_r>:
 800d460:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d464:	f8df a06c 	ldr.w	sl, [pc, #108]	; 800d4d4 <_findenv_r+0x74>
 800d468:	4607      	mov	r7, r0
 800d46a:	4689      	mov	r9, r1
 800d46c:	4616      	mov	r6, r2
 800d46e:	f001 fd33 	bl	800eed8 <__env_lock>
 800d472:	f8da 4000 	ldr.w	r4, [sl]
 800d476:	b134      	cbz	r4, 800d486 <_findenv_r+0x26>
 800d478:	464b      	mov	r3, r9
 800d47a:	4698      	mov	r8, r3
 800d47c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d480:	b13a      	cbz	r2, 800d492 <_findenv_r+0x32>
 800d482:	2a3d      	cmp	r2, #61	; 0x3d
 800d484:	d1f9      	bne.n	800d47a <_findenv_r+0x1a>
 800d486:	4638      	mov	r0, r7
 800d488:	f001 fd2c 	bl	800eee4 <__env_unlock>
 800d48c:	2000      	movs	r0, #0
 800d48e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d492:	eba8 0809 	sub.w	r8, r8, r9
 800d496:	46a3      	mov	fp, r4
 800d498:	f854 0b04 	ldr.w	r0, [r4], #4
 800d49c:	2800      	cmp	r0, #0
 800d49e:	d0f2      	beq.n	800d486 <_findenv_r+0x26>
 800d4a0:	4642      	mov	r2, r8
 800d4a2:	4649      	mov	r1, r9
 800d4a4:	f7fd fbd8 	bl	800ac58 <strncmp>
 800d4a8:	2800      	cmp	r0, #0
 800d4aa:	d1f4      	bne.n	800d496 <_findenv_r+0x36>
 800d4ac:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d4b0:	eb03 0508 	add.w	r5, r3, r8
 800d4b4:	f813 3008 	ldrb.w	r3, [r3, r8]
 800d4b8:	2b3d      	cmp	r3, #61	; 0x3d
 800d4ba:	d1ec      	bne.n	800d496 <_findenv_r+0x36>
 800d4bc:	f8da 3000 	ldr.w	r3, [sl]
 800d4c0:	ebab 0303 	sub.w	r3, fp, r3
 800d4c4:	109b      	asrs	r3, r3, #2
 800d4c6:	4638      	mov	r0, r7
 800d4c8:	6033      	str	r3, [r6, #0]
 800d4ca:	f001 fd0b 	bl	800eee4 <__env_unlock>
 800d4ce:	1c68      	adds	r0, r5, #1
 800d4d0:	e7dd      	b.n	800d48e <_findenv_r+0x2e>
 800d4d2:	bf00      	nop
 800d4d4:	20000240 	.word	0x20000240

0800d4d8 <_getenv_r>:
 800d4d8:	b507      	push	{r0, r1, r2, lr}
 800d4da:	aa01      	add	r2, sp, #4
 800d4dc:	f7ff ffc0 	bl	800d460 <_findenv_r>
 800d4e0:	b003      	add	sp, #12
 800d4e2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800d4e8 <__gettzinfo>:
 800d4e8:	4800      	ldr	r0, [pc, #0]	; (800d4ec <__gettzinfo+0x4>)
 800d4ea:	4770      	bx	lr
 800d4ec:	20000078 	.word	0x20000078

0800d4f0 <gmtime_r>:
 800d4f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d4f4:	e9d0 6700 	ldrd	r6, r7, [r0]
 800d4f8:	460c      	mov	r4, r1
 800d4fa:	4a4f      	ldr	r2, [pc, #316]	; (800d638 <gmtime_r+0x148>)
 800d4fc:	2300      	movs	r3, #0
 800d4fe:	4630      	mov	r0, r6
 800d500:	4639      	mov	r1, r7
 800d502:	f7f3 fbd9 	bl	8000cb8 <__aeabi_ldivmod>
 800d506:	4639      	mov	r1, r7
 800d508:	4605      	mov	r5, r0
 800d50a:	4a4b      	ldr	r2, [pc, #300]	; (800d638 <gmtime_r+0x148>)
 800d50c:	4630      	mov	r0, r6
 800d50e:	2300      	movs	r3, #0
 800d510:	f7f3 fbd2 	bl	8000cb8 <__aeabi_ldivmod>
 800d514:	2a00      	cmp	r2, #0
 800d516:	f505 202f 	add.w	r0, r5, #716800	; 0xaf000
 800d51a:	bfb7      	itett	lt
 800d51c:	f502 32a8 	addlt.w	r2, r2, #86016	; 0x15000
 800d520:	f600 236c 	addwge	r3, r0, #2668	; 0xa6c
 800d524:	f600 236b 	addwlt	r3, r0, #2667	; 0xa6b
 800d528:	f502 72c0 	addlt.w	r2, r2, #384	; 0x180
 800d52c:	f44f 6061 	mov.w	r0, #3600	; 0xe10
 800d530:	fbb2 f1f0 	udiv	r1, r2, r0
 800d534:	fb00 2211 	mls	r2, r0, r1, r2
 800d538:	203c      	movs	r0, #60	; 0x3c
 800d53a:	60a1      	str	r1, [r4, #8]
 800d53c:	fbb2 f1f0 	udiv	r1, r2, r0
 800d540:	fb00 2211 	mls	r2, r0, r1, r2
 800d544:	6061      	str	r1, [r4, #4]
 800d546:	6022      	str	r2, [r4, #0]
 800d548:	2107      	movs	r1, #7
 800d54a:	1cda      	adds	r2, r3, #3
 800d54c:	fb92 f1f1 	sdiv	r1, r2, r1
 800d550:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 800d554:	1a52      	subs	r2, r2, r1
 800d556:	bf48      	it	mi
 800d558:	3207      	addmi	r2, #7
 800d55a:	4d38      	ldr	r5, [pc, #224]	; (800d63c <gmtime_r+0x14c>)
 800d55c:	4838      	ldr	r0, [pc, #224]	; (800d640 <gmtime_r+0x150>)
 800d55e:	61a2      	str	r2, [r4, #24]
 800d560:	2b00      	cmp	r3, #0
 800d562:	bfb7      	itett	lt
 800d564:	f5a3 320e 	sublt.w	r2, r3, #145408	; 0x23800
 800d568:	fb93 f5f5 	sdivge	r5, r3, r5
 800d56c:	f5a2 722c 	sublt.w	r2, r2, #688	; 0x2b0
 800d570:	fb92 f5f5 	sdivlt	r5, r2, r5
 800d574:	fb00 3005 	mla	r0, r0, r5, r3
 800d578:	f648 62ac 	movw	r2, #36524	; 0x8eac
 800d57c:	fbb0 f2f2 	udiv	r2, r0, r2
 800d580:	4402      	add	r2, r0
 800d582:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800d586:	fbb0 f1f3 	udiv	r1, r0, r3
 800d58a:	1a52      	subs	r2, r2, r1
 800d58c:	f240 1c6d 	movw	ip, #365	; 0x16d
 800d590:	492c      	ldr	r1, [pc, #176]	; (800d644 <gmtime_r+0x154>)
 800d592:	fbb0 f1f1 	udiv	r1, r0, r1
 800d596:	2764      	movs	r7, #100	; 0x64
 800d598:	1a52      	subs	r2, r2, r1
 800d59a:	fbb2 f1fc 	udiv	r1, r2, ip
 800d59e:	fbb2 f3f3 	udiv	r3, r2, r3
 800d5a2:	fbb1 f6f7 	udiv	r6, r1, r7
 800d5a6:	1af3      	subs	r3, r6, r3
 800d5a8:	4403      	add	r3, r0
 800d5aa:	fb0c 3311 	mls	r3, ip, r1, r3
 800d5ae:	2299      	movs	r2, #153	; 0x99
 800d5b0:	eb03 0e83 	add.w	lr, r3, r3, lsl #2
 800d5b4:	f10e 0e02 	add.w	lr, lr, #2
 800d5b8:	f103 0c01 	add.w	ip, r3, #1
 800d5bc:	fbbe f0f2 	udiv	r0, lr, r2
 800d5c0:	4342      	muls	r2, r0
 800d5c2:	3202      	adds	r2, #2
 800d5c4:	f04f 0805 	mov.w	r8, #5
 800d5c8:	fbb2 f2f8 	udiv	r2, r2, r8
 800d5cc:	ebac 0c02 	sub.w	ip, ip, r2
 800d5d0:	f240 52f9 	movw	r2, #1529	; 0x5f9
 800d5d4:	4596      	cmp	lr, r2
 800d5d6:	bf94      	ite	ls
 800d5d8:	2202      	movls	r2, #2
 800d5da:	f06f 0209 	mvnhi.w	r2, #9
 800d5de:	4410      	add	r0, r2
 800d5e0:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800d5e4:	fb02 1505 	mla	r5, r2, r5, r1
 800d5e8:	2801      	cmp	r0, #1
 800d5ea:	bf98      	it	ls
 800d5ec:	3501      	addls	r5, #1
 800d5ee:	f5b3 7f99 	cmp.w	r3, #306	; 0x132
 800d5f2:	d30d      	bcc.n	800d610 <gmtime_r+0x120>
 800d5f4:	f5a3 7399 	sub.w	r3, r3, #306	; 0x132
 800d5f8:	61e3      	str	r3, [r4, #28]
 800d5fa:	f2a5 756c 	subw	r5, r5, #1900	; 0x76c
 800d5fe:	2300      	movs	r3, #0
 800d600:	e9c4 0504 	strd	r0, r5, [r4, #16]
 800d604:	f8c4 c00c 	str.w	ip, [r4, #12]
 800d608:	6223      	str	r3, [r4, #32]
 800d60a:	4620      	mov	r0, r4
 800d60c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d610:	078a      	lsls	r2, r1, #30
 800d612:	d102      	bne.n	800d61a <gmtime_r+0x12a>
 800d614:	fb07 1616 	mls	r6, r7, r6, r1
 800d618:	b95e      	cbnz	r6, 800d632 <gmtime_r+0x142>
 800d61a:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800d61e:	fbb1 f6f2 	udiv	r6, r1, r2
 800d622:	fb02 1216 	mls	r2, r2, r6, r1
 800d626:	fab2 f282 	clz	r2, r2
 800d62a:	0952      	lsrs	r2, r2, #5
 800d62c:	333b      	adds	r3, #59	; 0x3b
 800d62e:	4413      	add	r3, r2
 800d630:	e7e2      	b.n	800d5f8 <gmtime_r+0x108>
 800d632:	2201      	movs	r2, #1
 800d634:	e7fa      	b.n	800d62c <gmtime_r+0x13c>
 800d636:	bf00      	nop
 800d638:	00015180 	.word	0x00015180
 800d63c:	00023ab1 	.word	0x00023ab1
 800d640:	fffdc54f 	.word	0xfffdc54f
 800d644:	00023ab0 	.word	0x00023ab0

0800d648 <labs>:
 800d648:	2800      	cmp	r0, #0
 800d64a:	bfb8      	it	lt
 800d64c:	4240      	neglt	r0, r0
 800d64e:	4770      	bx	lr

0800d650 <_localeconv_r>:
 800d650:	4800      	ldr	r0, [pc, #0]	; (800d654 <_localeconv_r+0x4>)
 800d652:	4770      	bx	lr
 800d654:	200001c4 	.word	0x200001c4

0800d658 <__retarget_lock_init_recursive>:
 800d658:	4770      	bx	lr

0800d65a <__retarget_lock_acquire>:
 800d65a:	4770      	bx	lr

0800d65c <__retarget_lock_acquire_recursive>:
 800d65c:	4770      	bx	lr

0800d65e <__retarget_lock_release>:
 800d65e:	4770      	bx	lr

0800d660 <__retarget_lock_release_recursive>:
 800d660:	4770      	bx	lr
	...

0800d664 <_lseek_r>:
 800d664:	b538      	push	{r3, r4, r5, lr}
 800d666:	4d07      	ldr	r5, [pc, #28]	; (800d684 <_lseek_r+0x20>)
 800d668:	4604      	mov	r4, r0
 800d66a:	4608      	mov	r0, r1
 800d66c:	4611      	mov	r1, r2
 800d66e:	2200      	movs	r2, #0
 800d670:	602a      	str	r2, [r5, #0]
 800d672:	461a      	mov	r2, r3
 800d674:	f001 ff38 	bl	800f4e8 <_lseek>
 800d678:	1c43      	adds	r3, r0, #1
 800d67a:	d102      	bne.n	800d682 <_lseek_r+0x1e>
 800d67c:	682b      	ldr	r3, [r5, #0]
 800d67e:	b103      	cbz	r3, 800d682 <_lseek_r+0x1e>
 800d680:	6023      	str	r3, [r4, #0]
 800d682:	bd38      	pop	{r3, r4, r5, pc}
 800d684:	20000360 	.word	0x20000360

0800d688 <__ascii_mbtowc>:
 800d688:	b082      	sub	sp, #8
 800d68a:	b901      	cbnz	r1, 800d68e <__ascii_mbtowc+0x6>
 800d68c:	a901      	add	r1, sp, #4
 800d68e:	b142      	cbz	r2, 800d6a2 <__ascii_mbtowc+0x1a>
 800d690:	b14b      	cbz	r3, 800d6a6 <__ascii_mbtowc+0x1e>
 800d692:	7813      	ldrb	r3, [r2, #0]
 800d694:	600b      	str	r3, [r1, #0]
 800d696:	7812      	ldrb	r2, [r2, #0]
 800d698:	1e10      	subs	r0, r2, #0
 800d69a:	bf18      	it	ne
 800d69c:	2001      	movne	r0, #1
 800d69e:	b002      	add	sp, #8
 800d6a0:	4770      	bx	lr
 800d6a2:	4610      	mov	r0, r2
 800d6a4:	e7fb      	b.n	800d69e <__ascii_mbtowc+0x16>
 800d6a6:	f06f 0001 	mvn.w	r0, #1
 800d6aa:	e7f8      	b.n	800d69e <__ascii_mbtowc+0x16>

0800d6ac <__malloc_lock>:
 800d6ac:	4801      	ldr	r0, [pc, #4]	; (800d6b4 <__malloc_lock+0x8>)
 800d6ae:	f7ff bfd5 	b.w	800d65c <__retarget_lock_acquire_recursive>
 800d6b2:	bf00      	nop
 800d6b4:	20000359 	.word	0x20000359

0800d6b8 <__malloc_unlock>:
 800d6b8:	4801      	ldr	r0, [pc, #4]	; (800d6c0 <__malloc_unlock+0x8>)
 800d6ba:	f7ff bfd1 	b.w	800d660 <__retarget_lock_release_recursive>
 800d6be:	bf00      	nop
 800d6c0:	20000359 	.word	0x20000359

0800d6c4 <_Balloc>:
 800d6c4:	b570      	push	{r4, r5, r6, lr}
 800d6c6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d6c8:	4604      	mov	r4, r0
 800d6ca:	460d      	mov	r5, r1
 800d6cc:	b976      	cbnz	r6, 800d6ec <_Balloc+0x28>
 800d6ce:	2010      	movs	r0, #16
 800d6d0:	f7fb faa4 	bl	8008c1c <malloc>
 800d6d4:	4602      	mov	r2, r0
 800d6d6:	6260      	str	r0, [r4, #36]	; 0x24
 800d6d8:	b920      	cbnz	r0, 800d6e4 <_Balloc+0x20>
 800d6da:	4b18      	ldr	r3, [pc, #96]	; (800d73c <_Balloc+0x78>)
 800d6dc:	4818      	ldr	r0, [pc, #96]	; (800d740 <_Balloc+0x7c>)
 800d6de:	2166      	movs	r1, #102	; 0x66
 800d6e0:	f7fe fc80 	bl	800bfe4 <__assert_func>
 800d6e4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d6e8:	6006      	str	r6, [r0, #0]
 800d6ea:	60c6      	str	r6, [r0, #12]
 800d6ec:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800d6ee:	68f3      	ldr	r3, [r6, #12]
 800d6f0:	b183      	cbz	r3, 800d714 <_Balloc+0x50>
 800d6f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d6f4:	68db      	ldr	r3, [r3, #12]
 800d6f6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d6fa:	b9b8      	cbnz	r0, 800d72c <_Balloc+0x68>
 800d6fc:	2101      	movs	r1, #1
 800d6fe:	fa01 f605 	lsl.w	r6, r1, r5
 800d702:	1d72      	adds	r2, r6, #5
 800d704:	0092      	lsls	r2, r2, #2
 800d706:	4620      	mov	r0, r4
 800d708:	f000 fc9d 	bl	800e046 <_calloc_r>
 800d70c:	b160      	cbz	r0, 800d728 <_Balloc+0x64>
 800d70e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d712:	e00e      	b.n	800d732 <_Balloc+0x6e>
 800d714:	2221      	movs	r2, #33	; 0x21
 800d716:	2104      	movs	r1, #4
 800d718:	4620      	mov	r0, r4
 800d71a:	f000 fc94 	bl	800e046 <_calloc_r>
 800d71e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d720:	60f0      	str	r0, [r6, #12]
 800d722:	68db      	ldr	r3, [r3, #12]
 800d724:	2b00      	cmp	r3, #0
 800d726:	d1e4      	bne.n	800d6f2 <_Balloc+0x2e>
 800d728:	2000      	movs	r0, #0
 800d72a:	bd70      	pop	{r4, r5, r6, pc}
 800d72c:	6802      	ldr	r2, [r0, #0]
 800d72e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d732:	2300      	movs	r3, #0
 800d734:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d738:	e7f7      	b.n	800d72a <_Balloc+0x66>
 800d73a:	bf00      	nop
 800d73c:	0800fbec 	.word	0x0800fbec
 800d740:	08010294 	.word	0x08010294

0800d744 <_Bfree>:
 800d744:	b570      	push	{r4, r5, r6, lr}
 800d746:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d748:	4605      	mov	r5, r0
 800d74a:	460c      	mov	r4, r1
 800d74c:	b976      	cbnz	r6, 800d76c <_Bfree+0x28>
 800d74e:	2010      	movs	r0, #16
 800d750:	f7fb fa64 	bl	8008c1c <malloc>
 800d754:	4602      	mov	r2, r0
 800d756:	6268      	str	r0, [r5, #36]	; 0x24
 800d758:	b920      	cbnz	r0, 800d764 <_Bfree+0x20>
 800d75a:	4b09      	ldr	r3, [pc, #36]	; (800d780 <_Bfree+0x3c>)
 800d75c:	4809      	ldr	r0, [pc, #36]	; (800d784 <_Bfree+0x40>)
 800d75e:	218a      	movs	r1, #138	; 0x8a
 800d760:	f7fe fc40 	bl	800bfe4 <__assert_func>
 800d764:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d768:	6006      	str	r6, [r0, #0]
 800d76a:	60c6      	str	r6, [r0, #12]
 800d76c:	b13c      	cbz	r4, 800d77e <_Bfree+0x3a>
 800d76e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d770:	6862      	ldr	r2, [r4, #4]
 800d772:	68db      	ldr	r3, [r3, #12]
 800d774:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d778:	6021      	str	r1, [r4, #0]
 800d77a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d77e:	bd70      	pop	{r4, r5, r6, pc}
 800d780:	0800fbec 	.word	0x0800fbec
 800d784:	08010294 	.word	0x08010294

0800d788 <__multadd>:
 800d788:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d78c:	690d      	ldr	r5, [r1, #16]
 800d78e:	4607      	mov	r7, r0
 800d790:	460c      	mov	r4, r1
 800d792:	461e      	mov	r6, r3
 800d794:	f101 0c14 	add.w	ip, r1, #20
 800d798:	2000      	movs	r0, #0
 800d79a:	f8dc 3000 	ldr.w	r3, [ip]
 800d79e:	b299      	uxth	r1, r3
 800d7a0:	fb02 6101 	mla	r1, r2, r1, r6
 800d7a4:	0c1e      	lsrs	r6, r3, #16
 800d7a6:	0c0b      	lsrs	r3, r1, #16
 800d7a8:	fb02 3306 	mla	r3, r2, r6, r3
 800d7ac:	b289      	uxth	r1, r1
 800d7ae:	3001      	adds	r0, #1
 800d7b0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800d7b4:	4285      	cmp	r5, r0
 800d7b6:	f84c 1b04 	str.w	r1, [ip], #4
 800d7ba:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800d7be:	dcec      	bgt.n	800d79a <__multadd+0x12>
 800d7c0:	b30e      	cbz	r6, 800d806 <__multadd+0x7e>
 800d7c2:	68a3      	ldr	r3, [r4, #8]
 800d7c4:	42ab      	cmp	r3, r5
 800d7c6:	dc19      	bgt.n	800d7fc <__multadd+0x74>
 800d7c8:	6861      	ldr	r1, [r4, #4]
 800d7ca:	4638      	mov	r0, r7
 800d7cc:	3101      	adds	r1, #1
 800d7ce:	f7ff ff79 	bl	800d6c4 <_Balloc>
 800d7d2:	4680      	mov	r8, r0
 800d7d4:	b928      	cbnz	r0, 800d7e2 <__multadd+0x5a>
 800d7d6:	4602      	mov	r2, r0
 800d7d8:	4b0c      	ldr	r3, [pc, #48]	; (800d80c <__multadd+0x84>)
 800d7da:	480d      	ldr	r0, [pc, #52]	; (800d810 <__multadd+0x88>)
 800d7dc:	21b5      	movs	r1, #181	; 0xb5
 800d7de:	f7fe fc01 	bl	800bfe4 <__assert_func>
 800d7e2:	6922      	ldr	r2, [r4, #16]
 800d7e4:	3202      	adds	r2, #2
 800d7e6:	f104 010c 	add.w	r1, r4, #12
 800d7ea:	0092      	lsls	r2, r2, #2
 800d7ec:	300c      	adds	r0, #12
 800d7ee:	f7fb fa25 	bl	8008c3c <memcpy>
 800d7f2:	4621      	mov	r1, r4
 800d7f4:	4638      	mov	r0, r7
 800d7f6:	f7ff ffa5 	bl	800d744 <_Bfree>
 800d7fa:	4644      	mov	r4, r8
 800d7fc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800d800:	3501      	adds	r5, #1
 800d802:	615e      	str	r6, [r3, #20]
 800d804:	6125      	str	r5, [r4, #16]
 800d806:	4620      	mov	r0, r4
 800d808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d80c:	08010209 	.word	0x08010209
 800d810:	08010294 	.word	0x08010294

0800d814 <__s2b>:
 800d814:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d818:	460c      	mov	r4, r1
 800d81a:	4615      	mov	r5, r2
 800d81c:	461f      	mov	r7, r3
 800d81e:	2209      	movs	r2, #9
 800d820:	3308      	adds	r3, #8
 800d822:	4606      	mov	r6, r0
 800d824:	fb93 f3f2 	sdiv	r3, r3, r2
 800d828:	2100      	movs	r1, #0
 800d82a:	2201      	movs	r2, #1
 800d82c:	429a      	cmp	r2, r3
 800d82e:	db09      	blt.n	800d844 <__s2b+0x30>
 800d830:	4630      	mov	r0, r6
 800d832:	f7ff ff47 	bl	800d6c4 <_Balloc>
 800d836:	b940      	cbnz	r0, 800d84a <__s2b+0x36>
 800d838:	4602      	mov	r2, r0
 800d83a:	4b19      	ldr	r3, [pc, #100]	; (800d8a0 <__s2b+0x8c>)
 800d83c:	4819      	ldr	r0, [pc, #100]	; (800d8a4 <__s2b+0x90>)
 800d83e:	21ce      	movs	r1, #206	; 0xce
 800d840:	f7fe fbd0 	bl	800bfe4 <__assert_func>
 800d844:	0052      	lsls	r2, r2, #1
 800d846:	3101      	adds	r1, #1
 800d848:	e7f0      	b.n	800d82c <__s2b+0x18>
 800d84a:	9b08      	ldr	r3, [sp, #32]
 800d84c:	6143      	str	r3, [r0, #20]
 800d84e:	2d09      	cmp	r5, #9
 800d850:	f04f 0301 	mov.w	r3, #1
 800d854:	6103      	str	r3, [r0, #16]
 800d856:	dd16      	ble.n	800d886 <__s2b+0x72>
 800d858:	f104 0909 	add.w	r9, r4, #9
 800d85c:	46c8      	mov	r8, r9
 800d85e:	442c      	add	r4, r5
 800d860:	f818 3b01 	ldrb.w	r3, [r8], #1
 800d864:	4601      	mov	r1, r0
 800d866:	3b30      	subs	r3, #48	; 0x30
 800d868:	220a      	movs	r2, #10
 800d86a:	4630      	mov	r0, r6
 800d86c:	f7ff ff8c 	bl	800d788 <__multadd>
 800d870:	45a0      	cmp	r8, r4
 800d872:	d1f5      	bne.n	800d860 <__s2b+0x4c>
 800d874:	f1a5 0408 	sub.w	r4, r5, #8
 800d878:	444c      	add	r4, r9
 800d87a:	1b2d      	subs	r5, r5, r4
 800d87c:	1963      	adds	r3, r4, r5
 800d87e:	42bb      	cmp	r3, r7
 800d880:	db04      	blt.n	800d88c <__s2b+0x78>
 800d882:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d886:	340a      	adds	r4, #10
 800d888:	2509      	movs	r5, #9
 800d88a:	e7f6      	b.n	800d87a <__s2b+0x66>
 800d88c:	f814 3b01 	ldrb.w	r3, [r4], #1
 800d890:	4601      	mov	r1, r0
 800d892:	3b30      	subs	r3, #48	; 0x30
 800d894:	220a      	movs	r2, #10
 800d896:	4630      	mov	r0, r6
 800d898:	f7ff ff76 	bl	800d788 <__multadd>
 800d89c:	e7ee      	b.n	800d87c <__s2b+0x68>
 800d89e:	bf00      	nop
 800d8a0:	08010209 	.word	0x08010209
 800d8a4:	08010294 	.word	0x08010294

0800d8a8 <__hi0bits>:
 800d8a8:	0c03      	lsrs	r3, r0, #16
 800d8aa:	041b      	lsls	r3, r3, #16
 800d8ac:	b9d3      	cbnz	r3, 800d8e4 <__hi0bits+0x3c>
 800d8ae:	0400      	lsls	r0, r0, #16
 800d8b0:	2310      	movs	r3, #16
 800d8b2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800d8b6:	bf04      	itt	eq
 800d8b8:	0200      	lsleq	r0, r0, #8
 800d8ba:	3308      	addeq	r3, #8
 800d8bc:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800d8c0:	bf04      	itt	eq
 800d8c2:	0100      	lsleq	r0, r0, #4
 800d8c4:	3304      	addeq	r3, #4
 800d8c6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800d8ca:	bf04      	itt	eq
 800d8cc:	0080      	lsleq	r0, r0, #2
 800d8ce:	3302      	addeq	r3, #2
 800d8d0:	2800      	cmp	r0, #0
 800d8d2:	db05      	blt.n	800d8e0 <__hi0bits+0x38>
 800d8d4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800d8d8:	f103 0301 	add.w	r3, r3, #1
 800d8dc:	bf08      	it	eq
 800d8de:	2320      	moveq	r3, #32
 800d8e0:	4618      	mov	r0, r3
 800d8e2:	4770      	bx	lr
 800d8e4:	2300      	movs	r3, #0
 800d8e6:	e7e4      	b.n	800d8b2 <__hi0bits+0xa>

0800d8e8 <__lo0bits>:
 800d8e8:	6803      	ldr	r3, [r0, #0]
 800d8ea:	f013 0207 	ands.w	r2, r3, #7
 800d8ee:	4601      	mov	r1, r0
 800d8f0:	d00b      	beq.n	800d90a <__lo0bits+0x22>
 800d8f2:	07da      	lsls	r2, r3, #31
 800d8f4:	d423      	bmi.n	800d93e <__lo0bits+0x56>
 800d8f6:	0798      	lsls	r0, r3, #30
 800d8f8:	bf49      	itett	mi
 800d8fa:	085b      	lsrmi	r3, r3, #1
 800d8fc:	089b      	lsrpl	r3, r3, #2
 800d8fe:	2001      	movmi	r0, #1
 800d900:	600b      	strmi	r3, [r1, #0]
 800d902:	bf5c      	itt	pl
 800d904:	600b      	strpl	r3, [r1, #0]
 800d906:	2002      	movpl	r0, #2
 800d908:	4770      	bx	lr
 800d90a:	b298      	uxth	r0, r3
 800d90c:	b9a8      	cbnz	r0, 800d93a <__lo0bits+0x52>
 800d90e:	0c1b      	lsrs	r3, r3, #16
 800d910:	2010      	movs	r0, #16
 800d912:	b2da      	uxtb	r2, r3
 800d914:	b90a      	cbnz	r2, 800d91a <__lo0bits+0x32>
 800d916:	3008      	adds	r0, #8
 800d918:	0a1b      	lsrs	r3, r3, #8
 800d91a:	071a      	lsls	r2, r3, #28
 800d91c:	bf04      	itt	eq
 800d91e:	091b      	lsreq	r3, r3, #4
 800d920:	3004      	addeq	r0, #4
 800d922:	079a      	lsls	r2, r3, #30
 800d924:	bf04      	itt	eq
 800d926:	089b      	lsreq	r3, r3, #2
 800d928:	3002      	addeq	r0, #2
 800d92a:	07da      	lsls	r2, r3, #31
 800d92c:	d403      	bmi.n	800d936 <__lo0bits+0x4e>
 800d92e:	085b      	lsrs	r3, r3, #1
 800d930:	f100 0001 	add.w	r0, r0, #1
 800d934:	d005      	beq.n	800d942 <__lo0bits+0x5a>
 800d936:	600b      	str	r3, [r1, #0]
 800d938:	4770      	bx	lr
 800d93a:	4610      	mov	r0, r2
 800d93c:	e7e9      	b.n	800d912 <__lo0bits+0x2a>
 800d93e:	2000      	movs	r0, #0
 800d940:	4770      	bx	lr
 800d942:	2020      	movs	r0, #32
 800d944:	4770      	bx	lr
	...

0800d948 <__i2b>:
 800d948:	b510      	push	{r4, lr}
 800d94a:	460c      	mov	r4, r1
 800d94c:	2101      	movs	r1, #1
 800d94e:	f7ff feb9 	bl	800d6c4 <_Balloc>
 800d952:	4602      	mov	r2, r0
 800d954:	b928      	cbnz	r0, 800d962 <__i2b+0x1a>
 800d956:	4b05      	ldr	r3, [pc, #20]	; (800d96c <__i2b+0x24>)
 800d958:	4805      	ldr	r0, [pc, #20]	; (800d970 <__i2b+0x28>)
 800d95a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800d95e:	f7fe fb41 	bl	800bfe4 <__assert_func>
 800d962:	2301      	movs	r3, #1
 800d964:	6144      	str	r4, [r0, #20]
 800d966:	6103      	str	r3, [r0, #16]
 800d968:	bd10      	pop	{r4, pc}
 800d96a:	bf00      	nop
 800d96c:	08010209 	.word	0x08010209
 800d970:	08010294 	.word	0x08010294

0800d974 <__multiply>:
 800d974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d978:	4691      	mov	r9, r2
 800d97a:	690a      	ldr	r2, [r1, #16]
 800d97c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800d980:	429a      	cmp	r2, r3
 800d982:	bfb8      	it	lt
 800d984:	460b      	movlt	r3, r1
 800d986:	460c      	mov	r4, r1
 800d988:	bfbc      	itt	lt
 800d98a:	464c      	movlt	r4, r9
 800d98c:	4699      	movlt	r9, r3
 800d98e:	6927      	ldr	r7, [r4, #16]
 800d990:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800d994:	68a3      	ldr	r3, [r4, #8]
 800d996:	6861      	ldr	r1, [r4, #4]
 800d998:	eb07 060a 	add.w	r6, r7, sl
 800d99c:	42b3      	cmp	r3, r6
 800d99e:	b085      	sub	sp, #20
 800d9a0:	bfb8      	it	lt
 800d9a2:	3101      	addlt	r1, #1
 800d9a4:	f7ff fe8e 	bl	800d6c4 <_Balloc>
 800d9a8:	b930      	cbnz	r0, 800d9b8 <__multiply+0x44>
 800d9aa:	4602      	mov	r2, r0
 800d9ac:	4b44      	ldr	r3, [pc, #272]	; (800dac0 <__multiply+0x14c>)
 800d9ae:	4845      	ldr	r0, [pc, #276]	; (800dac4 <__multiply+0x150>)
 800d9b0:	f240 115d 	movw	r1, #349	; 0x15d
 800d9b4:	f7fe fb16 	bl	800bfe4 <__assert_func>
 800d9b8:	f100 0514 	add.w	r5, r0, #20
 800d9bc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800d9c0:	462b      	mov	r3, r5
 800d9c2:	2200      	movs	r2, #0
 800d9c4:	4543      	cmp	r3, r8
 800d9c6:	d321      	bcc.n	800da0c <__multiply+0x98>
 800d9c8:	f104 0314 	add.w	r3, r4, #20
 800d9cc:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800d9d0:	f109 0314 	add.w	r3, r9, #20
 800d9d4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800d9d8:	9202      	str	r2, [sp, #8]
 800d9da:	1b3a      	subs	r2, r7, r4
 800d9dc:	3a15      	subs	r2, #21
 800d9de:	f022 0203 	bic.w	r2, r2, #3
 800d9e2:	3204      	adds	r2, #4
 800d9e4:	f104 0115 	add.w	r1, r4, #21
 800d9e8:	428f      	cmp	r7, r1
 800d9ea:	bf38      	it	cc
 800d9ec:	2204      	movcc	r2, #4
 800d9ee:	9201      	str	r2, [sp, #4]
 800d9f0:	9a02      	ldr	r2, [sp, #8]
 800d9f2:	9303      	str	r3, [sp, #12]
 800d9f4:	429a      	cmp	r2, r3
 800d9f6:	d80c      	bhi.n	800da12 <__multiply+0x9e>
 800d9f8:	2e00      	cmp	r6, #0
 800d9fa:	dd03      	ble.n	800da04 <__multiply+0x90>
 800d9fc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800da00:	2b00      	cmp	r3, #0
 800da02:	d05a      	beq.n	800daba <__multiply+0x146>
 800da04:	6106      	str	r6, [r0, #16]
 800da06:	b005      	add	sp, #20
 800da08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da0c:	f843 2b04 	str.w	r2, [r3], #4
 800da10:	e7d8      	b.n	800d9c4 <__multiply+0x50>
 800da12:	f8b3 a000 	ldrh.w	sl, [r3]
 800da16:	f1ba 0f00 	cmp.w	sl, #0
 800da1a:	d024      	beq.n	800da66 <__multiply+0xf2>
 800da1c:	f104 0e14 	add.w	lr, r4, #20
 800da20:	46a9      	mov	r9, r5
 800da22:	f04f 0c00 	mov.w	ip, #0
 800da26:	f85e 2b04 	ldr.w	r2, [lr], #4
 800da2a:	f8d9 1000 	ldr.w	r1, [r9]
 800da2e:	fa1f fb82 	uxth.w	fp, r2
 800da32:	b289      	uxth	r1, r1
 800da34:	fb0a 110b 	mla	r1, sl, fp, r1
 800da38:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800da3c:	f8d9 2000 	ldr.w	r2, [r9]
 800da40:	4461      	add	r1, ip
 800da42:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800da46:	fb0a c20b 	mla	r2, sl, fp, ip
 800da4a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800da4e:	b289      	uxth	r1, r1
 800da50:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800da54:	4577      	cmp	r7, lr
 800da56:	f849 1b04 	str.w	r1, [r9], #4
 800da5a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800da5e:	d8e2      	bhi.n	800da26 <__multiply+0xb2>
 800da60:	9a01      	ldr	r2, [sp, #4]
 800da62:	f845 c002 	str.w	ip, [r5, r2]
 800da66:	9a03      	ldr	r2, [sp, #12]
 800da68:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800da6c:	3304      	adds	r3, #4
 800da6e:	f1b9 0f00 	cmp.w	r9, #0
 800da72:	d020      	beq.n	800dab6 <__multiply+0x142>
 800da74:	6829      	ldr	r1, [r5, #0]
 800da76:	f104 0c14 	add.w	ip, r4, #20
 800da7a:	46ae      	mov	lr, r5
 800da7c:	f04f 0a00 	mov.w	sl, #0
 800da80:	f8bc b000 	ldrh.w	fp, [ip]
 800da84:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800da88:	fb09 220b 	mla	r2, r9, fp, r2
 800da8c:	4492      	add	sl, r2
 800da8e:	b289      	uxth	r1, r1
 800da90:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800da94:	f84e 1b04 	str.w	r1, [lr], #4
 800da98:	f85c 2b04 	ldr.w	r2, [ip], #4
 800da9c:	f8be 1000 	ldrh.w	r1, [lr]
 800daa0:	0c12      	lsrs	r2, r2, #16
 800daa2:	fb09 1102 	mla	r1, r9, r2, r1
 800daa6:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800daaa:	4567      	cmp	r7, ip
 800daac:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800dab0:	d8e6      	bhi.n	800da80 <__multiply+0x10c>
 800dab2:	9a01      	ldr	r2, [sp, #4]
 800dab4:	50a9      	str	r1, [r5, r2]
 800dab6:	3504      	adds	r5, #4
 800dab8:	e79a      	b.n	800d9f0 <__multiply+0x7c>
 800daba:	3e01      	subs	r6, #1
 800dabc:	e79c      	b.n	800d9f8 <__multiply+0x84>
 800dabe:	bf00      	nop
 800dac0:	08010209 	.word	0x08010209
 800dac4:	08010294 	.word	0x08010294

0800dac8 <__pow5mult>:
 800dac8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dacc:	4615      	mov	r5, r2
 800dace:	f012 0203 	ands.w	r2, r2, #3
 800dad2:	4606      	mov	r6, r0
 800dad4:	460f      	mov	r7, r1
 800dad6:	d007      	beq.n	800dae8 <__pow5mult+0x20>
 800dad8:	4c25      	ldr	r4, [pc, #148]	; (800db70 <__pow5mult+0xa8>)
 800dada:	3a01      	subs	r2, #1
 800dadc:	2300      	movs	r3, #0
 800dade:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800dae2:	f7ff fe51 	bl	800d788 <__multadd>
 800dae6:	4607      	mov	r7, r0
 800dae8:	10ad      	asrs	r5, r5, #2
 800daea:	d03d      	beq.n	800db68 <__pow5mult+0xa0>
 800daec:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800daee:	b97c      	cbnz	r4, 800db10 <__pow5mult+0x48>
 800daf0:	2010      	movs	r0, #16
 800daf2:	f7fb f893 	bl	8008c1c <malloc>
 800daf6:	4602      	mov	r2, r0
 800daf8:	6270      	str	r0, [r6, #36]	; 0x24
 800dafa:	b928      	cbnz	r0, 800db08 <__pow5mult+0x40>
 800dafc:	4b1d      	ldr	r3, [pc, #116]	; (800db74 <__pow5mult+0xac>)
 800dafe:	481e      	ldr	r0, [pc, #120]	; (800db78 <__pow5mult+0xb0>)
 800db00:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800db04:	f7fe fa6e 	bl	800bfe4 <__assert_func>
 800db08:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800db0c:	6004      	str	r4, [r0, #0]
 800db0e:	60c4      	str	r4, [r0, #12]
 800db10:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800db14:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800db18:	b94c      	cbnz	r4, 800db2e <__pow5mult+0x66>
 800db1a:	f240 2171 	movw	r1, #625	; 0x271
 800db1e:	4630      	mov	r0, r6
 800db20:	f7ff ff12 	bl	800d948 <__i2b>
 800db24:	2300      	movs	r3, #0
 800db26:	f8c8 0008 	str.w	r0, [r8, #8]
 800db2a:	4604      	mov	r4, r0
 800db2c:	6003      	str	r3, [r0, #0]
 800db2e:	f04f 0900 	mov.w	r9, #0
 800db32:	07eb      	lsls	r3, r5, #31
 800db34:	d50a      	bpl.n	800db4c <__pow5mult+0x84>
 800db36:	4639      	mov	r1, r7
 800db38:	4622      	mov	r2, r4
 800db3a:	4630      	mov	r0, r6
 800db3c:	f7ff ff1a 	bl	800d974 <__multiply>
 800db40:	4639      	mov	r1, r7
 800db42:	4680      	mov	r8, r0
 800db44:	4630      	mov	r0, r6
 800db46:	f7ff fdfd 	bl	800d744 <_Bfree>
 800db4a:	4647      	mov	r7, r8
 800db4c:	106d      	asrs	r5, r5, #1
 800db4e:	d00b      	beq.n	800db68 <__pow5mult+0xa0>
 800db50:	6820      	ldr	r0, [r4, #0]
 800db52:	b938      	cbnz	r0, 800db64 <__pow5mult+0x9c>
 800db54:	4622      	mov	r2, r4
 800db56:	4621      	mov	r1, r4
 800db58:	4630      	mov	r0, r6
 800db5a:	f7ff ff0b 	bl	800d974 <__multiply>
 800db5e:	6020      	str	r0, [r4, #0]
 800db60:	f8c0 9000 	str.w	r9, [r0]
 800db64:	4604      	mov	r4, r0
 800db66:	e7e4      	b.n	800db32 <__pow5mult+0x6a>
 800db68:	4638      	mov	r0, r7
 800db6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800db6e:	bf00      	nop
 800db70:	080103e0 	.word	0x080103e0
 800db74:	0800fbec 	.word	0x0800fbec
 800db78:	08010294 	.word	0x08010294

0800db7c <__lshift>:
 800db7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db80:	460c      	mov	r4, r1
 800db82:	6849      	ldr	r1, [r1, #4]
 800db84:	6923      	ldr	r3, [r4, #16]
 800db86:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800db8a:	68a3      	ldr	r3, [r4, #8]
 800db8c:	4607      	mov	r7, r0
 800db8e:	4691      	mov	r9, r2
 800db90:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800db94:	f108 0601 	add.w	r6, r8, #1
 800db98:	42b3      	cmp	r3, r6
 800db9a:	db0b      	blt.n	800dbb4 <__lshift+0x38>
 800db9c:	4638      	mov	r0, r7
 800db9e:	f7ff fd91 	bl	800d6c4 <_Balloc>
 800dba2:	4605      	mov	r5, r0
 800dba4:	b948      	cbnz	r0, 800dbba <__lshift+0x3e>
 800dba6:	4602      	mov	r2, r0
 800dba8:	4b2a      	ldr	r3, [pc, #168]	; (800dc54 <__lshift+0xd8>)
 800dbaa:	482b      	ldr	r0, [pc, #172]	; (800dc58 <__lshift+0xdc>)
 800dbac:	f240 11d9 	movw	r1, #473	; 0x1d9
 800dbb0:	f7fe fa18 	bl	800bfe4 <__assert_func>
 800dbb4:	3101      	adds	r1, #1
 800dbb6:	005b      	lsls	r3, r3, #1
 800dbb8:	e7ee      	b.n	800db98 <__lshift+0x1c>
 800dbba:	2300      	movs	r3, #0
 800dbbc:	f100 0114 	add.w	r1, r0, #20
 800dbc0:	f100 0210 	add.w	r2, r0, #16
 800dbc4:	4618      	mov	r0, r3
 800dbc6:	4553      	cmp	r3, sl
 800dbc8:	db37      	blt.n	800dc3a <__lshift+0xbe>
 800dbca:	6920      	ldr	r0, [r4, #16]
 800dbcc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800dbd0:	f104 0314 	add.w	r3, r4, #20
 800dbd4:	f019 091f 	ands.w	r9, r9, #31
 800dbd8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800dbdc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800dbe0:	d02f      	beq.n	800dc42 <__lshift+0xc6>
 800dbe2:	f1c9 0e20 	rsb	lr, r9, #32
 800dbe6:	468a      	mov	sl, r1
 800dbe8:	f04f 0c00 	mov.w	ip, #0
 800dbec:	681a      	ldr	r2, [r3, #0]
 800dbee:	fa02 f209 	lsl.w	r2, r2, r9
 800dbf2:	ea42 020c 	orr.w	r2, r2, ip
 800dbf6:	f84a 2b04 	str.w	r2, [sl], #4
 800dbfa:	f853 2b04 	ldr.w	r2, [r3], #4
 800dbfe:	4298      	cmp	r0, r3
 800dc00:	fa22 fc0e 	lsr.w	ip, r2, lr
 800dc04:	d8f2      	bhi.n	800dbec <__lshift+0x70>
 800dc06:	1b03      	subs	r3, r0, r4
 800dc08:	3b15      	subs	r3, #21
 800dc0a:	f023 0303 	bic.w	r3, r3, #3
 800dc0e:	3304      	adds	r3, #4
 800dc10:	f104 0215 	add.w	r2, r4, #21
 800dc14:	4290      	cmp	r0, r2
 800dc16:	bf38      	it	cc
 800dc18:	2304      	movcc	r3, #4
 800dc1a:	f841 c003 	str.w	ip, [r1, r3]
 800dc1e:	f1bc 0f00 	cmp.w	ip, #0
 800dc22:	d001      	beq.n	800dc28 <__lshift+0xac>
 800dc24:	f108 0602 	add.w	r6, r8, #2
 800dc28:	3e01      	subs	r6, #1
 800dc2a:	4638      	mov	r0, r7
 800dc2c:	612e      	str	r6, [r5, #16]
 800dc2e:	4621      	mov	r1, r4
 800dc30:	f7ff fd88 	bl	800d744 <_Bfree>
 800dc34:	4628      	mov	r0, r5
 800dc36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dc3a:	f842 0f04 	str.w	r0, [r2, #4]!
 800dc3e:	3301      	adds	r3, #1
 800dc40:	e7c1      	b.n	800dbc6 <__lshift+0x4a>
 800dc42:	3904      	subs	r1, #4
 800dc44:	f853 2b04 	ldr.w	r2, [r3], #4
 800dc48:	f841 2f04 	str.w	r2, [r1, #4]!
 800dc4c:	4298      	cmp	r0, r3
 800dc4e:	d8f9      	bhi.n	800dc44 <__lshift+0xc8>
 800dc50:	e7ea      	b.n	800dc28 <__lshift+0xac>
 800dc52:	bf00      	nop
 800dc54:	08010209 	.word	0x08010209
 800dc58:	08010294 	.word	0x08010294

0800dc5c <__mcmp>:
 800dc5c:	b530      	push	{r4, r5, lr}
 800dc5e:	6902      	ldr	r2, [r0, #16]
 800dc60:	690c      	ldr	r4, [r1, #16]
 800dc62:	1b12      	subs	r2, r2, r4
 800dc64:	d10e      	bne.n	800dc84 <__mcmp+0x28>
 800dc66:	f100 0314 	add.w	r3, r0, #20
 800dc6a:	3114      	adds	r1, #20
 800dc6c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800dc70:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800dc74:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800dc78:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800dc7c:	42a5      	cmp	r5, r4
 800dc7e:	d003      	beq.n	800dc88 <__mcmp+0x2c>
 800dc80:	d305      	bcc.n	800dc8e <__mcmp+0x32>
 800dc82:	2201      	movs	r2, #1
 800dc84:	4610      	mov	r0, r2
 800dc86:	bd30      	pop	{r4, r5, pc}
 800dc88:	4283      	cmp	r3, r0
 800dc8a:	d3f3      	bcc.n	800dc74 <__mcmp+0x18>
 800dc8c:	e7fa      	b.n	800dc84 <__mcmp+0x28>
 800dc8e:	f04f 32ff 	mov.w	r2, #4294967295
 800dc92:	e7f7      	b.n	800dc84 <__mcmp+0x28>

0800dc94 <__mdiff>:
 800dc94:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc98:	460c      	mov	r4, r1
 800dc9a:	4606      	mov	r6, r0
 800dc9c:	4611      	mov	r1, r2
 800dc9e:	4620      	mov	r0, r4
 800dca0:	4690      	mov	r8, r2
 800dca2:	f7ff ffdb 	bl	800dc5c <__mcmp>
 800dca6:	1e05      	subs	r5, r0, #0
 800dca8:	d110      	bne.n	800dccc <__mdiff+0x38>
 800dcaa:	4629      	mov	r1, r5
 800dcac:	4630      	mov	r0, r6
 800dcae:	f7ff fd09 	bl	800d6c4 <_Balloc>
 800dcb2:	b930      	cbnz	r0, 800dcc2 <__mdiff+0x2e>
 800dcb4:	4b3a      	ldr	r3, [pc, #232]	; (800dda0 <__mdiff+0x10c>)
 800dcb6:	4602      	mov	r2, r0
 800dcb8:	f240 2132 	movw	r1, #562	; 0x232
 800dcbc:	4839      	ldr	r0, [pc, #228]	; (800dda4 <__mdiff+0x110>)
 800dcbe:	f7fe f991 	bl	800bfe4 <__assert_func>
 800dcc2:	2301      	movs	r3, #1
 800dcc4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800dcc8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dccc:	bfa4      	itt	ge
 800dcce:	4643      	movge	r3, r8
 800dcd0:	46a0      	movge	r8, r4
 800dcd2:	4630      	mov	r0, r6
 800dcd4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800dcd8:	bfa6      	itte	ge
 800dcda:	461c      	movge	r4, r3
 800dcdc:	2500      	movge	r5, #0
 800dcde:	2501      	movlt	r5, #1
 800dce0:	f7ff fcf0 	bl	800d6c4 <_Balloc>
 800dce4:	b920      	cbnz	r0, 800dcf0 <__mdiff+0x5c>
 800dce6:	4b2e      	ldr	r3, [pc, #184]	; (800dda0 <__mdiff+0x10c>)
 800dce8:	4602      	mov	r2, r0
 800dcea:	f44f 7110 	mov.w	r1, #576	; 0x240
 800dcee:	e7e5      	b.n	800dcbc <__mdiff+0x28>
 800dcf0:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800dcf4:	6926      	ldr	r6, [r4, #16]
 800dcf6:	60c5      	str	r5, [r0, #12]
 800dcf8:	f104 0914 	add.w	r9, r4, #20
 800dcfc:	f108 0514 	add.w	r5, r8, #20
 800dd00:	f100 0e14 	add.w	lr, r0, #20
 800dd04:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800dd08:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800dd0c:	f108 0210 	add.w	r2, r8, #16
 800dd10:	46f2      	mov	sl, lr
 800dd12:	2100      	movs	r1, #0
 800dd14:	f859 3b04 	ldr.w	r3, [r9], #4
 800dd18:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800dd1c:	fa1f f883 	uxth.w	r8, r3
 800dd20:	fa11 f18b 	uxtah	r1, r1, fp
 800dd24:	0c1b      	lsrs	r3, r3, #16
 800dd26:	eba1 0808 	sub.w	r8, r1, r8
 800dd2a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800dd2e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800dd32:	fa1f f888 	uxth.w	r8, r8
 800dd36:	1419      	asrs	r1, r3, #16
 800dd38:	454e      	cmp	r6, r9
 800dd3a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800dd3e:	f84a 3b04 	str.w	r3, [sl], #4
 800dd42:	d8e7      	bhi.n	800dd14 <__mdiff+0x80>
 800dd44:	1b33      	subs	r3, r6, r4
 800dd46:	3b15      	subs	r3, #21
 800dd48:	f023 0303 	bic.w	r3, r3, #3
 800dd4c:	3304      	adds	r3, #4
 800dd4e:	3415      	adds	r4, #21
 800dd50:	42a6      	cmp	r6, r4
 800dd52:	bf38      	it	cc
 800dd54:	2304      	movcc	r3, #4
 800dd56:	441d      	add	r5, r3
 800dd58:	4473      	add	r3, lr
 800dd5a:	469e      	mov	lr, r3
 800dd5c:	462e      	mov	r6, r5
 800dd5e:	4566      	cmp	r6, ip
 800dd60:	d30e      	bcc.n	800dd80 <__mdiff+0xec>
 800dd62:	f10c 0203 	add.w	r2, ip, #3
 800dd66:	1b52      	subs	r2, r2, r5
 800dd68:	f022 0203 	bic.w	r2, r2, #3
 800dd6c:	3d03      	subs	r5, #3
 800dd6e:	45ac      	cmp	ip, r5
 800dd70:	bf38      	it	cc
 800dd72:	2200      	movcc	r2, #0
 800dd74:	441a      	add	r2, r3
 800dd76:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800dd7a:	b17b      	cbz	r3, 800dd9c <__mdiff+0x108>
 800dd7c:	6107      	str	r7, [r0, #16]
 800dd7e:	e7a3      	b.n	800dcc8 <__mdiff+0x34>
 800dd80:	f856 8b04 	ldr.w	r8, [r6], #4
 800dd84:	fa11 f288 	uxtah	r2, r1, r8
 800dd88:	1414      	asrs	r4, r2, #16
 800dd8a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800dd8e:	b292      	uxth	r2, r2
 800dd90:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800dd94:	f84e 2b04 	str.w	r2, [lr], #4
 800dd98:	1421      	asrs	r1, r4, #16
 800dd9a:	e7e0      	b.n	800dd5e <__mdiff+0xca>
 800dd9c:	3f01      	subs	r7, #1
 800dd9e:	e7ea      	b.n	800dd76 <__mdiff+0xe2>
 800dda0:	08010209 	.word	0x08010209
 800dda4:	08010294 	.word	0x08010294

0800dda8 <__ulp>:
 800dda8:	b082      	sub	sp, #8
 800ddaa:	ed8d 0b00 	vstr	d0, [sp]
 800ddae:	9b01      	ldr	r3, [sp, #4]
 800ddb0:	4912      	ldr	r1, [pc, #72]	; (800ddfc <__ulp+0x54>)
 800ddb2:	4019      	ands	r1, r3
 800ddb4:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800ddb8:	2900      	cmp	r1, #0
 800ddba:	dd05      	ble.n	800ddc8 <__ulp+0x20>
 800ddbc:	2200      	movs	r2, #0
 800ddbe:	460b      	mov	r3, r1
 800ddc0:	ec43 2b10 	vmov	d0, r2, r3
 800ddc4:	b002      	add	sp, #8
 800ddc6:	4770      	bx	lr
 800ddc8:	4249      	negs	r1, r1
 800ddca:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 800ddce:	ea4f 5021 	mov.w	r0, r1, asr #20
 800ddd2:	f04f 0200 	mov.w	r2, #0
 800ddd6:	f04f 0300 	mov.w	r3, #0
 800ddda:	da04      	bge.n	800dde6 <__ulp+0x3e>
 800dddc:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800dde0:	fa41 f300 	asr.w	r3, r1, r0
 800dde4:	e7ec      	b.n	800ddc0 <__ulp+0x18>
 800dde6:	f1a0 0114 	sub.w	r1, r0, #20
 800ddea:	291e      	cmp	r1, #30
 800ddec:	bfda      	itte	le
 800ddee:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800ddf2:	fa20 f101 	lsrle.w	r1, r0, r1
 800ddf6:	2101      	movgt	r1, #1
 800ddf8:	460a      	mov	r2, r1
 800ddfa:	e7e1      	b.n	800ddc0 <__ulp+0x18>
 800ddfc:	7ff00000 	.word	0x7ff00000

0800de00 <__b2d>:
 800de00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de02:	6905      	ldr	r5, [r0, #16]
 800de04:	f100 0714 	add.w	r7, r0, #20
 800de08:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800de0c:	1f2e      	subs	r6, r5, #4
 800de0e:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800de12:	4620      	mov	r0, r4
 800de14:	f7ff fd48 	bl	800d8a8 <__hi0bits>
 800de18:	f1c0 0320 	rsb	r3, r0, #32
 800de1c:	280a      	cmp	r0, #10
 800de1e:	f8df c07c 	ldr.w	ip, [pc, #124]	; 800de9c <__b2d+0x9c>
 800de22:	600b      	str	r3, [r1, #0]
 800de24:	dc14      	bgt.n	800de50 <__b2d+0x50>
 800de26:	f1c0 0e0b 	rsb	lr, r0, #11
 800de2a:	fa24 f10e 	lsr.w	r1, r4, lr
 800de2e:	42b7      	cmp	r7, r6
 800de30:	ea41 030c 	orr.w	r3, r1, ip
 800de34:	bf34      	ite	cc
 800de36:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800de3a:	2100      	movcs	r1, #0
 800de3c:	3015      	adds	r0, #21
 800de3e:	fa04 f000 	lsl.w	r0, r4, r0
 800de42:	fa21 f10e 	lsr.w	r1, r1, lr
 800de46:	ea40 0201 	orr.w	r2, r0, r1
 800de4a:	ec43 2b10 	vmov	d0, r2, r3
 800de4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800de50:	42b7      	cmp	r7, r6
 800de52:	bf3a      	itte	cc
 800de54:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800de58:	f1a5 0608 	subcc.w	r6, r5, #8
 800de5c:	2100      	movcs	r1, #0
 800de5e:	380b      	subs	r0, #11
 800de60:	d017      	beq.n	800de92 <__b2d+0x92>
 800de62:	f1c0 0c20 	rsb	ip, r0, #32
 800de66:	fa04 f500 	lsl.w	r5, r4, r0
 800de6a:	42be      	cmp	r6, r7
 800de6c:	fa21 f40c 	lsr.w	r4, r1, ip
 800de70:	ea45 0504 	orr.w	r5, r5, r4
 800de74:	bf8c      	ite	hi
 800de76:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800de7a:	2400      	movls	r4, #0
 800de7c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 800de80:	fa01 f000 	lsl.w	r0, r1, r0
 800de84:	fa24 f40c 	lsr.w	r4, r4, ip
 800de88:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800de8c:	ea40 0204 	orr.w	r2, r0, r4
 800de90:	e7db      	b.n	800de4a <__b2d+0x4a>
 800de92:	ea44 030c 	orr.w	r3, r4, ip
 800de96:	460a      	mov	r2, r1
 800de98:	e7d7      	b.n	800de4a <__b2d+0x4a>
 800de9a:	bf00      	nop
 800de9c:	3ff00000 	.word	0x3ff00000

0800dea0 <__d2b>:
 800dea0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dea4:	4689      	mov	r9, r1
 800dea6:	2101      	movs	r1, #1
 800dea8:	ec57 6b10 	vmov	r6, r7, d0
 800deac:	4690      	mov	r8, r2
 800deae:	f7ff fc09 	bl	800d6c4 <_Balloc>
 800deb2:	4604      	mov	r4, r0
 800deb4:	b930      	cbnz	r0, 800dec4 <__d2b+0x24>
 800deb6:	4602      	mov	r2, r0
 800deb8:	4b25      	ldr	r3, [pc, #148]	; (800df50 <__d2b+0xb0>)
 800deba:	4826      	ldr	r0, [pc, #152]	; (800df54 <__d2b+0xb4>)
 800debc:	f240 310a 	movw	r1, #778	; 0x30a
 800dec0:	f7fe f890 	bl	800bfe4 <__assert_func>
 800dec4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800dec8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800decc:	bb35      	cbnz	r5, 800df1c <__d2b+0x7c>
 800dece:	2e00      	cmp	r6, #0
 800ded0:	9301      	str	r3, [sp, #4]
 800ded2:	d028      	beq.n	800df26 <__d2b+0x86>
 800ded4:	4668      	mov	r0, sp
 800ded6:	9600      	str	r6, [sp, #0]
 800ded8:	f7ff fd06 	bl	800d8e8 <__lo0bits>
 800dedc:	9900      	ldr	r1, [sp, #0]
 800dede:	b300      	cbz	r0, 800df22 <__d2b+0x82>
 800dee0:	9a01      	ldr	r2, [sp, #4]
 800dee2:	f1c0 0320 	rsb	r3, r0, #32
 800dee6:	fa02 f303 	lsl.w	r3, r2, r3
 800deea:	430b      	orrs	r3, r1
 800deec:	40c2      	lsrs	r2, r0
 800deee:	6163      	str	r3, [r4, #20]
 800def0:	9201      	str	r2, [sp, #4]
 800def2:	9b01      	ldr	r3, [sp, #4]
 800def4:	61a3      	str	r3, [r4, #24]
 800def6:	2b00      	cmp	r3, #0
 800def8:	bf14      	ite	ne
 800defa:	2202      	movne	r2, #2
 800defc:	2201      	moveq	r2, #1
 800defe:	6122      	str	r2, [r4, #16]
 800df00:	b1d5      	cbz	r5, 800df38 <__d2b+0x98>
 800df02:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800df06:	4405      	add	r5, r0
 800df08:	f8c9 5000 	str.w	r5, [r9]
 800df0c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800df10:	f8c8 0000 	str.w	r0, [r8]
 800df14:	4620      	mov	r0, r4
 800df16:	b003      	add	sp, #12
 800df18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df1c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800df20:	e7d5      	b.n	800dece <__d2b+0x2e>
 800df22:	6161      	str	r1, [r4, #20]
 800df24:	e7e5      	b.n	800def2 <__d2b+0x52>
 800df26:	a801      	add	r0, sp, #4
 800df28:	f7ff fcde 	bl	800d8e8 <__lo0bits>
 800df2c:	9b01      	ldr	r3, [sp, #4]
 800df2e:	6163      	str	r3, [r4, #20]
 800df30:	2201      	movs	r2, #1
 800df32:	6122      	str	r2, [r4, #16]
 800df34:	3020      	adds	r0, #32
 800df36:	e7e3      	b.n	800df00 <__d2b+0x60>
 800df38:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800df3c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800df40:	f8c9 0000 	str.w	r0, [r9]
 800df44:	6918      	ldr	r0, [r3, #16]
 800df46:	f7ff fcaf 	bl	800d8a8 <__hi0bits>
 800df4a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800df4e:	e7df      	b.n	800df10 <__d2b+0x70>
 800df50:	08010209 	.word	0x08010209
 800df54:	08010294 	.word	0x08010294

0800df58 <__ratio>:
 800df58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df5c:	4688      	mov	r8, r1
 800df5e:	4669      	mov	r1, sp
 800df60:	4681      	mov	r9, r0
 800df62:	f7ff ff4d 	bl	800de00 <__b2d>
 800df66:	a901      	add	r1, sp, #4
 800df68:	4640      	mov	r0, r8
 800df6a:	ec55 4b10 	vmov	r4, r5, d0
 800df6e:	f7ff ff47 	bl	800de00 <__b2d>
 800df72:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800df76:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800df7a:	eba3 0c02 	sub.w	ip, r3, r2
 800df7e:	e9dd 3200 	ldrd	r3, r2, [sp]
 800df82:	1a9b      	subs	r3, r3, r2
 800df84:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800df88:	ec51 0b10 	vmov	r0, r1, d0
 800df8c:	2b00      	cmp	r3, #0
 800df8e:	bfd6      	itet	le
 800df90:	460a      	movle	r2, r1
 800df92:	462a      	movgt	r2, r5
 800df94:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800df98:	468b      	mov	fp, r1
 800df9a:	462f      	mov	r7, r5
 800df9c:	bfd4      	ite	le
 800df9e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800dfa2:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800dfa6:	4620      	mov	r0, r4
 800dfa8:	ee10 2a10 	vmov	r2, s0
 800dfac:	465b      	mov	r3, fp
 800dfae:	4639      	mov	r1, r7
 800dfb0:	f7f2 fc64 	bl	800087c <__aeabi_ddiv>
 800dfb4:	ec41 0b10 	vmov	d0, r0, r1
 800dfb8:	b003      	add	sp, #12
 800dfba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dfbe <__copybits>:
 800dfbe:	3901      	subs	r1, #1
 800dfc0:	b570      	push	{r4, r5, r6, lr}
 800dfc2:	1149      	asrs	r1, r1, #5
 800dfc4:	6914      	ldr	r4, [r2, #16]
 800dfc6:	3101      	adds	r1, #1
 800dfc8:	f102 0314 	add.w	r3, r2, #20
 800dfcc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800dfd0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800dfd4:	1f05      	subs	r5, r0, #4
 800dfd6:	42a3      	cmp	r3, r4
 800dfd8:	d30c      	bcc.n	800dff4 <__copybits+0x36>
 800dfda:	1aa3      	subs	r3, r4, r2
 800dfdc:	3b11      	subs	r3, #17
 800dfde:	f023 0303 	bic.w	r3, r3, #3
 800dfe2:	3211      	adds	r2, #17
 800dfe4:	42a2      	cmp	r2, r4
 800dfe6:	bf88      	it	hi
 800dfe8:	2300      	movhi	r3, #0
 800dfea:	4418      	add	r0, r3
 800dfec:	2300      	movs	r3, #0
 800dfee:	4288      	cmp	r0, r1
 800dff0:	d305      	bcc.n	800dffe <__copybits+0x40>
 800dff2:	bd70      	pop	{r4, r5, r6, pc}
 800dff4:	f853 6b04 	ldr.w	r6, [r3], #4
 800dff8:	f845 6f04 	str.w	r6, [r5, #4]!
 800dffc:	e7eb      	b.n	800dfd6 <__copybits+0x18>
 800dffe:	f840 3b04 	str.w	r3, [r0], #4
 800e002:	e7f4      	b.n	800dfee <__copybits+0x30>

0800e004 <__any_on>:
 800e004:	f100 0214 	add.w	r2, r0, #20
 800e008:	6900      	ldr	r0, [r0, #16]
 800e00a:	114b      	asrs	r3, r1, #5
 800e00c:	4298      	cmp	r0, r3
 800e00e:	b510      	push	{r4, lr}
 800e010:	db11      	blt.n	800e036 <__any_on+0x32>
 800e012:	dd0a      	ble.n	800e02a <__any_on+0x26>
 800e014:	f011 011f 	ands.w	r1, r1, #31
 800e018:	d007      	beq.n	800e02a <__any_on+0x26>
 800e01a:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800e01e:	fa24 f001 	lsr.w	r0, r4, r1
 800e022:	fa00 f101 	lsl.w	r1, r0, r1
 800e026:	428c      	cmp	r4, r1
 800e028:	d10b      	bne.n	800e042 <__any_on+0x3e>
 800e02a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e02e:	4293      	cmp	r3, r2
 800e030:	d803      	bhi.n	800e03a <__any_on+0x36>
 800e032:	2000      	movs	r0, #0
 800e034:	bd10      	pop	{r4, pc}
 800e036:	4603      	mov	r3, r0
 800e038:	e7f7      	b.n	800e02a <__any_on+0x26>
 800e03a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800e03e:	2900      	cmp	r1, #0
 800e040:	d0f5      	beq.n	800e02e <__any_on+0x2a>
 800e042:	2001      	movs	r0, #1
 800e044:	e7f6      	b.n	800e034 <__any_on+0x30>

0800e046 <_calloc_r>:
 800e046:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e048:	fba1 2402 	umull	r2, r4, r1, r2
 800e04c:	b94c      	cbnz	r4, 800e062 <_calloc_r+0x1c>
 800e04e:	4611      	mov	r1, r2
 800e050:	9201      	str	r2, [sp, #4]
 800e052:	f7fb f8e7 	bl	8009224 <_malloc_r>
 800e056:	9a01      	ldr	r2, [sp, #4]
 800e058:	4605      	mov	r5, r0
 800e05a:	b930      	cbnz	r0, 800e06a <_calloc_r+0x24>
 800e05c:	4628      	mov	r0, r5
 800e05e:	b003      	add	sp, #12
 800e060:	bd30      	pop	{r4, r5, pc}
 800e062:	220c      	movs	r2, #12
 800e064:	6002      	str	r2, [r0, #0]
 800e066:	2500      	movs	r5, #0
 800e068:	e7f8      	b.n	800e05c <_calloc_r+0x16>
 800e06a:	4621      	mov	r1, r4
 800e06c:	f7fa fdf4 	bl	8008c58 <memset>
 800e070:	e7f4      	b.n	800e05c <_calloc_r+0x16>

0800e072 <__ssputs_r>:
 800e072:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e076:	688e      	ldr	r6, [r1, #8]
 800e078:	429e      	cmp	r6, r3
 800e07a:	4682      	mov	sl, r0
 800e07c:	460c      	mov	r4, r1
 800e07e:	4690      	mov	r8, r2
 800e080:	461f      	mov	r7, r3
 800e082:	d838      	bhi.n	800e0f6 <__ssputs_r+0x84>
 800e084:	898a      	ldrh	r2, [r1, #12]
 800e086:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e08a:	d032      	beq.n	800e0f2 <__ssputs_r+0x80>
 800e08c:	6825      	ldr	r5, [r4, #0]
 800e08e:	6909      	ldr	r1, [r1, #16]
 800e090:	eba5 0901 	sub.w	r9, r5, r1
 800e094:	6965      	ldr	r5, [r4, #20]
 800e096:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e09a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e09e:	3301      	adds	r3, #1
 800e0a0:	444b      	add	r3, r9
 800e0a2:	106d      	asrs	r5, r5, #1
 800e0a4:	429d      	cmp	r5, r3
 800e0a6:	bf38      	it	cc
 800e0a8:	461d      	movcc	r5, r3
 800e0aa:	0553      	lsls	r3, r2, #21
 800e0ac:	d531      	bpl.n	800e112 <__ssputs_r+0xa0>
 800e0ae:	4629      	mov	r1, r5
 800e0b0:	f7fb f8b8 	bl	8009224 <_malloc_r>
 800e0b4:	4606      	mov	r6, r0
 800e0b6:	b950      	cbnz	r0, 800e0ce <__ssputs_r+0x5c>
 800e0b8:	230c      	movs	r3, #12
 800e0ba:	f8ca 3000 	str.w	r3, [sl]
 800e0be:	89a3      	ldrh	r3, [r4, #12]
 800e0c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e0c4:	81a3      	strh	r3, [r4, #12]
 800e0c6:	f04f 30ff 	mov.w	r0, #4294967295
 800e0ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e0ce:	6921      	ldr	r1, [r4, #16]
 800e0d0:	464a      	mov	r2, r9
 800e0d2:	f7fa fdb3 	bl	8008c3c <memcpy>
 800e0d6:	89a3      	ldrh	r3, [r4, #12]
 800e0d8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800e0dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e0e0:	81a3      	strh	r3, [r4, #12]
 800e0e2:	6126      	str	r6, [r4, #16]
 800e0e4:	6165      	str	r5, [r4, #20]
 800e0e6:	444e      	add	r6, r9
 800e0e8:	eba5 0509 	sub.w	r5, r5, r9
 800e0ec:	6026      	str	r6, [r4, #0]
 800e0ee:	60a5      	str	r5, [r4, #8]
 800e0f0:	463e      	mov	r6, r7
 800e0f2:	42be      	cmp	r6, r7
 800e0f4:	d900      	bls.n	800e0f8 <__ssputs_r+0x86>
 800e0f6:	463e      	mov	r6, r7
 800e0f8:	6820      	ldr	r0, [r4, #0]
 800e0fa:	4632      	mov	r2, r6
 800e0fc:	4641      	mov	r1, r8
 800e0fe:	f001 f913 	bl	800f328 <memmove>
 800e102:	68a3      	ldr	r3, [r4, #8]
 800e104:	1b9b      	subs	r3, r3, r6
 800e106:	60a3      	str	r3, [r4, #8]
 800e108:	6823      	ldr	r3, [r4, #0]
 800e10a:	4433      	add	r3, r6
 800e10c:	6023      	str	r3, [r4, #0]
 800e10e:	2000      	movs	r0, #0
 800e110:	e7db      	b.n	800e0ca <__ssputs_r+0x58>
 800e112:	462a      	mov	r2, r5
 800e114:	f001 f922 	bl	800f35c <_realloc_r>
 800e118:	4606      	mov	r6, r0
 800e11a:	2800      	cmp	r0, #0
 800e11c:	d1e1      	bne.n	800e0e2 <__ssputs_r+0x70>
 800e11e:	6921      	ldr	r1, [r4, #16]
 800e120:	4650      	mov	r0, sl
 800e122:	f7fb f813 	bl	800914c <_free_r>
 800e126:	e7c7      	b.n	800e0b8 <__ssputs_r+0x46>

0800e128 <_svfiprintf_r>:
 800e128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e12c:	4698      	mov	r8, r3
 800e12e:	898b      	ldrh	r3, [r1, #12]
 800e130:	061b      	lsls	r3, r3, #24
 800e132:	b09d      	sub	sp, #116	; 0x74
 800e134:	4607      	mov	r7, r0
 800e136:	460d      	mov	r5, r1
 800e138:	4614      	mov	r4, r2
 800e13a:	d50e      	bpl.n	800e15a <_svfiprintf_r+0x32>
 800e13c:	690b      	ldr	r3, [r1, #16]
 800e13e:	b963      	cbnz	r3, 800e15a <_svfiprintf_r+0x32>
 800e140:	2140      	movs	r1, #64	; 0x40
 800e142:	f7fb f86f 	bl	8009224 <_malloc_r>
 800e146:	6028      	str	r0, [r5, #0]
 800e148:	6128      	str	r0, [r5, #16]
 800e14a:	b920      	cbnz	r0, 800e156 <_svfiprintf_r+0x2e>
 800e14c:	230c      	movs	r3, #12
 800e14e:	603b      	str	r3, [r7, #0]
 800e150:	f04f 30ff 	mov.w	r0, #4294967295
 800e154:	e0d1      	b.n	800e2fa <_svfiprintf_r+0x1d2>
 800e156:	2340      	movs	r3, #64	; 0x40
 800e158:	616b      	str	r3, [r5, #20]
 800e15a:	2300      	movs	r3, #0
 800e15c:	9309      	str	r3, [sp, #36]	; 0x24
 800e15e:	2320      	movs	r3, #32
 800e160:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e164:	f8cd 800c 	str.w	r8, [sp, #12]
 800e168:	2330      	movs	r3, #48	; 0x30
 800e16a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800e314 <_svfiprintf_r+0x1ec>
 800e16e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e172:	f04f 0901 	mov.w	r9, #1
 800e176:	4623      	mov	r3, r4
 800e178:	469a      	mov	sl, r3
 800e17a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e17e:	b10a      	cbz	r2, 800e184 <_svfiprintf_r+0x5c>
 800e180:	2a25      	cmp	r2, #37	; 0x25
 800e182:	d1f9      	bne.n	800e178 <_svfiprintf_r+0x50>
 800e184:	ebba 0b04 	subs.w	fp, sl, r4
 800e188:	d00b      	beq.n	800e1a2 <_svfiprintf_r+0x7a>
 800e18a:	465b      	mov	r3, fp
 800e18c:	4622      	mov	r2, r4
 800e18e:	4629      	mov	r1, r5
 800e190:	4638      	mov	r0, r7
 800e192:	f7ff ff6e 	bl	800e072 <__ssputs_r>
 800e196:	3001      	adds	r0, #1
 800e198:	f000 80aa 	beq.w	800e2f0 <_svfiprintf_r+0x1c8>
 800e19c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e19e:	445a      	add	r2, fp
 800e1a0:	9209      	str	r2, [sp, #36]	; 0x24
 800e1a2:	f89a 3000 	ldrb.w	r3, [sl]
 800e1a6:	2b00      	cmp	r3, #0
 800e1a8:	f000 80a2 	beq.w	800e2f0 <_svfiprintf_r+0x1c8>
 800e1ac:	2300      	movs	r3, #0
 800e1ae:	f04f 32ff 	mov.w	r2, #4294967295
 800e1b2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e1b6:	f10a 0a01 	add.w	sl, sl, #1
 800e1ba:	9304      	str	r3, [sp, #16]
 800e1bc:	9307      	str	r3, [sp, #28]
 800e1be:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e1c2:	931a      	str	r3, [sp, #104]	; 0x68
 800e1c4:	4654      	mov	r4, sl
 800e1c6:	2205      	movs	r2, #5
 800e1c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e1cc:	4851      	ldr	r0, [pc, #324]	; (800e314 <_svfiprintf_r+0x1ec>)
 800e1ce:	f7f2 f81f 	bl	8000210 <memchr>
 800e1d2:	9a04      	ldr	r2, [sp, #16]
 800e1d4:	b9d8      	cbnz	r0, 800e20e <_svfiprintf_r+0xe6>
 800e1d6:	06d0      	lsls	r0, r2, #27
 800e1d8:	bf44      	itt	mi
 800e1da:	2320      	movmi	r3, #32
 800e1dc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e1e0:	0711      	lsls	r1, r2, #28
 800e1e2:	bf44      	itt	mi
 800e1e4:	232b      	movmi	r3, #43	; 0x2b
 800e1e6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e1ea:	f89a 3000 	ldrb.w	r3, [sl]
 800e1ee:	2b2a      	cmp	r3, #42	; 0x2a
 800e1f0:	d015      	beq.n	800e21e <_svfiprintf_r+0xf6>
 800e1f2:	9a07      	ldr	r2, [sp, #28]
 800e1f4:	4654      	mov	r4, sl
 800e1f6:	2000      	movs	r0, #0
 800e1f8:	f04f 0c0a 	mov.w	ip, #10
 800e1fc:	4621      	mov	r1, r4
 800e1fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e202:	3b30      	subs	r3, #48	; 0x30
 800e204:	2b09      	cmp	r3, #9
 800e206:	d94e      	bls.n	800e2a6 <_svfiprintf_r+0x17e>
 800e208:	b1b0      	cbz	r0, 800e238 <_svfiprintf_r+0x110>
 800e20a:	9207      	str	r2, [sp, #28]
 800e20c:	e014      	b.n	800e238 <_svfiprintf_r+0x110>
 800e20e:	eba0 0308 	sub.w	r3, r0, r8
 800e212:	fa09 f303 	lsl.w	r3, r9, r3
 800e216:	4313      	orrs	r3, r2
 800e218:	9304      	str	r3, [sp, #16]
 800e21a:	46a2      	mov	sl, r4
 800e21c:	e7d2      	b.n	800e1c4 <_svfiprintf_r+0x9c>
 800e21e:	9b03      	ldr	r3, [sp, #12]
 800e220:	1d19      	adds	r1, r3, #4
 800e222:	681b      	ldr	r3, [r3, #0]
 800e224:	9103      	str	r1, [sp, #12]
 800e226:	2b00      	cmp	r3, #0
 800e228:	bfbb      	ittet	lt
 800e22a:	425b      	neglt	r3, r3
 800e22c:	f042 0202 	orrlt.w	r2, r2, #2
 800e230:	9307      	strge	r3, [sp, #28]
 800e232:	9307      	strlt	r3, [sp, #28]
 800e234:	bfb8      	it	lt
 800e236:	9204      	strlt	r2, [sp, #16]
 800e238:	7823      	ldrb	r3, [r4, #0]
 800e23a:	2b2e      	cmp	r3, #46	; 0x2e
 800e23c:	d10c      	bne.n	800e258 <_svfiprintf_r+0x130>
 800e23e:	7863      	ldrb	r3, [r4, #1]
 800e240:	2b2a      	cmp	r3, #42	; 0x2a
 800e242:	d135      	bne.n	800e2b0 <_svfiprintf_r+0x188>
 800e244:	9b03      	ldr	r3, [sp, #12]
 800e246:	1d1a      	adds	r2, r3, #4
 800e248:	681b      	ldr	r3, [r3, #0]
 800e24a:	9203      	str	r2, [sp, #12]
 800e24c:	2b00      	cmp	r3, #0
 800e24e:	bfb8      	it	lt
 800e250:	f04f 33ff 	movlt.w	r3, #4294967295
 800e254:	3402      	adds	r4, #2
 800e256:	9305      	str	r3, [sp, #20]
 800e258:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800e324 <_svfiprintf_r+0x1fc>
 800e25c:	7821      	ldrb	r1, [r4, #0]
 800e25e:	2203      	movs	r2, #3
 800e260:	4650      	mov	r0, sl
 800e262:	f7f1 ffd5 	bl	8000210 <memchr>
 800e266:	b140      	cbz	r0, 800e27a <_svfiprintf_r+0x152>
 800e268:	2340      	movs	r3, #64	; 0x40
 800e26a:	eba0 000a 	sub.w	r0, r0, sl
 800e26e:	fa03 f000 	lsl.w	r0, r3, r0
 800e272:	9b04      	ldr	r3, [sp, #16]
 800e274:	4303      	orrs	r3, r0
 800e276:	3401      	adds	r4, #1
 800e278:	9304      	str	r3, [sp, #16]
 800e27a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e27e:	4826      	ldr	r0, [pc, #152]	; (800e318 <_svfiprintf_r+0x1f0>)
 800e280:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e284:	2206      	movs	r2, #6
 800e286:	f7f1 ffc3 	bl	8000210 <memchr>
 800e28a:	2800      	cmp	r0, #0
 800e28c:	d038      	beq.n	800e300 <_svfiprintf_r+0x1d8>
 800e28e:	4b23      	ldr	r3, [pc, #140]	; (800e31c <_svfiprintf_r+0x1f4>)
 800e290:	bb1b      	cbnz	r3, 800e2da <_svfiprintf_r+0x1b2>
 800e292:	9b03      	ldr	r3, [sp, #12]
 800e294:	3307      	adds	r3, #7
 800e296:	f023 0307 	bic.w	r3, r3, #7
 800e29a:	3308      	adds	r3, #8
 800e29c:	9303      	str	r3, [sp, #12]
 800e29e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e2a0:	4433      	add	r3, r6
 800e2a2:	9309      	str	r3, [sp, #36]	; 0x24
 800e2a4:	e767      	b.n	800e176 <_svfiprintf_r+0x4e>
 800e2a6:	fb0c 3202 	mla	r2, ip, r2, r3
 800e2aa:	460c      	mov	r4, r1
 800e2ac:	2001      	movs	r0, #1
 800e2ae:	e7a5      	b.n	800e1fc <_svfiprintf_r+0xd4>
 800e2b0:	2300      	movs	r3, #0
 800e2b2:	3401      	adds	r4, #1
 800e2b4:	9305      	str	r3, [sp, #20]
 800e2b6:	4619      	mov	r1, r3
 800e2b8:	f04f 0c0a 	mov.w	ip, #10
 800e2bc:	4620      	mov	r0, r4
 800e2be:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e2c2:	3a30      	subs	r2, #48	; 0x30
 800e2c4:	2a09      	cmp	r2, #9
 800e2c6:	d903      	bls.n	800e2d0 <_svfiprintf_r+0x1a8>
 800e2c8:	2b00      	cmp	r3, #0
 800e2ca:	d0c5      	beq.n	800e258 <_svfiprintf_r+0x130>
 800e2cc:	9105      	str	r1, [sp, #20]
 800e2ce:	e7c3      	b.n	800e258 <_svfiprintf_r+0x130>
 800e2d0:	fb0c 2101 	mla	r1, ip, r1, r2
 800e2d4:	4604      	mov	r4, r0
 800e2d6:	2301      	movs	r3, #1
 800e2d8:	e7f0      	b.n	800e2bc <_svfiprintf_r+0x194>
 800e2da:	ab03      	add	r3, sp, #12
 800e2dc:	9300      	str	r3, [sp, #0]
 800e2de:	462a      	mov	r2, r5
 800e2e0:	4b0f      	ldr	r3, [pc, #60]	; (800e320 <_svfiprintf_r+0x1f8>)
 800e2e2:	a904      	add	r1, sp, #16
 800e2e4:	4638      	mov	r0, r7
 800e2e6:	f7fb f8b1 	bl	800944c <_printf_float>
 800e2ea:	1c42      	adds	r2, r0, #1
 800e2ec:	4606      	mov	r6, r0
 800e2ee:	d1d6      	bne.n	800e29e <_svfiprintf_r+0x176>
 800e2f0:	89ab      	ldrh	r3, [r5, #12]
 800e2f2:	065b      	lsls	r3, r3, #25
 800e2f4:	f53f af2c 	bmi.w	800e150 <_svfiprintf_r+0x28>
 800e2f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e2fa:	b01d      	add	sp, #116	; 0x74
 800e2fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e300:	ab03      	add	r3, sp, #12
 800e302:	9300      	str	r3, [sp, #0]
 800e304:	462a      	mov	r2, r5
 800e306:	4b06      	ldr	r3, [pc, #24]	; (800e320 <_svfiprintf_r+0x1f8>)
 800e308:	a904      	add	r1, sp, #16
 800e30a:	4638      	mov	r0, r7
 800e30c:	f7fb fb42 	bl	8009994 <_printf_i>
 800e310:	e7eb      	b.n	800e2ea <_svfiprintf_r+0x1c2>
 800e312:	bf00      	nop
 800e314:	080103ec 	.word	0x080103ec
 800e318:	080103f6 	.word	0x080103f6
 800e31c:	0800944d 	.word	0x0800944d
 800e320:	0800e073 	.word	0x0800e073
 800e324:	080103f2 	.word	0x080103f2

0800e328 <_sungetc_r>:
 800e328:	b538      	push	{r3, r4, r5, lr}
 800e32a:	1c4b      	adds	r3, r1, #1
 800e32c:	4614      	mov	r4, r2
 800e32e:	d103      	bne.n	800e338 <_sungetc_r+0x10>
 800e330:	f04f 35ff 	mov.w	r5, #4294967295
 800e334:	4628      	mov	r0, r5
 800e336:	bd38      	pop	{r3, r4, r5, pc}
 800e338:	8993      	ldrh	r3, [r2, #12]
 800e33a:	f023 0320 	bic.w	r3, r3, #32
 800e33e:	8193      	strh	r3, [r2, #12]
 800e340:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e342:	6852      	ldr	r2, [r2, #4]
 800e344:	b2cd      	uxtb	r5, r1
 800e346:	b18b      	cbz	r3, 800e36c <_sungetc_r+0x44>
 800e348:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e34a:	4293      	cmp	r3, r2
 800e34c:	dd08      	ble.n	800e360 <_sungetc_r+0x38>
 800e34e:	6823      	ldr	r3, [r4, #0]
 800e350:	1e5a      	subs	r2, r3, #1
 800e352:	6022      	str	r2, [r4, #0]
 800e354:	f803 5c01 	strb.w	r5, [r3, #-1]
 800e358:	6863      	ldr	r3, [r4, #4]
 800e35a:	3301      	adds	r3, #1
 800e35c:	6063      	str	r3, [r4, #4]
 800e35e:	e7e9      	b.n	800e334 <_sungetc_r+0xc>
 800e360:	4621      	mov	r1, r4
 800e362:	f000 fca9 	bl	800ecb8 <__submore>
 800e366:	2800      	cmp	r0, #0
 800e368:	d0f1      	beq.n	800e34e <_sungetc_r+0x26>
 800e36a:	e7e1      	b.n	800e330 <_sungetc_r+0x8>
 800e36c:	6921      	ldr	r1, [r4, #16]
 800e36e:	6823      	ldr	r3, [r4, #0]
 800e370:	b151      	cbz	r1, 800e388 <_sungetc_r+0x60>
 800e372:	4299      	cmp	r1, r3
 800e374:	d208      	bcs.n	800e388 <_sungetc_r+0x60>
 800e376:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800e37a:	42a9      	cmp	r1, r5
 800e37c:	d104      	bne.n	800e388 <_sungetc_r+0x60>
 800e37e:	3b01      	subs	r3, #1
 800e380:	3201      	adds	r2, #1
 800e382:	6023      	str	r3, [r4, #0]
 800e384:	6062      	str	r2, [r4, #4]
 800e386:	e7d5      	b.n	800e334 <_sungetc_r+0xc>
 800e388:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800e38c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e390:	6363      	str	r3, [r4, #52]	; 0x34
 800e392:	2303      	movs	r3, #3
 800e394:	63a3      	str	r3, [r4, #56]	; 0x38
 800e396:	4623      	mov	r3, r4
 800e398:	f803 5f46 	strb.w	r5, [r3, #70]!
 800e39c:	6023      	str	r3, [r4, #0]
 800e39e:	2301      	movs	r3, #1
 800e3a0:	e7dc      	b.n	800e35c <_sungetc_r+0x34>

0800e3a2 <__ssrefill_r>:
 800e3a2:	b510      	push	{r4, lr}
 800e3a4:	460c      	mov	r4, r1
 800e3a6:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800e3a8:	b169      	cbz	r1, 800e3c6 <__ssrefill_r+0x24>
 800e3aa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e3ae:	4299      	cmp	r1, r3
 800e3b0:	d001      	beq.n	800e3b6 <__ssrefill_r+0x14>
 800e3b2:	f7fa fecb 	bl	800914c <_free_r>
 800e3b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e3b8:	6063      	str	r3, [r4, #4]
 800e3ba:	2000      	movs	r0, #0
 800e3bc:	6360      	str	r0, [r4, #52]	; 0x34
 800e3be:	b113      	cbz	r3, 800e3c6 <__ssrefill_r+0x24>
 800e3c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e3c2:	6023      	str	r3, [r4, #0]
 800e3c4:	bd10      	pop	{r4, pc}
 800e3c6:	6923      	ldr	r3, [r4, #16]
 800e3c8:	6023      	str	r3, [r4, #0]
 800e3ca:	2300      	movs	r3, #0
 800e3cc:	6063      	str	r3, [r4, #4]
 800e3ce:	89a3      	ldrh	r3, [r4, #12]
 800e3d0:	f043 0320 	orr.w	r3, r3, #32
 800e3d4:	81a3      	strh	r3, [r4, #12]
 800e3d6:	f04f 30ff 	mov.w	r0, #4294967295
 800e3da:	e7f3      	b.n	800e3c4 <__ssrefill_r+0x22>

0800e3dc <__ssvfiscanf_r>:
 800e3dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e3e0:	460c      	mov	r4, r1
 800e3e2:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 800e3e6:	2100      	movs	r1, #0
 800e3e8:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800e3ec:	49a6      	ldr	r1, [pc, #664]	; (800e688 <__ssvfiscanf_r+0x2ac>)
 800e3ee:	91a0      	str	r1, [sp, #640]	; 0x280
 800e3f0:	f10d 0804 	add.w	r8, sp, #4
 800e3f4:	49a5      	ldr	r1, [pc, #660]	; (800e68c <__ssvfiscanf_r+0x2b0>)
 800e3f6:	4fa6      	ldr	r7, [pc, #664]	; (800e690 <__ssvfiscanf_r+0x2b4>)
 800e3f8:	f8df 9298 	ldr.w	r9, [pc, #664]	; 800e694 <__ssvfiscanf_r+0x2b8>
 800e3fc:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800e400:	4606      	mov	r6, r0
 800e402:	91a1      	str	r1, [sp, #644]	; 0x284
 800e404:	9300      	str	r3, [sp, #0]
 800e406:	7813      	ldrb	r3, [r2, #0]
 800e408:	2b00      	cmp	r3, #0
 800e40a:	f000 815a 	beq.w	800e6c2 <__ssvfiscanf_r+0x2e6>
 800e40e:	5dd9      	ldrb	r1, [r3, r7]
 800e410:	f011 0108 	ands.w	r1, r1, #8
 800e414:	f102 0501 	add.w	r5, r2, #1
 800e418:	d019      	beq.n	800e44e <__ssvfiscanf_r+0x72>
 800e41a:	6863      	ldr	r3, [r4, #4]
 800e41c:	2b00      	cmp	r3, #0
 800e41e:	dd0f      	ble.n	800e440 <__ssvfiscanf_r+0x64>
 800e420:	6823      	ldr	r3, [r4, #0]
 800e422:	781a      	ldrb	r2, [r3, #0]
 800e424:	5cba      	ldrb	r2, [r7, r2]
 800e426:	0712      	lsls	r2, r2, #28
 800e428:	d401      	bmi.n	800e42e <__ssvfiscanf_r+0x52>
 800e42a:	462a      	mov	r2, r5
 800e42c:	e7eb      	b.n	800e406 <__ssvfiscanf_r+0x2a>
 800e42e:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e430:	3201      	adds	r2, #1
 800e432:	9245      	str	r2, [sp, #276]	; 0x114
 800e434:	6862      	ldr	r2, [r4, #4]
 800e436:	3301      	adds	r3, #1
 800e438:	3a01      	subs	r2, #1
 800e43a:	6062      	str	r2, [r4, #4]
 800e43c:	6023      	str	r3, [r4, #0]
 800e43e:	e7ec      	b.n	800e41a <__ssvfiscanf_r+0x3e>
 800e440:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e442:	4621      	mov	r1, r4
 800e444:	4630      	mov	r0, r6
 800e446:	4798      	blx	r3
 800e448:	2800      	cmp	r0, #0
 800e44a:	d0e9      	beq.n	800e420 <__ssvfiscanf_r+0x44>
 800e44c:	e7ed      	b.n	800e42a <__ssvfiscanf_r+0x4e>
 800e44e:	2b25      	cmp	r3, #37	; 0x25
 800e450:	d012      	beq.n	800e478 <__ssvfiscanf_r+0x9c>
 800e452:	469a      	mov	sl, r3
 800e454:	6863      	ldr	r3, [r4, #4]
 800e456:	2b00      	cmp	r3, #0
 800e458:	f340 8091 	ble.w	800e57e <__ssvfiscanf_r+0x1a2>
 800e45c:	6822      	ldr	r2, [r4, #0]
 800e45e:	7813      	ldrb	r3, [r2, #0]
 800e460:	4553      	cmp	r3, sl
 800e462:	f040 812e 	bne.w	800e6c2 <__ssvfiscanf_r+0x2e6>
 800e466:	6863      	ldr	r3, [r4, #4]
 800e468:	3b01      	subs	r3, #1
 800e46a:	6063      	str	r3, [r4, #4]
 800e46c:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800e46e:	3201      	adds	r2, #1
 800e470:	3301      	adds	r3, #1
 800e472:	6022      	str	r2, [r4, #0]
 800e474:	9345      	str	r3, [sp, #276]	; 0x114
 800e476:	e7d8      	b.n	800e42a <__ssvfiscanf_r+0x4e>
 800e478:	9141      	str	r1, [sp, #260]	; 0x104
 800e47a:	9143      	str	r1, [sp, #268]	; 0x10c
 800e47c:	7853      	ldrb	r3, [r2, #1]
 800e47e:	2b2a      	cmp	r3, #42	; 0x2a
 800e480:	bf02      	ittt	eq
 800e482:	2310      	moveq	r3, #16
 800e484:	1c95      	addeq	r5, r2, #2
 800e486:	9341      	streq	r3, [sp, #260]	; 0x104
 800e488:	220a      	movs	r2, #10
 800e48a:	46aa      	mov	sl, r5
 800e48c:	f81a 1b01 	ldrb.w	r1, [sl], #1
 800e490:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800e494:	2b09      	cmp	r3, #9
 800e496:	d91d      	bls.n	800e4d4 <__ssvfiscanf_r+0xf8>
 800e498:	487e      	ldr	r0, [pc, #504]	; (800e694 <__ssvfiscanf_r+0x2b8>)
 800e49a:	2203      	movs	r2, #3
 800e49c:	f7f1 feb8 	bl	8000210 <memchr>
 800e4a0:	b140      	cbz	r0, 800e4b4 <__ssvfiscanf_r+0xd8>
 800e4a2:	2301      	movs	r3, #1
 800e4a4:	eba0 0009 	sub.w	r0, r0, r9
 800e4a8:	fa03 f000 	lsl.w	r0, r3, r0
 800e4ac:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e4ae:	4318      	orrs	r0, r3
 800e4b0:	9041      	str	r0, [sp, #260]	; 0x104
 800e4b2:	4655      	mov	r5, sl
 800e4b4:	f815 3b01 	ldrb.w	r3, [r5], #1
 800e4b8:	2b78      	cmp	r3, #120	; 0x78
 800e4ba:	d806      	bhi.n	800e4ca <__ssvfiscanf_r+0xee>
 800e4bc:	2b57      	cmp	r3, #87	; 0x57
 800e4be:	d810      	bhi.n	800e4e2 <__ssvfiscanf_r+0x106>
 800e4c0:	2b25      	cmp	r3, #37	; 0x25
 800e4c2:	d0c6      	beq.n	800e452 <__ssvfiscanf_r+0x76>
 800e4c4:	d856      	bhi.n	800e574 <__ssvfiscanf_r+0x198>
 800e4c6:	2b00      	cmp	r3, #0
 800e4c8:	d064      	beq.n	800e594 <__ssvfiscanf_r+0x1b8>
 800e4ca:	2303      	movs	r3, #3
 800e4cc:	9347      	str	r3, [sp, #284]	; 0x11c
 800e4ce:	230a      	movs	r3, #10
 800e4d0:	9342      	str	r3, [sp, #264]	; 0x108
 800e4d2:	e071      	b.n	800e5b8 <__ssvfiscanf_r+0x1dc>
 800e4d4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800e4d6:	fb02 1103 	mla	r1, r2, r3, r1
 800e4da:	3930      	subs	r1, #48	; 0x30
 800e4dc:	9143      	str	r1, [sp, #268]	; 0x10c
 800e4de:	4655      	mov	r5, sl
 800e4e0:	e7d3      	b.n	800e48a <__ssvfiscanf_r+0xae>
 800e4e2:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800e4e6:	2a20      	cmp	r2, #32
 800e4e8:	d8ef      	bhi.n	800e4ca <__ssvfiscanf_r+0xee>
 800e4ea:	a101      	add	r1, pc, #4	; (adr r1, 800e4f0 <__ssvfiscanf_r+0x114>)
 800e4ec:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800e4f0:	0800e5a3 	.word	0x0800e5a3
 800e4f4:	0800e4cb 	.word	0x0800e4cb
 800e4f8:	0800e4cb 	.word	0x0800e4cb
 800e4fc:	0800e601 	.word	0x0800e601
 800e500:	0800e4cb 	.word	0x0800e4cb
 800e504:	0800e4cb 	.word	0x0800e4cb
 800e508:	0800e4cb 	.word	0x0800e4cb
 800e50c:	0800e4cb 	.word	0x0800e4cb
 800e510:	0800e4cb 	.word	0x0800e4cb
 800e514:	0800e4cb 	.word	0x0800e4cb
 800e518:	0800e4cb 	.word	0x0800e4cb
 800e51c:	0800e617 	.word	0x0800e617
 800e520:	0800e5ed 	.word	0x0800e5ed
 800e524:	0800e57b 	.word	0x0800e57b
 800e528:	0800e57b 	.word	0x0800e57b
 800e52c:	0800e57b 	.word	0x0800e57b
 800e530:	0800e4cb 	.word	0x0800e4cb
 800e534:	0800e5f1 	.word	0x0800e5f1
 800e538:	0800e4cb 	.word	0x0800e4cb
 800e53c:	0800e4cb 	.word	0x0800e4cb
 800e540:	0800e4cb 	.word	0x0800e4cb
 800e544:	0800e4cb 	.word	0x0800e4cb
 800e548:	0800e627 	.word	0x0800e627
 800e54c:	0800e5f9 	.word	0x0800e5f9
 800e550:	0800e59b 	.word	0x0800e59b
 800e554:	0800e4cb 	.word	0x0800e4cb
 800e558:	0800e4cb 	.word	0x0800e4cb
 800e55c:	0800e623 	.word	0x0800e623
 800e560:	0800e4cb 	.word	0x0800e4cb
 800e564:	0800e5ed 	.word	0x0800e5ed
 800e568:	0800e4cb 	.word	0x0800e4cb
 800e56c:	0800e4cb 	.word	0x0800e4cb
 800e570:	0800e5a3 	.word	0x0800e5a3
 800e574:	3b45      	subs	r3, #69	; 0x45
 800e576:	2b02      	cmp	r3, #2
 800e578:	d8a7      	bhi.n	800e4ca <__ssvfiscanf_r+0xee>
 800e57a:	2305      	movs	r3, #5
 800e57c:	e01b      	b.n	800e5b6 <__ssvfiscanf_r+0x1da>
 800e57e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e580:	4621      	mov	r1, r4
 800e582:	4630      	mov	r0, r6
 800e584:	4798      	blx	r3
 800e586:	2800      	cmp	r0, #0
 800e588:	f43f af68 	beq.w	800e45c <__ssvfiscanf_r+0x80>
 800e58c:	9844      	ldr	r0, [sp, #272]	; 0x110
 800e58e:	2800      	cmp	r0, #0
 800e590:	f040 808d 	bne.w	800e6ae <__ssvfiscanf_r+0x2d2>
 800e594:	f04f 30ff 	mov.w	r0, #4294967295
 800e598:	e08f      	b.n	800e6ba <__ssvfiscanf_r+0x2de>
 800e59a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800e59c:	f042 0220 	orr.w	r2, r2, #32
 800e5a0:	9241      	str	r2, [sp, #260]	; 0x104
 800e5a2:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800e5a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800e5a8:	9241      	str	r2, [sp, #260]	; 0x104
 800e5aa:	2210      	movs	r2, #16
 800e5ac:	2b6f      	cmp	r3, #111	; 0x6f
 800e5ae:	9242      	str	r2, [sp, #264]	; 0x108
 800e5b0:	bf34      	ite	cc
 800e5b2:	2303      	movcc	r3, #3
 800e5b4:	2304      	movcs	r3, #4
 800e5b6:	9347      	str	r3, [sp, #284]	; 0x11c
 800e5b8:	6863      	ldr	r3, [r4, #4]
 800e5ba:	2b00      	cmp	r3, #0
 800e5bc:	dd42      	ble.n	800e644 <__ssvfiscanf_r+0x268>
 800e5be:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e5c0:	0659      	lsls	r1, r3, #25
 800e5c2:	d404      	bmi.n	800e5ce <__ssvfiscanf_r+0x1f2>
 800e5c4:	6823      	ldr	r3, [r4, #0]
 800e5c6:	781a      	ldrb	r2, [r3, #0]
 800e5c8:	5cba      	ldrb	r2, [r7, r2]
 800e5ca:	0712      	lsls	r2, r2, #28
 800e5cc:	d441      	bmi.n	800e652 <__ssvfiscanf_r+0x276>
 800e5ce:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800e5d0:	2b02      	cmp	r3, #2
 800e5d2:	dc50      	bgt.n	800e676 <__ssvfiscanf_r+0x29a>
 800e5d4:	466b      	mov	r3, sp
 800e5d6:	4622      	mov	r2, r4
 800e5d8:	a941      	add	r1, sp, #260	; 0x104
 800e5da:	4630      	mov	r0, r6
 800e5dc:	f000 f9d0 	bl	800e980 <_scanf_chars>
 800e5e0:	2801      	cmp	r0, #1
 800e5e2:	d06e      	beq.n	800e6c2 <__ssvfiscanf_r+0x2e6>
 800e5e4:	2802      	cmp	r0, #2
 800e5e6:	f47f af20 	bne.w	800e42a <__ssvfiscanf_r+0x4e>
 800e5ea:	e7cf      	b.n	800e58c <__ssvfiscanf_r+0x1b0>
 800e5ec:	220a      	movs	r2, #10
 800e5ee:	e7dd      	b.n	800e5ac <__ssvfiscanf_r+0x1d0>
 800e5f0:	2300      	movs	r3, #0
 800e5f2:	9342      	str	r3, [sp, #264]	; 0x108
 800e5f4:	2303      	movs	r3, #3
 800e5f6:	e7de      	b.n	800e5b6 <__ssvfiscanf_r+0x1da>
 800e5f8:	2308      	movs	r3, #8
 800e5fa:	9342      	str	r3, [sp, #264]	; 0x108
 800e5fc:	2304      	movs	r3, #4
 800e5fe:	e7da      	b.n	800e5b6 <__ssvfiscanf_r+0x1da>
 800e600:	4629      	mov	r1, r5
 800e602:	4640      	mov	r0, r8
 800e604:	f000 fb20 	bl	800ec48 <__sccl>
 800e608:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e60a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e60e:	9341      	str	r3, [sp, #260]	; 0x104
 800e610:	4605      	mov	r5, r0
 800e612:	2301      	movs	r3, #1
 800e614:	e7cf      	b.n	800e5b6 <__ssvfiscanf_r+0x1da>
 800e616:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e618:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e61c:	9341      	str	r3, [sp, #260]	; 0x104
 800e61e:	2300      	movs	r3, #0
 800e620:	e7c9      	b.n	800e5b6 <__ssvfiscanf_r+0x1da>
 800e622:	2302      	movs	r3, #2
 800e624:	e7c7      	b.n	800e5b6 <__ssvfiscanf_r+0x1da>
 800e626:	9841      	ldr	r0, [sp, #260]	; 0x104
 800e628:	06c3      	lsls	r3, r0, #27
 800e62a:	f53f aefe 	bmi.w	800e42a <__ssvfiscanf_r+0x4e>
 800e62e:	9b00      	ldr	r3, [sp, #0]
 800e630:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e632:	1d19      	adds	r1, r3, #4
 800e634:	9100      	str	r1, [sp, #0]
 800e636:	681b      	ldr	r3, [r3, #0]
 800e638:	f010 0f01 	tst.w	r0, #1
 800e63c:	bf14      	ite	ne
 800e63e:	801a      	strhne	r2, [r3, #0]
 800e640:	601a      	streq	r2, [r3, #0]
 800e642:	e6f2      	b.n	800e42a <__ssvfiscanf_r+0x4e>
 800e644:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e646:	4621      	mov	r1, r4
 800e648:	4630      	mov	r0, r6
 800e64a:	4798      	blx	r3
 800e64c:	2800      	cmp	r0, #0
 800e64e:	d0b6      	beq.n	800e5be <__ssvfiscanf_r+0x1e2>
 800e650:	e79c      	b.n	800e58c <__ssvfiscanf_r+0x1b0>
 800e652:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e654:	3201      	adds	r2, #1
 800e656:	9245      	str	r2, [sp, #276]	; 0x114
 800e658:	6862      	ldr	r2, [r4, #4]
 800e65a:	3a01      	subs	r2, #1
 800e65c:	2a00      	cmp	r2, #0
 800e65e:	6062      	str	r2, [r4, #4]
 800e660:	dd02      	ble.n	800e668 <__ssvfiscanf_r+0x28c>
 800e662:	3301      	adds	r3, #1
 800e664:	6023      	str	r3, [r4, #0]
 800e666:	e7ad      	b.n	800e5c4 <__ssvfiscanf_r+0x1e8>
 800e668:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e66a:	4621      	mov	r1, r4
 800e66c:	4630      	mov	r0, r6
 800e66e:	4798      	blx	r3
 800e670:	2800      	cmp	r0, #0
 800e672:	d0a7      	beq.n	800e5c4 <__ssvfiscanf_r+0x1e8>
 800e674:	e78a      	b.n	800e58c <__ssvfiscanf_r+0x1b0>
 800e676:	2b04      	cmp	r3, #4
 800e678:	dc0e      	bgt.n	800e698 <__ssvfiscanf_r+0x2bc>
 800e67a:	466b      	mov	r3, sp
 800e67c:	4622      	mov	r2, r4
 800e67e:	a941      	add	r1, sp, #260	; 0x104
 800e680:	4630      	mov	r0, r6
 800e682:	f000 f9d7 	bl	800ea34 <_scanf_i>
 800e686:	e7ab      	b.n	800e5e0 <__ssvfiscanf_r+0x204>
 800e688:	0800e329 	.word	0x0800e329
 800e68c:	0800e3a3 	.word	0x0800e3a3
 800e690:	080100a1 	.word	0x080100a1
 800e694:	080103f2 	.word	0x080103f2
 800e698:	4b0b      	ldr	r3, [pc, #44]	; (800e6c8 <__ssvfiscanf_r+0x2ec>)
 800e69a:	2b00      	cmp	r3, #0
 800e69c:	f43f aec5 	beq.w	800e42a <__ssvfiscanf_r+0x4e>
 800e6a0:	466b      	mov	r3, sp
 800e6a2:	4622      	mov	r2, r4
 800e6a4:	a941      	add	r1, sp, #260	; 0x104
 800e6a6:	4630      	mov	r0, r6
 800e6a8:	f7fb fa9a 	bl	8009be0 <_scanf_float>
 800e6ac:	e798      	b.n	800e5e0 <__ssvfiscanf_r+0x204>
 800e6ae:	89a3      	ldrh	r3, [r4, #12]
 800e6b0:	f013 0f40 	tst.w	r3, #64	; 0x40
 800e6b4:	bf18      	it	ne
 800e6b6:	f04f 30ff 	movne.w	r0, #4294967295
 800e6ba:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 800e6be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e6c2:	9844      	ldr	r0, [sp, #272]	; 0x110
 800e6c4:	e7f9      	b.n	800e6ba <__ssvfiscanf_r+0x2de>
 800e6c6:	bf00      	nop
 800e6c8:	08009be1 	.word	0x08009be1

0800e6cc <__sfputc_r>:
 800e6cc:	6893      	ldr	r3, [r2, #8]
 800e6ce:	3b01      	subs	r3, #1
 800e6d0:	2b00      	cmp	r3, #0
 800e6d2:	b410      	push	{r4}
 800e6d4:	6093      	str	r3, [r2, #8]
 800e6d6:	da08      	bge.n	800e6ea <__sfputc_r+0x1e>
 800e6d8:	6994      	ldr	r4, [r2, #24]
 800e6da:	42a3      	cmp	r3, r4
 800e6dc:	db01      	blt.n	800e6e2 <__sfputc_r+0x16>
 800e6de:	290a      	cmp	r1, #10
 800e6e0:	d103      	bne.n	800e6ea <__sfputc_r+0x1e>
 800e6e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e6e6:	f000 bb21 	b.w	800ed2c <__swbuf_r>
 800e6ea:	6813      	ldr	r3, [r2, #0]
 800e6ec:	1c58      	adds	r0, r3, #1
 800e6ee:	6010      	str	r0, [r2, #0]
 800e6f0:	7019      	strb	r1, [r3, #0]
 800e6f2:	4608      	mov	r0, r1
 800e6f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e6f8:	4770      	bx	lr

0800e6fa <__sfputs_r>:
 800e6fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e6fc:	4606      	mov	r6, r0
 800e6fe:	460f      	mov	r7, r1
 800e700:	4614      	mov	r4, r2
 800e702:	18d5      	adds	r5, r2, r3
 800e704:	42ac      	cmp	r4, r5
 800e706:	d101      	bne.n	800e70c <__sfputs_r+0x12>
 800e708:	2000      	movs	r0, #0
 800e70a:	e007      	b.n	800e71c <__sfputs_r+0x22>
 800e70c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e710:	463a      	mov	r2, r7
 800e712:	4630      	mov	r0, r6
 800e714:	f7ff ffda 	bl	800e6cc <__sfputc_r>
 800e718:	1c43      	adds	r3, r0, #1
 800e71a:	d1f3      	bne.n	800e704 <__sfputs_r+0xa>
 800e71c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800e720 <_vfiprintf_r>:
 800e720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e724:	460d      	mov	r5, r1
 800e726:	b09d      	sub	sp, #116	; 0x74
 800e728:	4614      	mov	r4, r2
 800e72a:	4698      	mov	r8, r3
 800e72c:	4606      	mov	r6, r0
 800e72e:	b118      	cbz	r0, 800e738 <_vfiprintf_r+0x18>
 800e730:	6983      	ldr	r3, [r0, #24]
 800e732:	b90b      	cbnz	r3, 800e738 <_vfiprintf_r+0x18>
 800e734:	f000 fcf6 	bl	800f124 <__sinit>
 800e738:	4b89      	ldr	r3, [pc, #548]	; (800e960 <_vfiprintf_r+0x240>)
 800e73a:	429d      	cmp	r5, r3
 800e73c:	d11b      	bne.n	800e776 <_vfiprintf_r+0x56>
 800e73e:	6875      	ldr	r5, [r6, #4]
 800e740:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e742:	07d9      	lsls	r1, r3, #31
 800e744:	d405      	bmi.n	800e752 <_vfiprintf_r+0x32>
 800e746:	89ab      	ldrh	r3, [r5, #12]
 800e748:	059a      	lsls	r2, r3, #22
 800e74a:	d402      	bmi.n	800e752 <_vfiprintf_r+0x32>
 800e74c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e74e:	f7fe ff85 	bl	800d65c <__retarget_lock_acquire_recursive>
 800e752:	89ab      	ldrh	r3, [r5, #12]
 800e754:	071b      	lsls	r3, r3, #28
 800e756:	d501      	bpl.n	800e75c <_vfiprintf_r+0x3c>
 800e758:	692b      	ldr	r3, [r5, #16]
 800e75a:	b9eb      	cbnz	r3, 800e798 <_vfiprintf_r+0x78>
 800e75c:	4629      	mov	r1, r5
 800e75e:	4630      	mov	r0, r6
 800e760:	f000 fb44 	bl	800edec <__swsetup_r>
 800e764:	b1c0      	cbz	r0, 800e798 <_vfiprintf_r+0x78>
 800e766:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e768:	07dc      	lsls	r4, r3, #31
 800e76a:	d50e      	bpl.n	800e78a <_vfiprintf_r+0x6a>
 800e76c:	f04f 30ff 	mov.w	r0, #4294967295
 800e770:	b01d      	add	sp, #116	; 0x74
 800e772:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e776:	4b7b      	ldr	r3, [pc, #492]	; (800e964 <_vfiprintf_r+0x244>)
 800e778:	429d      	cmp	r5, r3
 800e77a:	d101      	bne.n	800e780 <_vfiprintf_r+0x60>
 800e77c:	68b5      	ldr	r5, [r6, #8]
 800e77e:	e7df      	b.n	800e740 <_vfiprintf_r+0x20>
 800e780:	4b79      	ldr	r3, [pc, #484]	; (800e968 <_vfiprintf_r+0x248>)
 800e782:	429d      	cmp	r5, r3
 800e784:	bf08      	it	eq
 800e786:	68f5      	ldreq	r5, [r6, #12]
 800e788:	e7da      	b.n	800e740 <_vfiprintf_r+0x20>
 800e78a:	89ab      	ldrh	r3, [r5, #12]
 800e78c:	0598      	lsls	r0, r3, #22
 800e78e:	d4ed      	bmi.n	800e76c <_vfiprintf_r+0x4c>
 800e790:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e792:	f7fe ff65 	bl	800d660 <__retarget_lock_release_recursive>
 800e796:	e7e9      	b.n	800e76c <_vfiprintf_r+0x4c>
 800e798:	2300      	movs	r3, #0
 800e79a:	9309      	str	r3, [sp, #36]	; 0x24
 800e79c:	2320      	movs	r3, #32
 800e79e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e7a2:	f8cd 800c 	str.w	r8, [sp, #12]
 800e7a6:	2330      	movs	r3, #48	; 0x30
 800e7a8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800e96c <_vfiprintf_r+0x24c>
 800e7ac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e7b0:	f04f 0901 	mov.w	r9, #1
 800e7b4:	4623      	mov	r3, r4
 800e7b6:	469a      	mov	sl, r3
 800e7b8:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e7bc:	b10a      	cbz	r2, 800e7c2 <_vfiprintf_r+0xa2>
 800e7be:	2a25      	cmp	r2, #37	; 0x25
 800e7c0:	d1f9      	bne.n	800e7b6 <_vfiprintf_r+0x96>
 800e7c2:	ebba 0b04 	subs.w	fp, sl, r4
 800e7c6:	d00b      	beq.n	800e7e0 <_vfiprintf_r+0xc0>
 800e7c8:	465b      	mov	r3, fp
 800e7ca:	4622      	mov	r2, r4
 800e7cc:	4629      	mov	r1, r5
 800e7ce:	4630      	mov	r0, r6
 800e7d0:	f7ff ff93 	bl	800e6fa <__sfputs_r>
 800e7d4:	3001      	adds	r0, #1
 800e7d6:	f000 80aa 	beq.w	800e92e <_vfiprintf_r+0x20e>
 800e7da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e7dc:	445a      	add	r2, fp
 800e7de:	9209      	str	r2, [sp, #36]	; 0x24
 800e7e0:	f89a 3000 	ldrb.w	r3, [sl]
 800e7e4:	2b00      	cmp	r3, #0
 800e7e6:	f000 80a2 	beq.w	800e92e <_vfiprintf_r+0x20e>
 800e7ea:	2300      	movs	r3, #0
 800e7ec:	f04f 32ff 	mov.w	r2, #4294967295
 800e7f0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e7f4:	f10a 0a01 	add.w	sl, sl, #1
 800e7f8:	9304      	str	r3, [sp, #16]
 800e7fa:	9307      	str	r3, [sp, #28]
 800e7fc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e800:	931a      	str	r3, [sp, #104]	; 0x68
 800e802:	4654      	mov	r4, sl
 800e804:	2205      	movs	r2, #5
 800e806:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e80a:	4858      	ldr	r0, [pc, #352]	; (800e96c <_vfiprintf_r+0x24c>)
 800e80c:	f7f1 fd00 	bl	8000210 <memchr>
 800e810:	9a04      	ldr	r2, [sp, #16]
 800e812:	b9d8      	cbnz	r0, 800e84c <_vfiprintf_r+0x12c>
 800e814:	06d1      	lsls	r1, r2, #27
 800e816:	bf44      	itt	mi
 800e818:	2320      	movmi	r3, #32
 800e81a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e81e:	0713      	lsls	r3, r2, #28
 800e820:	bf44      	itt	mi
 800e822:	232b      	movmi	r3, #43	; 0x2b
 800e824:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e828:	f89a 3000 	ldrb.w	r3, [sl]
 800e82c:	2b2a      	cmp	r3, #42	; 0x2a
 800e82e:	d015      	beq.n	800e85c <_vfiprintf_r+0x13c>
 800e830:	9a07      	ldr	r2, [sp, #28]
 800e832:	4654      	mov	r4, sl
 800e834:	2000      	movs	r0, #0
 800e836:	f04f 0c0a 	mov.w	ip, #10
 800e83a:	4621      	mov	r1, r4
 800e83c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e840:	3b30      	subs	r3, #48	; 0x30
 800e842:	2b09      	cmp	r3, #9
 800e844:	d94e      	bls.n	800e8e4 <_vfiprintf_r+0x1c4>
 800e846:	b1b0      	cbz	r0, 800e876 <_vfiprintf_r+0x156>
 800e848:	9207      	str	r2, [sp, #28]
 800e84a:	e014      	b.n	800e876 <_vfiprintf_r+0x156>
 800e84c:	eba0 0308 	sub.w	r3, r0, r8
 800e850:	fa09 f303 	lsl.w	r3, r9, r3
 800e854:	4313      	orrs	r3, r2
 800e856:	9304      	str	r3, [sp, #16]
 800e858:	46a2      	mov	sl, r4
 800e85a:	e7d2      	b.n	800e802 <_vfiprintf_r+0xe2>
 800e85c:	9b03      	ldr	r3, [sp, #12]
 800e85e:	1d19      	adds	r1, r3, #4
 800e860:	681b      	ldr	r3, [r3, #0]
 800e862:	9103      	str	r1, [sp, #12]
 800e864:	2b00      	cmp	r3, #0
 800e866:	bfbb      	ittet	lt
 800e868:	425b      	neglt	r3, r3
 800e86a:	f042 0202 	orrlt.w	r2, r2, #2
 800e86e:	9307      	strge	r3, [sp, #28]
 800e870:	9307      	strlt	r3, [sp, #28]
 800e872:	bfb8      	it	lt
 800e874:	9204      	strlt	r2, [sp, #16]
 800e876:	7823      	ldrb	r3, [r4, #0]
 800e878:	2b2e      	cmp	r3, #46	; 0x2e
 800e87a:	d10c      	bne.n	800e896 <_vfiprintf_r+0x176>
 800e87c:	7863      	ldrb	r3, [r4, #1]
 800e87e:	2b2a      	cmp	r3, #42	; 0x2a
 800e880:	d135      	bne.n	800e8ee <_vfiprintf_r+0x1ce>
 800e882:	9b03      	ldr	r3, [sp, #12]
 800e884:	1d1a      	adds	r2, r3, #4
 800e886:	681b      	ldr	r3, [r3, #0]
 800e888:	9203      	str	r2, [sp, #12]
 800e88a:	2b00      	cmp	r3, #0
 800e88c:	bfb8      	it	lt
 800e88e:	f04f 33ff 	movlt.w	r3, #4294967295
 800e892:	3402      	adds	r4, #2
 800e894:	9305      	str	r3, [sp, #20]
 800e896:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800e97c <_vfiprintf_r+0x25c>
 800e89a:	7821      	ldrb	r1, [r4, #0]
 800e89c:	2203      	movs	r2, #3
 800e89e:	4650      	mov	r0, sl
 800e8a0:	f7f1 fcb6 	bl	8000210 <memchr>
 800e8a4:	b140      	cbz	r0, 800e8b8 <_vfiprintf_r+0x198>
 800e8a6:	2340      	movs	r3, #64	; 0x40
 800e8a8:	eba0 000a 	sub.w	r0, r0, sl
 800e8ac:	fa03 f000 	lsl.w	r0, r3, r0
 800e8b0:	9b04      	ldr	r3, [sp, #16]
 800e8b2:	4303      	orrs	r3, r0
 800e8b4:	3401      	adds	r4, #1
 800e8b6:	9304      	str	r3, [sp, #16]
 800e8b8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e8bc:	482c      	ldr	r0, [pc, #176]	; (800e970 <_vfiprintf_r+0x250>)
 800e8be:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e8c2:	2206      	movs	r2, #6
 800e8c4:	f7f1 fca4 	bl	8000210 <memchr>
 800e8c8:	2800      	cmp	r0, #0
 800e8ca:	d03f      	beq.n	800e94c <_vfiprintf_r+0x22c>
 800e8cc:	4b29      	ldr	r3, [pc, #164]	; (800e974 <_vfiprintf_r+0x254>)
 800e8ce:	bb1b      	cbnz	r3, 800e918 <_vfiprintf_r+0x1f8>
 800e8d0:	9b03      	ldr	r3, [sp, #12]
 800e8d2:	3307      	adds	r3, #7
 800e8d4:	f023 0307 	bic.w	r3, r3, #7
 800e8d8:	3308      	adds	r3, #8
 800e8da:	9303      	str	r3, [sp, #12]
 800e8dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e8de:	443b      	add	r3, r7
 800e8e0:	9309      	str	r3, [sp, #36]	; 0x24
 800e8e2:	e767      	b.n	800e7b4 <_vfiprintf_r+0x94>
 800e8e4:	fb0c 3202 	mla	r2, ip, r2, r3
 800e8e8:	460c      	mov	r4, r1
 800e8ea:	2001      	movs	r0, #1
 800e8ec:	e7a5      	b.n	800e83a <_vfiprintf_r+0x11a>
 800e8ee:	2300      	movs	r3, #0
 800e8f0:	3401      	adds	r4, #1
 800e8f2:	9305      	str	r3, [sp, #20]
 800e8f4:	4619      	mov	r1, r3
 800e8f6:	f04f 0c0a 	mov.w	ip, #10
 800e8fa:	4620      	mov	r0, r4
 800e8fc:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e900:	3a30      	subs	r2, #48	; 0x30
 800e902:	2a09      	cmp	r2, #9
 800e904:	d903      	bls.n	800e90e <_vfiprintf_r+0x1ee>
 800e906:	2b00      	cmp	r3, #0
 800e908:	d0c5      	beq.n	800e896 <_vfiprintf_r+0x176>
 800e90a:	9105      	str	r1, [sp, #20]
 800e90c:	e7c3      	b.n	800e896 <_vfiprintf_r+0x176>
 800e90e:	fb0c 2101 	mla	r1, ip, r1, r2
 800e912:	4604      	mov	r4, r0
 800e914:	2301      	movs	r3, #1
 800e916:	e7f0      	b.n	800e8fa <_vfiprintf_r+0x1da>
 800e918:	ab03      	add	r3, sp, #12
 800e91a:	9300      	str	r3, [sp, #0]
 800e91c:	462a      	mov	r2, r5
 800e91e:	4b16      	ldr	r3, [pc, #88]	; (800e978 <_vfiprintf_r+0x258>)
 800e920:	a904      	add	r1, sp, #16
 800e922:	4630      	mov	r0, r6
 800e924:	f7fa fd92 	bl	800944c <_printf_float>
 800e928:	4607      	mov	r7, r0
 800e92a:	1c78      	adds	r0, r7, #1
 800e92c:	d1d6      	bne.n	800e8dc <_vfiprintf_r+0x1bc>
 800e92e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e930:	07d9      	lsls	r1, r3, #31
 800e932:	d405      	bmi.n	800e940 <_vfiprintf_r+0x220>
 800e934:	89ab      	ldrh	r3, [r5, #12]
 800e936:	059a      	lsls	r2, r3, #22
 800e938:	d402      	bmi.n	800e940 <_vfiprintf_r+0x220>
 800e93a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e93c:	f7fe fe90 	bl	800d660 <__retarget_lock_release_recursive>
 800e940:	89ab      	ldrh	r3, [r5, #12]
 800e942:	065b      	lsls	r3, r3, #25
 800e944:	f53f af12 	bmi.w	800e76c <_vfiprintf_r+0x4c>
 800e948:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e94a:	e711      	b.n	800e770 <_vfiprintf_r+0x50>
 800e94c:	ab03      	add	r3, sp, #12
 800e94e:	9300      	str	r3, [sp, #0]
 800e950:	462a      	mov	r2, r5
 800e952:	4b09      	ldr	r3, [pc, #36]	; (800e978 <_vfiprintf_r+0x258>)
 800e954:	a904      	add	r1, sp, #16
 800e956:	4630      	mov	r0, r6
 800e958:	f7fb f81c 	bl	8009994 <_printf_i>
 800e95c:	e7e4      	b.n	800e928 <_vfiprintf_r+0x208>
 800e95e:	bf00      	nop
 800e960:	08010438 	.word	0x08010438
 800e964:	08010458 	.word	0x08010458
 800e968:	08010418 	.word	0x08010418
 800e96c:	080103ec 	.word	0x080103ec
 800e970:	080103f6 	.word	0x080103f6
 800e974:	0800944d 	.word	0x0800944d
 800e978:	0800e6fb 	.word	0x0800e6fb
 800e97c:	080103f2 	.word	0x080103f2

0800e980 <_scanf_chars>:
 800e980:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e984:	4615      	mov	r5, r2
 800e986:	688a      	ldr	r2, [r1, #8]
 800e988:	4680      	mov	r8, r0
 800e98a:	460c      	mov	r4, r1
 800e98c:	b932      	cbnz	r2, 800e99c <_scanf_chars+0x1c>
 800e98e:	698a      	ldr	r2, [r1, #24]
 800e990:	2a00      	cmp	r2, #0
 800e992:	bf0c      	ite	eq
 800e994:	2201      	moveq	r2, #1
 800e996:	f04f 32ff 	movne.w	r2, #4294967295
 800e99a:	608a      	str	r2, [r1, #8]
 800e99c:	6822      	ldr	r2, [r4, #0]
 800e99e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ea30 <_scanf_chars+0xb0>
 800e9a2:	06d1      	lsls	r1, r2, #27
 800e9a4:	bf5f      	itttt	pl
 800e9a6:	681a      	ldrpl	r2, [r3, #0]
 800e9a8:	1d11      	addpl	r1, r2, #4
 800e9aa:	6019      	strpl	r1, [r3, #0]
 800e9ac:	6816      	ldrpl	r6, [r2, #0]
 800e9ae:	2700      	movs	r7, #0
 800e9b0:	69a0      	ldr	r0, [r4, #24]
 800e9b2:	b188      	cbz	r0, 800e9d8 <_scanf_chars+0x58>
 800e9b4:	2801      	cmp	r0, #1
 800e9b6:	d107      	bne.n	800e9c8 <_scanf_chars+0x48>
 800e9b8:	682a      	ldr	r2, [r5, #0]
 800e9ba:	7811      	ldrb	r1, [r2, #0]
 800e9bc:	6962      	ldr	r2, [r4, #20]
 800e9be:	5c52      	ldrb	r2, [r2, r1]
 800e9c0:	b952      	cbnz	r2, 800e9d8 <_scanf_chars+0x58>
 800e9c2:	2f00      	cmp	r7, #0
 800e9c4:	d031      	beq.n	800ea2a <_scanf_chars+0xaa>
 800e9c6:	e022      	b.n	800ea0e <_scanf_chars+0x8e>
 800e9c8:	2802      	cmp	r0, #2
 800e9ca:	d120      	bne.n	800ea0e <_scanf_chars+0x8e>
 800e9cc:	682b      	ldr	r3, [r5, #0]
 800e9ce:	781b      	ldrb	r3, [r3, #0]
 800e9d0:	f813 3009 	ldrb.w	r3, [r3, r9]
 800e9d4:	071b      	lsls	r3, r3, #28
 800e9d6:	d41a      	bmi.n	800ea0e <_scanf_chars+0x8e>
 800e9d8:	6823      	ldr	r3, [r4, #0]
 800e9da:	06da      	lsls	r2, r3, #27
 800e9dc:	bf5e      	ittt	pl
 800e9de:	682b      	ldrpl	r3, [r5, #0]
 800e9e0:	781b      	ldrbpl	r3, [r3, #0]
 800e9e2:	f806 3b01 	strbpl.w	r3, [r6], #1
 800e9e6:	682a      	ldr	r2, [r5, #0]
 800e9e8:	686b      	ldr	r3, [r5, #4]
 800e9ea:	3201      	adds	r2, #1
 800e9ec:	602a      	str	r2, [r5, #0]
 800e9ee:	68a2      	ldr	r2, [r4, #8]
 800e9f0:	3b01      	subs	r3, #1
 800e9f2:	3a01      	subs	r2, #1
 800e9f4:	606b      	str	r3, [r5, #4]
 800e9f6:	3701      	adds	r7, #1
 800e9f8:	60a2      	str	r2, [r4, #8]
 800e9fa:	b142      	cbz	r2, 800ea0e <_scanf_chars+0x8e>
 800e9fc:	2b00      	cmp	r3, #0
 800e9fe:	dcd7      	bgt.n	800e9b0 <_scanf_chars+0x30>
 800ea00:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800ea04:	4629      	mov	r1, r5
 800ea06:	4640      	mov	r0, r8
 800ea08:	4798      	blx	r3
 800ea0a:	2800      	cmp	r0, #0
 800ea0c:	d0d0      	beq.n	800e9b0 <_scanf_chars+0x30>
 800ea0e:	6823      	ldr	r3, [r4, #0]
 800ea10:	f013 0310 	ands.w	r3, r3, #16
 800ea14:	d105      	bne.n	800ea22 <_scanf_chars+0xa2>
 800ea16:	68e2      	ldr	r2, [r4, #12]
 800ea18:	3201      	adds	r2, #1
 800ea1a:	60e2      	str	r2, [r4, #12]
 800ea1c:	69a2      	ldr	r2, [r4, #24]
 800ea1e:	b102      	cbz	r2, 800ea22 <_scanf_chars+0xa2>
 800ea20:	7033      	strb	r3, [r6, #0]
 800ea22:	6923      	ldr	r3, [r4, #16]
 800ea24:	443b      	add	r3, r7
 800ea26:	6123      	str	r3, [r4, #16]
 800ea28:	2000      	movs	r0, #0
 800ea2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ea2e:	bf00      	nop
 800ea30:	080100a1 	.word	0x080100a1

0800ea34 <_scanf_i>:
 800ea34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea38:	4698      	mov	r8, r3
 800ea3a:	4b76      	ldr	r3, [pc, #472]	; (800ec14 <_scanf_i+0x1e0>)
 800ea3c:	460c      	mov	r4, r1
 800ea3e:	4682      	mov	sl, r0
 800ea40:	4616      	mov	r6, r2
 800ea42:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800ea46:	b087      	sub	sp, #28
 800ea48:	ab03      	add	r3, sp, #12
 800ea4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800ea4e:	4b72      	ldr	r3, [pc, #456]	; (800ec18 <_scanf_i+0x1e4>)
 800ea50:	69a1      	ldr	r1, [r4, #24]
 800ea52:	4a72      	ldr	r2, [pc, #456]	; (800ec1c <_scanf_i+0x1e8>)
 800ea54:	2903      	cmp	r1, #3
 800ea56:	bf18      	it	ne
 800ea58:	461a      	movne	r2, r3
 800ea5a:	68a3      	ldr	r3, [r4, #8]
 800ea5c:	9201      	str	r2, [sp, #4]
 800ea5e:	1e5a      	subs	r2, r3, #1
 800ea60:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800ea64:	bf88      	it	hi
 800ea66:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800ea6a:	4627      	mov	r7, r4
 800ea6c:	bf82      	ittt	hi
 800ea6e:	eb03 0905 	addhi.w	r9, r3, r5
 800ea72:	f240 135d 	movwhi	r3, #349	; 0x15d
 800ea76:	60a3      	strhi	r3, [r4, #8]
 800ea78:	f857 3b1c 	ldr.w	r3, [r7], #28
 800ea7c:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800ea80:	bf98      	it	ls
 800ea82:	f04f 0900 	movls.w	r9, #0
 800ea86:	6023      	str	r3, [r4, #0]
 800ea88:	463d      	mov	r5, r7
 800ea8a:	f04f 0b00 	mov.w	fp, #0
 800ea8e:	6831      	ldr	r1, [r6, #0]
 800ea90:	ab03      	add	r3, sp, #12
 800ea92:	7809      	ldrb	r1, [r1, #0]
 800ea94:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800ea98:	2202      	movs	r2, #2
 800ea9a:	f7f1 fbb9 	bl	8000210 <memchr>
 800ea9e:	b328      	cbz	r0, 800eaec <_scanf_i+0xb8>
 800eaa0:	f1bb 0f01 	cmp.w	fp, #1
 800eaa4:	d159      	bne.n	800eb5a <_scanf_i+0x126>
 800eaa6:	6862      	ldr	r2, [r4, #4]
 800eaa8:	b92a      	cbnz	r2, 800eab6 <_scanf_i+0x82>
 800eaaa:	6822      	ldr	r2, [r4, #0]
 800eaac:	2308      	movs	r3, #8
 800eaae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800eab2:	6063      	str	r3, [r4, #4]
 800eab4:	6022      	str	r2, [r4, #0]
 800eab6:	6822      	ldr	r2, [r4, #0]
 800eab8:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800eabc:	6022      	str	r2, [r4, #0]
 800eabe:	68a2      	ldr	r2, [r4, #8]
 800eac0:	1e51      	subs	r1, r2, #1
 800eac2:	60a1      	str	r1, [r4, #8]
 800eac4:	b192      	cbz	r2, 800eaec <_scanf_i+0xb8>
 800eac6:	6832      	ldr	r2, [r6, #0]
 800eac8:	1c51      	adds	r1, r2, #1
 800eaca:	6031      	str	r1, [r6, #0]
 800eacc:	7812      	ldrb	r2, [r2, #0]
 800eace:	f805 2b01 	strb.w	r2, [r5], #1
 800ead2:	6872      	ldr	r2, [r6, #4]
 800ead4:	3a01      	subs	r2, #1
 800ead6:	2a00      	cmp	r2, #0
 800ead8:	6072      	str	r2, [r6, #4]
 800eada:	dc07      	bgt.n	800eaec <_scanf_i+0xb8>
 800eadc:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800eae0:	4631      	mov	r1, r6
 800eae2:	4650      	mov	r0, sl
 800eae4:	4790      	blx	r2
 800eae6:	2800      	cmp	r0, #0
 800eae8:	f040 8085 	bne.w	800ebf6 <_scanf_i+0x1c2>
 800eaec:	f10b 0b01 	add.w	fp, fp, #1
 800eaf0:	f1bb 0f03 	cmp.w	fp, #3
 800eaf4:	d1cb      	bne.n	800ea8e <_scanf_i+0x5a>
 800eaf6:	6863      	ldr	r3, [r4, #4]
 800eaf8:	b90b      	cbnz	r3, 800eafe <_scanf_i+0xca>
 800eafa:	230a      	movs	r3, #10
 800eafc:	6063      	str	r3, [r4, #4]
 800eafe:	6863      	ldr	r3, [r4, #4]
 800eb00:	4947      	ldr	r1, [pc, #284]	; (800ec20 <_scanf_i+0x1ec>)
 800eb02:	6960      	ldr	r0, [r4, #20]
 800eb04:	1ac9      	subs	r1, r1, r3
 800eb06:	f000 f89f 	bl	800ec48 <__sccl>
 800eb0a:	f04f 0b00 	mov.w	fp, #0
 800eb0e:	68a3      	ldr	r3, [r4, #8]
 800eb10:	6822      	ldr	r2, [r4, #0]
 800eb12:	2b00      	cmp	r3, #0
 800eb14:	d03d      	beq.n	800eb92 <_scanf_i+0x15e>
 800eb16:	6831      	ldr	r1, [r6, #0]
 800eb18:	6960      	ldr	r0, [r4, #20]
 800eb1a:	f891 c000 	ldrb.w	ip, [r1]
 800eb1e:	f810 000c 	ldrb.w	r0, [r0, ip]
 800eb22:	2800      	cmp	r0, #0
 800eb24:	d035      	beq.n	800eb92 <_scanf_i+0x15e>
 800eb26:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800eb2a:	d124      	bne.n	800eb76 <_scanf_i+0x142>
 800eb2c:	0510      	lsls	r0, r2, #20
 800eb2e:	d522      	bpl.n	800eb76 <_scanf_i+0x142>
 800eb30:	f10b 0b01 	add.w	fp, fp, #1
 800eb34:	f1b9 0f00 	cmp.w	r9, #0
 800eb38:	d003      	beq.n	800eb42 <_scanf_i+0x10e>
 800eb3a:	3301      	adds	r3, #1
 800eb3c:	f109 39ff 	add.w	r9, r9, #4294967295
 800eb40:	60a3      	str	r3, [r4, #8]
 800eb42:	6873      	ldr	r3, [r6, #4]
 800eb44:	3b01      	subs	r3, #1
 800eb46:	2b00      	cmp	r3, #0
 800eb48:	6073      	str	r3, [r6, #4]
 800eb4a:	dd1b      	ble.n	800eb84 <_scanf_i+0x150>
 800eb4c:	6833      	ldr	r3, [r6, #0]
 800eb4e:	3301      	adds	r3, #1
 800eb50:	6033      	str	r3, [r6, #0]
 800eb52:	68a3      	ldr	r3, [r4, #8]
 800eb54:	3b01      	subs	r3, #1
 800eb56:	60a3      	str	r3, [r4, #8]
 800eb58:	e7d9      	b.n	800eb0e <_scanf_i+0xda>
 800eb5a:	f1bb 0f02 	cmp.w	fp, #2
 800eb5e:	d1ae      	bne.n	800eabe <_scanf_i+0x8a>
 800eb60:	6822      	ldr	r2, [r4, #0]
 800eb62:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800eb66:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800eb6a:	d1bf      	bne.n	800eaec <_scanf_i+0xb8>
 800eb6c:	2310      	movs	r3, #16
 800eb6e:	6063      	str	r3, [r4, #4]
 800eb70:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800eb74:	e7a2      	b.n	800eabc <_scanf_i+0x88>
 800eb76:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800eb7a:	6022      	str	r2, [r4, #0]
 800eb7c:	780b      	ldrb	r3, [r1, #0]
 800eb7e:	f805 3b01 	strb.w	r3, [r5], #1
 800eb82:	e7de      	b.n	800eb42 <_scanf_i+0x10e>
 800eb84:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800eb88:	4631      	mov	r1, r6
 800eb8a:	4650      	mov	r0, sl
 800eb8c:	4798      	blx	r3
 800eb8e:	2800      	cmp	r0, #0
 800eb90:	d0df      	beq.n	800eb52 <_scanf_i+0x11e>
 800eb92:	6823      	ldr	r3, [r4, #0]
 800eb94:	05db      	lsls	r3, r3, #23
 800eb96:	d50d      	bpl.n	800ebb4 <_scanf_i+0x180>
 800eb98:	42bd      	cmp	r5, r7
 800eb9a:	d909      	bls.n	800ebb0 <_scanf_i+0x17c>
 800eb9c:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800eba0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800eba4:	4632      	mov	r2, r6
 800eba6:	4650      	mov	r0, sl
 800eba8:	4798      	blx	r3
 800ebaa:	f105 39ff 	add.w	r9, r5, #4294967295
 800ebae:	464d      	mov	r5, r9
 800ebb0:	42bd      	cmp	r5, r7
 800ebb2:	d02d      	beq.n	800ec10 <_scanf_i+0x1dc>
 800ebb4:	6822      	ldr	r2, [r4, #0]
 800ebb6:	f012 0210 	ands.w	r2, r2, #16
 800ebba:	d113      	bne.n	800ebe4 <_scanf_i+0x1b0>
 800ebbc:	702a      	strb	r2, [r5, #0]
 800ebbe:	6863      	ldr	r3, [r4, #4]
 800ebc0:	9e01      	ldr	r6, [sp, #4]
 800ebc2:	4639      	mov	r1, r7
 800ebc4:	4650      	mov	r0, sl
 800ebc6:	47b0      	blx	r6
 800ebc8:	6821      	ldr	r1, [r4, #0]
 800ebca:	f8d8 3000 	ldr.w	r3, [r8]
 800ebce:	f011 0f20 	tst.w	r1, #32
 800ebd2:	d013      	beq.n	800ebfc <_scanf_i+0x1c8>
 800ebd4:	1d1a      	adds	r2, r3, #4
 800ebd6:	f8c8 2000 	str.w	r2, [r8]
 800ebda:	681b      	ldr	r3, [r3, #0]
 800ebdc:	6018      	str	r0, [r3, #0]
 800ebde:	68e3      	ldr	r3, [r4, #12]
 800ebe0:	3301      	adds	r3, #1
 800ebe2:	60e3      	str	r3, [r4, #12]
 800ebe4:	1bed      	subs	r5, r5, r7
 800ebe6:	44ab      	add	fp, r5
 800ebe8:	6925      	ldr	r5, [r4, #16]
 800ebea:	445d      	add	r5, fp
 800ebec:	6125      	str	r5, [r4, #16]
 800ebee:	2000      	movs	r0, #0
 800ebf0:	b007      	add	sp, #28
 800ebf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebf6:	f04f 0b00 	mov.w	fp, #0
 800ebfa:	e7ca      	b.n	800eb92 <_scanf_i+0x15e>
 800ebfc:	1d1a      	adds	r2, r3, #4
 800ebfe:	f8c8 2000 	str.w	r2, [r8]
 800ec02:	681b      	ldr	r3, [r3, #0]
 800ec04:	f011 0f01 	tst.w	r1, #1
 800ec08:	bf14      	ite	ne
 800ec0a:	8018      	strhne	r0, [r3, #0]
 800ec0c:	6018      	streq	r0, [r3, #0]
 800ec0e:	e7e6      	b.n	800ebde <_scanf_i+0x1aa>
 800ec10:	2001      	movs	r0, #1
 800ec12:	e7ed      	b.n	800ebf0 <_scanf_i+0x1bc>
 800ec14:	0800f9e4 	.word	0x0800f9e4
 800ec18:	0800bb29 	.word	0x0800bb29
 800ec1c:	0800ba2d 	.word	0x0800ba2d
 800ec20:	08010416 	.word	0x08010416

0800ec24 <_read_r>:
 800ec24:	b538      	push	{r3, r4, r5, lr}
 800ec26:	4d07      	ldr	r5, [pc, #28]	; (800ec44 <_read_r+0x20>)
 800ec28:	4604      	mov	r4, r0
 800ec2a:	4608      	mov	r0, r1
 800ec2c:	4611      	mov	r1, r2
 800ec2e:	2200      	movs	r2, #0
 800ec30:	602a      	str	r2, [r5, #0]
 800ec32:	461a      	mov	r2, r3
 800ec34:	f000 fc60 	bl	800f4f8 <_read>
 800ec38:	1c43      	adds	r3, r0, #1
 800ec3a:	d102      	bne.n	800ec42 <_read_r+0x1e>
 800ec3c:	682b      	ldr	r3, [r5, #0]
 800ec3e:	b103      	cbz	r3, 800ec42 <_read_r+0x1e>
 800ec40:	6023      	str	r3, [r4, #0]
 800ec42:	bd38      	pop	{r3, r4, r5, pc}
 800ec44:	20000360 	.word	0x20000360

0800ec48 <__sccl>:
 800ec48:	b570      	push	{r4, r5, r6, lr}
 800ec4a:	780b      	ldrb	r3, [r1, #0]
 800ec4c:	4604      	mov	r4, r0
 800ec4e:	2b5e      	cmp	r3, #94	; 0x5e
 800ec50:	bf0b      	itete	eq
 800ec52:	784b      	ldrbeq	r3, [r1, #1]
 800ec54:	1c48      	addne	r0, r1, #1
 800ec56:	1c88      	addeq	r0, r1, #2
 800ec58:	2200      	movne	r2, #0
 800ec5a:	bf08      	it	eq
 800ec5c:	2201      	moveq	r2, #1
 800ec5e:	1e61      	subs	r1, r4, #1
 800ec60:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800ec64:	f801 2f01 	strb.w	r2, [r1, #1]!
 800ec68:	42a9      	cmp	r1, r5
 800ec6a:	d1fb      	bne.n	800ec64 <__sccl+0x1c>
 800ec6c:	b90b      	cbnz	r3, 800ec72 <__sccl+0x2a>
 800ec6e:	3801      	subs	r0, #1
 800ec70:	bd70      	pop	{r4, r5, r6, pc}
 800ec72:	f082 0201 	eor.w	r2, r2, #1
 800ec76:	54e2      	strb	r2, [r4, r3]
 800ec78:	4605      	mov	r5, r0
 800ec7a:	4628      	mov	r0, r5
 800ec7c:	f810 1b01 	ldrb.w	r1, [r0], #1
 800ec80:	292d      	cmp	r1, #45	; 0x2d
 800ec82:	d006      	beq.n	800ec92 <__sccl+0x4a>
 800ec84:	295d      	cmp	r1, #93	; 0x5d
 800ec86:	d0f3      	beq.n	800ec70 <__sccl+0x28>
 800ec88:	b909      	cbnz	r1, 800ec8e <__sccl+0x46>
 800ec8a:	4628      	mov	r0, r5
 800ec8c:	e7f0      	b.n	800ec70 <__sccl+0x28>
 800ec8e:	460b      	mov	r3, r1
 800ec90:	e7f1      	b.n	800ec76 <__sccl+0x2e>
 800ec92:	786e      	ldrb	r6, [r5, #1]
 800ec94:	2e5d      	cmp	r6, #93	; 0x5d
 800ec96:	d0fa      	beq.n	800ec8e <__sccl+0x46>
 800ec98:	42b3      	cmp	r3, r6
 800ec9a:	dcf8      	bgt.n	800ec8e <__sccl+0x46>
 800ec9c:	3502      	adds	r5, #2
 800ec9e:	4619      	mov	r1, r3
 800eca0:	3101      	adds	r1, #1
 800eca2:	428e      	cmp	r6, r1
 800eca4:	5462      	strb	r2, [r4, r1]
 800eca6:	dcfb      	bgt.n	800eca0 <__sccl+0x58>
 800eca8:	1af1      	subs	r1, r6, r3
 800ecaa:	3901      	subs	r1, #1
 800ecac:	1c58      	adds	r0, r3, #1
 800ecae:	42b3      	cmp	r3, r6
 800ecb0:	bfa8      	it	ge
 800ecb2:	2100      	movge	r1, #0
 800ecb4:	1843      	adds	r3, r0, r1
 800ecb6:	e7e0      	b.n	800ec7a <__sccl+0x32>

0800ecb8 <__submore>:
 800ecb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ecbc:	460c      	mov	r4, r1
 800ecbe:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800ecc0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ecc4:	4299      	cmp	r1, r3
 800ecc6:	d11d      	bne.n	800ed04 <__submore+0x4c>
 800ecc8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800eccc:	f7fa faaa 	bl	8009224 <_malloc_r>
 800ecd0:	b918      	cbnz	r0, 800ecda <__submore+0x22>
 800ecd2:	f04f 30ff 	mov.w	r0, #4294967295
 800ecd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ecda:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ecde:	63a3      	str	r3, [r4, #56]	; 0x38
 800ece0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800ece4:	6360      	str	r0, [r4, #52]	; 0x34
 800ece6:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800ecea:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ecee:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 800ecf2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ecf6:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 800ecfa:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800ecfe:	6020      	str	r0, [r4, #0]
 800ed00:	2000      	movs	r0, #0
 800ed02:	e7e8      	b.n	800ecd6 <__submore+0x1e>
 800ed04:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800ed06:	0077      	lsls	r7, r6, #1
 800ed08:	463a      	mov	r2, r7
 800ed0a:	f000 fb27 	bl	800f35c <_realloc_r>
 800ed0e:	4605      	mov	r5, r0
 800ed10:	2800      	cmp	r0, #0
 800ed12:	d0de      	beq.n	800ecd2 <__submore+0x1a>
 800ed14:	eb00 0806 	add.w	r8, r0, r6
 800ed18:	4601      	mov	r1, r0
 800ed1a:	4632      	mov	r2, r6
 800ed1c:	4640      	mov	r0, r8
 800ed1e:	f7f9 ff8d 	bl	8008c3c <memcpy>
 800ed22:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800ed26:	f8c4 8000 	str.w	r8, [r4]
 800ed2a:	e7e9      	b.n	800ed00 <__submore+0x48>

0800ed2c <__swbuf_r>:
 800ed2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed2e:	460e      	mov	r6, r1
 800ed30:	4614      	mov	r4, r2
 800ed32:	4605      	mov	r5, r0
 800ed34:	b118      	cbz	r0, 800ed3e <__swbuf_r+0x12>
 800ed36:	6983      	ldr	r3, [r0, #24]
 800ed38:	b90b      	cbnz	r3, 800ed3e <__swbuf_r+0x12>
 800ed3a:	f000 f9f3 	bl	800f124 <__sinit>
 800ed3e:	4b21      	ldr	r3, [pc, #132]	; (800edc4 <__swbuf_r+0x98>)
 800ed40:	429c      	cmp	r4, r3
 800ed42:	d12b      	bne.n	800ed9c <__swbuf_r+0x70>
 800ed44:	686c      	ldr	r4, [r5, #4]
 800ed46:	69a3      	ldr	r3, [r4, #24]
 800ed48:	60a3      	str	r3, [r4, #8]
 800ed4a:	89a3      	ldrh	r3, [r4, #12]
 800ed4c:	071a      	lsls	r2, r3, #28
 800ed4e:	d52f      	bpl.n	800edb0 <__swbuf_r+0x84>
 800ed50:	6923      	ldr	r3, [r4, #16]
 800ed52:	b36b      	cbz	r3, 800edb0 <__swbuf_r+0x84>
 800ed54:	6923      	ldr	r3, [r4, #16]
 800ed56:	6820      	ldr	r0, [r4, #0]
 800ed58:	1ac0      	subs	r0, r0, r3
 800ed5a:	6963      	ldr	r3, [r4, #20]
 800ed5c:	b2f6      	uxtb	r6, r6
 800ed5e:	4283      	cmp	r3, r0
 800ed60:	4637      	mov	r7, r6
 800ed62:	dc04      	bgt.n	800ed6e <__swbuf_r+0x42>
 800ed64:	4621      	mov	r1, r4
 800ed66:	4628      	mov	r0, r5
 800ed68:	f000 f948 	bl	800effc <_fflush_r>
 800ed6c:	bb30      	cbnz	r0, 800edbc <__swbuf_r+0x90>
 800ed6e:	68a3      	ldr	r3, [r4, #8]
 800ed70:	3b01      	subs	r3, #1
 800ed72:	60a3      	str	r3, [r4, #8]
 800ed74:	6823      	ldr	r3, [r4, #0]
 800ed76:	1c5a      	adds	r2, r3, #1
 800ed78:	6022      	str	r2, [r4, #0]
 800ed7a:	701e      	strb	r6, [r3, #0]
 800ed7c:	6963      	ldr	r3, [r4, #20]
 800ed7e:	3001      	adds	r0, #1
 800ed80:	4283      	cmp	r3, r0
 800ed82:	d004      	beq.n	800ed8e <__swbuf_r+0x62>
 800ed84:	89a3      	ldrh	r3, [r4, #12]
 800ed86:	07db      	lsls	r3, r3, #31
 800ed88:	d506      	bpl.n	800ed98 <__swbuf_r+0x6c>
 800ed8a:	2e0a      	cmp	r6, #10
 800ed8c:	d104      	bne.n	800ed98 <__swbuf_r+0x6c>
 800ed8e:	4621      	mov	r1, r4
 800ed90:	4628      	mov	r0, r5
 800ed92:	f000 f933 	bl	800effc <_fflush_r>
 800ed96:	b988      	cbnz	r0, 800edbc <__swbuf_r+0x90>
 800ed98:	4638      	mov	r0, r7
 800ed9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed9c:	4b0a      	ldr	r3, [pc, #40]	; (800edc8 <__swbuf_r+0x9c>)
 800ed9e:	429c      	cmp	r4, r3
 800eda0:	d101      	bne.n	800eda6 <__swbuf_r+0x7a>
 800eda2:	68ac      	ldr	r4, [r5, #8]
 800eda4:	e7cf      	b.n	800ed46 <__swbuf_r+0x1a>
 800eda6:	4b09      	ldr	r3, [pc, #36]	; (800edcc <__swbuf_r+0xa0>)
 800eda8:	429c      	cmp	r4, r3
 800edaa:	bf08      	it	eq
 800edac:	68ec      	ldreq	r4, [r5, #12]
 800edae:	e7ca      	b.n	800ed46 <__swbuf_r+0x1a>
 800edb0:	4621      	mov	r1, r4
 800edb2:	4628      	mov	r0, r5
 800edb4:	f000 f81a 	bl	800edec <__swsetup_r>
 800edb8:	2800      	cmp	r0, #0
 800edba:	d0cb      	beq.n	800ed54 <__swbuf_r+0x28>
 800edbc:	f04f 37ff 	mov.w	r7, #4294967295
 800edc0:	e7ea      	b.n	800ed98 <__swbuf_r+0x6c>
 800edc2:	bf00      	nop
 800edc4:	08010438 	.word	0x08010438
 800edc8:	08010458 	.word	0x08010458
 800edcc:	08010418 	.word	0x08010418

0800edd0 <__ascii_wctomb>:
 800edd0:	b149      	cbz	r1, 800ede6 <__ascii_wctomb+0x16>
 800edd2:	2aff      	cmp	r2, #255	; 0xff
 800edd4:	bf85      	ittet	hi
 800edd6:	238a      	movhi	r3, #138	; 0x8a
 800edd8:	6003      	strhi	r3, [r0, #0]
 800edda:	700a      	strbls	r2, [r1, #0]
 800eddc:	f04f 30ff 	movhi.w	r0, #4294967295
 800ede0:	bf98      	it	ls
 800ede2:	2001      	movls	r0, #1
 800ede4:	4770      	bx	lr
 800ede6:	4608      	mov	r0, r1
 800ede8:	4770      	bx	lr
	...

0800edec <__swsetup_r>:
 800edec:	4b32      	ldr	r3, [pc, #200]	; (800eeb8 <__swsetup_r+0xcc>)
 800edee:	b570      	push	{r4, r5, r6, lr}
 800edf0:	681d      	ldr	r5, [r3, #0]
 800edf2:	4606      	mov	r6, r0
 800edf4:	460c      	mov	r4, r1
 800edf6:	b125      	cbz	r5, 800ee02 <__swsetup_r+0x16>
 800edf8:	69ab      	ldr	r3, [r5, #24]
 800edfa:	b913      	cbnz	r3, 800ee02 <__swsetup_r+0x16>
 800edfc:	4628      	mov	r0, r5
 800edfe:	f000 f991 	bl	800f124 <__sinit>
 800ee02:	4b2e      	ldr	r3, [pc, #184]	; (800eebc <__swsetup_r+0xd0>)
 800ee04:	429c      	cmp	r4, r3
 800ee06:	d10f      	bne.n	800ee28 <__swsetup_r+0x3c>
 800ee08:	686c      	ldr	r4, [r5, #4]
 800ee0a:	89a3      	ldrh	r3, [r4, #12]
 800ee0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ee10:	0719      	lsls	r1, r3, #28
 800ee12:	d42c      	bmi.n	800ee6e <__swsetup_r+0x82>
 800ee14:	06dd      	lsls	r5, r3, #27
 800ee16:	d411      	bmi.n	800ee3c <__swsetup_r+0x50>
 800ee18:	2309      	movs	r3, #9
 800ee1a:	6033      	str	r3, [r6, #0]
 800ee1c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800ee20:	81a3      	strh	r3, [r4, #12]
 800ee22:	f04f 30ff 	mov.w	r0, #4294967295
 800ee26:	e03e      	b.n	800eea6 <__swsetup_r+0xba>
 800ee28:	4b25      	ldr	r3, [pc, #148]	; (800eec0 <__swsetup_r+0xd4>)
 800ee2a:	429c      	cmp	r4, r3
 800ee2c:	d101      	bne.n	800ee32 <__swsetup_r+0x46>
 800ee2e:	68ac      	ldr	r4, [r5, #8]
 800ee30:	e7eb      	b.n	800ee0a <__swsetup_r+0x1e>
 800ee32:	4b24      	ldr	r3, [pc, #144]	; (800eec4 <__swsetup_r+0xd8>)
 800ee34:	429c      	cmp	r4, r3
 800ee36:	bf08      	it	eq
 800ee38:	68ec      	ldreq	r4, [r5, #12]
 800ee3a:	e7e6      	b.n	800ee0a <__swsetup_r+0x1e>
 800ee3c:	0758      	lsls	r0, r3, #29
 800ee3e:	d512      	bpl.n	800ee66 <__swsetup_r+0x7a>
 800ee40:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ee42:	b141      	cbz	r1, 800ee56 <__swsetup_r+0x6a>
 800ee44:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ee48:	4299      	cmp	r1, r3
 800ee4a:	d002      	beq.n	800ee52 <__swsetup_r+0x66>
 800ee4c:	4630      	mov	r0, r6
 800ee4e:	f7fa f97d 	bl	800914c <_free_r>
 800ee52:	2300      	movs	r3, #0
 800ee54:	6363      	str	r3, [r4, #52]	; 0x34
 800ee56:	89a3      	ldrh	r3, [r4, #12]
 800ee58:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800ee5c:	81a3      	strh	r3, [r4, #12]
 800ee5e:	2300      	movs	r3, #0
 800ee60:	6063      	str	r3, [r4, #4]
 800ee62:	6923      	ldr	r3, [r4, #16]
 800ee64:	6023      	str	r3, [r4, #0]
 800ee66:	89a3      	ldrh	r3, [r4, #12]
 800ee68:	f043 0308 	orr.w	r3, r3, #8
 800ee6c:	81a3      	strh	r3, [r4, #12]
 800ee6e:	6923      	ldr	r3, [r4, #16]
 800ee70:	b94b      	cbnz	r3, 800ee86 <__swsetup_r+0x9a>
 800ee72:	89a3      	ldrh	r3, [r4, #12]
 800ee74:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800ee78:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ee7c:	d003      	beq.n	800ee86 <__swsetup_r+0x9a>
 800ee7e:	4621      	mov	r1, r4
 800ee80:	4630      	mov	r0, r6
 800ee82:	f000 fa11 	bl	800f2a8 <__smakebuf_r>
 800ee86:	89a0      	ldrh	r0, [r4, #12]
 800ee88:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ee8c:	f010 0301 	ands.w	r3, r0, #1
 800ee90:	d00a      	beq.n	800eea8 <__swsetup_r+0xbc>
 800ee92:	2300      	movs	r3, #0
 800ee94:	60a3      	str	r3, [r4, #8]
 800ee96:	6963      	ldr	r3, [r4, #20]
 800ee98:	425b      	negs	r3, r3
 800ee9a:	61a3      	str	r3, [r4, #24]
 800ee9c:	6923      	ldr	r3, [r4, #16]
 800ee9e:	b943      	cbnz	r3, 800eeb2 <__swsetup_r+0xc6>
 800eea0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800eea4:	d1ba      	bne.n	800ee1c <__swsetup_r+0x30>
 800eea6:	bd70      	pop	{r4, r5, r6, pc}
 800eea8:	0781      	lsls	r1, r0, #30
 800eeaa:	bf58      	it	pl
 800eeac:	6963      	ldrpl	r3, [r4, #20]
 800eeae:	60a3      	str	r3, [r4, #8]
 800eeb0:	e7f4      	b.n	800ee9c <__swsetup_r+0xb0>
 800eeb2:	2000      	movs	r0, #0
 800eeb4:	e7f7      	b.n	800eea6 <__swsetup_r+0xba>
 800eeb6:	bf00      	nop
 800eeb8:	2000000c 	.word	0x2000000c
 800eebc:	08010438 	.word	0x08010438
 800eec0:	08010458 	.word	0x08010458
 800eec4:	08010418 	.word	0x08010418

0800eec8 <abort>:
 800eec8:	b508      	push	{r3, lr}
 800eeca:	2006      	movs	r0, #6
 800eecc:	f000 fa9e 	bl	800f40c <raise>
 800eed0:	2001      	movs	r0, #1
 800eed2:	f000 fb2f 	bl	800f534 <_exit>
	...

0800eed8 <__env_lock>:
 800eed8:	4801      	ldr	r0, [pc, #4]	; (800eee0 <__env_lock+0x8>)
 800eeda:	f7fe bbbf 	b.w	800d65c <__retarget_lock_acquire_recursive>
 800eede:	bf00      	nop
 800eee0:	20000358 	.word	0x20000358

0800eee4 <__env_unlock>:
 800eee4:	4801      	ldr	r0, [pc, #4]	; (800eeec <__env_unlock+0x8>)
 800eee6:	f7fe bbbb 	b.w	800d660 <__retarget_lock_release_recursive>
 800eeea:	bf00      	nop
 800eeec:	20000358 	.word	0x20000358

0800eef0 <__sflush_r>:
 800eef0:	898a      	ldrh	r2, [r1, #12]
 800eef2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eef6:	4605      	mov	r5, r0
 800eef8:	0710      	lsls	r0, r2, #28
 800eefa:	460c      	mov	r4, r1
 800eefc:	d458      	bmi.n	800efb0 <__sflush_r+0xc0>
 800eefe:	684b      	ldr	r3, [r1, #4]
 800ef00:	2b00      	cmp	r3, #0
 800ef02:	dc05      	bgt.n	800ef10 <__sflush_r+0x20>
 800ef04:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800ef06:	2b00      	cmp	r3, #0
 800ef08:	dc02      	bgt.n	800ef10 <__sflush_r+0x20>
 800ef0a:	2000      	movs	r0, #0
 800ef0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef10:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800ef12:	2e00      	cmp	r6, #0
 800ef14:	d0f9      	beq.n	800ef0a <__sflush_r+0x1a>
 800ef16:	2300      	movs	r3, #0
 800ef18:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800ef1c:	682f      	ldr	r7, [r5, #0]
 800ef1e:	602b      	str	r3, [r5, #0]
 800ef20:	d032      	beq.n	800ef88 <__sflush_r+0x98>
 800ef22:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800ef24:	89a3      	ldrh	r3, [r4, #12]
 800ef26:	075a      	lsls	r2, r3, #29
 800ef28:	d505      	bpl.n	800ef36 <__sflush_r+0x46>
 800ef2a:	6863      	ldr	r3, [r4, #4]
 800ef2c:	1ac0      	subs	r0, r0, r3
 800ef2e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ef30:	b10b      	cbz	r3, 800ef36 <__sflush_r+0x46>
 800ef32:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ef34:	1ac0      	subs	r0, r0, r3
 800ef36:	2300      	movs	r3, #0
 800ef38:	4602      	mov	r2, r0
 800ef3a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800ef3c:	6a21      	ldr	r1, [r4, #32]
 800ef3e:	4628      	mov	r0, r5
 800ef40:	47b0      	blx	r6
 800ef42:	1c43      	adds	r3, r0, #1
 800ef44:	89a3      	ldrh	r3, [r4, #12]
 800ef46:	d106      	bne.n	800ef56 <__sflush_r+0x66>
 800ef48:	6829      	ldr	r1, [r5, #0]
 800ef4a:	291d      	cmp	r1, #29
 800ef4c:	d82c      	bhi.n	800efa8 <__sflush_r+0xb8>
 800ef4e:	4a2a      	ldr	r2, [pc, #168]	; (800eff8 <__sflush_r+0x108>)
 800ef50:	40ca      	lsrs	r2, r1
 800ef52:	07d6      	lsls	r6, r2, #31
 800ef54:	d528      	bpl.n	800efa8 <__sflush_r+0xb8>
 800ef56:	2200      	movs	r2, #0
 800ef58:	6062      	str	r2, [r4, #4]
 800ef5a:	04d9      	lsls	r1, r3, #19
 800ef5c:	6922      	ldr	r2, [r4, #16]
 800ef5e:	6022      	str	r2, [r4, #0]
 800ef60:	d504      	bpl.n	800ef6c <__sflush_r+0x7c>
 800ef62:	1c42      	adds	r2, r0, #1
 800ef64:	d101      	bne.n	800ef6a <__sflush_r+0x7a>
 800ef66:	682b      	ldr	r3, [r5, #0]
 800ef68:	b903      	cbnz	r3, 800ef6c <__sflush_r+0x7c>
 800ef6a:	6560      	str	r0, [r4, #84]	; 0x54
 800ef6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ef6e:	602f      	str	r7, [r5, #0]
 800ef70:	2900      	cmp	r1, #0
 800ef72:	d0ca      	beq.n	800ef0a <__sflush_r+0x1a>
 800ef74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ef78:	4299      	cmp	r1, r3
 800ef7a:	d002      	beq.n	800ef82 <__sflush_r+0x92>
 800ef7c:	4628      	mov	r0, r5
 800ef7e:	f7fa f8e5 	bl	800914c <_free_r>
 800ef82:	2000      	movs	r0, #0
 800ef84:	6360      	str	r0, [r4, #52]	; 0x34
 800ef86:	e7c1      	b.n	800ef0c <__sflush_r+0x1c>
 800ef88:	6a21      	ldr	r1, [r4, #32]
 800ef8a:	2301      	movs	r3, #1
 800ef8c:	4628      	mov	r0, r5
 800ef8e:	47b0      	blx	r6
 800ef90:	1c41      	adds	r1, r0, #1
 800ef92:	d1c7      	bne.n	800ef24 <__sflush_r+0x34>
 800ef94:	682b      	ldr	r3, [r5, #0]
 800ef96:	2b00      	cmp	r3, #0
 800ef98:	d0c4      	beq.n	800ef24 <__sflush_r+0x34>
 800ef9a:	2b1d      	cmp	r3, #29
 800ef9c:	d001      	beq.n	800efa2 <__sflush_r+0xb2>
 800ef9e:	2b16      	cmp	r3, #22
 800efa0:	d101      	bne.n	800efa6 <__sflush_r+0xb6>
 800efa2:	602f      	str	r7, [r5, #0]
 800efa4:	e7b1      	b.n	800ef0a <__sflush_r+0x1a>
 800efa6:	89a3      	ldrh	r3, [r4, #12]
 800efa8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800efac:	81a3      	strh	r3, [r4, #12]
 800efae:	e7ad      	b.n	800ef0c <__sflush_r+0x1c>
 800efb0:	690f      	ldr	r7, [r1, #16]
 800efb2:	2f00      	cmp	r7, #0
 800efb4:	d0a9      	beq.n	800ef0a <__sflush_r+0x1a>
 800efb6:	0793      	lsls	r3, r2, #30
 800efb8:	680e      	ldr	r6, [r1, #0]
 800efba:	bf08      	it	eq
 800efbc:	694b      	ldreq	r3, [r1, #20]
 800efbe:	600f      	str	r7, [r1, #0]
 800efc0:	bf18      	it	ne
 800efc2:	2300      	movne	r3, #0
 800efc4:	eba6 0807 	sub.w	r8, r6, r7
 800efc8:	608b      	str	r3, [r1, #8]
 800efca:	f1b8 0f00 	cmp.w	r8, #0
 800efce:	dd9c      	ble.n	800ef0a <__sflush_r+0x1a>
 800efd0:	6a21      	ldr	r1, [r4, #32]
 800efd2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800efd4:	4643      	mov	r3, r8
 800efd6:	463a      	mov	r2, r7
 800efd8:	4628      	mov	r0, r5
 800efda:	47b0      	blx	r6
 800efdc:	2800      	cmp	r0, #0
 800efde:	dc06      	bgt.n	800efee <__sflush_r+0xfe>
 800efe0:	89a3      	ldrh	r3, [r4, #12]
 800efe2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800efe6:	81a3      	strh	r3, [r4, #12]
 800efe8:	f04f 30ff 	mov.w	r0, #4294967295
 800efec:	e78e      	b.n	800ef0c <__sflush_r+0x1c>
 800efee:	4407      	add	r7, r0
 800eff0:	eba8 0800 	sub.w	r8, r8, r0
 800eff4:	e7e9      	b.n	800efca <__sflush_r+0xda>
 800eff6:	bf00      	nop
 800eff8:	20400001 	.word	0x20400001

0800effc <_fflush_r>:
 800effc:	b538      	push	{r3, r4, r5, lr}
 800effe:	690b      	ldr	r3, [r1, #16]
 800f000:	4605      	mov	r5, r0
 800f002:	460c      	mov	r4, r1
 800f004:	b913      	cbnz	r3, 800f00c <_fflush_r+0x10>
 800f006:	2500      	movs	r5, #0
 800f008:	4628      	mov	r0, r5
 800f00a:	bd38      	pop	{r3, r4, r5, pc}
 800f00c:	b118      	cbz	r0, 800f016 <_fflush_r+0x1a>
 800f00e:	6983      	ldr	r3, [r0, #24]
 800f010:	b90b      	cbnz	r3, 800f016 <_fflush_r+0x1a>
 800f012:	f000 f887 	bl	800f124 <__sinit>
 800f016:	4b14      	ldr	r3, [pc, #80]	; (800f068 <_fflush_r+0x6c>)
 800f018:	429c      	cmp	r4, r3
 800f01a:	d11b      	bne.n	800f054 <_fflush_r+0x58>
 800f01c:	686c      	ldr	r4, [r5, #4]
 800f01e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f022:	2b00      	cmp	r3, #0
 800f024:	d0ef      	beq.n	800f006 <_fflush_r+0xa>
 800f026:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f028:	07d0      	lsls	r0, r2, #31
 800f02a:	d404      	bmi.n	800f036 <_fflush_r+0x3a>
 800f02c:	0599      	lsls	r1, r3, #22
 800f02e:	d402      	bmi.n	800f036 <_fflush_r+0x3a>
 800f030:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f032:	f7fe fb13 	bl	800d65c <__retarget_lock_acquire_recursive>
 800f036:	4628      	mov	r0, r5
 800f038:	4621      	mov	r1, r4
 800f03a:	f7ff ff59 	bl	800eef0 <__sflush_r>
 800f03e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f040:	07da      	lsls	r2, r3, #31
 800f042:	4605      	mov	r5, r0
 800f044:	d4e0      	bmi.n	800f008 <_fflush_r+0xc>
 800f046:	89a3      	ldrh	r3, [r4, #12]
 800f048:	059b      	lsls	r3, r3, #22
 800f04a:	d4dd      	bmi.n	800f008 <_fflush_r+0xc>
 800f04c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f04e:	f7fe fb07 	bl	800d660 <__retarget_lock_release_recursive>
 800f052:	e7d9      	b.n	800f008 <_fflush_r+0xc>
 800f054:	4b05      	ldr	r3, [pc, #20]	; (800f06c <_fflush_r+0x70>)
 800f056:	429c      	cmp	r4, r3
 800f058:	d101      	bne.n	800f05e <_fflush_r+0x62>
 800f05a:	68ac      	ldr	r4, [r5, #8]
 800f05c:	e7df      	b.n	800f01e <_fflush_r+0x22>
 800f05e:	4b04      	ldr	r3, [pc, #16]	; (800f070 <_fflush_r+0x74>)
 800f060:	429c      	cmp	r4, r3
 800f062:	bf08      	it	eq
 800f064:	68ec      	ldreq	r4, [r5, #12]
 800f066:	e7da      	b.n	800f01e <_fflush_r+0x22>
 800f068:	08010438 	.word	0x08010438
 800f06c:	08010458 	.word	0x08010458
 800f070:	08010418 	.word	0x08010418

0800f074 <std>:
 800f074:	2300      	movs	r3, #0
 800f076:	b510      	push	{r4, lr}
 800f078:	4604      	mov	r4, r0
 800f07a:	e9c0 3300 	strd	r3, r3, [r0]
 800f07e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f082:	6083      	str	r3, [r0, #8]
 800f084:	8181      	strh	r1, [r0, #12]
 800f086:	6643      	str	r3, [r0, #100]	; 0x64
 800f088:	81c2      	strh	r2, [r0, #14]
 800f08a:	6183      	str	r3, [r0, #24]
 800f08c:	4619      	mov	r1, r3
 800f08e:	2208      	movs	r2, #8
 800f090:	305c      	adds	r0, #92	; 0x5c
 800f092:	f7f9 fde1 	bl	8008c58 <memset>
 800f096:	4b05      	ldr	r3, [pc, #20]	; (800f0ac <std+0x38>)
 800f098:	6263      	str	r3, [r4, #36]	; 0x24
 800f09a:	4b05      	ldr	r3, [pc, #20]	; (800f0b0 <std+0x3c>)
 800f09c:	62a3      	str	r3, [r4, #40]	; 0x28
 800f09e:	4b05      	ldr	r3, [pc, #20]	; (800f0b4 <std+0x40>)
 800f0a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f0a2:	4b05      	ldr	r3, [pc, #20]	; (800f0b8 <std+0x44>)
 800f0a4:	6224      	str	r4, [r4, #32]
 800f0a6:	6323      	str	r3, [r4, #48]	; 0x30
 800f0a8:	bd10      	pop	{r4, pc}
 800f0aa:	bf00      	nop
 800f0ac:	0800a12d 	.word	0x0800a12d
 800f0b0:	0800a153 	.word	0x0800a153
 800f0b4:	0800a18b 	.word	0x0800a18b
 800f0b8:	0800a1af 	.word	0x0800a1af

0800f0bc <_cleanup_r>:
 800f0bc:	4901      	ldr	r1, [pc, #4]	; (800f0c4 <_cleanup_r+0x8>)
 800f0be:	f000 b8af 	b.w	800f220 <_fwalk_reent>
 800f0c2:	bf00      	nop
 800f0c4:	0800effd 	.word	0x0800effd

0800f0c8 <__sfmoreglue>:
 800f0c8:	b570      	push	{r4, r5, r6, lr}
 800f0ca:	2268      	movs	r2, #104	; 0x68
 800f0cc:	1e4d      	subs	r5, r1, #1
 800f0ce:	4355      	muls	r5, r2
 800f0d0:	460e      	mov	r6, r1
 800f0d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f0d6:	f7fa f8a5 	bl	8009224 <_malloc_r>
 800f0da:	4604      	mov	r4, r0
 800f0dc:	b140      	cbz	r0, 800f0f0 <__sfmoreglue+0x28>
 800f0de:	2100      	movs	r1, #0
 800f0e0:	e9c0 1600 	strd	r1, r6, [r0]
 800f0e4:	300c      	adds	r0, #12
 800f0e6:	60a0      	str	r0, [r4, #8]
 800f0e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f0ec:	f7f9 fdb4 	bl	8008c58 <memset>
 800f0f0:	4620      	mov	r0, r4
 800f0f2:	bd70      	pop	{r4, r5, r6, pc}

0800f0f4 <__sfp_lock_acquire>:
 800f0f4:	4801      	ldr	r0, [pc, #4]	; (800f0fc <__sfp_lock_acquire+0x8>)
 800f0f6:	f7fe bab1 	b.w	800d65c <__retarget_lock_acquire_recursive>
 800f0fa:	bf00      	nop
 800f0fc:	2000035a 	.word	0x2000035a

0800f100 <__sfp_lock_release>:
 800f100:	4801      	ldr	r0, [pc, #4]	; (800f108 <__sfp_lock_release+0x8>)
 800f102:	f7fe baad 	b.w	800d660 <__retarget_lock_release_recursive>
 800f106:	bf00      	nop
 800f108:	2000035a 	.word	0x2000035a

0800f10c <__sinit_lock_acquire>:
 800f10c:	4801      	ldr	r0, [pc, #4]	; (800f114 <__sinit_lock_acquire+0x8>)
 800f10e:	f7fe baa5 	b.w	800d65c <__retarget_lock_acquire_recursive>
 800f112:	bf00      	nop
 800f114:	2000035b 	.word	0x2000035b

0800f118 <__sinit_lock_release>:
 800f118:	4801      	ldr	r0, [pc, #4]	; (800f120 <__sinit_lock_release+0x8>)
 800f11a:	f7fe baa1 	b.w	800d660 <__retarget_lock_release_recursive>
 800f11e:	bf00      	nop
 800f120:	2000035b 	.word	0x2000035b

0800f124 <__sinit>:
 800f124:	b510      	push	{r4, lr}
 800f126:	4604      	mov	r4, r0
 800f128:	f7ff fff0 	bl	800f10c <__sinit_lock_acquire>
 800f12c:	69a3      	ldr	r3, [r4, #24]
 800f12e:	b11b      	cbz	r3, 800f138 <__sinit+0x14>
 800f130:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f134:	f7ff bff0 	b.w	800f118 <__sinit_lock_release>
 800f138:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f13c:	6523      	str	r3, [r4, #80]	; 0x50
 800f13e:	4b13      	ldr	r3, [pc, #76]	; (800f18c <__sinit+0x68>)
 800f140:	4a13      	ldr	r2, [pc, #76]	; (800f190 <__sinit+0x6c>)
 800f142:	681b      	ldr	r3, [r3, #0]
 800f144:	62a2      	str	r2, [r4, #40]	; 0x28
 800f146:	42a3      	cmp	r3, r4
 800f148:	bf04      	itt	eq
 800f14a:	2301      	moveq	r3, #1
 800f14c:	61a3      	streq	r3, [r4, #24]
 800f14e:	4620      	mov	r0, r4
 800f150:	f000 f820 	bl	800f194 <__sfp>
 800f154:	6060      	str	r0, [r4, #4]
 800f156:	4620      	mov	r0, r4
 800f158:	f000 f81c 	bl	800f194 <__sfp>
 800f15c:	60a0      	str	r0, [r4, #8]
 800f15e:	4620      	mov	r0, r4
 800f160:	f000 f818 	bl	800f194 <__sfp>
 800f164:	2200      	movs	r2, #0
 800f166:	60e0      	str	r0, [r4, #12]
 800f168:	2104      	movs	r1, #4
 800f16a:	6860      	ldr	r0, [r4, #4]
 800f16c:	f7ff ff82 	bl	800f074 <std>
 800f170:	68a0      	ldr	r0, [r4, #8]
 800f172:	2201      	movs	r2, #1
 800f174:	2109      	movs	r1, #9
 800f176:	f7ff ff7d 	bl	800f074 <std>
 800f17a:	68e0      	ldr	r0, [r4, #12]
 800f17c:	2202      	movs	r2, #2
 800f17e:	2112      	movs	r1, #18
 800f180:	f7ff ff78 	bl	800f074 <std>
 800f184:	2301      	movs	r3, #1
 800f186:	61a3      	str	r3, [r4, #24]
 800f188:	e7d2      	b.n	800f130 <__sinit+0xc>
 800f18a:	bf00      	nop
 800f18c:	0800fbe8 	.word	0x0800fbe8
 800f190:	0800f0bd 	.word	0x0800f0bd

0800f194 <__sfp>:
 800f194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f196:	4607      	mov	r7, r0
 800f198:	f7ff ffac 	bl	800f0f4 <__sfp_lock_acquire>
 800f19c:	4b1e      	ldr	r3, [pc, #120]	; (800f218 <__sfp+0x84>)
 800f19e:	681e      	ldr	r6, [r3, #0]
 800f1a0:	69b3      	ldr	r3, [r6, #24]
 800f1a2:	b913      	cbnz	r3, 800f1aa <__sfp+0x16>
 800f1a4:	4630      	mov	r0, r6
 800f1a6:	f7ff ffbd 	bl	800f124 <__sinit>
 800f1aa:	3648      	adds	r6, #72	; 0x48
 800f1ac:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f1b0:	3b01      	subs	r3, #1
 800f1b2:	d503      	bpl.n	800f1bc <__sfp+0x28>
 800f1b4:	6833      	ldr	r3, [r6, #0]
 800f1b6:	b30b      	cbz	r3, 800f1fc <__sfp+0x68>
 800f1b8:	6836      	ldr	r6, [r6, #0]
 800f1ba:	e7f7      	b.n	800f1ac <__sfp+0x18>
 800f1bc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f1c0:	b9d5      	cbnz	r5, 800f1f8 <__sfp+0x64>
 800f1c2:	4b16      	ldr	r3, [pc, #88]	; (800f21c <__sfp+0x88>)
 800f1c4:	60e3      	str	r3, [r4, #12]
 800f1c6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f1ca:	6665      	str	r5, [r4, #100]	; 0x64
 800f1cc:	f7fe fa44 	bl	800d658 <__retarget_lock_init_recursive>
 800f1d0:	f7ff ff96 	bl	800f100 <__sfp_lock_release>
 800f1d4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f1d8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f1dc:	6025      	str	r5, [r4, #0]
 800f1de:	61a5      	str	r5, [r4, #24]
 800f1e0:	2208      	movs	r2, #8
 800f1e2:	4629      	mov	r1, r5
 800f1e4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f1e8:	f7f9 fd36 	bl	8008c58 <memset>
 800f1ec:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f1f0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f1f4:	4620      	mov	r0, r4
 800f1f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f1f8:	3468      	adds	r4, #104	; 0x68
 800f1fa:	e7d9      	b.n	800f1b0 <__sfp+0x1c>
 800f1fc:	2104      	movs	r1, #4
 800f1fe:	4638      	mov	r0, r7
 800f200:	f7ff ff62 	bl	800f0c8 <__sfmoreglue>
 800f204:	4604      	mov	r4, r0
 800f206:	6030      	str	r0, [r6, #0]
 800f208:	2800      	cmp	r0, #0
 800f20a:	d1d5      	bne.n	800f1b8 <__sfp+0x24>
 800f20c:	f7ff ff78 	bl	800f100 <__sfp_lock_release>
 800f210:	230c      	movs	r3, #12
 800f212:	603b      	str	r3, [r7, #0]
 800f214:	e7ee      	b.n	800f1f4 <__sfp+0x60>
 800f216:	bf00      	nop
 800f218:	0800fbe8 	.word	0x0800fbe8
 800f21c:	ffff0001 	.word	0xffff0001

0800f220 <_fwalk_reent>:
 800f220:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f224:	4606      	mov	r6, r0
 800f226:	4688      	mov	r8, r1
 800f228:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800f22c:	2700      	movs	r7, #0
 800f22e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f232:	f1b9 0901 	subs.w	r9, r9, #1
 800f236:	d505      	bpl.n	800f244 <_fwalk_reent+0x24>
 800f238:	6824      	ldr	r4, [r4, #0]
 800f23a:	2c00      	cmp	r4, #0
 800f23c:	d1f7      	bne.n	800f22e <_fwalk_reent+0xe>
 800f23e:	4638      	mov	r0, r7
 800f240:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f244:	89ab      	ldrh	r3, [r5, #12]
 800f246:	2b01      	cmp	r3, #1
 800f248:	d907      	bls.n	800f25a <_fwalk_reent+0x3a>
 800f24a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f24e:	3301      	adds	r3, #1
 800f250:	d003      	beq.n	800f25a <_fwalk_reent+0x3a>
 800f252:	4629      	mov	r1, r5
 800f254:	4630      	mov	r0, r6
 800f256:	47c0      	blx	r8
 800f258:	4307      	orrs	r7, r0
 800f25a:	3568      	adds	r5, #104	; 0x68
 800f25c:	e7e9      	b.n	800f232 <_fwalk_reent+0x12>

0800f25e <__swhatbuf_r>:
 800f25e:	b570      	push	{r4, r5, r6, lr}
 800f260:	460e      	mov	r6, r1
 800f262:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f266:	2900      	cmp	r1, #0
 800f268:	b096      	sub	sp, #88	; 0x58
 800f26a:	4614      	mov	r4, r2
 800f26c:	461d      	mov	r5, r3
 800f26e:	da08      	bge.n	800f282 <__swhatbuf_r+0x24>
 800f270:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800f274:	2200      	movs	r2, #0
 800f276:	602a      	str	r2, [r5, #0]
 800f278:	061a      	lsls	r2, r3, #24
 800f27a:	d410      	bmi.n	800f29e <__swhatbuf_r+0x40>
 800f27c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f280:	e00e      	b.n	800f2a0 <__swhatbuf_r+0x42>
 800f282:	466a      	mov	r2, sp
 800f284:	f000 f8de 	bl	800f444 <_fstat_r>
 800f288:	2800      	cmp	r0, #0
 800f28a:	dbf1      	blt.n	800f270 <__swhatbuf_r+0x12>
 800f28c:	9a01      	ldr	r2, [sp, #4]
 800f28e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800f292:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800f296:	425a      	negs	r2, r3
 800f298:	415a      	adcs	r2, r3
 800f29a:	602a      	str	r2, [r5, #0]
 800f29c:	e7ee      	b.n	800f27c <__swhatbuf_r+0x1e>
 800f29e:	2340      	movs	r3, #64	; 0x40
 800f2a0:	2000      	movs	r0, #0
 800f2a2:	6023      	str	r3, [r4, #0]
 800f2a4:	b016      	add	sp, #88	; 0x58
 800f2a6:	bd70      	pop	{r4, r5, r6, pc}

0800f2a8 <__smakebuf_r>:
 800f2a8:	898b      	ldrh	r3, [r1, #12]
 800f2aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f2ac:	079d      	lsls	r5, r3, #30
 800f2ae:	4606      	mov	r6, r0
 800f2b0:	460c      	mov	r4, r1
 800f2b2:	d507      	bpl.n	800f2c4 <__smakebuf_r+0x1c>
 800f2b4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800f2b8:	6023      	str	r3, [r4, #0]
 800f2ba:	6123      	str	r3, [r4, #16]
 800f2bc:	2301      	movs	r3, #1
 800f2be:	6163      	str	r3, [r4, #20]
 800f2c0:	b002      	add	sp, #8
 800f2c2:	bd70      	pop	{r4, r5, r6, pc}
 800f2c4:	ab01      	add	r3, sp, #4
 800f2c6:	466a      	mov	r2, sp
 800f2c8:	f7ff ffc9 	bl	800f25e <__swhatbuf_r>
 800f2cc:	9900      	ldr	r1, [sp, #0]
 800f2ce:	4605      	mov	r5, r0
 800f2d0:	4630      	mov	r0, r6
 800f2d2:	f7f9 ffa7 	bl	8009224 <_malloc_r>
 800f2d6:	b948      	cbnz	r0, 800f2ec <__smakebuf_r+0x44>
 800f2d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f2dc:	059a      	lsls	r2, r3, #22
 800f2de:	d4ef      	bmi.n	800f2c0 <__smakebuf_r+0x18>
 800f2e0:	f023 0303 	bic.w	r3, r3, #3
 800f2e4:	f043 0302 	orr.w	r3, r3, #2
 800f2e8:	81a3      	strh	r3, [r4, #12]
 800f2ea:	e7e3      	b.n	800f2b4 <__smakebuf_r+0xc>
 800f2ec:	4b0d      	ldr	r3, [pc, #52]	; (800f324 <__smakebuf_r+0x7c>)
 800f2ee:	62b3      	str	r3, [r6, #40]	; 0x28
 800f2f0:	89a3      	ldrh	r3, [r4, #12]
 800f2f2:	6020      	str	r0, [r4, #0]
 800f2f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f2f8:	81a3      	strh	r3, [r4, #12]
 800f2fa:	9b00      	ldr	r3, [sp, #0]
 800f2fc:	6163      	str	r3, [r4, #20]
 800f2fe:	9b01      	ldr	r3, [sp, #4]
 800f300:	6120      	str	r0, [r4, #16]
 800f302:	b15b      	cbz	r3, 800f31c <__smakebuf_r+0x74>
 800f304:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800f308:	4630      	mov	r0, r6
 800f30a:	f000 f8ad 	bl	800f468 <_isatty_r>
 800f30e:	b128      	cbz	r0, 800f31c <__smakebuf_r+0x74>
 800f310:	89a3      	ldrh	r3, [r4, #12]
 800f312:	f023 0303 	bic.w	r3, r3, #3
 800f316:	f043 0301 	orr.w	r3, r3, #1
 800f31a:	81a3      	strh	r3, [r4, #12]
 800f31c:	89a0      	ldrh	r0, [r4, #12]
 800f31e:	4305      	orrs	r5, r0
 800f320:	81a5      	strh	r5, [r4, #12]
 800f322:	e7cd      	b.n	800f2c0 <__smakebuf_r+0x18>
 800f324:	0800f0bd 	.word	0x0800f0bd

0800f328 <memmove>:
 800f328:	4288      	cmp	r0, r1
 800f32a:	b510      	push	{r4, lr}
 800f32c:	eb01 0402 	add.w	r4, r1, r2
 800f330:	d902      	bls.n	800f338 <memmove+0x10>
 800f332:	4284      	cmp	r4, r0
 800f334:	4623      	mov	r3, r4
 800f336:	d807      	bhi.n	800f348 <memmove+0x20>
 800f338:	1e43      	subs	r3, r0, #1
 800f33a:	42a1      	cmp	r1, r4
 800f33c:	d008      	beq.n	800f350 <memmove+0x28>
 800f33e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f342:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f346:	e7f8      	b.n	800f33a <memmove+0x12>
 800f348:	4402      	add	r2, r0
 800f34a:	4601      	mov	r1, r0
 800f34c:	428a      	cmp	r2, r1
 800f34e:	d100      	bne.n	800f352 <memmove+0x2a>
 800f350:	bd10      	pop	{r4, pc}
 800f352:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f356:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f35a:	e7f7      	b.n	800f34c <memmove+0x24>

0800f35c <_realloc_r>:
 800f35c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f360:	4680      	mov	r8, r0
 800f362:	4614      	mov	r4, r2
 800f364:	460e      	mov	r6, r1
 800f366:	b921      	cbnz	r1, 800f372 <_realloc_r+0x16>
 800f368:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f36c:	4611      	mov	r1, r2
 800f36e:	f7f9 bf59 	b.w	8009224 <_malloc_r>
 800f372:	b92a      	cbnz	r2, 800f380 <_realloc_r+0x24>
 800f374:	f7f9 feea 	bl	800914c <_free_r>
 800f378:	4625      	mov	r5, r4
 800f37a:	4628      	mov	r0, r5
 800f37c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f380:	f000 f882 	bl	800f488 <_malloc_usable_size_r>
 800f384:	4284      	cmp	r4, r0
 800f386:	4607      	mov	r7, r0
 800f388:	d802      	bhi.n	800f390 <_realloc_r+0x34>
 800f38a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f38e:	d812      	bhi.n	800f3b6 <_realloc_r+0x5a>
 800f390:	4621      	mov	r1, r4
 800f392:	4640      	mov	r0, r8
 800f394:	f7f9 ff46 	bl	8009224 <_malloc_r>
 800f398:	4605      	mov	r5, r0
 800f39a:	2800      	cmp	r0, #0
 800f39c:	d0ed      	beq.n	800f37a <_realloc_r+0x1e>
 800f39e:	42bc      	cmp	r4, r7
 800f3a0:	4622      	mov	r2, r4
 800f3a2:	4631      	mov	r1, r6
 800f3a4:	bf28      	it	cs
 800f3a6:	463a      	movcs	r2, r7
 800f3a8:	f7f9 fc48 	bl	8008c3c <memcpy>
 800f3ac:	4631      	mov	r1, r6
 800f3ae:	4640      	mov	r0, r8
 800f3b0:	f7f9 fecc 	bl	800914c <_free_r>
 800f3b4:	e7e1      	b.n	800f37a <_realloc_r+0x1e>
 800f3b6:	4635      	mov	r5, r6
 800f3b8:	e7df      	b.n	800f37a <_realloc_r+0x1e>

0800f3ba <_raise_r>:
 800f3ba:	291f      	cmp	r1, #31
 800f3bc:	b538      	push	{r3, r4, r5, lr}
 800f3be:	4604      	mov	r4, r0
 800f3c0:	460d      	mov	r5, r1
 800f3c2:	d904      	bls.n	800f3ce <_raise_r+0x14>
 800f3c4:	2316      	movs	r3, #22
 800f3c6:	6003      	str	r3, [r0, #0]
 800f3c8:	f04f 30ff 	mov.w	r0, #4294967295
 800f3cc:	bd38      	pop	{r3, r4, r5, pc}
 800f3ce:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800f3d0:	b112      	cbz	r2, 800f3d8 <_raise_r+0x1e>
 800f3d2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800f3d6:	b94b      	cbnz	r3, 800f3ec <_raise_r+0x32>
 800f3d8:	4620      	mov	r0, r4
 800f3da:	f000 f831 	bl	800f440 <_getpid_r>
 800f3de:	462a      	mov	r2, r5
 800f3e0:	4601      	mov	r1, r0
 800f3e2:	4620      	mov	r0, r4
 800f3e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f3e8:	f000 b818 	b.w	800f41c <_kill_r>
 800f3ec:	2b01      	cmp	r3, #1
 800f3ee:	d00a      	beq.n	800f406 <_raise_r+0x4c>
 800f3f0:	1c59      	adds	r1, r3, #1
 800f3f2:	d103      	bne.n	800f3fc <_raise_r+0x42>
 800f3f4:	2316      	movs	r3, #22
 800f3f6:	6003      	str	r3, [r0, #0]
 800f3f8:	2001      	movs	r0, #1
 800f3fa:	e7e7      	b.n	800f3cc <_raise_r+0x12>
 800f3fc:	2400      	movs	r4, #0
 800f3fe:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800f402:	4628      	mov	r0, r5
 800f404:	4798      	blx	r3
 800f406:	2000      	movs	r0, #0
 800f408:	e7e0      	b.n	800f3cc <_raise_r+0x12>
	...

0800f40c <raise>:
 800f40c:	4b02      	ldr	r3, [pc, #8]	; (800f418 <raise+0xc>)
 800f40e:	4601      	mov	r1, r0
 800f410:	6818      	ldr	r0, [r3, #0]
 800f412:	f7ff bfd2 	b.w	800f3ba <_raise_r>
 800f416:	bf00      	nop
 800f418:	2000000c 	.word	0x2000000c

0800f41c <_kill_r>:
 800f41c:	b538      	push	{r3, r4, r5, lr}
 800f41e:	4d07      	ldr	r5, [pc, #28]	; (800f43c <_kill_r+0x20>)
 800f420:	2300      	movs	r3, #0
 800f422:	4604      	mov	r4, r0
 800f424:	4608      	mov	r0, r1
 800f426:	4611      	mov	r1, r2
 800f428:	602b      	str	r3, [r5, #0]
 800f42a:	f000 f855 	bl	800f4d8 <_kill>
 800f42e:	1c43      	adds	r3, r0, #1
 800f430:	d102      	bne.n	800f438 <_kill_r+0x1c>
 800f432:	682b      	ldr	r3, [r5, #0]
 800f434:	b103      	cbz	r3, 800f438 <_kill_r+0x1c>
 800f436:	6023      	str	r3, [r4, #0]
 800f438:	bd38      	pop	{r3, r4, r5, pc}
 800f43a:	bf00      	nop
 800f43c:	20000360 	.word	0x20000360

0800f440 <_getpid_r>:
 800f440:	f000 b83a 	b.w	800f4b8 <_getpid>

0800f444 <_fstat_r>:
 800f444:	b538      	push	{r3, r4, r5, lr}
 800f446:	4d07      	ldr	r5, [pc, #28]	; (800f464 <_fstat_r+0x20>)
 800f448:	2300      	movs	r3, #0
 800f44a:	4604      	mov	r4, r0
 800f44c:	4608      	mov	r0, r1
 800f44e:	4611      	mov	r1, r2
 800f450:	602b      	str	r3, [r5, #0]
 800f452:	f000 f829 	bl	800f4a8 <_fstat>
 800f456:	1c43      	adds	r3, r0, #1
 800f458:	d102      	bne.n	800f460 <_fstat_r+0x1c>
 800f45a:	682b      	ldr	r3, [r5, #0]
 800f45c:	b103      	cbz	r3, 800f460 <_fstat_r+0x1c>
 800f45e:	6023      	str	r3, [r4, #0]
 800f460:	bd38      	pop	{r3, r4, r5, pc}
 800f462:	bf00      	nop
 800f464:	20000360 	.word	0x20000360

0800f468 <_isatty_r>:
 800f468:	b538      	push	{r3, r4, r5, lr}
 800f46a:	4d06      	ldr	r5, [pc, #24]	; (800f484 <_isatty_r+0x1c>)
 800f46c:	2300      	movs	r3, #0
 800f46e:	4604      	mov	r4, r0
 800f470:	4608      	mov	r0, r1
 800f472:	602b      	str	r3, [r5, #0]
 800f474:	f000 f828 	bl	800f4c8 <_isatty>
 800f478:	1c43      	adds	r3, r0, #1
 800f47a:	d102      	bne.n	800f482 <_isatty_r+0x1a>
 800f47c:	682b      	ldr	r3, [r5, #0]
 800f47e:	b103      	cbz	r3, 800f482 <_isatty_r+0x1a>
 800f480:	6023      	str	r3, [r4, #0]
 800f482:	bd38      	pop	{r3, r4, r5, pc}
 800f484:	20000360 	.word	0x20000360

0800f488 <_malloc_usable_size_r>:
 800f488:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800f48c:	1f18      	subs	r0, r3, #4
 800f48e:	2b00      	cmp	r3, #0
 800f490:	bfbc      	itt	lt
 800f492:	580b      	ldrlt	r3, [r1, r0]
 800f494:	18c0      	addlt	r0, r0, r3
 800f496:	4770      	bx	lr

0800f498 <_close>:
 800f498:	4b02      	ldr	r3, [pc, #8]	; (800f4a4 <_close+0xc>)
 800f49a:	2258      	movs	r2, #88	; 0x58
 800f49c:	601a      	str	r2, [r3, #0]
 800f49e:	f04f 30ff 	mov.w	r0, #4294967295
 800f4a2:	4770      	bx	lr
 800f4a4:	20000360 	.word	0x20000360

0800f4a8 <_fstat>:
 800f4a8:	4b02      	ldr	r3, [pc, #8]	; (800f4b4 <_fstat+0xc>)
 800f4aa:	2258      	movs	r2, #88	; 0x58
 800f4ac:	601a      	str	r2, [r3, #0]
 800f4ae:	f04f 30ff 	mov.w	r0, #4294967295
 800f4b2:	4770      	bx	lr
 800f4b4:	20000360 	.word	0x20000360

0800f4b8 <_getpid>:
 800f4b8:	4b02      	ldr	r3, [pc, #8]	; (800f4c4 <_getpid+0xc>)
 800f4ba:	2258      	movs	r2, #88	; 0x58
 800f4bc:	601a      	str	r2, [r3, #0]
 800f4be:	f04f 30ff 	mov.w	r0, #4294967295
 800f4c2:	4770      	bx	lr
 800f4c4:	20000360 	.word	0x20000360

0800f4c8 <_isatty>:
 800f4c8:	4b02      	ldr	r3, [pc, #8]	; (800f4d4 <_isatty+0xc>)
 800f4ca:	2258      	movs	r2, #88	; 0x58
 800f4cc:	601a      	str	r2, [r3, #0]
 800f4ce:	2000      	movs	r0, #0
 800f4d0:	4770      	bx	lr
 800f4d2:	bf00      	nop
 800f4d4:	20000360 	.word	0x20000360

0800f4d8 <_kill>:
 800f4d8:	4b02      	ldr	r3, [pc, #8]	; (800f4e4 <_kill+0xc>)
 800f4da:	2258      	movs	r2, #88	; 0x58
 800f4dc:	601a      	str	r2, [r3, #0]
 800f4de:	f04f 30ff 	mov.w	r0, #4294967295
 800f4e2:	4770      	bx	lr
 800f4e4:	20000360 	.word	0x20000360

0800f4e8 <_lseek>:
 800f4e8:	4b02      	ldr	r3, [pc, #8]	; (800f4f4 <_lseek+0xc>)
 800f4ea:	2258      	movs	r2, #88	; 0x58
 800f4ec:	601a      	str	r2, [r3, #0]
 800f4ee:	f04f 30ff 	mov.w	r0, #4294967295
 800f4f2:	4770      	bx	lr
 800f4f4:	20000360 	.word	0x20000360

0800f4f8 <_read>:
 800f4f8:	4b02      	ldr	r3, [pc, #8]	; (800f504 <_read+0xc>)
 800f4fa:	2258      	movs	r2, #88	; 0x58
 800f4fc:	601a      	str	r2, [r3, #0]
 800f4fe:	f04f 30ff 	mov.w	r0, #4294967295
 800f502:	4770      	bx	lr
 800f504:	20000360 	.word	0x20000360

0800f508 <_sbrk>:
 800f508:	4a04      	ldr	r2, [pc, #16]	; (800f51c <_sbrk+0x14>)
 800f50a:	6811      	ldr	r1, [r2, #0]
 800f50c:	4603      	mov	r3, r0
 800f50e:	b909      	cbnz	r1, 800f514 <_sbrk+0xc>
 800f510:	4903      	ldr	r1, [pc, #12]	; (800f520 <_sbrk+0x18>)
 800f512:	6011      	str	r1, [r2, #0]
 800f514:	6810      	ldr	r0, [r2, #0]
 800f516:	4403      	add	r3, r0
 800f518:	6013      	str	r3, [r2, #0]
 800f51a:	4770      	bx	lr
 800f51c:	20000368 	.word	0x20000368
 800f520:	20000370 	.word	0x20000370

0800f524 <_write>:
 800f524:	4b02      	ldr	r3, [pc, #8]	; (800f530 <_write+0xc>)
 800f526:	2258      	movs	r2, #88	; 0x58
 800f528:	601a      	str	r2, [r3, #0]
 800f52a:	f04f 30ff 	mov.w	r0, #4294967295
 800f52e:	4770      	bx	lr
 800f530:	20000360 	.word	0x20000360

0800f534 <_exit>:
 800f534:	e7fe      	b.n	800f534 <_exit>
	...

0800f538 <_init>:
 800f538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f53a:	bf00      	nop
 800f53c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f53e:	bc08      	pop	{r3}
 800f540:	469e      	mov	lr, r3
 800f542:	4770      	bx	lr

0800f544 <_fini>:
 800f544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f546:	bf00      	nop
 800f548:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f54a:	bc08      	pop	{r3}
 800f54c:	469e      	mov	lr, r3
 800f54e:	4770      	bx	lr
