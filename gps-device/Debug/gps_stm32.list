
gps_stm32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000f458  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000f38  0800f5f8  0800f5f8  0001f5f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010530  08010530  00030244  2**0
                  CONTENTS
  4 .ARM          00000008  08010530  08010530  00020530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010538  08010538  00030244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08010538  08010538  00020538  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801053c  0801053c  0002053c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000244  20000000  08010540  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000128  20000244  08010784  00030244  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000036c  08010784  0003036c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030244  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000d856  00000000  00000000  00030274  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001efe  00000000  00000000  0003daca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b58  00000000  00000000  0003f9c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000aa0  00000000  00000000  00040520  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001686c  00000000  00000000  00040fc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000d01a  00000000  00000000  0005782c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008c30c  00000000  00000000  00064846  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f0b52  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005090  00000000  00000000  000f0ba4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000cc  00000000  00000000  000f5c34  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      000001b9  00000000  00000000  000f5d00  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000244 	.word	0x20000244
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800f5e0 	.word	0x0800f5e0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000248 	.word	0x20000248
 80001dc:	0800f5e0 	.word	0x0800f5e0

080001e0 <strcmp>:
 80001e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001e8:	2a01      	cmp	r2, #1
 80001ea:	bf28      	it	cs
 80001ec:	429a      	cmpcs	r2, r3
 80001ee:	d0f7      	beq.n	80001e0 <strcmp>
 80001f0:	1ad0      	subs	r0, r2, r3
 80001f2:	4770      	bx	lr

080001f4 <strlen>:
 80001f4:	4603      	mov	r3, r0
 80001f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001fa:	2a00      	cmp	r2, #0
 80001fc:	d1fb      	bne.n	80001f6 <strlen+0x2>
 80001fe:	1a18      	subs	r0, r3, r0
 8000200:	3801      	subs	r0, #1
 8000202:	4770      	bx	lr
	...

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	; 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_dcmpun>:
 8000b5c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x10>
 8000b66:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b6a:	d10a      	bne.n	8000b82 <__aeabi_dcmpun+0x26>
 8000b6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x20>
 8000b76:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b7a:	d102      	bne.n	8000b82 <__aeabi_dcmpun+0x26>
 8000b7c:	f04f 0000 	mov.w	r0, #0
 8000b80:	4770      	bx	lr
 8000b82:	f04f 0001 	mov.w	r0, #1
 8000b86:	4770      	bx	lr

08000b88 <__aeabi_d2iz>:
 8000b88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b90:	d215      	bcs.n	8000bbe <__aeabi_d2iz+0x36>
 8000b92:	d511      	bpl.n	8000bb8 <__aeabi_d2iz+0x30>
 8000b94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b9c:	d912      	bls.n	8000bc4 <__aeabi_d2iz+0x3c>
 8000b9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ba2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ba6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000baa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bae:	fa23 f002 	lsr.w	r0, r3, r2
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	4770      	bx	lr
 8000bb8:	f04f 0000 	mov.w	r0, #0
 8000bbc:	4770      	bx	lr
 8000bbe:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bc2:	d105      	bne.n	8000bd0 <__aeabi_d2iz+0x48>
 8000bc4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bc8:	bf08      	it	eq
 8000bca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	bf00      	nop

08000bd8 <__aeabi_d2uiz>:
 8000bd8:	004a      	lsls	r2, r1, #1
 8000bda:	d211      	bcs.n	8000c00 <__aeabi_d2uiz+0x28>
 8000bdc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000be0:	d211      	bcs.n	8000c06 <__aeabi_d2uiz+0x2e>
 8000be2:	d50d      	bpl.n	8000c00 <__aeabi_d2uiz+0x28>
 8000be4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000be8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bec:	d40e      	bmi.n	8000c0c <__aeabi_d2uiz+0x34>
 8000bee:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bf2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bf6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bfa:	fa23 f002 	lsr.w	r0, r3, r2
 8000bfe:	4770      	bx	lr
 8000c00:	f04f 0000 	mov.w	r0, #0
 8000c04:	4770      	bx	lr
 8000c06:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c0a:	d102      	bne.n	8000c12 <__aeabi_d2uiz+0x3a>
 8000c0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c10:	4770      	bx	lr
 8000c12:	f04f 0000 	mov.w	r0, #0
 8000c16:	4770      	bx	lr

08000c18 <__aeabi_d2f>:
 8000c18:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c1c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c20:	bf24      	itt	cs
 8000c22:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c26:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c2a:	d90d      	bls.n	8000c48 <__aeabi_d2f+0x30>
 8000c2c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c30:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c34:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c38:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c3c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c40:	bf08      	it	eq
 8000c42:	f020 0001 	biceq.w	r0, r0, #1
 8000c46:	4770      	bx	lr
 8000c48:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c4c:	d121      	bne.n	8000c92 <__aeabi_d2f+0x7a>
 8000c4e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c52:	bfbc      	itt	lt
 8000c54:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c58:	4770      	bxlt	lr
 8000c5a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c5e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c62:	f1c2 0218 	rsb	r2, r2, #24
 8000c66:	f1c2 0c20 	rsb	ip, r2, #32
 8000c6a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c6e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c72:	bf18      	it	ne
 8000c74:	f040 0001 	orrne.w	r0, r0, #1
 8000c78:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c7c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c80:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c84:	ea40 000c 	orr.w	r0, r0, ip
 8000c88:	fa23 f302 	lsr.w	r3, r3, r2
 8000c8c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c90:	e7cc      	b.n	8000c2c <__aeabi_d2f+0x14>
 8000c92:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c96:	d107      	bne.n	8000ca8 <__aeabi_d2f+0x90>
 8000c98:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c9c:	bf1e      	ittt	ne
 8000c9e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000ca2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000ca6:	4770      	bxne	lr
 8000ca8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cac:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cb0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_ldivmod>:
 8000cb8:	b97b      	cbnz	r3, 8000cda <__aeabi_ldivmod+0x22>
 8000cba:	b972      	cbnz	r2, 8000cda <__aeabi_ldivmod+0x22>
 8000cbc:	2900      	cmp	r1, #0
 8000cbe:	bfbe      	ittt	lt
 8000cc0:	2000      	movlt	r0, #0
 8000cc2:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000cc6:	e006      	blt.n	8000cd6 <__aeabi_ldivmod+0x1e>
 8000cc8:	bf08      	it	eq
 8000cca:	2800      	cmpeq	r0, #0
 8000ccc:	bf1c      	itt	ne
 8000cce:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000cd2:	f04f 30ff 	movne.w	r0, #4294967295
 8000cd6:	f000 b9f5 	b.w	80010c4 <__aeabi_idiv0>
 8000cda:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cde:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce2:	2900      	cmp	r1, #0
 8000ce4:	db09      	blt.n	8000cfa <__aeabi_ldivmod+0x42>
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	db1a      	blt.n	8000d20 <__aeabi_ldivmod+0x68>
 8000cea:	f000 f883 	bl	8000df4 <__udivmoddi4>
 8000cee:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf6:	b004      	add	sp, #16
 8000cf8:	4770      	bx	lr
 8000cfa:	4240      	negs	r0, r0
 8000cfc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d00:	2b00      	cmp	r3, #0
 8000d02:	db1b      	blt.n	8000d3c <__aeabi_ldivmod+0x84>
 8000d04:	f000 f876 	bl	8000df4 <__udivmoddi4>
 8000d08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d10:	b004      	add	sp, #16
 8000d12:	4240      	negs	r0, r0
 8000d14:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d18:	4252      	negs	r2, r2
 8000d1a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d1e:	4770      	bx	lr
 8000d20:	4252      	negs	r2, r2
 8000d22:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d26:	f000 f865 	bl	8000df4 <__udivmoddi4>
 8000d2a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d2e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d32:	b004      	add	sp, #16
 8000d34:	4240      	negs	r0, r0
 8000d36:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3a:	4770      	bx	lr
 8000d3c:	4252      	negs	r2, r2
 8000d3e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d42:	f000 f857 	bl	8000df4 <__udivmoddi4>
 8000d46:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d4a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d4e:	b004      	add	sp, #16
 8000d50:	4252      	negs	r2, r2
 8000d52:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d56:	4770      	bx	lr

08000d58 <__aeabi_uldivmod>:
 8000d58:	b953      	cbnz	r3, 8000d70 <__aeabi_uldivmod+0x18>
 8000d5a:	b94a      	cbnz	r2, 8000d70 <__aeabi_uldivmod+0x18>
 8000d5c:	2900      	cmp	r1, #0
 8000d5e:	bf08      	it	eq
 8000d60:	2800      	cmpeq	r0, #0
 8000d62:	bf1c      	itt	ne
 8000d64:	f04f 31ff 	movne.w	r1, #4294967295
 8000d68:	f04f 30ff 	movne.w	r0, #4294967295
 8000d6c:	f000 b9aa 	b.w	80010c4 <__aeabi_idiv0>
 8000d70:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d74:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d78:	f000 f83c 	bl	8000df4 <__udivmoddi4>
 8000d7c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d80:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d84:	b004      	add	sp, #16
 8000d86:	4770      	bx	lr

08000d88 <__aeabi_d2lz>:
 8000d88:	b538      	push	{r3, r4, r5, lr}
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	4604      	mov	r4, r0
 8000d90:	460d      	mov	r5, r1
 8000d92:	f7ff febb 	bl	8000b0c <__aeabi_dcmplt>
 8000d96:	b928      	cbnz	r0, 8000da4 <__aeabi_d2lz+0x1c>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	4629      	mov	r1, r5
 8000d9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000da0:	f000 b80a 	b.w	8000db8 <__aeabi_d2ulz>
 8000da4:	4620      	mov	r0, r4
 8000da6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000daa:	f000 f805 	bl	8000db8 <__aeabi_d2ulz>
 8000dae:	4240      	negs	r0, r0
 8000db0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000db4:	bd38      	pop	{r3, r4, r5, pc}
 8000db6:	bf00      	nop

08000db8 <__aeabi_d2ulz>:
 8000db8:	b5d0      	push	{r4, r6, r7, lr}
 8000dba:	4b0c      	ldr	r3, [pc, #48]	; (8000dec <__aeabi_d2ulz+0x34>)
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	4606      	mov	r6, r0
 8000dc0:	460f      	mov	r7, r1
 8000dc2:	f7ff fc31 	bl	8000628 <__aeabi_dmul>
 8000dc6:	f7ff ff07 	bl	8000bd8 <__aeabi_d2uiz>
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fbb2 	bl	8000534 <__aeabi_ui2d>
 8000dd0:	4b07      	ldr	r3, [pc, #28]	; (8000df0 <__aeabi_d2ulz+0x38>)
 8000dd2:	2200      	movs	r2, #0
 8000dd4:	f7ff fc28 	bl	8000628 <__aeabi_dmul>
 8000dd8:	4602      	mov	r2, r0
 8000dda:	460b      	mov	r3, r1
 8000ddc:	4630      	mov	r0, r6
 8000dde:	4639      	mov	r1, r7
 8000de0:	f7ff fa6a 	bl	80002b8 <__aeabi_dsub>
 8000de4:	f7ff fef8 	bl	8000bd8 <__aeabi_d2uiz>
 8000de8:	4621      	mov	r1, r4
 8000dea:	bdd0      	pop	{r4, r6, r7, pc}
 8000dec:	3df00000 	.word	0x3df00000
 8000df0:	41f00000 	.word	0x41f00000

08000df4 <__udivmoddi4>:
 8000df4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000df8:	9d08      	ldr	r5, [sp, #32]
 8000dfa:	4604      	mov	r4, r0
 8000dfc:	468e      	mov	lr, r1
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	d14d      	bne.n	8000e9e <__udivmoddi4+0xaa>
 8000e02:	428a      	cmp	r2, r1
 8000e04:	4694      	mov	ip, r2
 8000e06:	d969      	bls.n	8000edc <__udivmoddi4+0xe8>
 8000e08:	fab2 f282 	clz	r2, r2
 8000e0c:	b152      	cbz	r2, 8000e24 <__udivmoddi4+0x30>
 8000e0e:	fa01 f302 	lsl.w	r3, r1, r2
 8000e12:	f1c2 0120 	rsb	r1, r2, #32
 8000e16:	fa20 f101 	lsr.w	r1, r0, r1
 8000e1a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e1e:	ea41 0e03 	orr.w	lr, r1, r3
 8000e22:	4094      	lsls	r4, r2
 8000e24:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e28:	0c21      	lsrs	r1, r4, #16
 8000e2a:	fbbe f6f8 	udiv	r6, lr, r8
 8000e2e:	fa1f f78c 	uxth.w	r7, ip
 8000e32:	fb08 e316 	mls	r3, r8, r6, lr
 8000e36:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000e3a:	fb06 f107 	mul.w	r1, r6, r7
 8000e3e:	4299      	cmp	r1, r3
 8000e40:	d90a      	bls.n	8000e58 <__udivmoddi4+0x64>
 8000e42:	eb1c 0303 	adds.w	r3, ip, r3
 8000e46:	f106 30ff 	add.w	r0, r6, #4294967295
 8000e4a:	f080 811f 	bcs.w	800108c <__udivmoddi4+0x298>
 8000e4e:	4299      	cmp	r1, r3
 8000e50:	f240 811c 	bls.w	800108c <__udivmoddi4+0x298>
 8000e54:	3e02      	subs	r6, #2
 8000e56:	4463      	add	r3, ip
 8000e58:	1a5b      	subs	r3, r3, r1
 8000e5a:	b2a4      	uxth	r4, r4
 8000e5c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e60:	fb08 3310 	mls	r3, r8, r0, r3
 8000e64:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e68:	fb00 f707 	mul.w	r7, r0, r7
 8000e6c:	42a7      	cmp	r7, r4
 8000e6e:	d90a      	bls.n	8000e86 <__udivmoddi4+0x92>
 8000e70:	eb1c 0404 	adds.w	r4, ip, r4
 8000e74:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e78:	f080 810a 	bcs.w	8001090 <__udivmoddi4+0x29c>
 8000e7c:	42a7      	cmp	r7, r4
 8000e7e:	f240 8107 	bls.w	8001090 <__udivmoddi4+0x29c>
 8000e82:	4464      	add	r4, ip
 8000e84:	3802      	subs	r0, #2
 8000e86:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e8a:	1be4      	subs	r4, r4, r7
 8000e8c:	2600      	movs	r6, #0
 8000e8e:	b11d      	cbz	r5, 8000e98 <__udivmoddi4+0xa4>
 8000e90:	40d4      	lsrs	r4, r2
 8000e92:	2300      	movs	r3, #0
 8000e94:	e9c5 4300 	strd	r4, r3, [r5]
 8000e98:	4631      	mov	r1, r6
 8000e9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e9e:	428b      	cmp	r3, r1
 8000ea0:	d909      	bls.n	8000eb6 <__udivmoddi4+0xc2>
 8000ea2:	2d00      	cmp	r5, #0
 8000ea4:	f000 80ef 	beq.w	8001086 <__udivmoddi4+0x292>
 8000ea8:	2600      	movs	r6, #0
 8000eaa:	e9c5 0100 	strd	r0, r1, [r5]
 8000eae:	4630      	mov	r0, r6
 8000eb0:	4631      	mov	r1, r6
 8000eb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000eb6:	fab3 f683 	clz	r6, r3
 8000eba:	2e00      	cmp	r6, #0
 8000ebc:	d14a      	bne.n	8000f54 <__udivmoddi4+0x160>
 8000ebe:	428b      	cmp	r3, r1
 8000ec0:	d302      	bcc.n	8000ec8 <__udivmoddi4+0xd4>
 8000ec2:	4282      	cmp	r2, r0
 8000ec4:	f200 80f9 	bhi.w	80010ba <__udivmoddi4+0x2c6>
 8000ec8:	1a84      	subs	r4, r0, r2
 8000eca:	eb61 0303 	sbc.w	r3, r1, r3
 8000ece:	2001      	movs	r0, #1
 8000ed0:	469e      	mov	lr, r3
 8000ed2:	2d00      	cmp	r5, #0
 8000ed4:	d0e0      	beq.n	8000e98 <__udivmoddi4+0xa4>
 8000ed6:	e9c5 4e00 	strd	r4, lr, [r5]
 8000eda:	e7dd      	b.n	8000e98 <__udivmoddi4+0xa4>
 8000edc:	b902      	cbnz	r2, 8000ee0 <__udivmoddi4+0xec>
 8000ede:	deff      	udf	#255	; 0xff
 8000ee0:	fab2 f282 	clz	r2, r2
 8000ee4:	2a00      	cmp	r2, #0
 8000ee6:	f040 8092 	bne.w	800100e <__udivmoddi4+0x21a>
 8000eea:	eba1 010c 	sub.w	r1, r1, ip
 8000eee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ef2:	fa1f fe8c 	uxth.w	lr, ip
 8000ef6:	2601      	movs	r6, #1
 8000ef8:	0c20      	lsrs	r0, r4, #16
 8000efa:	fbb1 f3f7 	udiv	r3, r1, r7
 8000efe:	fb07 1113 	mls	r1, r7, r3, r1
 8000f02:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f06:	fb0e f003 	mul.w	r0, lr, r3
 8000f0a:	4288      	cmp	r0, r1
 8000f0c:	d908      	bls.n	8000f20 <__udivmoddi4+0x12c>
 8000f0e:	eb1c 0101 	adds.w	r1, ip, r1
 8000f12:	f103 38ff 	add.w	r8, r3, #4294967295
 8000f16:	d202      	bcs.n	8000f1e <__udivmoddi4+0x12a>
 8000f18:	4288      	cmp	r0, r1
 8000f1a:	f200 80cb 	bhi.w	80010b4 <__udivmoddi4+0x2c0>
 8000f1e:	4643      	mov	r3, r8
 8000f20:	1a09      	subs	r1, r1, r0
 8000f22:	b2a4      	uxth	r4, r4
 8000f24:	fbb1 f0f7 	udiv	r0, r1, r7
 8000f28:	fb07 1110 	mls	r1, r7, r0, r1
 8000f2c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000f30:	fb0e fe00 	mul.w	lr, lr, r0
 8000f34:	45a6      	cmp	lr, r4
 8000f36:	d908      	bls.n	8000f4a <__udivmoddi4+0x156>
 8000f38:	eb1c 0404 	adds.w	r4, ip, r4
 8000f3c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000f40:	d202      	bcs.n	8000f48 <__udivmoddi4+0x154>
 8000f42:	45a6      	cmp	lr, r4
 8000f44:	f200 80bb 	bhi.w	80010be <__udivmoddi4+0x2ca>
 8000f48:	4608      	mov	r0, r1
 8000f4a:	eba4 040e 	sub.w	r4, r4, lr
 8000f4e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000f52:	e79c      	b.n	8000e8e <__udivmoddi4+0x9a>
 8000f54:	f1c6 0720 	rsb	r7, r6, #32
 8000f58:	40b3      	lsls	r3, r6
 8000f5a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000f5e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000f62:	fa20 f407 	lsr.w	r4, r0, r7
 8000f66:	fa01 f306 	lsl.w	r3, r1, r6
 8000f6a:	431c      	orrs	r4, r3
 8000f6c:	40f9      	lsrs	r1, r7
 8000f6e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000f72:	fa00 f306 	lsl.w	r3, r0, r6
 8000f76:	fbb1 f8f9 	udiv	r8, r1, r9
 8000f7a:	0c20      	lsrs	r0, r4, #16
 8000f7c:	fa1f fe8c 	uxth.w	lr, ip
 8000f80:	fb09 1118 	mls	r1, r9, r8, r1
 8000f84:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f88:	fb08 f00e 	mul.w	r0, r8, lr
 8000f8c:	4288      	cmp	r0, r1
 8000f8e:	fa02 f206 	lsl.w	r2, r2, r6
 8000f92:	d90b      	bls.n	8000fac <__udivmoddi4+0x1b8>
 8000f94:	eb1c 0101 	adds.w	r1, ip, r1
 8000f98:	f108 3aff 	add.w	sl, r8, #4294967295
 8000f9c:	f080 8088 	bcs.w	80010b0 <__udivmoddi4+0x2bc>
 8000fa0:	4288      	cmp	r0, r1
 8000fa2:	f240 8085 	bls.w	80010b0 <__udivmoddi4+0x2bc>
 8000fa6:	f1a8 0802 	sub.w	r8, r8, #2
 8000faa:	4461      	add	r1, ip
 8000fac:	1a09      	subs	r1, r1, r0
 8000fae:	b2a4      	uxth	r4, r4
 8000fb0:	fbb1 f0f9 	udiv	r0, r1, r9
 8000fb4:	fb09 1110 	mls	r1, r9, r0, r1
 8000fb8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000fbc:	fb00 fe0e 	mul.w	lr, r0, lr
 8000fc0:	458e      	cmp	lr, r1
 8000fc2:	d908      	bls.n	8000fd6 <__udivmoddi4+0x1e2>
 8000fc4:	eb1c 0101 	adds.w	r1, ip, r1
 8000fc8:	f100 34ff 	add.w	r4, r0, #4294967295
 8000fcc:	d26c      	bcs.n	80010a8 <__udivmoddi4+0x2b4>
 8000fce:	458e      	cmp	lr, r1
 8000fd0:	d96a      	bls.n	80010a8 <__udivmoddi4+0x2b4>
 8000fd2:	3802      	subs	r0, #2
 8000fd4:	4461      	add	r1, ip
 8000fd6:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000fda:	fba0 9402 	umull	r9, r4, r0, r2
 8000fde:	eba1 010e 	sub.w	r1, r1, lr
 8000fe2:	42a1      	cmp	r1, r4
 8000fe4:	46c8      	mov	r8, r9
 8000fe6:	46a6      	mov	lr, r4
 8000fe8:	d356      	bcc.n	8001098 <__udivmoddi4+0x2a4>
 8000fea:	d053      	beq.n	8001094 <__udivmoddi4+0x2a0>
 8000fec:	b15d      	cbz	r5, 8001006 <__udivmoddi4+0x212>
 8000fee:	ebb3 0208 	subs.w	r2, r3, r8
 8000ff2:	eb61 010e 	sbc.w	r1, r1, lr
 8000ff6:	fa01 f707 	lsl.w	r7, r1, r7
 8000ffa:	fa22 f306 	lsr.w	r3, r2, r6
 8000ffe:	40f1      	lsrs	r1, r6
 8001000:	431f      	orrs	r7, r3
 8001002:	e9c5 7100 	strd	r7, r1, [r5]
 8001006:	2600      	movs	r6, #0
 8001008:	4631      	mov	r1, r6
 800100a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800100e:	f1c2 0320 	rsb	r3, r2, #32
 8001012:	40d8      	lsrs	r0, r3
 8001014:	fa0c fc02 	lsl.w	ip, ip, r2
 8001018:	fa21 f303 	lsr.w	r3, r1, r3
 800101c:	4091      	lsls	r1, r2
 800101e:	4301      	orrs	r1, r0
 8001020:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001024:	fa1f fe8c 	uxth.w	lr, ip
 8001028:	fbb3 f0f7 	udiv	r0, r3, r7
 800102c:	fb07 3610 	mls	r6, r7, r0, r3
 8001030:	0c0b      	lsrs	r3, r1, #16
 8001032:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8001036:	fb00 f60e 	mul.w	r6, r0, lr
 800103a:	429e      	cmp	r6, r3
 800103c:	fa04 f402 	lsl.w	r4, r4, r2
 8001040:	d908      	bls.n	8001054 <__udivmoddi4+0x260>
 8001042:	eb1c 0303 	adds.w	r3, ip, r3
 8001046:	f100 38ff 	add.w	r8, r0, #4294967295
 800104a:	d22f      	bcs.n	80010ac <__udivmoddi4+0x2b8>
 800104c:	429e      	cmp	r6, r3
 800104e:	d92d      	bls.n	80010ac <__udivmoddi4+0x2b8>
 8001050:	3802      	subs	r0, #2
 8001052:	4463      	add	r3, ip
 8001054:	1b9b      	subs	r3, r3, r6
 8001056:	b289      	uxth	r1, r1
 8001058:	fbb3 f6f7 	udiv	r6, r3, r7
 800105c:	fb07 3316 	mls	r3, r7, r6, r3
 8001060:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8001064:	fb06 f30e 	mul.w	r3, r6, lr
 8001068:	428b      	cmp	r3, r1
 800106a:	d908      	bls.n	800107e <__udivmoddi4+0x28a>
 800106c:	eb1c 0101 	adds.w	r1, ip, r1
 8001070:	f106 38ff 	add.w	r8, r6, #4294967295
 8001074:	d216      	bcs.n	80010a4 <__udivmoddi4+0x2b0>
 8001076:	428b      	cmp	r3, r1
 8001078:	d914      	bls.n	80010a4 <__udivmoddi4+0x2b0>
 800107a:	3e02      	subs	r6, #2
 800107c:	4461      	add	r1, ip
 800107e:	1ac9      	subs	r1, r1, r3
 8001080:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8001084:	e738      	b.n	8000ef8 <__udivmoddi4+0x104>
 8001086:	462e      	mov	r6, r5
 8001088:	4628      	mov	r0, r5
 800108a:	e705      	b.n	8000e98 <__udivmoddi4+0xa4>
 800108c:	4606      	mov	r6, r0
 800108e:	e6e3      	b.n	8000e58 <__udivmoddi4+0x64>
 8001090:	4618      	mov	r0, r3
 8001092:	e6f8      	b.n	8000e86 <__udivmoddi4+0x92>
 8001094:	454b      	cmp	r3, r9
 8001096:	d2a9      	bcs.n	8000fec <__udivmoddi4+0x1f8>
 8001098:	ebb9 0802 	subs.w	r8, r9, r2
 800109c:	eb64 0e0c 	sbc.w	lr, r4, ip
 80010a0:	3801      	subs	r0, #1
 80010a2:	e7a3      	b.n	8000fec <__udivmoddi4+0x1f8>
 80010a4:	4646      	mov	r6, r8
 80010a6:	e7ea      	b.n	800107e <__udivmoddi4+0x28a>
 80010a8:	4620      	mov	r0, r4
 80010aa:	e794      	b.n	8000fd6 <__udivmoddi4+0x1e2>
 80010ac:	4640      	mov	r0, r8
 80010ae:	e7d1      	b.n	8001054 <__udivmoddi4+0x260>
 80010b0:	46d0      	mov	r8, sl
 80010b2:	e77b      	b.n	8000fac <__udivmoddi4+0x1b8>
 80010b4:	3b02      	subs	r3, #2
 80010b6:	4461      	add	r1, ip
 80010b8:	e732      	b.n	8000f20 <__udivmoddi4+0x12c>
 80010ba:	4630      	mov	r0, r6
 80010bc:	e709      	b.n	8000ed2 <__udivmoddi4+0xde>
 80010be:	4464      	add	r4, ip
 80010c0:	3802      	subs	r0, #2
 80010c2:	e742      	b.n	8000f4a <__udivmoddi4+0x156>

080010c4 <__aeabi_idiv0>:
 80010c4:	4770      	bx	lr
 80010c6:	bf00      	nop

080010c8 <HAL_UARTEx_RxEventCallback>:
static void MX_DMA_Init(void);
static void MX_USART1_UART_Init(void);
static void MX_RTC_Init(void);
/* USER CODE BEGIN PFP */

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
 80010d0:	460b      	mov	r3, r1
 80010d2:	807b      	strh	r3, [r7, #2]
	uartReady=1;
 80010d4:	4b04      	ldr	r3, [pc, #16]	; (80010e8 <HAL_UARTEx_RxEventCallback+0x20>)
 80010d6:	2201      	movs	r2, #1
 80010d8:	701a      	strb	r2, [r3, #0]
}
 80010da:	bf00      	nop
 80010dc:	370c      	adds	r7, #12
 80010de:	46bd      	mov	sp, r7
 80010e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e4:	4770      	bx	lr
 80010e6:	bf00      	nop
 80010e8:	20000324 	.word	0x20000324

080010ec <HAL_UART_ErrorCallback>:

void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80010ec:	b480      	push	{r7}
 80010ee:	b083      	sub	sp, #12
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	6078      	str	r0, [r7, #4]
	uartError=1;
 80010f4:	4b04      	ldr	r3, [pc, #16]	; (8001108 <HAL_UART_ErrorCallback+0x1c>)
 80010f6:	2201      	movs	r2, #1
 80010f8:	701a      	strb	r2, [r3, #0]
}
 80010fa:	bf00      	nop
 80010fc:	370c      	adds	r7, #12
 80010fe:	46bd      	mov	sp, r7
 8001100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001104:	4770      	bx	lr
 8001106:	bf00      	nop
 8001108:	20000325 	.word	0x20000325

0800110c <uartRead>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

///////////////////////////////////

void uartRead(uint8_t* data, const uint16_t size) {
 800110c:	b580      	push	{r7, lr}
 800110e:	b082      	sub	sp, #8
 8001110:	af00      	add	r7, sp, #0
 8001112:	6078      	str	r0, [r7, #4]
 8001114:	460b      	mov	r3, r1
 8001116:	807b      	strh	r3, [r7, #2]
	uartError=0;
 8001118:	4b09      	ldr	r3, [pc, #36]	; (8001140 <uartRead+0x34>)
 800111a:	2200      	movs	r2, #0
 800111c:	701a      	strb	r2, [r3, #0]
	uartReady=0;
 800111e:	4b09      	ldr	r3, [pc, #36]	; (8001144 <uartRead+0x38>)
 8001120:	2200      	movs	r2, #0
 8001122:	701a      	strb	r2, [r3, #0]
	HAL_UART_DMAStop(&huart1); //stop possible previous transfer
 8001124:	4808      	ldr	r0, [pc, #32]	; (8001148 <uartRead+0x3c>)
 8001126:	f004 fef4 	bl	8005f12 <HAL_UART_DMAStop>
	HAL_UARTEx_ReceiveToIdle_DMA(&huart1, data, size);
 800112a:	887b      	ldrh	r3, [r7, #2]
 800112c:	461a      	mov	r2, r3
 800112e:	6879      	ldr	r1, [r7, #4]
 8001130:	4805      	ldr	r0, [pc, #20]	; (8001148 <uartRead+0x3c>)
 8001132:	f004 ff6d 	bl	8006010 <HAL_UARTEx_ReceiveToIdle_DMA>
}
 8001136:	bf00      	nop
 8001138:	3708      	adds	r7, #8
 800113a:	46bd      	mov	sp, r7
 800113c:	bd80      	pop	{r7, pc}
 800113e:	bf00      	nop
 8001140:	20000325 	.word	0x20000325
 8001144:	20000324 	.word	0x20000324
 8001148:	20000280 	.word	0x20000280

0800114c <uartSend>:

//void uartReadBlocking(uint8_t* data, const uint16_t size,const uint32_t timeout) {
//	HAL_UART_Receive(&huart1, data, size, timeout);
//}

void uartSend(uint8_t* data, const uint16_t size) {
 800114c:	b580      	push	{r7, lr}
 800114e:	b082      	sub	sp, #8
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
 8001154:	460b      	mov	r3, r1
 8001156:	807b      	strh	r3, [r7, #2]
	HAL_UART_Transmit(&huart1, data, size,500); //send atCommand
 8001158:	887a      	ldrh	r2, [r7, #2]
 800115a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800115e:	6879      	ldr	r1, [r7, #4]
 8001160:	4803      	ldr	r0, [pc, #12]	; (8001170 <uartSend+0x24>)
 8001162:	f004 fe44 	bl	8005dee <HAL_UART_Transmit>
}
 8001166:	bf00      	nop
 8001168:	3708      	adds	r7, #8
 800116a:	46bd      	mov	sp, r7
 800116c:	bd80      	pop	{r7, pc}
 800116e:	bf00      	nop
 8001170:	20000280 	.word	0x20000280

08001174 <uartAvailable>:

bool uartAvailable() {
 8001174:	b480      	push	{r7}
 8001176:	af00      	add	r7, sp, #0
	if(uartReady) {
 8001178:	4b07      	ldr	r3, [pc, #28]	; (8001198 <uartAvailable+0x24>)
 800117a:	781b      	ldrb	r3, [r3, #0]
 800117c:	b2db      	uxtb	r3, r3
 800117e:	2b00      	cmp	r3, #0
 8001180:	d004      	beq.n	800118c <uartAvailable+0x18>
		uartReady=0;
 8001182:	4b05      	ldr	r3, [pc, #20]	; (8001198 <uartAvailable+0x24>)
 8001184:	2200      	movs	r2, #0
 8001186:	701a      	strb	r2, [r3, #0]
		return 1;
 8001188:	2301      	movs	r3, #1
 800118a:	e000      	b.n	800118e <uartAvailable+0x1a>
	}
	else {
		return 0;
 800118c:	2300      	movs	r3, #0
	}
}
 800118e:	4618      	mov	r0, r3
 8001190:	46bd      	mov	sp, r7
 8001192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001196:	4770      	bx	lr
 8001198:	20000324 	.word	0x20000324

0800119c <uartErrors>:

bool uartErrors() {
 800119c:	b480      	push	{r7}
 800119e:	af00      	add	r7, sp, #0
	if(uartError) {
 80011a0:	4b07      	ldr	r3, [pc, #28]	; (80011c0 <uartErrors+0x24>)
 80011a2:	781b      	ldrb	r3, [r3, #0]
 80011a4:	b2db      	uxtb	r3, r3
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d004      	beq.n	80011b4 <uartErrors+0x18>
		uartError=0;
 80011aa:	4b05      	ldr	r3, [pc, #20]	; (80011c0 <uartErrors+0x24>)
 80011ac:	2200      	movs	r2, #0
 80011ae:	701a      	strb	r2, [r3, #0]
		return 1;
 80011b0:	2301      	movs	r3, #1
 80011b2:	e000      	b.n	80011b6 <uartErrors+0x1a>
	}
	else {
		return 0;
 80011b4:	2300      	movs	r3, #0
	}
}
 80011b6:	4618      	mov	r0, r3
 80011b8:	46bd      	mov	sp, r7
 80011ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011be:	4770      	bx	lr
 80011c0:	20000325 	.word	0x20000325

080011c4 <sendAtCommand>:

bool sendAtCommand(const char* atCommand, const uint32_t timeout, const char* expectedAnswer) {
 80011c4:	b580      	push	{r7, lr}
 80011c6:	b09e      	sub	sp, #120	; 0x78
 80011c8:	af00      	add	r7, sp, #0
 80011ca:	60f8      	str	r0, [r7, #12]
 80011cc:	60b9      	str	r1, [r7, #8]
 80011ce:	607a      	str	r2, [r7, #4]

    uint32_t startTime = 0;
 80011d0:	2300      	movs	r3, #0
 80011d2:	677b      	str	r3, [r7, #116]	; 0x74
    char receiveBuffer[MAX_AT_RESPONSE]={0}; // Receive from UART Buffer
 80011d4:	2300      	movs	r3, #0
 80011d6:	613b      	str	r3, [r7, #16]
 80011d8:	f107 0314 	add.w	r3, r7, #20
 80011dc:	2260      	movs	r2, #96	; 0x60
 80011de:	2100      	movs	r1, #0
 80011e0:	4618      	mov	r0, r3
 80011e2:	f007 fd8d 	bl	8008d00 <memset>

    uartSend((uint8_t *)atCommand, strlen(atCommand)); //send atCommand
 80011e6:	68f8      	ldr	r0, [r7, #12]
 80011e8:	f7ff f804 	bl	80001f4 <strlen>
 80011ec:	4603      	mov	r3, r0
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	4619      	mov	r1, r3
 80011f2:	68f8      	ldr	r0, [r7, #12]
 80011f4:	f7ff ffaa 	bl	800114c <uartSend>

    uartRead((uint8_t*)receiveBuffer, MAX_AT_RESPONSE); //start reading
 80011f8:	f107 0310 	add.w	r3, r7, #16
 80011fc:	2164      	movs	r1, #100	; 0x64
 80011fe:	4618      	mov	r0, r3
 8001200:	f7ff ff84 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 8001204:	f002 fdb6 	bl	8003d74 <HAL_GetTick>
 8001208:	6778      	str	r0, [r7, #116]	; 0x74

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 800120a:	e011      	b.n	8001230 <sendAtCommand+0x6c>
        if(uartAvailable()){
 800120c:	f7ff ffb2 	bl	8001174 <uartAvailable>
 8001210:	4603      	mov	r3, r0
 8001212:	2b00      	cmp	r3, #0
 8001214:	d00c      	beq.n	8001230 <sendAtCommand+0x6c>
                // check if the desired answer is in the response of the module
                if (strstr(receiveBuffer, expectedAnswer) != NULL) {
 8001216:	f107 0310 	add.w	r3, r7, #16
 800121a:	6879      	ldr	r1, [r7, #4]
 800121c:	4618      	mov	r0, r3
 800121e:	f009 fd96 	bl	800ad4e <strstr>
 8001222:	4603      	mov	r3, r0
 8001224:	2b00      	cmp	r3, #0
 8001226:	d001      	beq.n	800122c <sendAtCommand+0x68>
                    return 1;
 8001228:	2301      	movs	r3, #1
 800122a:	e00a      	b.n	8001242 <sendAtCommand+0x7e>
                }
				else {
					return 0;
 800122c:	2300      	movs	r3, #0
 800122e:	e008      	b.n	8001242 <sendAtCommand+0x7e>
    while( (HAL_GetTick()-startTime) < timeout ){
 8001230:	f002 fda0 	bl	8003d74 <HAL_GetTick>
 8001234:	4602      	mov	r2, r0
 8001236:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001238:	1ad3      	subs	r3, r2, r3
 800123a:	68ba      	ldr	r2, [r7, #8]
 800123c:	429a      	cmp	r2, r3
 800123e:	d8e5      	bhi.n	800120c <sendAtCommand+0x48>
				}
    	}
    }
    return 0;
 8001240:	2300      	movs	r3, #0
}
 8001242:	4618      	mov	r0, r3
 8001244:	3778      	adds	r7, #120	; 0x78
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}

0800124a <sendAtCommand2>:

bool sendAtCommand2(const char* atCommand, const uint32_t timeout, const char* expectedAnswer) {
 800124a:	b580      	push	{r7, lr}
 800124c:	b09e      	sub	sp, #120	; 0x78
 800124e:	af00      	add	r7, sp, #0
 8001250:	60f8      	str	r0, [r7, #12]
 8001252:	60b9      	str	r1, [r7, #8]
 8001254:	607a      	str	r2, [r7, #4]

    uint32_t startTime = 0;
 8001256:	2300      	movs	r3, #0
 8001258:	677b      	str	r3, [r7, #116]	; 0x74
    char receiveBuffer[MAX_AT_RESPONSE]={0}; // Receive from UART Buffer
 800125a:	2300      	movs	r3, #0
 800125c:	613b      	str	r3, [r7, #16]
 800125e:	f107 0314 	add.w	r3, r7, #20
 8001262:	2260      	movs	r2, #96	; 0x60
 8001264:	2100      	movs	r1, #0
 8001266:	4618      	mov	r0, r3
 8001268:	f007 fd4a 	bl	8008d00 <memset>

    uartSend((uint8_t *)atCommand, strlen(atCommand)); //send atCommand
 800126c:	68f8      	ldr	r0, [r7, #12]
 800126e:	f7fe ffc1 	bl	80001f4 <strlen>
 8001272:	4603      	mov	r3, r0
 8001274:	b29b      	uxth	r3, r3
 8001276:	4619      	mov	r1, r3
 8001278:	68f8      	ldr	r0, [r7, #12]
 800127a:	f7ff ff67 	bl	800114c <uartSend>

    uartRead((uint8_t*)receiveBuffer, MAX_AT_RESPONSE); //start reading
 800127e:	f107 0310 	add.w	r3, r7, #16
 8001282:	2164      	movs	r1, #100	; 0x64
 8001284:	4618      	mov	r0, r3
 8001286:	f7ff ff41 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 800128a:	f002 fd73 	bl	8003d74 <HAL_GetTick>
 800128e:	6778      	str	r0, [r7, #116]	; 0x74

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 8001290:	e029      	b.n	80012e6 <sendAtCommand2+0x9c>

    	if(uartErrors()) {
 8001292:	f7ff ff83 	bl	800119c <uartErrors>
 8001296:	4603      	mov	r3, r0
 8001298:	2b00      	cmp	r3, #0
 800129a:	d012      	beq.n	80012c2 <sendAtCommand2+0x78>
    		 memset(receiveBuffer,'\0',strlen(receiveBuffer));
 800129c:	f107 0310 	add.w	r3, r7, #16
 80012a0:	4618      	mov	r0, r3
 80012a2:	f7fe ffa7 	bl	80001f4 <strlen>
 80012a6:	4602      	mov	r2, r0
 80012a8:	f107 0310 	add.w	r3, r7, #16
 80012ac:	2100      	movs	r1, #0
 80012ae:	4618      	mov	r0, r3
 80012b0:	f007 fd26 	bl	8008d00 <memset>
    		 uartRead((uint8_t*)receiveBuffer, MAX_AT_RESPONSE); //start reading
 80012b4:	f107 0310 	add.w	r3, r7, #16
 80012b8:	2164      	movs	r1, #100	; 0x64
 80012ba:	4618      	mov	r0, r3
 80012bc:	f7ff ff26 	bl	800110c <uartRead>
 80012c0:	e011      	b.n	80012e6 <sendAtCommand2+0x9c>
    	}
    	else {
			if(uartAvailable()){
 80012c2:	f7ff ff57 	bl	8001174 <uartAvailable>
 80012c6:	4603      	mov	r3, r0
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d00c      	beq.n	80012e6 <sendAtCommand2+0x9c>
					// check if the desired answer is in the response of the module
					if (strstr(receiveBuffer, expectedAnswer) != NULL) {
 80012cc:	f107 0310 	add.w	r3, r7, #16
 80012d0:	6879      	ldr	r1, [r7, #4]
 80012d2:	4618      	mov	r0, r3
 80012d4:	f009 fd3b 	bl	800ad4e <strstr>
 80012d8:	4603      	mov	r3, r0
 80012da:	2b00      	cmp	r3, #0
 80012dc:	d001      	beq.n	80012e2 <sendAtCommand2+0x98>
						return 1;
 80012de:	2301      	movs	r3, #1
 80012e0:	e00a      	b.n	80012f8 <sendAtCommand2+0xae>
					}
					else {
						return 0;
 80012e2:	2300      	movs	r3, #0
 80012e4:	e008      	b.n	80012f8 <sendAtCommand2+0xae>
    while( (HAL_GetTick()-startTime) < timeout ){
 80012e6:	f002 fd45 	bl	8003d74 <HAL_GetTick>
 80012ea:	4602      	mov	r2, r0
 80012ec:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80012ee:	1ad3      	subs	r3, r2, r3
 80012f0:	68ba      	ldr	r2, [r7, #8]
 80012f2:	429a      	cmp	r2, r3
 80012f4:	d8cd      	bhi.n	8001292 <sendAtCommand2+0x48>
					}
			}
    	}
    }
    return 0;
 80012f6:	2300      	movs	r3, #0
}
 80012f8:	4618      	mov	r0, r3
 80012fa:	3778      	adds	r7, #120	; 0x78
 80012fc:	46bd      	mov	sp, r7
 80012fe:	bd80      	pop	{r7, pc}

08001300 <getSerialResponse>:

bool getSerialResponse(const char* atCommand, const uint32_t timeout, const char* expectedAnswer, char* receiveBuffer , const uint16_t size) {
 8001300:	b580      	push	{r7, lr}
 8001302:	b086      	sub	sp, #24
 8001304:	af00      	add	r7, sp, #0
 8001306:	60f8      	str	r0, [r7, #12]
 8001308:	60b9      	str	r1, [r7, #8]
 800130a:	607a      	str	r2, [r7, #4]
 800130c:	603b      	str	r3, [r7, #0]

    uint32_t startTime = 0;
 800130e:	2300      	movs	r3, #0
 8001310:	617b      	str	r3, [r7, #20]

    uartSend((uint8_t *)atCommand, strlen(atCommand)); //send atCommand
 8001312:	68f8      	ldr	r0, [r7, #12]
 8001314:	f7fe ff6e 	bl	80001f4 <strlen>
 8001318:	4603      	mov	r3, r0
 800131a:	b29b      	uxth	r3, r3
 800131c:	4619      	mov	r1, r3
 800131e:	68f8      	ldr	r0, [r7, #12]
 8001320:	f7ff ff14 	bl	800114c <uartSend>

    uartRead((uint8_t*)receiveBuffer, size); //start reading
 8001324:	8c3b      	ldrh	r3, [r7, #32]
 8001326:	4619      	mov	r1, r3
 8001328:	6838      	ldr	r0, [r7, #0]
 800132a:	f7ff feef 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 800132e:	f002 fd21 	bl	8003d74 <HAL_GetTick>
 8001332:	6178      	str	r0, [r7, #20]

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 8001334:	e00f      	b.n	8001356 <getSerialResponse+0x56>
        if(uartAvailable()){
 8001336:	f7ff ff1d 	bl	8001174 <uartAvailable>
 800133a:	4603      	mov	r3, r0
 800133c:	2b00      	cmp	r3, #0
 800133e:	d00a      	beq.n	8001356 <getSerialResponse+0x56>
                // check if the desired answer is in the response of the module
                if (strstr(receiveBuffer, expectedAnswer) != NULL)
 8001340:	6879      	ldr	r1, [r7, #4]
 8001342:	6838      	ldr	r0, [r7, #0]
 8001344:	f009 fd03 	bl	800ad4e <strstr>
 8001348:	4603      	mov	r3, r0
 800134a:	2b00      	cmp	r3, #0
 800134c:	d001      	beq.n	8001352 <getSerialResponse+0x52>
                {
                    return 1;
 800134e:	2301      	movs	r3, #1
 8001350:	e00a      	b.n	8001368 <getSerialResponse+0x68>
                }
				else {
					return 0;
 8001352:	2300      	movs	r3, #0
 8001354:	e008      	b.n	8001368 <getSerialResponse+0x68>
    while( (HAL_GetTick()-startTime) < timeout ){
 8001356:	f002 fd0d 	bl	8003d74 <HAL_GetTick>
 800135a:	4602      	mov	r2, r0
 800135c:	697b      	ldr	r3, [r7, #20]
 800135e:	1ad3      	subs	r3, r2, r3
 8001360:	68ba      	ldr	r2, [r7, #8]
 8001362:	429a      	cmp	r2, r3
 8001364:	d8e7      	bhi.n	8001336 <getSerialResponse+0x36>
				}
    	}
    }
    return 0;
 8001366:	2300      	movs	r3, #0
}
 8001368:	4618      	mov	r0, r3
 800136a:	3718      	adds	r7, #24
 800136c:	46bd      	mov	sp, r7
 800136e:	bd80      	pop	{r7, pc}

08001370 <getSerialResponse2>:

bool getSerialResponse2(const uint32_t timeout, char* receiveBuffer , const uint16_t size) {
 8001370:	b580      	push	{r7, lr}
 8001372:	b086      	sub	sp, #24
 8001374:	af00      	add	r7, sp, #0
 8001376:	60f8      	str	r0, [r7, #12]
 8001378:	60b9      	str	r1, [r7, #8]
 800137a:	4613      	mov	r3, r2
 800137c:	80fb      	strh	r3, [r7, #6]

    uint32_t startTime = 0;
 800137e:	2300      	movs	r3, #0
 8001380:	617b      	str	r3, [r7, #20]

    uartRead((uint8_t*)receiveBuffer, size); //start reading
 8001382:	88fb      	ldrh	r3, [r7, #6]
 8001384:	4619      	mov	r1, r3
 8001386:	68b8      	ldr	r0, [r7, #8]
 8001388:	f7ff fec0 	bl	800110c <uartRead>

    startTime = HAL_GetTick();
 800138c:	f002 fcf2 	bl	8003d74 <HAL_GetTick>
 8001390:	6178      	str	r0, [r7, #20]

    // this loop waits for the answer
    while( (HAL_GetTick()-startTime) < timeout ){
 8001392:	e006      	b.n	80013a2 <getSerialResponse2+0x32>
        if(uartAvailable()){
 8001394:	f7ff feee 	bl	8001174 <uartAvailable>
 8001398:	4603      	mov	r3, r0
 800139a:	2b00      	cmp	r3, #0
 800139c:	d001      	beq.n	80013a2 <getSerialResponse2+0x32>
        	return 1;
 800139e:	2301      	movs	r3, #1
 80013a0:	e008      	b.n	80013b4 <getSerialResponse2+0x44>
    while( (HAL_GetTick()-startTime) < timeout ){
 80013a2:	f002 fce7 	bl	8003d74 <HAL_GetTick>
 80013a6:	4602      	mov	r2, r0
 80013a8:	697b      	ldr	r3, [r7, #20]
 80013aa:	1ad3      	subs	r3, r2, r3
 80013ac:	68fa      	ldr	r2, [r7, #12]
 80013ae:	429a      	cmp	r2, r3
 80013b0:	d8f0      	bhi.n	8001394 <getSerialResponse2+0x24>
    	}
    }
    return 0;
 80013b2:	2300      	movs	r3, #0
}
 80013b4:	4618      	mov	r0, r3
 80013b6:	3718      	adds	r7, #24
 80013b8:	46bd      	mov	sp, r7
 80013ba:	bd80      	pop	{r7, pc}

080013bc <waitConnect>:

///////////////////////////////////

bool waitConnect(const uint8_t maxAttempts) {
 80013bc:	b580      	push	{r7, lr}
 80013be:	b084      	sub	sp, #16
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	4603      	mov	r3, r0
 80013c4:	71fb      	strb	r3, [r7, #7]
	for(int i=0; i<maxAttempts;i++) {
 80013c6:	2300      	movs	r3, #0
 80013c8:	60fb      	str	r3, [r7, #12]
 80013ca:	e00d      	b.n	80013e8 <waitConnect+0x2c>
		if (sendAtCommand("AT\r",2000,"OK"))
 80013cc:	4a0b      	ldr	r2, [pc, #44]	; (80013fc <waitConnect+0x40>)
 80013ce:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80013d2:	480b      	ldr	r0, [pc, #44]	; (8001400 <waitConnect+0x44>)
 80013d4:	f7ff fef6 	bl	80011c4 <sendAtCommand>
 80013d8:	4603      	mov	r3, r0
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d001      	beq.n	80013e2 <waitConnect+0x26>
			return 1;
 80013de:	2301      	movs	r3, #1
 80013e0:	e007      	b.n	80013f2 <waitConnect+0x36>
	for(int i=0; i<maxAttempts;i++) {
 80013e2:	68fb      	ldr	r3, [r7, #12]
 80013e4:	3301      	adds	r3, #1
 80013e6:	60fb      	str	r3, [r7, #12]
 80013e8:	79fb      	ldrb	r3, [r7, #7]
 80013ea:	68fa      	ldr	r2, [r7, #12]
 80013ec:	429a      	cmp	r2, r3
 80013ee:	dbed      	blt.n	80013cc <waitConnect+0x10>
	}
	return 0;
 80013f0:	2300      	movs	r3, #0
}
 80013f2:	4618      	mov	r0, r3
 80013f4:	3710      	adds	r7, #16
 80013f6:	46bd      	mov	sp, r7
 80013f8:	bd80      	pop	{r7, pc}
 80013fa:	bf00      	nop
 80013fc:	0800f5f8 	.word	0x0800f5f8
 8001400:	0800f5fc 	.word	0x0800f5fc

08001404 <getText>:


bool getText(char* output, const char* input, const uint32_t outputSize, const char* delimiter1, const char* delimiter2) {
 8001404:	b580      	push	{r7, lr}
 8001406:	b088      	sub	sp, #32
 8001408:	af00      	add	r7, sp, #0
 800140a:	60f8      	str	r0, [r7, #12]
 800140c:	60b9      	str	r1, [r7, #8]
 800140e:	607a      	str	r2, [r7, #4]
 8001410:	603b      	str	r3, [r7, #0]
    int delimLen = strlen(delimiter1);
 8001412:	6838      	ldr	r0, [r7, #0]
 8001414:	f7fe feee 	bl	80001f4 <strlen>
 8001418:	4603      	mov	r3, r0
 800141a:	61fb      	str	r3, [r7, #28]
    uint32_t charNum = 0;
 800141c:	2300      	movs	r3, #0
 800141e:	61bb      	str	r3, [r7, #24]
    char* p1, * p2;
    p1 = strstr(input, delimiter1);
 8001420:	6839      	ldr	r1, [r7, #0]
 8001422:	68b8      	ldr	r0, [r7, #8]
 8001424:	f009 fc93 	bl	800ad4e <strstr>
 8001428:	6178      	str	r0, [r7, #20]
    if (p1) {
 800142a:	697b      	ldr	r3, [r7, #20]
 800142c:	2b00      	cmp	r3, #0
 800142e:	d04b      	beq.n	80014c8 <getText+0xc4>

        if (strcmp(delimiter2, "") == 0)
 8001430:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001432:	781b      	ldrb	r3, [r3, #0]
 8001434:	2b00      	cmp	r3, #0
 8001436:	d120      	bne.n	800147a <getText+0x76>
        {
            charNum = (uintptr_t)(&input[strlen(input)] - p1 - delimLen);
 8001438:	68b8      	ldr	r0, [r7, #8]
 800143a:	f7fe fedb 	bl	80001f4 <strlen>
 800143e:	4602      	mov	r2, r0
 8001440:	68bb      	ldr	r3, [r7, #8]
 8001442:	441a      	add	r2, r3
 8001444:	697b      	ldr	r3, [r7, #20]
 8001446:	1ad2      	subs	r2, r2, r3
 8001448:	69fb      	ldr	r3, [r7, #28]
 800144a:	1ad3      	subs	r3, r2, r3
 800144c:	61bb      	str	r3, [r7, #24]
            if (charNum <= outputSize - 1) { //data is not longer than outputSize-1
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	3b01      	subs	r3, #1
 8001452:	69ba      	ldr	r2, [r7, #24]
 8001454:	429a      	cmp	r2, r3
 8001456:	d80e      	bhi.n	8001476 <getText+0x72>
                strncpy(output, p1 + delimLen, charNum);
 8001458:	69fb      	ldr	r3, [r7, #28]
 800145a:	697a      	ldr	r2, [r7, #20]
 800145c:	4413      	add	r3, r2
 800145e:	69ba      	ldr	r2, [r7, #24]
 8001460:	4619      	mov	r1, r3
 8001462:	68f8      	ldr	r0, [r7, #12]
 8001464:	f009 fc60 	bl	800ad28 <strncpy>
                output[charNum] = '\0';
 8001468:	68fa      	ldr	r2, [r7, #12]
 800146a:	69bb      	ldr	r3, [r7, #24]
 800146c:	4413      	add	r3, r2
 800146e:	2200      	movs	r2, #0
 8001470:	701a      	strb	r2, [r3, #0]
                return 1;
 8001472:	2301      	movs	r3, #1
 8001474:	e029      	b.n	80014ca <getText+0xc6>
            }
            else {
                return 0;
 8001476:	2300      	movs	r3, #0
 8001478:	e027      	b.n	80014ca <getText+0xc6>
            }
        }

        p2 = strstr(p1 + delimLen, delimiter2);
 800147a:	69fb      	ldr	r3, [r7, #28]
 800147c:	697a      	ldr	r2, [r7, #20]
 800147e:	4413      	add	r3, r2
 8001480:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001482:	4618      	mov	r0, r3
 8001484:	f009 fc63 	bl	800ad4e <strstr>
 8001488:	6138      	str	r0, [r7, #16]
        if (p2) {
 800148a:	693b      	ldr	r3, [r7, #16]
 800148c:	2b00      	cmp	r3, #0
 800148e:	d01b      	beq.n	80014c8 <getText+0xc4>
            charNum = (uintptr_t)(p2 - p1 - delimLen);
 8001490:	693a      	ldr	r2, [r7, #16]
 8001492:	697b      	ldr	r3, [r7, #20]
 8001494:	1ad2      	subs	r2, r2, r3
 8001496:	69fb      	ldr	r3, [r7, #28]
 8001498:	1ad3      	subs	r3, r2, r3
 800149a:	61bb      	str	r3, [r7, #24]
            if (charNum <= outputSize - 1) { //data is not longer than outputSize-1
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	3b01      	subs	r3, #1
 80014a0:	69ba      	ldr	r2, [r7, #24]
 80014a2:	429a      	cmp	r2, r3
 80014a4:	d80e      	bhi.n	80014c4 <getText+0xc0>
                strncpy(output, p1 + delimLen, charNum);
 80014a6:	69fb      	ldr	r3, [r7, #28]
 80014a8:	697a      	ldr	r2, [r7, #20]
 80014aa:	4413      	add	r3, r2
 80014ac:	69ba      	ldr	r2, [r7, #24]
 80014ae:	4619      	mov	r1, r3
 80014b0:	68f8      	ldr	r0, [r7, #12]
 80014b2:	f009 fc39 	bl	800ad28 <strncpy>
                output[charNum] = '\0';
 80014b6:	68fa      	ldr	r2, [r7, #12]
 80014b8:	69bb      	ldr	r3, [r7, #24]
 80014ba:	4413      	add	r3, r2
 80014bc:	2200      	movs	r2, #0
 80014be:	701a      	strb	r2, [r3, #0]
                return 1;
 80014c0:	2301      	movs	r3, #1
 80014c2:	e002      	b.n	80014ca <getText+0xc6>
            }
            else {
                return 0;
 80014c4:	2300      	movs	r3, #0
 80014c6:	e000      	b.n	80014ca <getText+0xc6>
            }
        }
    }
    return 0;
 80014c8:	2300      	movs	r3, #0
}
 80014ca:	4618      	mov	r0, r3
 80014cc:	3720      	adds	r7, #32
 80014ce:	46bd      	mov	sp, r7
 80014d0:	bd80      	pop	{r7, pc}
	...

080014d4 <readSmsList>:

bool readSmsList(char * smsList, const uint16_t smsListSize){
 80014d4:	b580      	push	{r7, lr}
 80014d6:	b084      	sub	sp, #16
 80014d8:	af02      	add	r7, sp, #8
 80014da:	6078      	str	r0, [r7, #4]
 80014dc:	460b      	mov	r3, r1
 80014de:	807b      	strh	r3, [r7, #2]
	return getSerialResponse("AT+CMGL=\"REC UNREAD\",1\r",20000,"+CMGL:",smsList,smsListSize);
 80014e0:	887b      	ldrh	r3, [r7, #2]
 80014e2:	9300      	str	r3, [sp, #0]
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	4a05      	ldr	r2, [pc, #20]	; (80014fc <readSmsList+0x28>)
 80014e8:	f644 6120 	movw	r1, #20000	; 0x4e20
 80014ec:	4804      	ldr	r0, [pc, #16]	; (8001500 <readSmsList+0x2c>)
 80014ee:	f7ff ff07 	bl	8001300 <getSerialResponse>
 80014f2:	4603      	mov	r3, r0
}
 80014f4:	4618      	mov	r0, r3
 80014f6:	3708      	adds	r7, #8
 80014f8:	46bd      	mov	sp, r7
 80014fa:	bd80      	pop	{r7, pc}
 80014fc:	0800f600 	.word	0x0800f600
 8001500:	0800f608 	.word	0x0800f608

08001504 <deleteSms>:

bool deleteSms(const char* index) {
 8001504:	b580      	push	{r7, lr}
 8001506:	b086      	sub	sp, #24
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
	char command[16]={0};
 800150c:	2300      	movs	r3, #0
 800150e:	60bb      	str	r3, [r7, #8]
 8001510:	f107 030c 	add.w	r3, r7, #12
 8001514:	2200      	movs	r2, #0
 8001516:	601a      	str	r2, [r3, #0]
 8001518:	605a      	str	r2, [r3, #4]
 800151a:	609a      	str	r2, [r3, #8]
    snprintf(command, sizeof(command), "AT+CMGD=%s\r", index);
 800151c:	f107 0008 	add.w	r0, r7, #8
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	4a08      	ldr	r2, [pc, #32]	; (8001544 <deleteSms+0x40>)
 8001524:	2110      	movs	r1, #16
 8001526:	f008 fdd5 	bl	800a0d4 <sniprintf>
	return sendAtCommand(command,5000,"OK");
 800152a:	f107 0308 	add.w	r3, r7, #8
 800152e:	4a06      	ldr	r2, [pc, #24]	; (8001548 <deleteSms+0x44>)
 8001530:	f241 3188 	movw	r1, #5000	; 0x1388
 8001534:	4618      	mov	r0, r3
 8001536:	f7ff fe45 	bl	80011c4 <sendAtCommand>
 800153a:	4603      	mov	r3, r0
}
 800153c:	4618      	mov	r0, r3
 800153e:	3718      	adds	r7, #24
 8001540:	46bd      	mov	sp, r7
 8001542:	bd80      	pop	{r7, pc}
 8001544:	0800f620 	.word	0x0800f620
 8001548:	0800f5f8 	.word	0x0800f5f8

0800154c <storeSms>:


bool storeSms(const char* address,const char* message) {
 800154c:	b580      	push	{r7, lr}
 800154e:	b0aa      	sub	sp, #168	; 0xa8
 8001550:	af00      	add	r7, sp, #0
 8001552:	6078      	str	r0, [r7, #4]
 8001554:	6039      	str	r1, [r7, #0]
    char command[MAX_SMS_SIZE]={0};
 8001556:	2300      	movs	r3, #0
 8001558:	60bb      	str	r3, [r7, #8]
 800155a:	f107 030c 	add.w	r3, r7, #12
 800155e:	229c      	movs	r2, #156	; 0x9c
 8001560:	2100      	movs	r1, #0
 8001562:	4618      	mov	r0, r3
 8001564:	f007 fbcc 	bl	8008d00 <memset>
    // AT+CMGW=<da><CR>text<ctrl-Z/ESC>
    sprintf(command, "AT+CMGW=\"%s\"\r", address);
 8001568:	f107 0308 	add.w	r3, r7, #8
 800156c:	687a      	ldr	r2, [r7, #4]
 800156e:	491b      	ldr	r1, [pc, #108]	; (80015dc <storeSms+0x90>)
 8001570:	4618      	mov	r0, r3
 8001572:	f008 fde3 	bl	800a13c <siprintf>
    sendAtCommand(command,1000,">"); //init sms
 8001576:	f107 0308 	add.w	r3, r7, #8
 800157a:	4a19      	ldr	r2, [pc, #100]	; (80015e0 <storeSms+0x94>)
 800157c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001580:	4618      	mov	r0, r3
 8001582:	f7ff fe1f 	bl	80011c4 <sendAtCommand>
	memset(command,'\0',strlen(command));
 8001586:	f107 0308 	add.w	r3, r7, #8
 800158a:	4618      	mov	r0, r3
 800158c:	f7fe fe32 	bl	80001f4 <strlen>
 8001590:	4602      	mov	r2, r0
 8001592:	f107 0308 	add.w	r3, r7, #8
 8001596:	2100      	movs	r1, #0
 8001598:	4618      	mov	r0, r3
 800159a:	f007 fbb1 	bl	8008d00 <memset>
	sprintf(command, "%s%c",message,26); //store sms
 800159e:	f107 0008 	add.w	r0, r7, #8
 80015a2:	231a      	movs	r3, #26
 80015a4:	683a      	ldr	r2, [r7, #0]
 80015a6:	490f      	ldr	r1, [pc, #60]	; (80015e4 <storeSms+0x98>)
 80015a8:	f008 fdc8 	bl	800a13c <siprintf>
	if ( sendAtCommand(command,5000,"OK") ) {
 80015ac:	f107 0308 	add.w	r3, r7, #8
 80015b0:	4a0d      	ldr	r2, [pc, #52]	; (80015e8 <storeSms+0x9c>)
 80015b2:	f241 3188 	movw	r1, #5000	; 0x1388
 80015b6:	4618      	mov	r0, r3
 80015b8:	f7ff fe04 	bl	80011c4 <sendAtCommand>
 80015bc:	4603      	mov	r3, r0
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d004      	beq.n	80015cc <storeSms+0x80>
		HAL_Delay(100);
 80015c2:	2064      	movs	r0, #100	; 0x64
 80015c4:	f002 fbe2 	bl	8003d8c <HAL_Delay>
		return 1;
 80015c8:	2301      	movs	r3, #1
 80015ca:	e003      	b.n	80015d4 <storeSms+0x88>
	}
	else {
		HAL_Delay(100);
 80015cc:	2064      	movs	r0, #100	; 0x64
 80015ce:	f002 fbdd 	bl	8003d8c <HAL_Delay>
		return 0;
 80015d2:	2300      	movs	r3, #0
	}
}
 80015d4:	4618      	mov	r0, r3
 80015d6:	37a8      	adds	r7, #168	; 0xa8
 80015d8:	46bd      	mov	sp, r7
 80015da:	bd80      	pop	{r7, pc}
 80015dc:	0800f62c 	.word	0x0800f62c
 80015e0:	0800f63c 	.word	0x0800f63c
 80015e4:	0800f640 	.word	0x0800f640
 80015e8:	0800f5f8 	.word	0x0800f5f8

080015ec <readStoredCount1>:

bool readStoredCount1(uint16_t* count) {
 80015ec:	b580      	push	{r7, lr}
 80015ee:	b09e      	sub	sp, #120	; 0x78
 80015f0:	af02      	add	r7, sp, #8
 80015f2:	6078      	str	r0, [r7, #4]

	char response[100]={0};
 80015f4:	2300      	movs	r3, #0
 80015f6:	60fb      	str	r3, [r7, #12]
 80015f8:	f107 0310 	add.w	r3, r7, #16
 80015fc:	2260      	movs	r2, #96	; 0x60
 80015fe:	2100      	movs	r1, #0
 8001600:	4618      	mov	r0, r3
 8001602:	f007 fb7d 	bl	8008d00 <memset>
	uint16_t used=0;
 8001606:	2300      	movs	r3, #0
 8001608:	817b      	strh	r3, [r7, #10]

	if (!getSerialResponse("AT+CPMS?\r",20000,"OK",response,sizeof(response)))
 800160a:	f107 030c 	add.w	r3, r7, #12
 800160e:	2264      	movs	r2, #100	; 0x64
 8001610:	9200      	str	r2, [sp, #0]
 8001612:	4a11      	ldr	r2, [pc, #68]	; (8001658 <readStoredCount1+0x6c>)
 8001614:	f644 6120 	movw	r1, #20000	; 0x4e20
 8001618:	4810      	ldr	r0, [pc, #64]	; (800165c <readStoredCount1+0x70>)
 800161a:	f7ff fe71 	bl	8001300 <getSerialResponse>
 800161e:	4603      	mov	r3, r0
 8001620:	f083 0301 	eor.w	r3, r3, #1
 8001624:	b2db      	uxtb	r3, r3
 8001626:	2b00      	cmp	r3, #0
 8001628:	d001      	beq.n	800162e <readStoredCount1+0x42>
		return 0;
 800162a:	2300      	movs	r3, #0
 800162c:	e010      	b.n	8001650 <readStoredCount1+0x64>

	if (sscanf(response, "\r\n+CPMS: %*[^,],%d,%*d,%*[^,],%*d,%*d,%*[^,],%*d,%*d", &used) == 1) { //EDIT \r\n
 800162e:	f107 020a 	add.w	r2, r7, #10
 8001632:	f107 030c 	add.w	r3, r7, #12
 8001636:	490a      	ldr	r1, [pc, #40]	; (8001660 <readStoredCount1+0x74>)
 8001638:	4618      	mov	r0, r3
 800163a:	f008 fd9f 	bl	800a17c <siscanf>
 800163e:	4603      	mov	r3, r0
 8001640:	2b01      	cmp	r3, #1
 8001642:	d104      	bne.n	800164e <readStoredCount1+0x62>
		*count = used;
 8001644:	897a      	ldrh	r2, [r7, #10]
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	801a      	strh	r2, [r3, #0]
		return 1;
 800164a:	2301      	movs	r3, #1
 800164c:	e000      	b.n	8001650 <readStoredCount1+0x64>
	} else
		return 0;
 800164e:	2300      	movs	r3, #0

}
 8001650:	4618      	mov	r0, r3
 8001652:	3770      	adds	r7, #112	; 0x70
 8001654:	46bd      	mov	sp, r7
 8001656:	bd80      	pop	{r7, pc}
 8001658:	0800f5f8 	.word	0x0800f5f8
 800165c:	0800f648 	.word	0x0800f648
 8001660:	0800f654 	.word	0x0800f654

08001664 <readStoredCount2>:

bool readStoredCount2(uint16_t* count) {
 8001664:	b580      	push	{r7, lr}
 8001666:	b09e      	sub	sp, #120	; 0x78
 8001668:	af02      	add	r7, sp, #8
 800166a:	6078      	str	r0, [r7, #4]

	char response[100]={0};
 800166c:	2300      	movs	r3, #0
 800166e:	60fb      	str	r3, [r7, #12]
 8001670:	f107 0310 	add.w	r3, r7, #16
 8001674:	2260      	movs	r2, #96	; 0x60
 8001676:	2100      	movs	r1, #0
 8001678:	4618      	mov	r0, r3
 800167a:	f007 fb41 	bl	8008d00 <memset>
	uint16_t used=0;
 800167e:	2300      	movs	r3, #0
 8001680:	817b      	strh	r3, [r7, #10]

	if (!getSerialResponse("AT+CPMS?\r",20000,"OK",response,sizeof(response)))
 8001682:	f107 030c 	add.w	r3, r7, #12
 8001686:	2264      	movs	r2, #100	; 0x64
 8001688:	9200      	str	r2, [sp, #0]
 800168a:	4a11      	ldr	r2, [pc, #68]	; (80016d0 <readStoredCount2+0x6c>)
 800168c:	f644 6120 	movw	r1, #20000	; 0x4e20
 8001690:	4810      	ldr	r0, [pc, #64]	; (80016d4 <readStoredCount2+0x70>)
 8001692:	f7ff fe35 	bl	8001300 <getSerialResponse>
 8001696:	4603      	mov	r3, r0
 8001698:	f083 0301 	eor.w	r3, r3, #1
 800169c:	b2db      	uxtb	r3, r3
 800169e:	2b00      	cmp	r3, #0
 80016a0:	d001      	beq.n	80016a6 <readStoredCount2+0x42>
		return 0;
 80016a2:	2300      	movs	r3, #0
 80016a4:	e010      	b.n	80016c8 <readStoredCount2+0x64>

	if (sscanf(response, "\r\n+CPMS: %*[^,],%*d,%*d,%*[^,],%d,%*d,%*[^,],%*d,%*d", &used) == 1) { //EDIT \r\n
 80016a6:	f107 020a 	add.w	r2, r7, #10
 80016aa:	f107 030c 	add.w	r3, r7, #12
 80016ae:	490a      	ldr	r1, [pc, #40]	; (80016d8 <readStoredCount2+0x74>)
 80016b0:	4618      	mov	r0, r3
 80016b2:	f008 fd63 	bl	800a17c <siscanf>
 80016b6:	4603      	mov	r3, r0
 80016b8:	2b01      	cmp	r3, #1
 80016ba:	d104      	bne.n	80016c6 <readStoredCount2+0x62>
		*count = used;
 80016bc:	897a      	ldrh	r2, [r7, #10]
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	801a      	strh	r2, [r3, #0]
		return 1;
 80016c2:	2301      	movs	r3, #1
 80016c4:	e000      	b.n	80016c8 <readStoredCount2+0x64>
	} else
		return 0;
 80016c6:	2300      	movs	r3, #0

}
 80016c8:	4618      	mov	r0, r3
 80016ca:	3770      	adds	r7, #112	; 0x70
 80016cc:	46bd      	mov	sp, r7
 80016ce:	bd80      	pop	{r7, pc}
 80016d0:	0800f5f8 	.word	0x0800f5f8
 80016d4:	0800f648 	.word	0x0800f648
 80016d8:	0800f68c 	.word	0x0800f68c

080016dc <sendStoredSms>:

bool sendStoredSms() {
 80016dc:	b580      	push	{r7, lr}
 80016de:	b086      	sub	sp, #24
 80016e0:	af00      	add	r7, sp, #0

	uint16_t count=0;
 80016e2:	2300      	movs	r3, #0
 80016e4:	82bb      	strh	r3, [r7, #20]
	char command[16]={0};
 80016e6:	2300      	movs	r3, #0
 80016e8:	607b      	str	r3, [r7, #4]
 80016ea:	f107 0308 	add.w	r3, r7, #8
 80016ee:	2200      	movs	r2, #0
 80016f0:	601a      	str	r2, [r3, #0]
 80016f2:	605a      	str	r2, [r3, #4]
 80016f4:	609a      	str	r2, [r3, #8]

	if (!readStoredCount2(&count))
 80016f6:	f107 0314 	add.w	r3, r7, #20
 80016fa:	4618      	mov	r0, r3
 80016fc:	f7ff ffb2 	bl	8001664 <readStoredCount2>
 8001700:	4603      	mov	r3, r0
 8001702:	f083 0301 	eor.w	r3, r3, #1
 8001706:	b2db      	uxtb	r3, r3
 8001708:	2b00      	cmp	r3, #0
 800170a:	d001      	beq.n	8001710 <sendStoredSms+0x34>
		return 0;
 800170c:	2300      	movs	r3, #0
 800170e:	e03a      	b.n	8001786 <sendStoredSms+0xaa>

    for (uint16_t i = 0; i < count; i++) {
 8001710:	2300      	movs	r3, #0
 8001712:	82fb      	strh	r3, [r7, #22]
 8001714:	e015      	b.n	8001742 <sendStoredSms+0x66>
        snprintf(command, sizeof(command), "AT+CMSS=%d\r", i);
 8001716:	8afb      	ldrh	r3, [r7, #22]
 8001718:	1d38      	adds	r0, r7, #4
 800171a:	4a1d      	ldr	r2, [pc, #116]	; (8001790 <sendStoredSms+0xb4>)
 800171c:	2110      	movs	r1, #16
 800171e:	f008 fcd9 	bl	800a0d4 <sniprintf>
        if (!sendAtCommand2(command,60000,"+CMSS:")) //edit
 8001722:	1d3b      	adds	r3, r7, #4
 8001724:	4a1b      	ldr	r2, [pc, #108]	; (8001794 <sendStoredSms+0xb8>)
 8001726:	f64e 2160 	movw	r1, #60000	; 0xea60
 800172a:	4618      	mov	r0, r3
 800172c:	f7ff fd8d 	bl	800124a <sendAtCommand2>
 8001730:	4603      	mov	r3, r0
 8001732:	f083 0301 	eor.w	r3, r3, #1
 8001736:	b2db      	uxtb	r3, r3
 8001738:	2b00      	cmp	r3, #0
 800173a:	d107      	bne.n	800174c <sendStoredSms+0x70>
    for (uint16_t i = 0; i < count; i++) {
 800173c:	8afb      	ldrh	r3, [r7, #22]
 800173e:	3301      	adds	r3, #1
 8001740:	82fb      	strh	r3, [r7, #22]
 8001742:	8abb      	ldrh	r3, [r7, #20]
 8001744:	8afa      	ldrh	r2, [r7, #22]
 8001746:	429a      	cmp	r2, r3
 8001748:	d3e5      	bcc.n	8001716 <sendStoredSms+0x3a>
 800174a:	e000      	b.n	800174e <sendStoredSms+0x72>
			break;
 800174c:	bf00      	nop

    }

    if (!sendAtCommand("AT+CPMS=\"ME\",\"ME\",\"SM\"\r",5000,"OK")) {
 800174e:	4a12      	ldr	r2, [pc, #72]	; (8001798 <sendStoredSms+0xbc>)
 8001750:	f241 3188 	movw	r1, #5000	; 0x1388
 8001754:	4811      	ldr	r0, [pc, #68]	; (800179c <sendStoredSms+0xc0>)
 8001756:	f7ff fd35 	bl	80011c4 <sendAtCommand>
 800175a:	4603      	mov	r3, r0
 800175c:	f083 0301 	eor.w	r3, r3, #1
 8001760:	b2db      	uxtb	r3, r3
 8001762:	2b00      	cmp	r3, #0
 8001764:	d001      	beq.n	800176a <sendStoredSms+0x8e>
    	return 0;
 8001766:	2300      	movs	r3, #0
 8001768:	e00d      	b.n	8001786 <sendStoredSms+0xaa>
    }

	snprintf(command, sizeof(command), "AT+CMGD=1,2\r");
 800176a:	1d3b      	adds	r3, r7, #4
 800176c:	4a0c      	ldr	r2, [pc, #48]	; (80017a0 <sendStoredSms+0xc4>)
 800176e:	2110      	movs	r1, #16
 8001770:	4618      	mov	r0, r3
 8001772:	f008 fcaf 	bl	800a0d4 <sniprintf>
    sendAtCommand(command,50000,"OK"); //delete all sent and read messages
 8001776:	1d3b      	adds	r3, r7, #4
 8001778:	4a07      	ldr	r2, [pc, #28]	; (8001798 <sendStoredSms+0xbc>)
 800177a:	f24c 3150 	movw	r1, #50000	; 0xc350
 800177e:	4618      	mov	r0, r3
 8001780:	f7ff fd20 	bl	80011c4 <sendAtCommand>
	return 1;
 8001784:	2301      	movs	r3, #1
}
 8001786:	4618      	mov	r0, r3
 8001788:	3718      	adds	r7, #24
 800178a:	46bd      	mov	sp, r7
 800178c:	bd80      	pop	{r7, pc}
 800178e:	bf00      	nop
 8001790:	0800f6c4 	.word	0x0800f6c4
 8001794:	0800f6d0 	.word	0x0800f6d0
 8001798:	0800f5f8 	.word	0x0800f5f8
 800179c:	0800f6d8 	.word	0x0800f6d8
 80017a0:	0800f6f0 	.word	0x0800f6f0

080017a4 <writeFile>:

bool writeFile(const char* settings) {
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b096      	sub	sp, #88	; 0x58
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]

	bool success=0;
 80017ac:	2300      	movs	r3, #0
 80017ae:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
	//AT+CFSWFILE=<index>,<filename>,<mode>,<file size>,<inputtime>
	//AT+CFSWFILE=0,"settings.txt",0,strlen(settings),9999
	char command[60]={0};
 80017b2:	2300      	movs	r3, #0
 80017b4:	61bb      	str	r3, [r7, #24]
 80017b6:	f107 031c 	add.w	r3, r7, #28
 80017ba:	2238      	movs	r2, #56	; 0x38
 80017bc:	2100      	movs	r1, #0
 80017be:	4618      	mov	r0, r3
 80017c0:	f007 fa9e 	bl	8008d00 <memset>
	snprintf(command, sizeof(command), "AT+CFSWFILE=0,\"settings.txt\",0,%d,10000\r\n", strlen(settings));
 80017c4:	6878      	ldr	r0, [r7, #4]
 80017c6:	f7fe fd15 	bl	80001f4 <strlen>
 80017ca:	4603      	mov	r3, r0
 80017cc:	f107 0018 	add.w	r0, r7, #24
 80017d0:	4a24      	ldr	r2, [pc, #144]	; (8001864 <writeFile+0xc0>)
 80017d2:	213c      	movs	r1, #60	; 0x3c
 80017d4:	f008 fc7e 	bl	800a0d4 <sniprintf>

	if(!sendAtCommand("AT+CFSINIT\r",2000,"OK")) //Init
 80017d8:	4a23      	ldr	r2, [pc, #140]	; (8001868 <writeFile+0xc4>)
 80017da:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80017de:	4823      	ldr	r0, [pc, #140]	; (800186c <writeFile+0xc8>)
 80017e0:	f7ff fcf0 	bl	80011c4 <sendAtCommand>
 80017e4:	4603      	mov	r3, r0
 80017e6:	f083 0301 	eor.w	r3, r3, #1
 80017ea:	b2db      	uxtb	r3, r3
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	d001      	beq.n	80017f4 <writeFile+0x50>
		return 0;
 80017f0:	2300      	movs	r3, #0
 80017f2:	e033      	b.n	800185c <writeFile+0xb8>
	uartSend((uint8_t *)command, strlen(command)); //send atCommand
 80017f4:	f107 0318 	add.w	r3, r7, #24
 80017f8:	4618      	mov	r0, r3
 80017fa:	f7fe fcfb 	bl	80001f4 <strlen>
 80017fe:	4603      	mov	r3, r0
 8001800:	b29a      	uxth	r2, r3
 8001802:	f107 0318 	add.w	r3, r7, #24
 8001806:	4611      	mov	r1, r2
 8001808:	4618      	mov	r0, r3
 800180a:	f7ff fc9f 	bl	800114c <uartSend>

	char confirm[14];
	  if (!getSerialResponse2(5000, confirm , sizeof(confirm))) {
 800180e:	f107 0308 	add.w	r3, r7, #8
 8001812:	220e      	movs	r2, #14
 8001814:	4619      	mov	r1, r3
 8001816:	f241 3088 	movw	r0, #5000	; 0x1388
 800181a:	f7ff fda9 	bl	8001370 <getSerialResponse2>
 800181e:	4603      	mov	r3, r0
 8001820:	f083 0301 	eor.w	r3, r3, #1
 8001824:	b2db      	uxtb	r3, r3
 8001826:	2b00      	cmp	r3, #0
 8001828:	d007      	beq.n	800183a <writeFile+0x96>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 800182a:	4a0f      	ldr	r2, [pc, #60]	; (8001868 <writeFile+0xc4>)
 800182c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001830:	480f      	ldr	r0, [pc, #60]	; (8001870 <writeFile+0xcc>)
 8001832:	f7ff fcc7 	bl	80011c4 <sendAtCommand>
	    return 0;
 8001836:	2300      	movs	r3, #0
 8001838:	e010      	b.n	800185c <writeFile+0xb8>
	  }

	//uartSend((uint8_t *)settings, strlen(settings)); //send atCommand
	success=sendAtCommand(settings,2000,"OK");
 800183a:	4a0b      	ldr	r2, [pc, #44]	; (8001868 <writeFile+0xc4>)
 800183c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001840:	6878      	ldr	r0, [r7, #4]
 8001842:	f7ff fcbf 	bl	80011c4 <sendAtCommand>
 8001846:	4603      	mov	r3, r0
 8001848:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
	//HAL_Delay(100);
	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 800184c:	4a06      	ldr	r2, [pc, #24]	; (8001868 <writeFile+0xc4>)
 800184e:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001852:	4807      	ldr	r0, [pc, #28]	; (8001870 <writeFile+0xcc>)
 8001854:	f7ff fcb6 	bl	80011c4 <sendAtCommand>
	return success;
 8001858:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
}
 800185c:	4618      	mov	r0, r3
 800185e:	3758      	adds	r7, #88	; 0x58
 8001860:	46bd      	mov	sp, r7
 8001862:	bd80      	pop	{r7, pc}
 8001864:	0800f700 	.word	0x0800f700
 8001868:	0800f5f8 	.word	0x0800f5f8
 800186c:	0800f72c 	.word	0x0800f72c
 8001870:	0800f738 	.word	0x0800f738

08001874 <readFileSize>:

bool readFileSize(uint16_t* fileSize) {
 8001874:	b580      	push	{r7, lr}
 8001876:	b08e      	sub	sp, #56	; 0x38
 8001878:	af02      	add	r7, sp, #8
 800187a:	6078      	str	r0, [r7, #4]

	char response[30]={0};
 800187c:	2300      	movs	r3, #0
 800187e:	613b      	str	r3, [r7, #16]
 8001880:	f107 0314 	add.w	r3, r7, #20
 8001884:	2200      	movs	r2, #0
 8001886:	601a      	str	r2, [r3, #0]
 8001888:	605a      	str	r2, [r3, #4]
 800188a:	609a      	str	r2, [r3, #8]
 800188c:	60da      	str	r2, [r3, #12]
 800188e:	611a      	str	r2, [r3, #16]
 8001890:	615a      	str	r2, [r3, #20]
 8001892:	831a      	strh	r2, [r3, #24]
	uint16_t fileSizeCopy=0;
 8001894:	2300      	movs	r3, #0
 8001896:	81fb      	strh	r3, [r7, #14]

	if(!sendAtCommand("AT+CFSINIT\r",2000,"OK")) //Init1
 8001898:	4a23      	ldr	r2, [pc, #140]	; (8001928 <readFileSize+0xb4>)
 800189a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800189e:	4823      	ldr	r0, [pc, #140]	; (800192c <readFileSize+0xb8>)
 80018a0:	f7ff fc90 	bl	80011c4 <sendAtCommand>
 80018a4:	4603      	mov	r3, r0
 80018a6:	f083 0301 	eor.w	r3, r3, #1
 80018aa:	b2db      	uxtb	r3, r3
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d001      	beq.n	80018b4 <readFileSize+0x40>
		return 0;
 80018b0:	2300      	movs	r3, #0
 80018b2:	e034      	b.n	800191e <readFileSize+0xaa>

	//AT+CFSGFIS=<index>,<filename>
	//AT+CFSGFIS=0,"settings.txt"
	if (!getSerialResponse("AT+CFSGFIS=0,\"settings.txt\"\r",2000,"+CFSGFIS:",response,sizeof(response))) {
 80018b4:	f107 0310 	add.w	r3, r7, #16
 80018b8:	221e      	movs	r2, #30
 80018ba:	9200      	str	r2, [sp, #0]
 80018bc:	4a1c      	ldr	r2, [pc, #112]	; (8001930 <readFileSize+0xbc>)
 80018be:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80018c2:	481c      	ldr	r0, [pc, #112]	; (8001934 <readFileSize+0xc0>)
 80018c4:	f7ff fd1c 	bl	8001300 <getSerialResponse>
 80018c8:	4603      	mov	r3, r0
 80018ca:	f083 0301 	eor.w	r3, r3, #1
 80018ce:	b2db      	uxtb	r3, r3
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	d007      	beq.n	80018e4 <readFileSize+0x70>
		sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 80018d4:	4a14      	ldr	r2, [pc, #80]	; (8001928 <readFileSize+0xb4>)
 80018d6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80018da:	4817      	ldr	r0, [pc, #92]	; (8001938 <readFileSize+0xc4>)
 80018dc:	f7ff fc72 	bl	80011c4 <sendAtCommand>
		return 0;
 80018e0:	2300      	movs	r3, #0
 80018e2:	e01c      	b.n	800191e <readFileSize+0xaa>
	}

	if (sscanf(response, "\r\n+CFSGFIS: %d", &fileSizeCopy) == 1) { // EDIT \r\n
 80018e4:	f107 020e 	add.w	r2, r7, #14
 80018e8:	f107 0310 	add.w	r3, r7, #16
 80018ec:	4913      	ldr	r1, [pc, #76]	; (800193c <readFileSize+0xc8>)
 80018ee:	4618      	mov	r0, r3
 80018f0:	f008 fc44 	bl	800a17c <siscanf>
 80018f4:	4603      	mov	r3, r0
 80018f6:	2b01      	cmp	r3, #1
 80018f8:	d10a      	bne.n	8001910 <readFileSize+0x9c>
		*fileSize=fileSizeCopy;
 80018fa:	89fa      	ldrh	r2, [r7, #14]
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	801a      	strh	r2, [r3, #0]
		sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001900:	4a09      	ldr	r2, [pc, #36]	; (8001928 <readFileSize+0xb4>)
 8001902:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001906:	480c      	ldr	r0, [pc, #48]	; (8001938 <readFileSize+0xc4>)
 8001908:	f7ff fc5c 	bl	80011c4 <sendAtCommand>
		return 1;
 800190c:	2301      	movs	r3, #1
 800190e:	e006      	b.n	800191e <readFileSize+0xaa>
	} else {
		sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001910:	4a05      	ldr	r2, [pc, #20]	; (8001928 <readFileSize+0xb4>)
 8001912:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001916:	4808      	ldr	r0, [pc, #32]	; (8001938 <readFileSize+0xc4>)
 8001918:	f7ff fc54 	bl	80011c4 <sendAtCommand>
		return 0;
 800191c:	2300      	movs	r3, #0
	}

}
 800191e:	4618      	mov	r0, r3
 8001920:	3730      	adds	r7, #48	; 0x30
 8001922:	46bd      	mov	sp, r7
 8001924:	bd80      	pop	{r7, pc}
 8001926:	bf00      	nop
 8001928:	0800f5f8 	.word	0x0800f5f8
 800192c:	0800f72c 	.word	0x0800f72c
 8001930:	0800f744 	.word	0x0800f744
 8001934:	0800f750 	.word	0x0800f750
 8001938:	0800f738 	.word	0x0800f738
 800193c:	0800f770 	.word	0x0800f770

08001940 <readFile>:

bool readFile(char* settings) {
 8001940:	b5b0      	push	{r4, r5, r7, lr}
 8001942:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 8001946:	af00      	add	r7, sp, #0
 8001948:	f507 7322 	add.w	r3, r7, #648	; 0x288
 800194c:	f5a3 7321 	sub.w	r3, r3, #644	; 0x284
 8001950:	6018      	str	r0, [r3, #0]

	char command[60]={0};
 8001952:	2300      	movs	r3, #0
 8001954:	f8c7 324c 	str.w	r3, [r7, #588]	; 0x24c
 8001958:	f507 7314 	add.w	r3, r7, #592	; 0x250
 800195c:	2238      	movs	r2, #56	; 0x38
 800195e:	2100      	movs	r1, #0
 8001960:	4618      	mov	r0, r3
 8001962:	f007 f9cd 	bl	8008d00 <memset>
	uint16_t fileSize=0;
 8001966:	2300      	movs	r3, #0
 8001968:	f8a7 324a 	strh.w	r3, [r7, #586]	; 0x24a
	char response[MAX_FILE_LEN]={0};
 800196c:	f507 7322 	add.w	r3, r7, #648	; 0x288
 8001970:	f5a3 7317 	sub.w	r3, r3, #604	; 0x25c
 8001974:	2200      	movs	r2, #0
 8001976:	601a      	str	r2, [r3, #0]
 8001978:	3304      	adds	r3, #4
 800197a:	f240 2217 	movw	r2, #535	; 0x217
 800197e:	2100      	movs	r1, #0
 8001980:	4618      	mov	r0, r3
 8001982:	f007 f9bd 	bl	8008d00 <memset>

	if(!readFileSize(&fileSize)) {
 8001986:	f207 234a 	addw	r3, r7, #586	; 0x24a
 800198a:	4618      	mov	r0, r3
 800198c:	f7ff ff72 	bl	8001874 <readFileSize>
 8001990:	4603      	mov	r3, r0
 8001992:	f083 0301 	eor.w	r3, r3, #1
 8001996:	b2db      	uxtb	r3, r3
 8001998:	2b00      	cmp	r3, #0
 800199a:	d028      	beq.n	80019ee <readFile+0xae>
		char initialSettings[21]="52,19,1672527600,120";
 800199c:	f507 7322 	add.w	r3, r7, #648	; 0x288
 80019a0:	f5a3 731f 	sub.w	r3, r3, #636	; 0x27c
 80019a4:	4a4c      	ldr	r2, [pc, #304]	; (8001ad8 <readFile+0x198>)
 80019a6:	461c      	mov	r4, r3
 80019a8:	4615      	mov	r5, r2
 80019aa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80019ac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80019ae:	e895 0003 	ldmia.w	r5, {r0, r1}
 80019b2:	6020      	str	r0, [r4, #0]
 80019b4:	3404      	adds	r4, #4
 80019b6:	7021      	strb	r1, [r4, #0]
		if (writeFile(initialSettings)) { //if no file write file
 80019b8:	f107 030c 	add.w	r3, r7, #12
 80019bc:	4618      	mov	r0, r3
 80019be:	f7ff fef1 	bl	80017a4 <writeFile>
 80019c2:	4603      	mov	r3, r0
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d010      	beq.n	80019ea <readFile+0xaa>
			strncpy(settings,initialSettings,strlen(initialSettings));
 80019c8:	f107 030c 	add.w	r3, r7, #12
 80019cc:	4618      	mov	r0, r3
 80019ce:	f7fe fc11 	bl	80001f4 <strlen>
 80019d2:	4602      	mov	r2, r0
 80019d4:	f107 010c 	add.w	r1, r7, #12
 80019d8:	f507 7322 	add.w	r3, r7, #648	; 0x288
 80019dc:	f5a3 7321 	sub.w	r3, r3, #644	; 0x284
 80019e0:	6818      	ldr	r0, [r3, #0]
 80019e2:	f009 f9a1 	bl	800ad28 <strncpy>
			return 1;
 80019e6:	2301      	movs	r3, #1
 80019e8:	e070      	b.n	8001acc <readFile+0x18c>
		}
		else
			return 0;
 80019ea:	2300      	movs	r3, #0
 80019ec:	e06e      	b.n	8001acc <readFile+0x18c>
	}

	//AT+CFSRFILE=<index>,<filename>,<mode>,<file size>,<position>
	//AT+CFSRFILE=0,"settings.txt",0,fileSize,0
	snprintf(command, sizeof(command), "AT+CFSRFILE=0,\"settings.txt\",0,%d,0\r", fileSize);
 80019ee:	f8b7 324a 	ldrh.w	r3, [r7, #586]	; 0x24a
 80019f2:	f507 7013 	add.w	r0, r7, #588	; 0x24c
 80019f6:	4a39      	ldr	r2, [pc, #228]	; (8001adc <readFile+0x19c>)
 80019f8:	213c      	movs	r1, #60	; 0x3c
 80019fa:	f008 fb6b 	bl	800a0d4 <sniprintf>

	if(!sendAtCommand("AT+CFSINIT\r",2000,"OK")) //Init
 80019fe:	4a38      	ldr	r2, [pc, #224]	; (8001ae0 <readFile+0x1a0>)
 8001a00:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a04:	4837      	ldr	r0, [pc, #220]	; (8001ae4 <readFile+0x1a4>)
 8001a06:	f7ff fbdd 	bl	80011c4 <sendAtCommand>
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	f083 0301 	eor.w	r3, r3, #1
 8001a10:	b2db      	uxtb	r3, r3
 8001a12:	2b00      	cmp	r3, #0
 8001a14:	d001      	beq.n	8001a1a <readFile+0xda>
		return 0;
 8001a16:	2300      	movs	r3, #0
 8001a18:	e058      	b.n	8001acc <readFile+0x18c>

	  if (!sendAtCommand(command,10000,"+CFSRFILE:")) {
 8001a1a:	f507 7313 	add.w	r3, r7, #588	; 0x24c
 8001a1e:	4a32      	ldr	r2, [pc, #200]	; (8001ae8 <readFile+0x1a8>)
 8001a20:	f242 7110 	movw	r1, #10000	; 0x2710
 8001a24:	4618      	mov	r0, r3
 8001a26:	f7ff fbcd 	bl	80011c4 <sendAtCommand>
 8001a2a:	4603      	mov	r3, r0
 8001a2c:	f083 0301 	eor.w	r3, r3, #1
 8001a30:	b2db      	uxtb	r3, r3
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d007      	beq.n	8001a46 <readFile+0x106>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001a36:	4a2a      	ldr	r2, [pc, #168]	; (8001ae0 <readFile+0x1a0>)
 8001a38:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a3c:	482b      	ldr	r0, [pc, #172]	; (8001aec <readFile+0x1ac>)
 8001a3e:	f7ff fbc1 	bl	80011c4 <sendAtCommand>
	  	return 0;
 8001a42:	2300      	movs	r3, #0
 8001a44:	e042      	b.n	8001acc <readFile+0x18c>
	  }

	  if (!getSerialResponse2(10000, response , sizeof(response))) {
 8001a46:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001a4a:	f240 221b 	movw	r2, #539	; 0x21b
 8001a4e:	4619      	mov	r1, r3
 8001a50:	f242 7010 	movw	r0, #10000	; 0x2710
 8001a54:	f7ff fc8c 	bl	8001370 <getSerialResponse2>
 8001a58:	4603      	mov	r3, r0
 8001a5a:	f083 0301 	eor.w	r3, r3, #1
 8001a5e:	b2db      	uxtb	r3, r3
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d007      	beq.n	8001a74 <readFile+0x134>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001a64:	4a1e      	ldr	r2, [pc, #120]	; (8001ae0 <readFile+0x1a0>)
 8001a66:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a6a:	4820      	ldr	r0, [pc, #128]	; (8001aec <readFile+0x1ac>)
 8001a6c:	f7ff fbaa 	bl	80011c4 <sendAtCommand>
	    return 0;
 8001a70:	2300      	movs	r3, #0
 8001a72:	e02b      	b.n	8001acc <readFile+0x18c>
	  }
	  char confirm[8];
	  if (!getSerialResponse2(5000, confirm , sizeof(confirm))) {
 8001a74:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001a78:	2208      	movs	r2, #8
 8001a7a:	4619      	mov	r1, r3
 8001a7c:	f241 3088 	movw	r0, #5000	; 0x1388
 8001a80:	f7ff fc76 	bl	8001370 <getSerialResponse2>
 8001a84:	4603      	mov	r3, r0
 8001a86:	f083 0301 	eor.w	r3, r3, #1
 8001a8a:	b2db      	uxtb	r3, r3
 8001a8c:	2b00      	cmp	r3, #0
 8001a8e:	d007      	beq.n	8001aa0 <readFile+0x160>
	  	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001a90:	4a13      	ldr	r2, [pc, #76]	; (8001ae0 <readFile+0x1a0>)
 8001a92:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001a96:	4815      	ldr	r0, [pc, #84]	; (8001aec <readFile+0x1ac>)
 8001a98:	f7ff fb94 	bl	80011c4 <sendAtCommand>
	    return 0;
 8001a9c:	2300      	movs	r3, #0
 8001a9e:	e015      	b.n	8001acc <readFile+0x18c>
	  }

	strncpy(settings,response,strlen(response));
 8001aa0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	f7fe fba5 	bl	80001f4 <strlen>
 8001aaa:	4602      	mov	r2, r0
 8001aac:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8001ab0:	f507 7322 	add.w	r3, r7, #648	; 0x288
 8001ab4:	f5a3 7321 	sub.w	r3, r3, #644	; 0x284
 8001ab8:	6818      	ldr	r0, [r3, #0]
 8001aba:	f009 f935 	bl	800ad28 <strncpy>
	sendAtCommand("AT+CFSTERM\r",2000,"OK"); //Free
 8001abe:	4a08      	ldr	r2, [pc, #32]	; (8001ae0 <readFile+0x1a0>)
 8001ac0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001ac4:	4809      	ldr	r0, [pc, #36]	; (8001aec <readFile+0x1ac>)
 8001ac6:	f7ff fb7d 	bl	80011c4 <sendAtCommand>
	return 1;
 8001aca:	2301      	movs	r3, #1

}
 8001acc:	4618      	mov	r0, r3
 8001ace:	f507 7722 	add.w	r7, r7, #648	; 0x288
 8001ad2:	46bd      	mov	sp, r7
 8001ad4:	bdb0      	pop	{r4, r5, r7, pc}
 8001ad6:	bf00      	nop
 8001ad8:	0800f7b4 	.word	0x0800f7b4
 8001adc:	0800f780 	.word	0x0800f780
 8001ae0:	0800f5f8 	.word	0x0800f5f8
 8001ae4:	0800f72c 	.word	0x0800f72c
 8001ae8:	0800f7a8 	.word	0x0800f7a8
 8001aec:	0800f738 	.word	0x0800f738

08001af0 <setIccid>:

//setup commands//

bool setIccid(char* iccid) {
 8001af0:	b580      	push	{r7, lr}
 8001af2:	b098      	sub	sp, #96	; 0x60
 8001af4:	af02      	add	r7, sp, #8
 8001af6:	6078      	str	r0, [r7, #4]

	char response[50]={0};
 8001af8:	2300      	movs	r3, #0
 8001afa:	627b      	str	r3, [r7, #36]	; 0x24
 8001afc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001b00:	222e      	movs	r2, #46	; 0x2e
 8001b02:	2100      	movs	r1, #0
 8001b04:	4618      	mov	r0, r3
 8001b06:	f007 f8fb 	bl	8008d00 <memset>
	char iccidCopy[MAX_ICCID_LEN+1]={0};
 8001b0a:	2300      	movs	r3, #0
 8001b0c:	60fb      	str	r3, [r7, #12]
 8001b0e:	f107 0310 	add.w	r3, r7, #16
 8001b12:	2200      	movs	r2, #0
 8001b14:	601a      	str	r2, [r3, #0]
 8001b16:	605a      	str	r2, [r3, #4]
 8001b18:	609a      	str	r2, [r3, #8]
 8001b1a:	60da      	str	r2, [r3, #12]
 8001b1c:	f8c3 200f 	str.w	r2, [r3, #15]

	if (getSerialResponse("AT+CCID\r",2000,"ERROR",response,sizeof(response)))
 8001b20:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001b24:	2232      	movs	r2, #50	; 0x32
 8001b26:	9200      	str	r2, [sp, #0]
 8001b28:	4a1a      	ldr	r2, [pc, #104]	; (8001b94 <setIccid+0xa4>)
 8001b2a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001b2e:	481a      	ldr	r0, [pc, #104]	; (8001b98 <setIccid+0xa8>)
 8001b30:	f7ff fbe6 	bl	8001300 <getSerialResponse>
 8001b34:	4603      	mov	r3, r0
 8001b36:	2b00      	cmp	r3, #0
 8001b38:	d001      	beq.n	8001b3e <setIccid+0x4e>
		return 0;
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	e025      	b.n	8001b8a <setIccid+0x9a>

	if (sscanf(response, "\r\n%s", iccidCopy) == 1) { //EDIT %s
 8001b3e:	f107 020c 	add.w	r2, r7, #12
 8001b42:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001b46:	4915      	ldr	r1, [pc, #84]	; (8001b9c <setIccid+0xac>)
 8001b48:	4618      	mov	r0, r3
 8001b4a:	f008 fb17 	bl	800a17c <siscanf>
 8001b4e:	4603      	mov	r3, r0
 8001b50:	2b01      	cmp	r3, #1
 8001b52:	d119      	bne.n	8001b88 <setIccid+0x98>
		iccidCopy[strlen(iccidCopy)-1] = '\0'; //cut last char
 8001b54:	f107 030c 	add.w	r3, r7, #12
 8001b58:	4618      	mov	r0, r3
 8001b5a:	f7fe fb4b 	bl	80001f4 <strlen>
 8001b5e:	4603      	mov	r3, r0
 8001b60:	3b01      	subs	r3, #1
 8001b62:	3358      	adds	r3, #88	; 0x58
 8001b64:	443b      	add	r3, r7
 8001b66:	2200      	movs	r2, #0
 8001b68:	f803 2c4c 	strb.w	r2, [r3, #-76]
		strncpy(iccid,iccidCopy,strlen(iccidCopy));
 8001b6c:	f107 030c 	add.w	r3, r7, #12
 8001b70:	4618      	mov	r0, r3
 8001b72:	f7fe fb3f 	bl	80001f4 <strlen>
 8001b76:	4602      	mov	r2, r0
 8001b78:	f107 030c 	add.w	r3, r7, #12
 8001b7c:	4619      	mov	r1, r3
 8001b7e:	6878      	ldr	r0, [r7, #4]
 8001b80:	f009 f8d2 	bl	800ad28 <strncpy>
		return 1;
 8001b84:	2301      	movs	r3, #1
 8001b86:	e000      	b.n	8001b8a <setIccid+0x9a>
	}
	else
		return 0;
 8001b88:	2300      	movs	r3, #0

}
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	3758      	adds	r7, #88	; 0x58
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}
 8001b92:	bf00      	nop
 8001b94:	0800f7cc 	.word	0x0800f7cc
 8001b98:	0800f7d4 	.word	0x0800f7d4
 8001b9c:	0800f7e0 	.word	0x0800f7e0

08001ba0 <copyDevice>:

///////////////////////////////////

struct Device* copyDevice(const struct Device* device) {
 8001ba0:	b580      	push	{r7, lr}
 8001ba2:	b084      	sub	sp, #16
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	6078      	str	r0, [r7, #4]

    struct Device* newDevice = malloc(sizeof(struct Device)); // Allocate memory for the new device struct
 8001ba8:	f44f 70cc 	mov.w	r0, #408	; 0x198
 8001bac:	f007 f88a 	bl	8008cc4 <malloc>
 8001bb0:	4603      	mov	r3, r0
 8001bb2:	60bb      	str	r3, [r7, #8]
    if (newDevice == NULL) {
 8001bb4:	68bb      	ldr	r3, [r7, #8]
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	d101      	bne.n	8001bbe <copyDevice+0x1e>
        return NULL; // Return NULL if memory allocation fails
 8001bba:	2300      	movs	r3, #0
 8001bbc:	e04d      	b.n	8001c5a <copyDevice+0xba>
    }
    memcpy(newDevice, device, sizeof(struct Device)); // Copy the device struct members to the new memory location
 8001bbe:	f44f 72cc 	mov.w	r2, #408	; 0x198
 8001bc2:	6879      	ldr	r1, [r7, #4]
 8001bc4:	68b8      	ldr	r0, [r7, #8]
 8001bc6:	f007 f88d 	bl	8008ce4 <memcpy>
    newDevice->count = device->count; // Copy the subscribers array to the new memory location
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 8001bd0:	68bb      	ldr	r3, [r7, #8]
 8001bd2:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
    for (int i = 0; i < device->count; i++) {
 8001bd6:	2300      	movs	r3, #0
 8001bd8:	60fb      	str	r3, [r7, #12]
 8001bda:	e02d      	b.n	8001c38 <copyDevice+0x98>
        strcpy(newDevice->subscribers[i].address, device->subscribers[i].address);
 8001bdc:	68fa      	ldr	r2, [r7, #12]
 8001bde:	4613      	mov	r3, r2
 8001be0:	00db      	lsls	r3, r3, #3
 8001be2:	4413      	add	r3, r2
 8001be4:	009b      	lsls	r3, r3, #2
 8001be6:	3310      	adds	r3, #16
 8001be8:	68ba      	ldr	r2, [r7, #8]
 8001bea:	4413      	add	r3, r2
 8001bec:	1d18      	adds	r0, r3, #4
 8001bee:	68fa      	ldr	r2, [r7, #12]
 8001bf0:	4613      	mov	r3, r2
 8001bf2:	00db      	lsls	r3, r3, #3
 8001bf4:	4413      	add	r3, r2
 8001bf6:	009b      	lsls	r3, r3, #2
 8001bf8:	3310      	adds	r3, #16
 8001bfa:	687a      	ldr	r2, [r7, #4]
 8001bfc:	4413      	add	r3, r2
 8001bfe:	3304      	adds	r3, #4
 8001c00:	4619      	mov	r1, r3
 8001c02:	f008 fb3b 	bl	800a27c <strcpy>
        memcpy(newDevice->subscribers[i].circle, device->subscribers[i].circle, sizeof(float) * 3);
 8001c06:	68fa      	ldr	r2, [r7, #12]
 8001c08:	4613      	mov	r3, r2
 8001c0a:	00db      	lsls	r3, r3, #3
 8001c0c:	4413      	add	r3, r2
 8001c0e:	009b      	lsls	r3, r3, #2
 8001c10:	3328      	adds	r3, #40	; 0x28
 8001c12:	68ba      	ldr	r2, [r7, #8]
 8001c14:	4413      	add	r3, r2
 8001c16:	1d18      	adds	r0, r3, #4
 8001c18:	68fa      	ldr	r2, [r7, #12]
 8001c1a:	4613      	mov	r3, r2
 8001c1c:	00db      	lsls	r3, r3, #3
 8001c1e:	4413      	add	r3, r2
 8001c20:	009b      	lsls	r3, r3, #2
 8001c22:	3328      	adds	r3, #40	; 0x28
 8001c24:	687a      	ldr	r2, [r7, #4]
 8001c26:	4413      	add	r3, r2
 8001c28:	3304      	adds	r3, #4
 8001c2a:	220c      	movs	r2, #12
 8001c2c:	4619      	mov	r1, r3
 8001c2e:	f007 f859 	bl	8008ce4 <memcpy>
    for (int i = 0; i < device->count; i++) {
 8001c32:	68fb      	ldr	r3, [r7, #12]
 8001c34:	3301      	adds	r3, #1
 8001c36:	60fb      	str	r3, [r7, #12]
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8001c3e:	68fa      	ldr	r2, [r7, #12]
 8001c40:	429a      	cmp	r2, r3
 8001c42:	dbcb      	blt.n	8001bdc <copyDevice+0x3c>
    }
    strcpy(newDevice->iccid, device->iccid);     // Copy the iccid string to the new memory location
 8001c44:	68bb      	ldr	r3, [r7, #8]
 8001c46:	f503 72c0 	add.w	r2, r3, #384	; 0x180
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8001c50:	4619      	mov	r1, r3
 8001c52:	4610      	mov	r0, r2
 8001c54:	f008 fb12 	bl	800a27c <strcpy>

    return newDevice;
 8001c58:	68bb      	ldr	r3, [r7, #8]
}
 8001c5a:	4618      	mov	r0, r3
 8001c5c:	3710      	adds	r7, #16
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bd80      	pop	{r7, pc}
	...

08001c64 <structToString>:

void structToString(char* str, const struct Device* device) {
 8001c64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c68:	b097      	sub	sp, #92	; 0x5c
 8001c6a:	af06      	add	r7, sp, #24
 8001c6c:	60f8      	str	r0, [r7, #12]
 8001c6e:	60b9      	str	r1, [r7, #8]
    for (int i = 0; i < device->count; i++) {
 8001c70:	2300      	movs	r3, #0
 8001c72:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001c74:	e052      	b.n	8001d1c <structToString+0xb8>
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001c76:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001c78:	4613      	mov	r3, r2
 8001c7a:	00db      	lsls	r3, r3, #3
 8001c7c:	4413      	add	r3, r2
 8001c7e:	009b      	lsls	r3, r3, #2
 8001c80:	3310      	adds	r3, #16
 8001c82:	68ba      	ldr	r2, [r7, #8]
 8001c84:	4413      	add	r3, r2
 8001c86:	1d1e      	adds	r6, r3, #4
 8001c88:	68b9      	ldr	r1, [r7, #8]
 8001c8a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001c8c:	4613      	mov	r3, r2
 8001c8e:	00db      	lsls	r3, r3, #3
 8001c90:	4413      	add	r3, r2
 8001c92:	009b      	lsls	r3, r3, #2
 8001c94:	440b      	add	r3, r1
 8001c96:	3328      	adds	r3, #40	; 0x28
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	607b      	str	r3, [r7, #4]
            device->subscribers[i].circle[0], device->subscribers[i].circle[1], device->subscribers[i].circle[2]);
 8001c9c:	68b9      	ldr	r1, [r7, #8]
 8001c9e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001ca0:	4613      	mov	r3, r2
 8001ca2:	00db      	lsls	r3, r3, #3
 8001ca4:	4413      	add	r3, r2
 8001ca6:	009b      	lsls	r3, r3, #2
 8001ca8:	440b      	add	r3, r1
 8001caa:	332c      	adds	r3, #44	; 0x2c
 8001cac:	681b      	ldr	r3, [r3, #0]
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001cae:	4618      	mov	r0, r3
 8001cb0:	f7fe fc62 	bl	8000578 <__aeabi_f2d>
 8001cb4:	4604      	mov	r4, r0
 8001cb6:	460d      	mov	r5, r1
            device->subscribers[i].circle[0], device->subscribers[i].circle[1], device->subscribers[i].circle[2]);
 8001cb8:	68b9      	ldr	r1, [r7, #8]
 8001cba:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001cbc:	4613      	mov	r3, r2
 8001cbe:	00db      	lsls	r3, r3, #3
 8001cc0:	4413      	add	r3, r2
 8001cc2:	009b      	lsls	r3, r3, #2
 8001cc4:	440b      	add	r3, r1
 8001cc6:	3330      	adds	r3, #48	; 0x30
 8001cc8:	681b      	ldr	r3, [r3, #0]
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001cca:	4618      	mov	r0, r3
 8001ccc:	f7fe fc54 	bl	8000578 <__aeabi_f2d>
 8001cd0:	4680      	mov	r8, r0
 8001cd2:	4689      	mov	r9, r1
            device->subscribers[i].circle[0], device->subscribers[i].circle[1], device->subscribers[i].circle[2]);
 8001cd4:	68b9      	ldr	r1, [r7, #8]
 8001cd6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001cd8:	4613      	mov	r3, r2
 8001cda:	00db      	lsls	r3, r3, #3
 8001cdc:	4413      	add	r3, r2
 8001cde:	009b      	lsls	r3, r3, #2
 8001ce0:	440b      	add	r3, r1
 8001ce2:	3334      	adds	r3, #52	; 0x34
 8001ce4:	681b      	ldr	r3, [r3, #0]
        sprintf(str, "%s,%d,%.6f,%.6f,%.0f\r\n", device->subscribers[i].address, device->subscribers[i].state,
 8001ce6:	4618      	mov	r0, r3
 8001ce8:	f7fe fc46 	bl	8000578 <__aeabi_f2d>
 8001cec:	4602      	mov	r2, r0
 8001cee:	460b      	mov	r3, r1
 8001cf0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001cf4:	e9cd 8902 	strd	r8, r9, [sp, #8]
 8001cf8:	e9cd 4500 	strd	r4, r5, [sp]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	4632      	mov	r2, r6
 8001d00:	4923      	ldr	r1, [pc, #140]	; (8001d90 <structToString+0x12c>)
 8001d02:	68f8      	ldr	r0, [r7, #12]
 8001d04:	f008 fa1a 	bl	800a13c <siprintf>
        str += strlen(str);
 8001d08:	68f8      	ldr	r0, [r7, #12]
 8001d0a:	f7fe fa73 	bl	80001f4 <strlen>
 8001d0e:	4602      	mov	r2, r0
 8001d10:	68fb      	ldr	r3, [r7, #12]
 8001d12:	4413      	add	r3, r2
 8001d14:	60fb      	str	r3, [r7, #12]
    for (int i = 0; i < device->count; i++) {
 8001d16:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001d18:	3301      	adds	r3, #1
 8001d1a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001d1c:	68bb      	ldr	r3, [r7, #8]
 8001d1e:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8001d22:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001d24:	429a      	cmp	r2, r3
 8001d26:	dba6      	blt.n	8001c76 <structToString+0x12>
    }
    char deviceData[40] = { 0 };
 8001d28:	2300      	movs	r3, #0
 8001d2a:	617b      	str	r3, [r7, #20]
 8001d2c:	f107 0318 	add.w	r3, r7, #24
 8001d30:	2224      	movs	r2, #36	; 0x24
 8001d32:	2100      	movs	r1, #0
 8001d34:	4618      	mov	r0, r3
 8001d36:	f006 ffe3 	bl	8008d00 <memset>
    sprintf(deviceData, "%.6f,%.6f,%d,%d", device->position[0], device->position[1], (int)(device->unixTime), device->interval);
 8001d3a:	68bb      	ldr	r3, [r7, #8]
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	4618      	mov	r0, r3
 8001d40:	f7fe fc1a 	bl	8000578 <__aeabi_f2d>
 8001d44:	4604      	mov	r4, r0
 8001d46:	460d      	mov	r5, r1
 8001d48:	68bb      	ldr	r3, [r7, #8]
 8001d4a:	685b      	ldr	r3, [r3, #4]
 8001d4c:	4618      	mov	r0, r3
 8001d4e:	f7fe fc13 	bl	8000578 <__aeabi_f2d>
 8001d52:	4602      	mov	r2, r0
 8001d54:	460b      	mov	r3, r1
 8001d56:	68b9      	ldr	r1, [r7, #8]
 8001d58:	e9d1 0102 	ldrd	r0, r1, [r1, #8]
 8001d5c:	4606      	mov	r6, r0
 8001d5e:	68b9      	ldr	r1, [r7, #8]
 8001d60:	6909      	ldr	r1, [r1, #16]
 8001d62:	f107 0014 	add.w	r0, r7, #20
 8001d66:	9103      	str	r1, [sp, #12]
 8001d68:	9602      	str	r6, [sp, #8]
 8001d6a:	e9cd 2300 	strd	r2, r3, [sp]
 8001d6e:	4622      	mov	r2, r4
 8001d70:	462b      	mov	r3, r5
 8001d72:	4908      	ldr	r1, [pc, #32]	; (8001d94 <structToString+0x130>)
 8001d74:	f008 f9e2 	bl	800a13c <siprintf>
    strcat(str, deviceData);
 8001d78:	f107 0314 	add.w	r3, r7, #20
 8001d7c:	4619      	mov	r1, r3
 8001d7e:	68f8      	ldr	r0, [r7, #12]
 8001d80:	f008 fa6d 	bl	800a25e <strcat>

}
 8001d84:	bf00      	nop
 8001d86:	3744      	adds	r7, #68	; 0x44
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d8e:	bf00      	nop
 8001d90:	0800f7e8 	.word	0x0800f7e8
 8001d94:	0800f800 	.word	0x0800f800

08001d98 <stringToStruct>:

void stringToStruct(const char* str, struct Device* device) {
 8001d98:	b5b0      	push	{r4, r5, r7, lr}
 8001d9a:	b08a      	sub	sp, #40	; 0x28
 8001d9c:	af04      	add	r7, sp, #16
 8001d9e:	6078      	str	r0, [r7, #4]
 8001da0:	6039      	str	r1, [r7, #0]
    char* endLine = strstr(str, "\r\n");
 8001da2:	4936      	ldr	r1, [pc, #216]	; (8001e7c <stringToStruct+0xe4>)
 8001da4:	6878      	ldr	r0, [r7, #4]
 8001da6:	f008 ffd2 	bl	800ad4e <strstr>
 8001daa:	6178      	str	r0, [r7, #20]
    int i = 0;
 8001dac:	2300      	movs	r3, #0
 8001dae:	613b      	str	r3, [r7, #16]
    int readCount = 0;
 8001db0:	2300      	movs	r3, #0
 8001db2:	60fb      	str	r3, [r7, #12]

    while (i < MAX_PHONES && endLine) {
 8001db4:	e044      	b.n	8001e40 <stringToStruct+0xa8>
        sscanf(str, "%[^,],%d,%f,%f,%f\r\n", device->subscribers[i].address, &(device->subscribers[i].state),
 8001db6:	693a      	ldr	r2, [r7, #16]
 8001db8:	4613      	mov	r3, r2
 8001dba:	00db      	lsls	r3, r3, #3
 8001dbc:	4413      	add	r3, r2
 8001dbe:	009b      	lsls	r3, r3, #2
 8001dc0:	3310      	adds	r3, #16
 8001dc2:	683a      	ldr	r2, [r7, #0]
 8001dc4:	4413      	add	r3, r2
 8001dc6:	1d1c      	adds	r4, r3, #4
 8001dc8:	693a      	ldr	r2, [r7, #16]
 8001dca:	4613      	mov	r3, r2
 8001dcc:	00db      	lsls	r3, r3, #3
 8001dce:	4413      	add	r3, r2
 8001dd0:	009b      	lsls	r3, r3, #2
 8001dd2:	3320      	adds	r3, #32
 8001dd4:	683a      	ldr	r2, [r7, #0]
 8001dd6:	4413      	add	r3, r2
 8001dd8:	f103 0508 	add.w	r5, r3, #8
 8001ddc:	693a      	ldr	r2, [r7, #16]
 8001dde:	4613      	mov	r3, r2
 8001de0:	00db      	lsls	r3, r3, #3
 8001de2:	4413      	add	r3, r2
 8001de4:	009b      	lsls	r3, r3, #2
 8001de6:	3328      	adds	r3, #40	; 0x28
 8001de8:	683a      	ldr	r2, [r7, #0]
 8001dea:	4413      	add	r3, r2
 8001dec:	1d19      	adds	r1, r3, #4
 8001dee:	693a      	ldr	r2, [r7, #16]
 8001df0:	4613      	mov	r3, r2
 8001df2:	00db      	lsls	r3, r3, #3
 8001df4:	4413      	add	r3, r2
 8001df6:	009b      	lsls	r3, r3, #2
 8001df8:	332c      	adds	r3, #44	; 0x2c
 8001dfa:	683a      	ldr	r2, [r7, #0]
 8001dfc:	4413      	add	r3, r2
 8001dfe:	1d18      	adds	r0, r3, #4
 8001e00:	693a      	ldr	r2, [r7, #16]
 8001e02:	4613      	mov	r3, r2
 8001e04:	00db      	lsls	r3, r3, #3
 8001e06:	4413      	add	r3, r2
 8001e08:	009b      	lsls	r3, r3, #2
 8001e0a:	3330      	adds	r3, #48	; 0x30
 8001e0c:	683a      	ldr	r2, [r7, #0]
 8001e0e:	4413      	add	r3, r2
 8001e10:	3304      	adds	r3, #4
 8001e12:	9302      	str	r3, [sp, #8]
 8001e14:	9001      	str	r0, [sp, #4]
 8001e16:	9100      	str	r1, [sp, #0]
 8001e18:	462b      	mov	r3, r5
 8001e1a:	4622      	mov	r2, r4
 8001e1c:	4918      	ldr	r1, [pc, #96]	; (8001e80 <stringToStruct+0xe8>)
 8001e1e:	6878      	ldr	r0, [r7, #4]
 8001e20:	f008 f9ac 	bl	800a17c <siscanf>
            &(device->subscribers[i].circle[0]), &(device->subscribers[i].circle[1]), &(device->subscribers[i].circle[2]));
        readCount++;
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	3301      	adds	r3, #1
 8001e28:	60fb      	str	r3, [r7, #12]
        i++;
 8001e2a:	693b      	ldr	r3, [r7, #16]
 8001e2c:	3301      	adds	r3, #1
 8001e2e:	613b      	str	r3, [r7, #16]
        str = endLine + 2;
 8001e30:	697b      	ldr	r3, [r7, #20]
 8001e32:	3302      	adds	r3, #2
 8001e34:	607b      	str	r3, [r7, #4]
        endLine = strstr(str, "\r\n");
 8001e36:	4911      	ldr	r1, [pc, #68]	; (8001e7c <stringToStruct+0xe4>)
 8001e38:	6878      	ldr	r0, [r7, #4]
 8001e3a:	f008 ff88 	bl	800ad4e <strstr>
 8001e3e:	6178      	str	r0, [r7, #20]
    while (i < MAX_PHONES && endLine) {
 8001e40:	693b      	ldr	r3, [r7, #16]
 8001e42:	2b09      	cmp	r3, #9
 8001e44:	dc02      	bgt.n	8001e4c <stringToStruct+0xb4>
 8001e46:	697b      	ldr	r3, [r7, #20]
 8001e48:	2b00      	cmp	r3, #0
 8001e4a:	d1b4      	bne.n	8001db6 <stringToStruct+0x1e>
    }
    (device->count) = readCount;
 8001e4c:	683b      	ldr	r3, [r7, #0]
 8001e4e:	68fa      	ldr	r2, [r7, #12]
 8001e50:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c

    sscanf(str, "%f,%f,%d,%d", &(device->position[0]), &(device->position[1]), (int*)&(device->unixTime), &(device->interval) );
 8001e54:	6839      	ldr	r1, [r7, #0]
 8001e56:	683b      	ldr	r3, [r7, #0]
 8001e58:	1d18      	adds	r0, r3, #4
 8001e5a:	683b      	ldr	r3, [r7, #0]
 8001e5c:	3308      	adds	r3, #8
 8001e5e:	683a      	ldr	r2, [r7, #0]
 8001e60:	3210      	adds	r2, #16
 8001e62:	9201      	str	r2, [sp, #4]
 8001e64:	9300      	str	r3, [sp, #0]
 8001e66:	4603      	mov	r3, r0
 8001e68:	460a      	mov	r2, r1
 8001e6a:	4906      	ldr	r1, [pc, #24]	; (8001e84 <stringToStruct+0xec>)
 8001e6c:	6878      	ldr	r0, [r7, #4]
 8001e6e:	f008 f985 	bl	800a17c <siscanf>

}
 8001e72:	bf00      	nop
 8001e74:	3718      	adds	r7, #24
 8001e76:	46bd      	mov	sp, r7
 8001e78:	bdb0      	pop	{r4, r5, r7, pc}
 8001e7a:	bf00      	nop
 8001e7c:	0800f810 	.word	0x0800f810
 8001e80:	0800f814 	.word	0x0800f814
 8001e84:	0800f828 	.word	0x0800f828

08001e88 <handleReadFile>:
bool handleReadFile(struct Device* device) {
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
 8001e8e:	af00      	add	r7, sp, #0
 8001e90:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001e94:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001e98:	6018      	str	r0, [r3, #0]

    //char settings[MAX_FILE_LEN + 1] = "+852348467,0,-50.446896,-18.838770,6371000\r\n+48346765889,0,-50.446896,-18.838770,6371000\r\n+9946765889,0,-50.446896,-18.838770,6371000\r\n21,37,1234567890,144";
    //char settings[MAX_FILE_LEN + 1] = "21,37,1234567890,144";
    char settings[MAX_FILE_LEN + 1] = { 0 };
 8001e9a:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001e9e:	f5a3 7307 	sub.w	r3, r3, #540	; 0x21c
 8001ea2:	2200      	movs	r2, #0
 8001ea4:	601a      	str	r2, [r3, #0]
 8001ea6:	3304      	adds	r3, #4
 8001ea8:	f44f 7206 	mov.w	r2, #536	; 0x218
 8001eac:	2100      	movs	r1, #0
 8001eae:	4618      	mov	r0, r3
 8001eb0:	f006 ff26 	bl	8008d00 <memset>

    if (!readFile(settings))
 8001eb4:	f107 030c 	add.w	r3, r7, #12
 8001eb8:	4618      	mov	r0, r3
 8001eba:	f7ff fd41 	bl	8001940 <readFile>
 8001ebe:	4603      	mov	r3, r0
 8001ec0:	f083 0301 	eor.w	r3, r3, #1
 8001ec4:	b2db      	uxtb	r3, r3
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	d001      	beq.n	8001ece <handleReadFile+0x46>
        return 0;
 8001eca:	2300      	movs	r3, #0
 8001ecc:	e00a      	b.n	8001ee4 <handleReadFile+0x5c>

    stringToStruct(settings, device);
 8001ece:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001ed2:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001ed6:	f107 020c 	add.w	r2, r7, #12
 8001eda:	6819      	ldr	r1, [r3, #0]
 8001edc:	4610      	mov	r0, r2
 8001ede:	f7ff ff5b 	bl	8001d98 <stringToStruct>
    return 1;
 8001ee2:	2301      	movs	r3, #1

}
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	f507 770a 	add.w	r7, r7, #552	; 0x228
 8001eea:	46bd      	mov	sp, r7
 8001eec:	bd80      	pop	{r7, pc}

08001eee <handleWriteFile>:

//EditFile pracuje na kopii struktury aby zachować poprzednie dane w przypadku wystąpienia problemu z zapisem do pliku
bool handleWriteFile(const struct Device* device) {
 8001eee:	b580      	push	{r7, lr}
 8001ef0:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001efa:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001efe:	6018      	str	r0, [r3, #0]

    char settings[MAX_FILE_LEN + 1] = { 0 };
 8001f00:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001f04:	f5a3 7307 	sub.w	r3, r3, #540	; 0x21c
 8001f08:	2200      	movs	r2, #0
 8001f0a:	601a      	str	r2, [r3, #0]
 8001f0c:	3304      	adds	r3, #4
 8001f0e:	f44f 7206 	mov.w	r2, #536	; 0x218
 8001f12:	2100      	movs	r1, #0
 8001f14:	4618      	mov	r0, r3
 8001f16:	f006 fef3 	bl	8008d00 <memset>
    structToString(settings, device);
 8001f1a:	f507 730a 	add.w	r3, r7, #552	; 0x228
 8001f1e:	f5a3 7309 	sub.w	r3, r3, #548	; 0x224
 8001f22:	f107 020c 	add.w	r2, r7, #12
 8001f26:	6819      	ldr	r1, [r3, #0]
 8001f28:	4610      	mov	r0, r2
 8001f2a:	f7ff fe9b 	bl	8001c64 <structToString>
    //printf("structToString:%s", settings);

    return writeFile(settings);
 8001f2e:	f107 030c 	add.w	r3, r7, #12
 8001f32:	4618      	mov	r0, r3
 8001f34:	f7ff fc36 	bl	80017a4 <writeFile>
 8001f38:	4603      	mov	r3, r0

}
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	f507 770a 	add.w	r7, r7, #552	; 0x228
 8001f40:	46bd      	mov	sp, r7
 8001f42:	bd80      	pop	{r7, pc}

08001f44 <findSubscriber>:

bool findSubscriber(int * index, const struct Subscriber* subscribersArr, const int* count, const char* address) {
 8001f44:	b580      	push	{r7, lr}
 8001f46:	b086      	sub	sp, #24
 8001f48:	af00      	add	r7, sp, #0
 8001f4a:	60f8      	str	r0, [r7, #12]
 8001f4c:	60b9      	str	r1, [r7, #8]
 8001f4e:	607a      	str	r2, [r7, #4]
 8001f50:	603b      	str	r3, [r7, #0]
    int i = 0;
 8001f52:	2300      	movs	r3, #0
 8001f54:	617b      	str	r3, [r7, #20]
    for (i = 0; i < *count; i++) {
 8001f56:	2300      	movs	r3, #0
 8001f58:	617b      	str	r3, [r7, #20]
 8001f5a:	e016      	b.n	8001f8a <findSubscriber+0x46>
        if (strcmp(subscribersArr[i].address, address) == 0) {
 8001f5c:	697a      	ldr	r2, [r7, #20]
 8001f5e:	4613      	mov	r3, r2
 8001f60:	00db      	lsls	r3, r3, #3
 8001f62:	4413      	add	r3, r2
 8001f64:	009b      	lsls	r3, r3, #2
 8001f66:	461a      	mov	r2, r3
 8001f68:	68bb      	ldr	r3, [r7, #8]
 8001f6a:	4413      	add	r3, r2
 8001f6c:	6839      	ldr	r1, [r7, #0]
 8001f6e:	4618      	mov	r0, r3
 8001f70:	f7fe f936 	bl	80001e0 <strcmp>
 8001f74:	4603      	mov	r3, r0
 8001f76:	2b00      	cmp	r3, #0
 8001f78:	d104      	bne.n	8001f84 <findSubscriber+0x40>
            *index = i;
 8001f7a:	68fb      	ldr	r3, [r7, #12]
 8001f7c:	697a      	ldr	r2, [r7, #20]
 8001f7e:	601a      	str	r2, [r3, #0]
            return 1;
 8001f80:	2301      	movs	r3, #1
 8001f82:	e00c      	b.n	8001f9e <findSubscriber+0x5a>
    for (i = 0; i < *count; i++) {
 8001f84:	697b      	ldr	r3, [r7, #20]
 8001f86:	3301      	adds	r3, #1
 8001f88:	617b      	str	r3, [r7, #20]
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	697a      	ldr	r2, [r7, #20]
 8001f90:	429a      	cmp	r2, r3
 8001f92:	dbe3      	blt.n	8001f5c <findSubscriber+0x18>
        }
    }
    *index = i-1;
 8001f94:	697b      	ldr	r3, [r7, #20]
 8001f96:	1e5a      	subs	r2, r3, #1
 8001f98:	68fb      	ldr	r3, [r7, #12]
 8001f9a:	601a      	str	r2, [r3, #0]
    return 0;
 8001f9c:	2300      	movs	r3, #0
}
 8001f9e:	4618      	mov	r0, r3
 8001fa0:	3718      	adds	r7, #24
 8001fa2:	46bd      	mov	sp, r7
 8001fa4:	bd80      	pop	{r7, pc}

08001fa6 <subscribe>:

bool subscribe(struct Device * device, struct Subscriber* newSubscriber) {
 8001fa6:	b5b0      	push	{r4, r5, r7, lr}
 8001fa8:	b086      	sub	sp, #24
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	6078      	str	r0, [r7, #4]
 8001fae:	6039      	str	r1, [r7, #0]

    int i = 0;
 8001fb0:	2300      	movs	r3, #0
 8001fb2:	60fb      	str	r3, [r7, #12]
    bool exist = 0;
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	75fb      	strb	r3, [r7, #23]
    struct Device* deviceCopy = copyDevice(device); //deepCopy as temporary device struct
 8001fb8:	6878      	ldr	r0, [r7, #4]
 8001fba:	f7ff fdf1 	bl	8001ba0 <copyDevice>
 8001fbe:	6138      	str	r0, [r7, #16]

    exist = findSubscriber(&i, deviceCopy->subscribers, &(deviceCopy->count), newSubscriber->address);
 8001fc0:	693b      	ldr	r3, [r7, #16]
 8001fc2:	f103 0114 	add.w	r1, r3, #20
 8001fc6:	693b      	ldr	r3, [r7, #16]
 8001fc8:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 8001fcc:	683b      	ldr	r3, [r7, #0]
 8001fce:	f107 000c 	add.w	r0, r7, #12
 8001fd2:	f7ff ffb7 	bl	8001f44 <findSubscriber>
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	75fb      	strb	r3, [r7, #23]
    if (exist) {
 8001fda:	7dfb      	ldrb	r3, [r7, #23]
 8001fdc:	2b00      	cmp	r3, #0
 8001fde:	d011      	beq.n	8002004 <subscribe+0x5e>
        deviceCopy->subscribers[i] = *newSubscriber; //edit existing subscriber
 8001fe0:	68fa      	ldr	r2, [r7, #12]
 8001fe2:	6939      	ldr	r1, [r7, #16]
 8001fe4:	4613      	mov	r3, r2
 8001fe6:	00db      	lsls	r3, r3, #3
 8001fe8:	4413      	add	r3, r2
 8001fea:	009b      	lsls	r3, r3, #2
 8001fec:	440b      	add	r3, r1
 8001fee:	3310      	adds	r3, #16
 8001ff0:	683a      	ldr	r2, [r7, #0]
 8001ff2:	1d1c      	adds	r4, r3, #4
 8001ff4:	4615      	mov	r5, r2
 8001ff6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001ff8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001ffa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001ffc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001ffe:	682b      	ldr	r3, [r5, #0]
 8002000:	6023      	str	r3, [r4, #0]
 8002002:	e021      	b.n	8002048 <subscribe+0xa2>
    }
    else if (i < MAX_PHONES-1) {
 8002004:	68fb      	ldr	r3, [r7, #12]
 8002006:	2b08      	cmp	r3, #8
 8002008:	dc19      	bgt.n	800203e <subscribe+0x98>
        deviceCopy->subscribers[i+1] = *newSubscriber; //add new subscriber
 800200a:	68fb      	ldr	r3, [r7, #12]
 800200c:	1c5a      	adds	r2, r3, #1
 800200e:	6939      	ldr	r1, [r7, #16]
 8002010:	4613      	mov	r3, r2
 8002012:	00db      	lsls	r3, r3, #3
 8002014:	4413      	add	r3, r2
 8002016:	009b      	lsls	r3, r3, #2
 8002018:	440b      	add	r3, r1
 800201a:	3310      	adds	r3, #16
 800201c:	683a      	ldr	r2, [r7, #0]
 800201e:	1d1c      	adds	r4, r3, #4
 8002020:	4615      	mov	r5, r2
 8002022:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002024:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002026:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002028:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800202a:	682b      	ldr	r3, [r5, #0]
 800202c:	6023      	str	r3, [r4, #0]
        (deviceCopy->count)++; //add 1 to count
 800202e:	693b      	ldr	r3, [r7, #16]
 8002030:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8002034:	1c5a      	adds	r2, r3, #1
 8002036:	693b      	ldr	r3, [r7, #16]
 8002038:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
 800203c:	e004      	b.n	8002048 <subscribe+0xa2>
    }
    else {
       free(deviceCopy);
 800203e:	6938      	ldr	r0, [r7, #16]
 8002040:	f006 fe48 	bl	8008cd4 <free>
       return 0;
 8002044:	2300      	movs	r3, #0
 8002046:	e014      	b.n	8002072 <subscribe+0xcc>
    }

    if (handleWriteFile(deviceCopy)) {
 8002048:	6938      	ldr	r0, [r7, #16]
 800204a:	f7ff ff50 	bl	8001eee <handleWriteFile>
 800204e:	4603      	mov	r3, r0
 8002050:	2b00      	cmp	r3, #0
 8002052:	d00a      	beq.n	800206a <subscribe+0xc4>
        memcpy(device, deviceCopy, sizeof(struct Device));
 8002054:	f44f 72cc 	mov.w	r2, #408	; 0x198
 8002058:	6939      	ldr	r1, [r7, #16]
 800205a:	6878      	ldr	r0, [r7, #4]
 800205c:	f006 fe42 	bl	8008ce4 <memcpy>
        free(deviceCopy);
 8002060:	6938      	ldr	r0, [r7, #16]
 8002062:	f006 fe37 	bl	8008cd4 <free>
        return 1;
 8002066:	2301      	movs	r3, #1
 8002068:	e003      	b.n	8002072 <subscribe+0xcc>
    }
    else {
        free(deviceCopy);
 800206a:	6938      	ldr	r0, [r7, #16]
 800206c:	f006 fe32 	bl	8008cd4 <free>
        return 0;
 8002070:	2300      	movs	r3, #0
    }

}
 8002072:	4618      	mov	r0, r3
 8002074:	3718      	adds	r7, #24
 8002076:	46bd      	mov	sp, r7
 8002078:	bdb0      	pop	{r4, r5, r7, pc}

0800207a <unsubscribe>:

bool unsubscribe(struct Device* device, const char* address) {
 800207a:	b580      	push	{r7, lr}
 800207c:	b086      	sub	sp, #24
 800207e:	af00      	add	r7, sp, #0
 8002080:	6078      	str	r0, [r7, #4]
 8002082:	6039      	str	r1, [r7, #0]
    int i = 0;
 8002084:	2300      	movs	r3, #0
 8002086:	60bb      	str	r3, [r7, #8]
    int j = 0;
 8002088:	2300      	movs	r3, #0
 800208a:	617b      	str	r3, [r7, #20]
    bool exist = 0;
 800208c:	2300      	movs	r3, #0
 800208e:	74fb      	strb	r3, [r7, #19]
    struct Device* deviceCopy = copyDevice(device); //deepCopy as temporary device struct
 8002090:	6878      	ldr	r0, [r7, #4]
 8002092:	f7ff fd85 	bl	8001ba0 <copyDevice>
 8002096:	60f8      	str	r0, [r7, #12]

    exist = findSubscriber(&i, deviceCopy->subscribers, &(deviceCopy->count), address);
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	f103 0114 	add.w	r1, r3, #20
 800209e:	68fb      	ldr	r3, [r7, #12]
 80020a0:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 80020a4:	f107 0008 	add.w	r0, r7, #8
 80020a8:	683b      	ldr	r3, [r7, #0]
 80020aa:	f7ff ff4b 	bl	8001f44 <findSubscriber>
 80020ae:	4603      	mov	r3, r0
 80020b0:	74fb      	strb	r3, [r7, #19]

    if (exist) {
 80020b2:	7cfb      	ldrb	r3, [r7, #19]
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	d031      	beq.n	800211c <unsubscribe+0xa2>
        for (j = i; j < deviceCopy->count - 1; j++) {
 80020b8:	68bb      	ldr	r3, [r7, #8]
 80020ba:	617b      	str	r3, [r7, #20]
 80020bc:	e019      	b.n	80020f2 <unsubscribe+0x78>
            memcpy(&(deviceCopy->subscribers[j]), &(deviceCopy->subscribers[j+1]), sizeof(struct Subscriber)); // Shift all elements after index i by 1 pos
 80020be:	697a      	ldr	r2, [r7, #20]
 80020c0:	4613      	mov	r3, r2
 80020c2:	00db      	lsls	r3, r3, #3
 80020c4:	4413      	add	r3, r2
 80020c6:	009b      	lsls	r3, r3, #2
 80020c8:	3310      	adds	r3, #16
 80020ca:	68fa      	ldr	r2, [r7, #12]
 80020cc:	4413      	add	r3, r2
 80020ce:	1d18      	adds	r0, r3, #4
 80020d0:	697b      	ldr	r3, [r7, #20]
 80020d2:	1c5a      	adds	r2, r3, #1
 80020d4:	4613      	mov	r3, r2
 80020d6:	00db      	lsls	r3, r3, #3
 80020d8:	4413      	add	r3, r2
 80020da:	009b      	lsls	r3, r3, #2
 80020dc:	3310      	adds	r3, #16
 80020de:	68fa      	ldr	r2, [r7, #12]
 80020e0:	4413      	add	r3, r2
 80020e2:	3304      	adds	r3, #4
 80020e4:	2224      	movs	r2, #36	; 0x24
 80020e6:	4619      	mov	r1, r3
 80020e8:	f006 fdfc 	bl	8008ce4 <memcpy>
        for (j = i; j < deviceCopy->count - 1; j++) {
 80020ec:	697b      	ldr	r3, [r7, #20]
 80020ee:	3301      	adds	r3, #1
 80020f0:	617b      	str	r3, [r7, #20]
 80020f2:	68fb      	ldr	r3, [r7, #12]
 80020f4:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 80020f8:	3b01      	subs	r3, #1
 80020fa:	697a      	ldr	r2, [r7, #20]
 80020fc:	429a      	cmp	r2, r3
 80020fe:	dbde      	blt.n	80020be <unsubscribe+0x44>
        }
        (deviceCopy->count)--; // Decrement the count
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8002106:	1e5a      	subs	r2, r3, #1
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
    else {
        free(deviceCopy);
        return 0;
    }

    if (handleWriteFile(deviceCopy)) {
 800210e:	68f8      	ldr	r0, [r7, #12]
 8002110:	f7ff feed 	bl	8001eee <handleWriteFile>
 8002114:	4603      	mov	r3, r0
 8002116:	2b00      	cmp	r3, #0
 8002118:	d010      	beq.n	800213c <unsubscribe+0xc2>
 800211a:	e004      	b.n	8002126 <unsubscribe+0xac>
        free(deviceCopy);
 800211c:	68f8      	ldr	r0, [r7, #12]
 800211e:	f006 fdd9 	bl	8008cd4 <free>
        return 0;
 8002122:	2300      	movs	r3, #0
 8002124:	e00e      	b.n	8002144 <unsubscribe+0xca>
        memcpy(device, deviceCopy, sizeof(struct Device));
 8002126:	f44f 72cc 	mov.w	r2, #408	; 0x198
 800212a:	68f9      	ldr	r1, [r7, #12]
 800212c:	6878      	ldr	r0, [r7, #4]
 800212e:	f006 fdd9 	bl	8008ce4 <memcpy>
        free(deviceCopy);
 8002132:	68f8      	ldr	r0, [r7, #12]
 8002134:	f006 fdce 	bl	8008cd4 <free>
        return 1;
 8002138:	2301      	movs	r3, #1
 800213a:	e003      	b.n	8002144 <unsubscribe+0xca>
    }
    else {
        free(deviceCopy);
 800213c:	68f8      	ldr	r0, [r7, #12]
 800213e:	f006 fdc9 	bl	8008cd4 <free>
        return 0;
 8002142:	2300      	movs	r3, #0
    }

}
 8002144:	4618      	mov	r0, r3
 8002146:	3718      	adds	r7, #24
 8002148:	46bd      	mov	sp, r7
 800214a:	bd80      	pop	{r7, pc}

0800214c <fillUnixTime>:

void fillUnixTime(time_t* unixTime, const char* str) {
 800214c:	b580      	push	{r7, lr}
 800214e:	b096      	sub	sp, #88	; 0x58
 8002150:	af04      	add	r7, sp, #16
 8002152:	6078      	str	r0, [r7, #4]
 8002154:	6039      	str	r1, [r7, #0]
    struct tm tm_time = { 0 };
 8002156:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800215a:	2224      	movs	r2, #36	; 0x24
 800215c:	2100      	movs	r1, #0
 800215e:	4618      	mov	r0, r3
 8002160:	f006 fdce 	bl	8008d00 <memset>
    int year, month, day, hour, minute, second;

    sscanf(str, "%4d%2d%2d%2d%2d%2d", &year, &month, &day, &hour, &minute, &second);
 8002164:	f107 011c 	add.w	r1, r7, #28
 8002168:	f107 0220 	add.w	r2, r7, #32
 800216c:	f107 030c 	add.w	r3, r7, #12
 8002170:	9303      	str	r3, [sp, #12]
 8002172:	f107 0310 	add.w	r3, r7, #16
 8002176:	9302      	str	r3, [sp, #8]
 8002178:	f107 0314 	add.w	r3, r7, #20
 800217c:	9301      	str	r3, [sp, #4]
 800217e:	f107 0318 	add.w	r3, r7, #24
 8002182:	9300      	str	r3, [sp, #0]
 8002184:	460b      	mov	r3, r1
 8002186:	4910      	ldr	r1, [pc, #64]	; (80021c8 <fillUnixTime+0x7c>)
 8002188:	6838      	ldr	r0, [r7, #0]
 800218a:	f007 fff7 	bl	800a17c <siscanf>

    tm_time.tm_year = year - 1900;
 800218e:	6a3b      	ldr	r3, [r7, #32]
 8002190:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
 8002194:	63bb      	str	r3, [r7, #56]	; 0x38
    tm_time.tm_mon = month - 1;
 8002196:	69fb      	ldr	r3, [r7, #28]
 8002198:	3b01      	subs	r3, #1
 800219a:	637b      	str	r3, [r7, #52]	; 0x34
    tm_time.tm_mday = day;
 800219c:	69bb      	ldr	r3, [r7, #24]
 800219e:	633b      	str	r3, [r7, #48]	; 0x30
    tm_time.tm_hour = hour;
 80021a0:	697b      	ldr	r3, [r7, #20]
 80021a2:	62fb      	str	r3, [r7, #44]	; 0x2c
    tm_time.tm_min = minute;
 80021a4:	693b      	ldr	r3, [r7, #16]
 80021a6:	62bb      	str	r3, [r7, #40]	; 0x28
    tm_time.tm_sec = second;
 80021a8:	68fb      	ldr	r3, [r7, #12]
 80021aa:	627b      	str	r3, [r7, #36]	; 0x24

    *unixTime = mktime(&tm_time);
 80021ac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021b0:	4618      	mov	r0, r3
 80021b2:	f006 fe85 	bl	8008ec0 <mktime>
 80021b6:	4602      	mov	r2, r0
 80021b8:	460b      	mov	r3, r1
 80021ba:	6879      	ldr	r1, [r7, #4]
 80021bc:	e9c1 2300 	strd	r2, r3, [r1]
}
 80021c0:	bf00      	nop
 80021c2:	3748      	adds	r7, #72	; 0x48
 80021c4:	46bd      	mov	sp, r7
 80021c6:	bd80      	pop	{r7, pc}
 80021c8:	0800f834 	.word	0x0800f834

080021cc <unixTimeToString>:

void unixTimeToString(char* str, const time_t* unixTime) {
 80021cc:	b5b0      	push	{r4, r5, r7, lr}
 80021ce:	b08c      	sub	sp, #48	; 0x30
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	6078      	str	r0, [r7, #4]
 80021d4:	6039      	str	r1, [r7, #0]
    struct tm timeinfo = *localtime(unixTime);
 80021d6:	6838      	ldr	r0, [r7, #0]
 80021d8:	f006 fc62 	bl	8008aa0 <localtime>
 80021dc:	4603      	mov	r3, r0
 80021de:	f107 040c 	add.w	r4, r7, #12
 80021e2:	461d      	mov	r5, r3
 80021e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80021e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80021e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80021ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80021ec:	682b      	ldr	r3, [r5, #0]
 80021ee:	6023      	str	r3, [r4, #0]
    strftime(str, FORMATTED_TIME_LEN, "%d.%m.%Y %H:%M:%S", &timeinfo);
 80021f0:	f107 030c 	add.w	r3, r7, #12
 80021f4:	4a04      	ldr	r2, [pc, #16]	; (8002208 <unixTimeToString+0x3c>)
 80021f6:	2114      	movs	r1, #20
 80021f8:	6878      	ldr	r0, [r7, #4]
 80021fa:	f008 fd7f 	bl	800acfc <strftime>
}
 80021fe:	bf00      	nop
 8002200:	3730      	adds	r7, #48	; 0x30
 8002202:	46bd      	mov	sp, r7
 8002204:	bdb0      	pop	{r4, r5, r7, pc}
 8002206:	bf00      	nop
 8002208:	0800f848 	.word	0x0800f848

0800220c <setPositionAndTime>:

bool setPositionAndTime(float* position,time_t* unixTime, const char* gpsBuffer) {
 800220c:	b580      	push	{r7, lr}
 800220e:	b08c      	sub	sp, #48	; 0x30
 8002210:	af02      	add	r7, sp, #8
 8002212:	60f8      	str	r0, [r7, #12]
 8002214:	60b9      	str	r1, [r7, #8]
 8002216:	607a      	str	r2, [r7, #4]

    char timeString[MAX_TIME_LEN + 1] = { 0 };
 8002218:	2300      	movs	r3, #0
 800221a:	61bb      	str	r3, [r7, #24]
 800221c:	f107 031c 	add.w	r3, r7, #28
 8002220:	2200      	movs	r2, #0
 8002222:	601a      	str	r2, [r3, #0]
 8002224:	605a      	str	r2, [r3, #4]
 8002226:	f8c3 2007 	str.w	r2, [r3, #7]
    float lat, lng;
    if (sscanf(gpsBuffer, "\r\n+CGNSINF: %*d,%*d,%[^.].%*[0-9],%f,%f", timeString, &lat, &lng) == 3) { //Edit \r\n
 800222a:	f107 0114 	add.w	r1, r7, #20
 800222e:	f107 0218 	add.w	r2, r7, #24
 8002232:	f107 0310 	add.w	r3, r7, #16
 8002236:	9300      	str	r3, [sp, #0]
 8002238:	460b      	mov	r3, r1
 800223a:	490d      	ldr	r1, [pc, #52]	; (8002270 <setPositionAndTime+0x64>)
 800223c:	6878      	ldr	r0, [r7, #4]
 800223e:	f007 ff9d 	bl	800a17c <siscanf>
 8002242:	4603      	mov	r3, r0
 8002244:	2b03      	cmp	r3, #3
 8002246:	d10e      	bne.n	8002266 <setPositionAndTime+0x5a>
        fillUnixTime(unixTime, timeString);
 8002248:	f107 0318 	add.w	r3, r7, #24
 800224c:	4619      	mov	r1, r3
 800224e:	68b8      	ldr	r0, [r7, #8]
 8002250:	f7ff ff7c 	bl	800214c <fillUnixTime>
        position[0] = lat;
 8002254:	697a      	ldr	r2, [r7, #20]
 8002256:	68fb      	ldr	r3, [r7, #12]
 8002258:	601a      	str	r2, [r3, #0]
        position[1] = lng;
 800225a:	68fb      	ldr	r3, [r7, #12]
 800225c:	3304      	adds	r3, #4
 800225e:	693a      	ldr	r2, [r7, #16]
 8002260:	601a      	str	r2, [r3, #0]
        //printf("Time: %s, Latitude: %.6f, Longitude: %.6f\n", timeString, lat, lng);
        return 1;
 8002262:	2301      	movs	r3, #1
 8002264:	e000      	b.n	8002268 <setPositionAndTime+0x5c>
    }
    else {
        return 0;
 8002266:	2300      	movs	r3, #0
    }

}
 8002268:	4618      	mov	r0, r3
 800226a:	3728      	adds	r7, #40	; 0x28
 800226c:	46bd      	mov	sp, r7
 800226e:	bd80      	pop	{r7, pc}
 8002270:	0800f85c 	.word	0x0800f85c

08002274 <gpsPositioning>:

bool gpsPositioning(struct Device* device, const uint32_t timeout){
 8002274:	b580      	push	{r7, lr}
 8002276:	b0a4      	sub	sp, #144	; 0x90
 8002278:	af02      	add	r7, sp, #8
 800227a:	6078      	str	r0, [r7, #4]
 800227c:	6039      	str	r1, [r7, #0]

	uint32_t startTime = 0;
 800227e:	2300      	movs	r3, #0
 8002280:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    bool answer = 0;
 8002284:	2300      	movs	r3, #0
 8002286:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
	char response[MAX_GPS_RESPONSE]={0};
 800228a:	2300      	movs	r3, #0
 800228c:	60bb      	str	r3, [r7, #8]
 800228e:	f107 030c 	add.w	r3, r7, #12
 8002292:	2274      	movs	r2, #116	; 0x74
 8002294:	2100      	movs	r1, #0
 8002296:	4618      	mov	r0, r3
 8002298:	f006 fd32 	bl	8008d00 <memset>


    if(!sendAtCommand("AT+CGNSPWR=1\r",2000,"OK"))    //Turn on the GNSS power.
 800229c:	4a3b      	ldr	r2, [pc, #236]	; (800238c <gpsPositioning+0x118>)
 800229e:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80022a2:	483b      	ldr	r0, [pc, #236]	; (8002390 <gpsPositioning+0x11c>)
 80022a4:	f7fe ff8e 	bl	80011c4 <sendAtCommand>
 80022a8:	4603      	mov	r3, r0
 80022aa:	f083 0301 	eor.w	r3, r3, #1
 80022ae:	b2db      	uxtb	r3, r3
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d001      	beq.n	80022b8 <gpsPositioning+0x44>
		return 0;
 80022b4:	2300      	movs	r3, #0
 80022b6:	e064      	b.n	8002382 <gpsPositioning+0x10e>

    startTime = HAL_GetTick();
 80022b8:	f001 fd5c 	bl	8003d74 <HAL_GetTick>
 80022bc:	f8c7 0080 	str.w	r0, [r7, #128]	; 0x80

    // this loop waits for the answer
    while( answer == 0 && ((HAL_GetTick()-startTime) < timeout) ) {
 80022c0:	e03a      	b.n	8002338 <gpsPositioning+0xc4>
        if(getSerialResponse("AT+CGNSINF\r",2000,"OK",response,sizeof(response))) {
 80022c2:	f107 0308 	add.w	r3, r7, #8
 80022c6:	2278      	movs	r2, #120	; 0x78
 80022c8:	9200      	str	r2, [sp, #0]
 80022ca:	4a30      	ldr	r2, [pc, #192]	; (800238c <gpsPositioning+0x118>)
 80022cc:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80022d0:	4830      	ldr	r0, [pc, #192]	; (8002394 <gpsPositioning+0x120>)
 80022d2:	f7ff f815 	bl	8001300 <getSerialResponse>
 80022d6:	4603      	mov	r3, r0
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d01d      	beq.n	8002318 <gpsPositioning+0xa4>
			if(strstr(response,",,,,,") == NULL) {
 80022dc:	f107 0308 	add.w	r3, r7, #8
 80022e0:	492d      	ldr	r1, [pc, #180]	; (8002398 <gpsPositioning+0x124>)
 80022e2:	4618      	mov	r0, r3
 80022e4:	f008 fd33 	bl	800ad4e <strstr>
 80022e8:	4603      	mov	r3, r0
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	d103      	bne.n	80022f6 <gpsPositioning+0x82>
            	answer = 1;
 80022ee:	2301      	movs	r3, #1
 80022f0:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 80022f4:	e020      	b.n	8002338 <gpsPositioning+0xc4>
            }
            else {
            	memset(response,'\0',strlen(response));
 80022f6:	f107 0308 	add.w	r3, r7, #8
 80022fa:	4618      	mov	r0, r3
 80022fc:	f7fd ff7a 	bl	80001f4 <strlen>
 8002300:	4602      	mov	r2, r0
 8002302:	f107 0308 	add.w	r3, r7, #8
 8002306:	2100      	movs	r1, #0
 8002308:	4618      	mov	r0, r3
 800230a:	f006 fcf9 	bl	8008d00 <memset>
            	HAL_Delay(1000);
 800230e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002312:	f001 fd3b 	bl	8003d8c <HAL_Delay>
 8002316:	e00f      	b.n	8002338 <gpsPositioning+0xc4>
            }
        }
        else {
            memset(response,'\0',strlen(response));
 8002318:	f107 0308 	add.w	r3, r7, #8
 800231c:	4618      	mov	r0, r3
 800231e:	f7fd ff69 	bl	80001f4 <strlen>
 8002322:	4602      	mov	r2, r0
 8002324:	f107 0308 	add.w	r3, r7, #8
 8002328:	2100      	movs	r1, #0
 800232a:	4618      	mov	r0, r3
 800232c:	f006 fce8 	bl	8008d00 <memset>
            HAL_Delay(1000);
 8002330:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002334:	f001 fd2a 	bl	8003d8c <HAL_Delay>
    while( answer == 0 && ((HAL_GetTick()-startTime) < timeout) ) {
 8002338:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 800233c:	f083 0301 	eor.w	r3, r3, #1
 8002340:	b2db      	uxtb	r3, r3
 8002342:	2b00      	cmp	r3, #0
 8002344:	d008      	beq.n	8002358 <gpsPositioning+0xe4>
 8002346:	f001 fd15 	bl	8003d74 <HAL_GetTick>
 800234a:	4602      	mov	r2, r0
 800234c:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002350:	1ad3      	subs	r3, r2, r3
 8002352:	683a      	ldr	r2, [r7, #0]
 8002354:	429a      	cmp	r2, r3
 8002356:	d8b4      	bhi.n	80022c2 <gpsPositioning+0x4e>
            }
        }

	sendAtCommand("AT+CGNSPWR=0\r",2000,"OK"); //Turn off the GNSS power
 8002358:	4a0c      	ldr	r2, [pc, #48]	; (800238c <gpsPositioning+0x118>)
 800235a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800235e:	480f      	ldr	r0, [pc, #60]	; (800239c <gpsPositioning+0x128>)
 8002360:	f7fe ff30 	bl	80011c4 <sendAtCommand>

	if (answer) {
 8002364:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 8002368:	2b00      	cmp	r3, #0
 800236a:	d009      	beq.n	8002380 <gpsPositioning+0x10c>
		return setPositionAndTime(device->position,&(device->unixTime),response);
 800236c:	6878      	ldr	r0, [r7, #4]
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	3308      	adds	r3, #8
 8002372:	f107 0208 	add.w	r2, r7, #8
 8002376:	4619      	mov	r1, r3
 8002378:	f7ff ff48 	bl	800220c <setPositionAndTime>
 800237c:	4603      	mov	r3, r0
 800237e:	e000      	b.n	8002382 <gpsPositioning+0x10e>
	}
	else {
		return 0;
 8002380:	2300      	movs	r3, #0
	}

}
 8002382:	4618      	mov	r0, r3
 8002384:	3788      	adds	r7, #136	; 0x88
 8002386:	46bd      	mov	sp, r7
 8002388:	bd80      	pop	{r7, pc}
 800238a:	bf00      	nop
 800238c:	0800f5f8 	.word	0x0800f5f8
 8002390:	0800f884 	.word	0x0800f884
 8002394:	0800f894 	.word	0x0800f894
 8002398:	0800f8a0 	.word	0x0800f8a0
 800239c:	0800f8a8 	.word	0x0800f8a8

080023a0 <prefix>:

bool prefix(const char* str, const char* pre)
{
 80023a0:	b580      	push	{r7, lr}
 80023a2:	b082      	sub	sp, #8
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
 80023a8:	6039      	str	r1, [r7, #0]
    return strncmp(str, pre, strlen(pre)) == 0;
 80023aa:	6838      	ldr	r0, [r7, #0]
 80023ac:	f7fd ff22 	bl	80001f4 <strlen>
 80023b0:	4603      	mov	r3, r0
 80023b2:	461a      	mov	r2, r3
 80023b4:	6839      	ldr	r1, [r7, #0]
 80023b6:	6878      	ldr	r0, [r7, #4]
 80023b8:	f008 fca2 	bl	800ad00 <strncmp>
 80023bc:	4603      	mov	r3, r0
 80023be:	2b00      	cmp	r3, #0
 80023c0:	bf0c      	ite	eq
 80023c2:	2301      	moveq	r3, #1
 80023c4:	2300      	movne	r3, #0
 80023c6:	b2db      	uxtb	r3, r3
}
 80023c8:	4618      	mov	r0, r3
 80023ca:	3708      	adds	r7, #8
 80023cc:	46bd      	mov	sp, r7
 80023ce:	bd80      	pop	{r7, pc}

080023d0 <findLength>:

int findLength(const char* input) {
 80023d0:	b580      	push	{r7, lr}
 80023d2:	b088      	sub	sp, #32
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
    char temp[4] = { 0 };
 80023d8:	2300      	movs	r3, #0
 80023da:	60fb      	str	r3, [r7, #12]
    char reve[4] = { 0 };
 80023dc:	2300      	movs	r3, #0
 80023de:	60bb      	str	r3, [r7, #8]
    char ch = 0;
 80023e0:	2300      	movs	r3, #0
 80023e2:	74fb      	strb	r3, [r7, #19]
    for (int i = 1;i < 4; ++i) {
 80023e4:	2301      	movs	r3, #1
 80023e6:	61fb      	str	r3, [r7, #28]
 80023e8:	e015      	b.n	8002416 <findLength+0x46>
        ch = *(input - i);
 80023ea:	69fb      	ldr	r3, [r7, #28]
 80023ec:	425b      	negs	r3, r3
 80023ee:	687a      	ldr	r2, [r7, #4]
 80023f0:	4413      	add	r3, r2
 80023f2:	781b      	ldrb	r3, [r3, #0]
 80023f4:	74fb      	strb	r3, [r7, #19]
        if (ch < '0' || ch > '9')
 80023f6:	7cfb      	ldrb	r3, [r7, #19]
 80023f8:	2b2f      	cmp	r3, #47	; 0x2f
 80023fa:	d90f      	bls.n	800241c <findLength+0x4c>
 80023fc:	7cfb      	ldrb	r3, [r7, #19]
 80023fe:	2b39      	cmp	r3, #57	; 0x39
 8002400:	d80c      	bhi.n	800241c <findLength+0x4c>
            break;
        temp[i - 1] = ch;
 8002402:	69fb      	ldr	r3, [r7, #28]
 8002404:	3b01      	subs	r3, #1
 8002406:	3320      	adds	r3, #32
 8002408:	443b      	add	r3, r7
 800240a:	7cfa      	ldrb	r2, [r7, #19]
 800240c:	f803 2c14 	strb.w	r2, [r3, #-20]
    for (int i = 1;i < 4; ++i) {
 8002410:	69fb      	ldr	r3, [r7, #28]
 8002412:	3301      	adds	r3, #1
 8002414:	61fb      	str	r3, [r7, #28]
 8002416:	69fb      	ldr	r3, [r7, #28]
 8002418:	2b03      	cmp	r3, #3
 800241a:	dde6      	ble.n	80023ea <findLength+0x1a>

    }
    int j = strlen(temp) - 1;
 800241c:	f107 030c 	add.w	r3, r7, #12
 8002420:	4618      	mov	r0, r3
 8002422:	f7fd fee7 	bl	80001f4 <strlen>
 8002426:	4603      	mov	r3, r0
 8002428:	3b01      	subs	r3, #1
 800242a:	61bb      	str	r3, [r7, #24]
    for (int i = 0; i < strlen(temp); ++i)
 800242c:	2300      	movs	r3, #0
 800242e:	617b      	str	r3, [r7, #20]
 8002430:	e010      	b.n	8002454 <findLength+0x84>
    {
        reve[i] = temp[j];
 8002432:	f107 020c 	add.w	r2, r7, #12
 8002436:	69bb      	ldr	r3, [r7, #24]
 8002438:	4413      	add	r3, r2
 800243a:	7819      	ldrb	r1, [r3, #0]
 800243c:	f107 0208 	add.w	r2, r7, #8
 8002440:	697b      	ldr	r3, [r7, #20]
 8002442:	4413      	add	r3, r2
 8002444:	460a      	mov	r2, r1
 8002446:	701a      	strb	r2, [r3, #0]
        --j;
 8002448:	69bb      	ldr	r3, [r7, #24]
 800244a:	3b01      	subs	r3, #1
 800244c:	61bb      	str	r3, [r7, #24]
    for (int i = 0; i < strlen(temp); ++i)
 800244e:	697b      	ldr	r3, [r7, #20]
 8002450:	3301      	adds	r3, #1
 8002452:	617b      	str	r3, [r7, #20]
 8002454:	f107 030c 	add.w	r3, r7, #12
 8002458:	4618      	mov	r0, r3
 800245a:	f7fd fecb 	bl	80001f4 <strlen>
 800245e:	4602      	mov	r2, r0
 8002460:	697b      	ldr	r3, [r7, #20]
 8002462:	429a      	cmp	r2, r3
 8002464:	d8e5      	bhi.n	8002432 <findLength+0x62>

    }
    return atoi(reve);
 8002466:	f107 0308 	add.w	r3, r7, #8
 800246a:	4618      	mov	r0, r3
 800246c:	f006 faea 	bl	8008a44 <atoi>
 8002470:	4603      	mov	r3, r0
}
 8002472:	4618      	mov	r0, r3
 8002474:	3720      	adds	r7, #32
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}
	...

0800247c <splitText>:

uint16_t splitText(char* input) {
 800247c:	b580      	push	{r7, lr}
 800247e:	b086      	sub	sp, #24
 8002480:	af00      	add	r7, sp, #0
 8002482:	6078      	str	r0, [r7, #4]
    char* p, * m;
    uint8_t delimLen = 2; //\r\n
 8002484:	2302      	movs	r3, #2
 8002486:	737b      	strb	r3, [r7, #13]
    int messageLen = 0;
 8002488:	2300      	movs	r3, #0
 800248a:	613b      	str	r3, [r7, #16]
    uint16_t count = 0;
 800248c:	2300      	movs	r3, #0
 800248e:	81fb      	strh	r3, [r7, #14]

    p = strstr(input, "\r\n");
 8002490:	4919      	ldr	r1, [pc, #100]	; (80024f8 <splitText+0x7c>)
 8002492:	6878      	ldr	r0, [r7, #4]
 8002494:	f008 fc5b 	bl	800ad4e <strstr>
 8002498:	6178      	str	r0, [r7, #20]
    messageLen = findLength(p);
 800249a:	6978      	ldr	r0, [r7, #20]
 800249c:	f7ff ff98 	bl	80023d0 <findLength>
 80024a0:	6138      	str	r0, [r7, #16]
    m = input;
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	60bb      	str	r3, [r7, #8]

    while (p && messageLen) {
 80024a6:	e01b      	b.n	80024e0 <splitText+0x64>
        m = p + delimLen + messageLen;
 80024a8:	7b7a      	ldrb	r2, [r7, #13]
 80024aa:	693b      	ldr	r3, [r7, #16]
 80024ac:	4413      	add	r3, r2
 80024ae:	697a      	ldr	r2, [r7, #20]
 80024b0:	4413      	add	r3, r2
 80024b2:	60bb      	str	r3, [r7, #8]
        *m = '\0';
 80024b4:	68bb      	ldr	r3, [r7, #8]
 80024b6:	2200      	movs	r2, #0
 80024b8:	701a      	strb	r2, [r3, #0]
        m += delimLen;
 80024ba:	7b7b      	ldrb	r3, [r7, #13]
 80024bc:	68ba      	ldr	r2, [r7, #8]
 80024be:	4413      	add	r3, r2
 80024c0:	60bb      	str	r3, [r7, #8]
        //printf("%d\n",count);
        p = strstr(m, "\r\n");
 80024c2:	490d      	ldr	r1, [pc, #52]	; (80024f8 <splitText+0x7c>)
 80024c4:	68b8      	ldr	r0, [r7, #8]
 80024c6:	f008 fc42 	bl	800ad4e <strstr>
 80024ca:	6178      	str	r0, [r7, #20]
        if (p) {
 80024cc:	697b      	ldr	r3, [r7, #20]
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d003      	beq.n	80024da <splitText+0x5e>
            messageLen = findLength(p);
 80024d2:	6978      	ldr	r0, [r7, #20]
 80024d4:	f7ff ff7c 	bl	80023d0 <findLength>
 80024d8:	6138      	str	r0, [r7, #16]
            //printf("%d\r\n", messageLen);
        }
        ++count;
 80024da:	89fb      	ldrh	r3, [r7, #14]
 80024dc:	3301      	adds	r3, #1
 80024de:	81fb      	strh	r3, [r7, #14]
    while (p && messageLen) {
 80024e0:	697b      	ldr	r3, [r7, #20]
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d002      	beq.n	80024ec <splitText+0x70>
 80024e6:	693b      	ldr	r3, [r7, #16]
 80024e8:	2b00      	cmp	r3, #0
 80024ea:	d1dd      	bne.n	80024a8 <splitText+0x2c>
        //printf("%d\r\n", messageLen);
        //printf("%d",count);
    }
    return count;
 80024ec:	89fb      	ldrh	r3, [r7, #14]
}
 80024ee:	4618      	mov	r0, r3
 80024f0:	3718      	adds	r7, #24
 80024f2:	46bd      	mov	sp, r7
 80024f4:	bd80      	pop	{r7, pc}
 80024f6:	bf00      	nop
 80024f8:	0800f810 	.word	0x0800f810
 80024fc:	00000000 	.word	0x00000000

08002500 <haversine>:

double haversine(double lat1,double lng1,double lat2,double lng2)
{
 8002500:	b5b0      	push	{r4, r5, r7, lr}
 8002502:	b08e      	sub	sp, #56	; 0x38
 8002504:	af00      	add	r7, sp, #0
 8002506:	ed87 0b06 	vstr	d0, [r7, #24]
 800250a:	ed87 1b04 	vstr	d1, [r7, #16]
 800250e:	ed87 2b02 	vstr	d2, [r7, #8]
 8002512:	ed87 3b00 	vstr	d3, [r7]
    //printf("%f,%f,%f,%f\n", lat1, lng1, lat2, lng2);

    double dx, dy, dz;
    lng1 -= lng2;
 8002516:	e9d7 2300 	ldrd	r2, r3, [r7]
 800251a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800251e:	f7fd fecb 	bl	80002b8 <__aeabi_dsub>
 8002522:	4602      	mov	r2, r0
 8002524:	460b      	mov	r3, r1
 8002526:	e9c7 2304 	strd	r2, r3, [r7, #16]
    lng1 *= (3.14159265358979323846 / 180);
 800252a:	a363      	add	r3, pc, #396	; (adr r3, 80026b8 <haversine+0x1b8>)
 800252c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002530:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002534:	f7fe f878 	bl	8000628 <__aeabi_dmul>
 8002538:	4602      	mov	r2, r0
 800253a:	460b      	mov	r3, r1
 800253c:	e9c7 2304 	strd	r2, r3, [r7, #16]
    lat1 *= (3.14159265358979323846 / 180);
 8002540:	a35d      	add	r3, pc, #372	; (adr r3, 80026b8 <haversine+0x1b8>)
 8002542:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002546:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800254a:	f7fe f86d 	bl	8000628 <__aeabi_dmul>
 800254e:	4602      	mov	r2, r0
 8002550:	460b      	mov	r3, r1
 8002552:	e9c7 2306 	strd	r2, r3, [r7, #24]
    lat2 *= (3.14159265358979323846 / 180);
 8002556:	a358      	add	r3, pc, #352	; (adr r3, 80026b8 <haversine+0x1b8>)
 8002558:	e9d3 2300 	ldrd	r2, r3, [r3]
 800255c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002560:	f7fe f862 	bl	8000628 <__aeabi_dmul>
 8002564:	4602      	mov	r2, r0
 8002566:	460b      	mov	r3, r1
 8002568:	e9c7 2302 	strd	r2, r3, [r7, #8]

    dz = sin(lat1) - sin(lat2);
 800256c:	ed97 0b06 	vldr	d0, [r7, #24]
 8002570:	f004 feee 	bl	8007350 <sin>
 8002574:	ec55 4b10 	vmov	r4, r5, d0
 8002578:	ed97 0b02 	vldr	d0, [r7, #8]
 800257c:	f004 fee8 	bl	8007350 <sin>
 8002580:	ec53 2b10 	vmov	r2, r3, d0
 8002584:	4620      	mov	r0, r4
 8002586:	4629      	mov	r1, r5
 8002588:	f7fd fe96 	bl	80002b8 <__aeabi_dsub>
 800258c:	4602      	mov	r2, r0
 800258e:	460b      	mov	r3, r1
 8002590:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
    dx = cos(lng1) * cos(lat1) - cos(lat2);
 8002594:	ed97 0b04 	vldr	d0, [r7, #16]
 8002598:	f004 fe86 	bl	80072a8 <cos>
 800259c:	ec55 4b10 	vmov	r4, r5, d0
 80025a0:	ed97 0b06 	vldr	d0, [r7, #24]
 80025a4:	f004 fe80 	bl	80072a8 <cos>
 80025a8:	ec53 2b10 	vmov	r2, r3, d0
 80025ac:	4620      	mov	r0, r4
 80025ae:	4629      	mov	r1, r5
 80025b0:	f7fe f83a 	bl	8000628 <__aeabi_dmul>
 80025b4:	4602      	mov	r2, r0
 80025b6:	460b      	mov	r3, r1
 80025b8:	4614      	mov	r4, r2
 80025ba:	461d      	mov	r5, r3
 80025bc:	ed97 0b02 	vldr	d0, [r7, #8]
 80025c0:	f004 fe72 	bl	80072a8 <cos>
 80025c4:	ec53 2b10 	vmov	r2, r3, d0
 80025c8:	4620      	mov	r0, r4
 80025ca:	4629      	mov	r1, r5
 80025cc:	f7fd fe74 	bl	80002b8 <__aeabi_dsub>
 80025d0:	4602      	mov	r2, r0
 80025d2:	460b      	mov	r3, r1
 80025d4:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    dy = sin(lng1) * cos(lat1);
 80025d8:	ed97 0b04 	vldr	d0, [r7, #16]
 80025dc:	f004 feb8 	bl	8007350 <sin>
 80025e0:	ec55 4b10 	vmov	r4, r5, d0
 80025e4:	ed97 0b06 	vldr	d0, [r7, #24]
 80025e8:	f004 fe5e 	bl	80072a8 <cos>
 80025ec:	ec53 2b10 	vmov	r2, r3, d0
 80025f0:	4620      	mov	r0, r4
 80025f2:	4629      	mov	r1, r5
 80025f4:	f7fe f818 	bl	8000628 <__aeabi_dmul>
 80025f8:	4602      	mov	r2, r0
 80025fa:	460b      	mov	r3, r1
 80025fc:	e9c7 2308 	strd	r2, r3, [r7, #32]

    return asin(sqrt(dx * dx + dy * dy + dz * dz) / 2) * 2 * 6371000;
 8002600:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002604:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002608:	f7fe f80e 	bl	8000628 <__aeabi_dmul>
 800260c:	4602      	mov	r2, r0
 800260e:	460b      	mov	r3, r1
 8002610:	4614      	mov	r4, r2
 8002612:	461d      	mov	r5, r3
 8002614:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8002618:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800261c:	f7fe f804 	bl	8000628 <__aeabi_dmul>
 8002620:	4602      	mov	r2, r0
 8002622:	460b      	mov	r3, r1
 8002624:	4620      	mov	r0, r4
 8002626:	4629      	mov	r1, r5
 8002628:	f7fd fe48 	bl	80002bc <__adddf3>
 800262c:	4602      	mov	r2, r0
 800262e:	460b      	mov	r3, r1
 8002630:	4614      	mov	r4, r2
 8002632:	461d      	mov	r5, r3
 8002634:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8002638:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800263c:	f7fd fff4 	bl	8000628 <__aeabi_dmul>
 8002640:	4602      	mov	r2, r0
 8002642:	460b      	mov	r3, r1
 8002644:	4620      	mov	r0, r4
 8002646:	4629      	mov	r1, r5
 8002648:	f7fd fe38 	bl	80002bc <__adddf3>
 800264c:	4602      	mov	r2, r0
 800264e:	460b      	mov	r3, r1
 8002650:	ec43 2b17 	vmov	d7, r2, r3
 8002654:	eeb0 0a47 	vmov.f32	s0, s14
 8002658:	eef0 0a67 	vmov.f32	s1, s15
 800265c:	f004 ff04 	bl	8007468 <sqrt>
 8002660:	ec51 0b10 	vmov	r0, r1, d0
 8002664:	f04f 0200 	mov.w	r2, #0
 8002668:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800266c:	f7fe f906 	bl	800087c <__aeabi_ddiv>
 8002670:	4602      	mov	r2, r0
 8002672:	460b      	mov	r3, r1
 8002674:	ec43 2b17 	vmov	d7, r2, r3
 8002678:	eeb0 0a47 	vmov.f32	s0, s14
 800267c:	eef0 0a67 	vmov.f32	s1, s15
 8002680:	f004 febe 	bl	8007400 <asin>
 8002684:	ec51 0b10 	vmov	r0, r1, d0
 8002688:	4602      	mov	r2, r0
 800268a:	460b      	mov	r3, r1
 800268c:	f7fd fe16 	bl	80002bc <__adddf3>
 8002690:	4602      	mov	r2, r0
 8002692:	460b      	mov	r3, r1
 8002694:	4610      	mov	r0, r2
 8002696:	4619      	mov	r1, r3
 8002698:	a309      	add	r3, pc, #36	; (adr r3, 80026c0 <haversine+0x1c0>)
 800269a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800269e:	f7fd ffc3 	bl	8000628 <__aeabi_dmul>
 80026a2:	4602      	mov	r2, r0
 80026a4:	460b      	mov	r3, r1
 80026a6:	ec43 2b17 	vmov	d7, r2, r3
}
 80026aa:	eeb0 0a47 	vmov.f32	s0, s14
 80026ae:	eef0 0a67 	vmov.f32	s1, s15
 80026b2:	3738      	adds	r7, #56	; 0x38
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bdb0      	pop	{r4, r5, r7, pc}
 80026b8:	a2529d39 	.word	0xa2529d39
 80026bc:	3f91df46 	.word	0x3f91df46
 80026c0:	00000000 	.word	0x00000000
 80026c4:	41584dae 	.word	0x41584dae

080026c8 <circleToString>:


bool circleToString(char * str, struct Subscriber* subscribersArr, int* count, const char* address) {
 80026c8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80026cc:	b08a      	sub	sp, #40	; 0x28
 80026ce:	af04      	add	r7, sp, #16
 80026d0:	60f8      	str	r0, [r7, #12]
 80026d2:	60b9      	str	r1, [r7, #8]
 80026d4:	607a      	str	r2, [r7, #4]
 80026d6:	603b      	str	r3, [r7, #0]

    for (int i = 0; i < *count; i++) {
 80026d8:	2300      	movs	r3, #0
 80026da:	617b      	str	r3, [r7, #20]
 80026dc:	e047      	b.n	800276e <circleToString+0xa6>
        if (strcmp(subscribersArr[i].address, address) == 0) {
 80026de:	697a      	ldr	r2, [r7, #20]
 80026e0:	4613      	mov	r3, r2
 80026e2:	00db      	lsls	r3, r3, #3
 80026e4:	4413      	add	r3, r2
 80026e6:	009b      	lsls	r3, r3, #2
 80026e8:	461a      	mov	r2, r3
 80026ea:	68bb      	ldr	r3, [r7, #8]
 80026ec:	4413      	add	r3, r2
 80026ee:	6839      	ldr	r1, [r7, #0]
 80026f0:	4618      	mov	r0, r3
 80026f2:	f7fd fd75 	bl	80001e0 <strcmp>
 80026f6:	4603      	mov	r3, r0
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d135      	bne.n	8002768 <circleToString+0xa0>
            sprintf(str, "%.6f,%.6f,%.0f", subscribersArr[i].circle[0], subscribersArr[i].circle[1], subscribersArr[i].circle[2]);
 80026fc:	697a      	ldr	r2, [r7, #20]
 80026fe:	4613      	mov	r3, r2
 8002700:	00db      	lsls	r3, r3, #3
 8002702:	4413      	add	r3, r2
 8002704:	009b      	lsls	r3, r3, #2
 8002706:	461a      	mov	r2, r3
 8002708:	68bb      	ldr	r3, [r7, #8]
 800270a:	4413      	add	r3, r2
 800270c:	699b      	ldr	r3, [r3, #24]
 800270e:	4618      	mov	r0, r3
 8002710:	f7fd ff32 	bl	8000578 <__aeabi_f2d>
 8002714:	4680      	mov	r8, r0
 8002716:	4689      	mov	r9, r1
 8002718:	697a      	ldr	r2, [r7, #20]
 800271a:	4613      	mov	r3, r2
 800271c:	00db      	lsls	r3, r3, #3
 800271e:	4413      	add	r3, r2
 8002720:	009b      	lsls	r3, r3, #2
 8002722:	461a      	mov	r2, r3
 8002724:	68bb      	ldr	r3, [r7, #8]
 8002726:	4413      	add	r3, r2
 8002728:	69db      	ldr	r3, [r3, #28]
 800272a:	4618      	mov	r0, r3
 800272c:	f7fd ff24 	bl	8000578 <__aeabi_f2d>
 8002730:	4604      	mov	r4, r0
 8002732:	460d      	mov	r5, r1
 8002734:	697a      	ldr	r2, [r7, #20]
 8002736:	4613      	mov	r3, r2
 8002738:	00db      	lsls	r3, r3, #3
 800273a:	4413      	add	r3, r2
 800273c:	009b      	lsls	r3, r3, #2
 800273e:	461a      	mov	r2, r3
 8002740:	68bb      	ldr	r3, [r7, #8]
 8002742:	4413      	add	r3, r2
 8002744:	6a1b      	ldr	r3, [r3, #32]
 8002746:	4618      	mov	r0, r3
 8002748:	f7fd ff16 	bl	8000578 <__aeabi_f2d>
 800274c:	4602      	mov	r2, r0
 800274e:	460b      	mov	r3, r1
 8002750:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002754:	e9cd 4500 	strd	r4, r5, [sp]
 8002758:	4642      	mov	r2, r8
 800275a:	464b      	mov	r3, r9
 800275c:	4909      	ldr	r1, [pc, #36]	; (8002784 <circleToString+0xbc>)
 800275e:	68f8      	ldr	r0, [r7, #12]
 8002760:	f007 fcec 	bl	800a13c <siprintf>
            return 1;
 8002764:	2301      	movs	r3, #1
 8002766:	e008      	b.n	800277a <circleToString+0xb2>
    for (int i = 0; i < *count; i++) {
 8002768:	697b      	ldr	r3, [r7, #20]
 800276a:	3301      	adds	r3, #1
 800276c:	617b      	str	r3, [r7, #20]
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	697a      	ldr	r2, [r7, #20]
 8002774:	429a      	cmp	r2, r3
 8002776:	dbb2      	blt.n	80026de <circleToString+0x16>
        }
    }
    return 0;
 8002778:	2300      	movs	r3, #0
}
 800277a:	4618      	mov	r0, r3
 800277c:	3718      	adds	r7, #24
 800277e:	46bd      	mov	sp, r7
 8002780:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002784:	0800f8b8 	.word	0x0800f8b8

08002788 <checkCircles>:

//return true if any state changed
bool checkCircles(struct Device* device) {
 8002788:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800278c:	b0ba      	sub	sp, #232	; 0xe8
 800278e:	af06      	add	r7, sp, #24
 8002790:	6078      	str	r0, [r7, #4]
    bool change = 0;
 8002792:	2300      	movs	r3, #0
 8002794:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
    double distance = 0;
 8002798:	f04f 0200 	mov.w	r2, #0
 800279c:	f04f 0300 	mov.w	r3, #0
 80027a0:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
    for (int i = 0; i < device->count; i++) {
 80027a4:	2300      	movs	r3, #0
 80027a6:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80027aa:	e0fd      	b.n	80029a8 <checkCircles+0x220>

        distance = haversine((device->position[0]), (device->position[1]),
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4618      	mov	r0, r3
 80027b2:	f7fd fee1 	bl	8000578 <__aeabi_f2d>
 80027b6:	4604      	mov	r4, r0
 80027b8:	460d      	mov	r5, r1
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	685b      	ldr	r3, [r3, #4]
 80027be:	4618      	mov	r0, r3
 80027c0:	f7fd feda 	bl	8000578 <__aeabi_f2d>
 80027c4:	4680      	mov	r8, r0
 80027c6:	4689      	mov	r9, r1
            (device->subscribers[i].circle[0]), (device->subscribers[i].circle[1]) );
 80027c8:	6879      	ldr	r1, [r7, #4]
 80027ca:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80027ce:	4613      	mov	r3, r2
 80027d0:	00db      	lsls	r3, r3, #3
 80027d2:	4413      	add	r3, r2
 80027d4:	009b      	lsls	r3, r3, #2
 80027d6:	440b      	add	r3, r1
 80027d8:	332c      	adds	r3, #44	; 0x2c
 80027da:	681b      	ldr	r3, [r3, #0]
        distance = haversine((device->position[0]), (device->position[1]),
 80027dc:	4618      	mov	r0, r3
 80027de:	f7fd fecb 	bl	8000578 <__aeabi_f2d>
 80027e2:	4682      	mov	sl, r0
 80027e4:	468b      	mov	fp, r1
            (device->subscribers[i].circle[0]), (device->subscribers[i].circle[1]) );
 80027e6:	6879      	ldr	r1, [r7, #4]
 80027e8:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80027ec:	4613      	mov	r3, r2
 80027ee:	00db      	lsls	r3, r3, #3
 80027f0:	4413      	add	r3, r2
 80027f2:	009b      	lsls	r3, r3, #2
 80027f4:	440b      	add	r3, r1
 80027f6:	3330      	adds	r3, #48	; 0x30
 80027f8:	681b      	ldr	r3, [r3, #0]
        distance = haversine((device->position[0]), (device->position[1]),
 80027fa:	4618      	mov	r0, r3
 80027fc:	f7fd febc 	bl	8000578 <__aeabi_f2d>
 8002800:	4602      	mov	r2, r0
 8002802:	460b      	mov	r3, r1
 8002804:	ec43 2b13 	vmov	d3, r2, r3
 8002808:	ec4b ab12 	vmov	d2, sl, fp
 800280c:	ec49 8b11 	vmov	d1, r8, r9
 8002810:	ec45 4b10 	vmov	d0, r4, r5
 8002814:	f7ff fe74 	bl	8002500 <haversine>
 8002818:	ed87 0b30 	vstr	d0, [r7, #192]	; 0xc0
        //printf("dist: %f m subscriber: [%d]\n", distance , i);

        if (distance > device->subscribers[i].circle[2] && !device->subscribers[i].state) {
 800281c:	6879      	ldr	r1, [r7, #4]
 800281e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002822:	4613      	mov	r3, r2
 8002824:	00db      	lsls	r3, r3, #3
 8002826:	4413      	add	r3, r2
 8002828:	009b      	lsls	r3, r3, #2
 800282a:	440b      	add	r3, r1
 800282c:	3334      	adds	r3, #52	; 0x34
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	4618      	mov	r0, r3
 8002832:	f7fd fea1 	bl	8000578 <__aeabi_f2d>
 8002836:	4602      	mov	r2, r0
 8002838:	460b      	mov	r3, r1
 800283a:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800283e:	f7fe f983 	bl	8000b48 <__aeabi_dcmpgt>
 8002842:	4603      	mov	r3, r0
 8002844:	2b00      	cmp	r3, #0
 8002846:	d07a      	beq.n	800293e <checkCircles+0x1b6>
 8002848:	6879      	ldr	r1, [r7, #4]
 800284a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800284e:	4613      	mov	r3, r2
 8002850:	00db      	lsls	r3, r3, #3
 8002852:	4413      	add	r3, r2
 8002854:	009b      	lsls	r3, r3, #2
 8002856:	440b      	add	r3, r1
 8002858:	3328      	adds	r3, #40	; 0x28
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	2b00      	cmp	r3, #0
 800285e:	d16e      	bne.n	800293e <checkCircles+0x1b6>

            char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002860:	2300      	movs	r3, #0
 8002862:	60bb      	str	r3, [r7, #8]
 8002864:	f107 030c 	add.w	r3, r7, #12
 8002868:	229c      	movs	r2, #156	; 0x9c
 800286a:	2100      	movs	r1, #0
 800286c:	4618      	mov	r0, r3
 800286e:	f006 fa47 	bl	8008d00 <memset>
            char time[FORMATTED_TIME_LEN + 1] = { 0 };
 8002872:	2300      	movs	r3, #0
 8002874:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8002878:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800287c:	2200      	movs	r2, #0
 800287e:	601a      	str	r2, [r3, #0]
 8002880:	605a      	str	r2, [r3, #4]
 8002882:	609a      	str	r2, [r3, #8]
 8002884:	60da      	str	r2, [r3, #12]
 8002886:	741a      	strb	r2, [r3, #16]
            unixTimeToString(time, &(device->unixTime) );
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	f103 0208 	add.w	r2, r3, #8
 800288e:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002892:	4611      	mov	r1, r2
 8002894:	4618      	mov	r0, r3
 8002896:	f7ff fc99 	bl	80021cc <unixTimeToString>
            sprintf(response, "Zone exceeded by %.1fm\r\nPosition:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\n", distance - device->subscribers[i].circle[2],
 800289a:	6879      	ldr	r1, [r7, #4]
 800289c:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80028a0:	4613      	mov	r3, r2
 80028a2:	00db      	lsls	r3, r3, #3
 80028a4:	4413      	add	r3, r2
 80028a6:	009b      	lsls	r3, r3, #2
 80028a8:	440b      	add	r3, r1
 80028aa:	3334      	adds	r3, #52	; 0x34
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	4618      	mov	r0, r3
 80028b0:	f7fd fe62 	bl	8000578 <__aeabi_f2d>
 80028b4:	4602      	mov	r2, r0
 80028b6:	460b      	mov	r3, r1
 80028b8:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 80028bc:	f7fd fcfc 	bl	80002b8 <__aeabi_dsub>
 80028c0:	4602      	mov	r2, r0
 80028c2:	460b      	mov	r3, r1
 80028c4:	4690      	mov	r8, r2
 80028c6:	4699      	mov	r9, r3
                device->position[0], device->position[1], time);
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	681b      	ldr	r3, [r3, #0]
            sprintf(response, "Zone exceeded by %.1fm\r\nPosition:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\n", distance - device->subscribers[i].circle[2],
 80028cc:	4618      	mov	r0, r3
 80028ce:	f7fd fe53 	bl	8000578 <__aeabi_f2d>
 80028d2:	4604      	mov	r4, r0
 80028d4:	460d      	mov	r5, r1
                device->position[0], device->position[1], time);
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	685b      	ldr	r3, [r3, #4]
            sprintf(response, "Zone exceeded by %.1fm\r\nPosition:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\n", distance - device->subscribers[i].circle[2],
 80028da:	4618      	mov	r0, r3
 80028dc:	f7fd fe4c 	bl	8000578 <__aeabi_f2d>
 80028e0:	4602      	mov	r2, r0
 80028e2:	460b      	mov	r3, r1
 80028e4:	f107 0008 	add.w	r0, r7, #8
 80028e8:	f107 01a8 	add.w	r1, r7, #168	; 0xa8
 80028ec:	9104      	str	r1, [sp, #16]
 80028ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80028f2:	e9cd 4500 	strd	r4, r5, [sp]
 80028f6:	4642      	mov	r2, r8
 80028f8:	464b      	mov	r3, r9
 80028fa:	4933      	ldr	r1, [pc, #204]	; (80029c8 <checkCircles+0x240>)
 80028fc:	f007 fc1e 	bl	800a13c <siprintf>

            //printf("Response:\r\n%s", response);
            storeSms(device->subscribers[i].address, response);
 8002900:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002904:	4613      	mov	r3, r2
 8002906:	00db      	lsls	r3, r3, #3
 8002908:	4413      	add	r3, r2
 800290a:	009b      	lsls	r3, r3, #2
 800290c:	3310      	adds	r3, #16
 800290e:	687a      	ldr	r2, [r7, #4]
 8002910:	4413      	add	r3, r2
 8002912:	3304      	adds	r3, #4
 8002914:	f107 0208 	add.w	r2, r7, #8
 8002918:	4611      	mov	r1, r2
 800291a:	4618      	mov	r0, r3
 800291c:	f7fe fe16 	bl	800154c <storeSms>

            device->subscribers[i].state = 1;    //setState and send notification
 8002920:	6879      	ldr	r1, [r7, #4]
 8002922:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002926:	4613      	mov	r3, r2
 8002928:	00db      	lsls	r3, r3, #3
 800292a:	4413      	add	r3, r2
 800292c:	009b      	lsls	r3, r3, #2
 800292e:	440b      	add	r3, r1
 8002930:	3328      	adds	r3, #40	; 0x28
 8002932:	2201      	movs	r2, #1
 8002934:	601a      	str	r2, [r3, #0]
            change = 1;
 8002936:	2301      	movs	r3, #1
 8002938:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
        if (distance > device->subscribers[i].circle[2] && !device->subscribers[i].state) {
 800293c:	e02f      	b.n	800299e <checkCircles+0x216>
        }
        else if (distance < device->subscribers[i].circle[2] && device->subscribers[i].state) {
 800293e:	6879      	ldr	r1, [r7, #4]
 8002940:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002944:	4613      	mov	r3, r2
 8002946:	00db      	lsls	r3, r3, #3
 8002948:	4413      	add	r3, r2
 800294a:	009b      	lsls	r3, r3, #2
 800294c:	440b      	add	r3, r1
 800294e:	3334      	adds	r3, #52	; 0x34
 8002950:	681b      	ldr	r3, [r3, #0]
 8002952:	4618      	mov	r0, r3
 8002954:	f7fd fe10 	bl	8000578 <__aeabi_f2d>
 8002958:	4602      	mov	r2, r0
 800295a:	460b      	mov	r3, r1
 800295c:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 8002960:	f7fe f8d4 	bl	8000b0c <__aeabi_dcmplt>
 8002964:	4603      	mov	r3, r0
 8002966:	2b00      	cmp	r3, #0
 8002968:	d019      	beq.n	800299e <checkCircles+0x216>
 800296a:	6879      	ldr	r1, [r7, #4]
 800296c:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002970:	4613      	mov	r3, r2
 8002972:	00db      	lsls	r3, r3, #3
 8002974:	4413      	add	r3, r2
 8002976:	009b      	lsls	r3, r3, #2
 8002978:	440b      	add	r3, r1
 800297a:	3328      	adds	r3, #40	; 0x28
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	2b00      	cmp	r3, #0
 8002980:	d00d      	beq.n	800299e <checkCircles+0x216>
            device->subscribers[i].state = 0; //Reset state
 8002982:	6879      	ldr	r1, [r7, #4]
 8002984:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002988:	4613      	mov	r3, r2
 800298a:	00db      	lsls	r3, r3, #3
 800298c:	4413      	add	r3, r2
 800298e:	009b      	lsls	r3, r3, #2
 8002990:	440b      	add	r3, r1
 8002992:	3328      	adds	r3, #40	; 0x28
 8002994:	2200      	movs	r2, #0
 8002996:	601a      	str	r2, [r3, #0]
            change = 1;
 8002998:	2301      	movs	r3, #1
 800299a:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
    for (int i = 0; i < device->count; i++) {
 800299e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80029a2:	3301      	adds	r3, #1
 80029a4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 80029ae:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80029b2:	429a      	cmp	r2, r3
 80029b4:	f6ff aefa 	blt.w	80027ac <checkCircles+0x24>
        }
    }
    return change; //return change 0 if state did not change and 1 if any state changed
 80029b8:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
}
 80029bc:	4618      	mov	r0, r3
 80029be:	37d0      	adds	r7, #208	; 0xd0
 80029c0:	46bd      	mov	sp, r7
 80029c2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80029c6:	bf00      	nop
 80029c8:	0800f8c8 	.word	0x0800f8c8

080029cc <handleNotifications>:

void handleNotifications(struct Device* device) {
 80029cc:	b580      	push	{r7, lr}
 80029ce:	b084      	sub	sp, #16
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	6078      	str	r0, [r7, #4]

    struct Device* deviceCopy = copyDevice(device); //deepCopy as temporary device struct
 80029d4:	6878      	ldr	r0, [r7, #4]
 80029d6:	f7ff f8e3 	bl	8001ba0 <copyDevice>
 80029da:	60f8      	str	r0, [r7, #12]

    if (checkCircles(deviceCopy)) {
 80029dc:	68f8      	ldr	r0, [r7, #12]
 80029de:	f7ff fed3 	bl	8002788 <checkCircles>
 80029e2:	4603      	mov	r3, r0
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d013      	beq.n	8002a10 <handleNotifications+0x44>
        if (handleWriteFile(deviceCopy)) {
 80029e8:	68f8      	ldr	r0, [r7, #12]
 80029ea:	f7ff fa80 	bl	8001eee <handleWriteFile>
 80029ee:	4603      	mov	r3, r0
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d009      	beq.n	8002a08 <handleNotifications+0x3c>
            memcpy(device, deviceCopy, sizeof(struct Device));
 80029f4:	f44f 72cc 	mov.w	r2, #408	; 0x198
 80029f8:	68f9      	ldr	r1, [r7, #12]
 80029fa:	6878      	ldr	r0, [r7, #4]
 80029fc:	f006 f972 	bl	8008ce4 <memcpy>
            free(deviceCopy); // Deallocate
 8002a00:	68f8      	ldr	r0, [r7, #12]
 8002a02:	f006 f967 	bl	8008cd4 <free>
        else
            free(deviceCopy); // Deallocate
    }
    else
        free(deviceCopy); // Deallocate
}
 8002a06:	e006      	b.n	8002a16 <handleNotifications+0x4a>
            free(deviceCopy); // Deallocate
 8002a08:	68f8      	ldr	r0, [r7, #12]
 8002a0a:	f006 f963 	bl	8008cd4 <free>
}
 8002a0e:	e002      	b.n	8002a16 <handleNotifications+0x4a>
        free(deviceCopy); // Deallocate
 8002a10:	68f8      	ldr	r0, [r7, #12]
 8002a12:	f006 f95f 	bl	8008cd4 <free>
}
 8002a16:	bf00      	nop
 8002a18:	3710      	adds	r7, #16
 8002a1a:	46bd      	mov	sp, r7
 8002a1c:	bd80      	pop	{r7, pc}

08002a1e <validNum>:

bool validNum(float number, float min, float max) {
 8002a1e:	b480      	push	{r7}
 8002a20:	b085      	sub	sp, #20
 8002a22:	af00      	add	r7, sp, #0
 8002a24:	ed87 0a03 	vstr	s0, [r7, #12]
 8002a28:	edc7 0a02 	vstr	s1, [r7, #8]
 8002a2c:	ed87 1a01 	vstr	s2, [r7, #4]
    if ((number >= min) && (number <= max))  //if ((min ? number >= min : true) && max ? (number <= max) : true)
 8002a30:	ed97 7a03 	vldr	s14, [r7, #12]
 8002a34:	edd7 7a02 	vldr	s15, [r7, #8]
 8002a38:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002a3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a40:	db0a      	blt.n	8002a58 <validNum+0x3a>
 8002a42:	ed97 7a03 	vldr	s14, [r7, #12]
 8002a46:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a4a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002a4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a52:	d801      	bhi.n	8002a58 <validNum+0x3a>
        return 1;
 8002a54:	2301      	movs	r3, #1
 8002a56:	e000      	b.n	8002a5a <validNum+0x3c>
    else
        return 0;
 8002a58:	2300      	movs	r3, #0
}
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	3714      	adds	r7, #20
 8002a5e:	46bd      	mov	sp, r7
 8002a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a64:	4770      	bx	lr
	...

08002a68 <appResponse>:

bool appResponse(struct Device* device, const char* address, const char* requestId, const int responseCode) {
 8002a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a6a:	b0c1      	sub	sp, #260	; 0x104
 8002a6c:	af08      	add	r7, sp, #32
 8002a6e:	6178      	str	r0, [r7, #20]
 8002a70:	6139      	str	r1, [r7, #16]
 8002a72:	60fa      	str	r2, [r7, #12]
 8002a74:	60bb      	str	r3, [r7, #8]

    char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002a76:	2300      	movs	r3, #0
 8002a78:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002a7a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8002a7e:	229c      	movs	r2, #156	; 0x9c
 8002a80:	2100      	movs	r1, #0
 8002a82:	4618      	mov	r0, r3
 8002a84:	f006 f93c 	bl	8008d00 <memset>
    char circle[MAX_CIRCLE_LEN + 1] = { 0 };
 8002a88:	2300      	movs	r3, #0
 8002a8a:	61fb      	str	r3, [r7, #28]
 8002a8c:	f107 0320 	add.w	r3, r7, #32
 8002a90:	2200      	movs	r2, #0
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	605a      	str	r2, [r3, #4]
 8002a96:	609a      	str	r2, [r3, #8]
 8002a98:	60da      	str	r2, [r3, #12]
 8002a9a:	611a      	str	r2, [r3, #16]
 8002a9c:	615a      	str	r2, [r3, #20]
 8002a9e:	831a      	strh	r2, [r3, #24]
    bool hasCircle = circleToString(circle, (device->subscribers), &(device->count), address);
 8002aa0:	697b      	ldr	r3, [r7, #20]
 8002aa2:	f103 0114 	add.w	r1, r3, #20
 8002aa6:	697b      	ldr	r3, [r7, #20]
 8002aa8:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 8002aac:	f107 001c 	add.w	r0, r7, #28
 8002ab0:	693b      	ldr	r3, [r7, #16]
 8002ab2:	f7ff fe09 	bl	80026c8 <circleToString>
 8002ab6:	4603      	mov	r3, r0
 8002ab8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf

    if ( responseCode>=0 && responseCode<10 ) {
 8002abc:	68bb      	ldr	r3, [r7, #8]
 8002abe:	2b00      	cmp	r3, #0
 8002ac0:	db2f      	blt.n	8002b22 <appResponse+0xba>
 8002ac2:	68bb      	ldr	r3, [r7, #8]
 8002ac4:	2b09      	cmp	r3, #9
 8002ac6:	dc2c      	bgt.n	8002b22 <appResponse+0xba>
    	sprintf(response, "resp=%s,%d,%.6f,%.6f,%d,%s,%d", requestId, responseCode, device->position[0], device->position[1],
 8002ac8:	697b      	ldr	r3, [r7, #20]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	4618      	mov	r0, r3
 8002ace:	f7fd fd53 	bl	8000578 <__aeabi_f2d>
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	460d      	mov	r5, r1
 8002ad6:	697b      	ldr	r3, [r7, #20]
 8002ad8:	685b      	ldr	r3, [r3, #4]
 8002ada:	4618      	mov	r0, r3
 8002adc:	f7fd fd4c 	bl	8000578 <__aeabi_f2d>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	460b      	mov	r3, r1
    		(int)(device->unixTime), hasCircle ? circle : "52,19,0", device->interval);
 8002ae4:	6979      	ldr	r1, [r7, #20]
 8002ae6:	e9d1 0102 	ldrd	r0, r1, [r1, #8]
    	sprintf(response, "resp=%s,%d,%.6f,%.6f,%d,%s,%d", requestId, responseCode, device->position[0], device->position[1],
 8002aea:	6078      	str	r0, [r7, #4]
 8002aec:	f897 10df 	ldrb.w	r1, [r7, #223]	; 0xdf
 8002af0:	2900      	cmp	r1, #0
 8002af2:	d002      	beq.n	8002afa <appResponse+0x92>
 8002af4:	f107 011c 	add.w	r1, r7, #28
 8002af8:	e000      	b.n	8002afc <appResponse+0x94>
 8002afa:	4913      	ldr	r1, [pc, #76]	; (8002b48 <appResponse+0xe0>)
 8002afc:	6978      	ldr	r0, [r7, #20]
 8002afe:	6900      	ldr	r0, [r0, #16]
 8002b00:	f107 063c 	add.w	r6, r7, #60	; 0x3c
 8002b04:	9006      	str	r0, [sp, #24]
 8002b06:	9105      	str	r1, [sp, #20]
 8002b08:	6879      	ldr	r1, [r7, #4]
 8002b0a:	9104      	str	r1, [sp, #16]
 8002b0c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b10:	e9cd 4500 	strd	r4, r5, [sp]
 8002b14:	68bb      	ldr	r3, [r7, #8]
 8002b16:	68fa      	ldr	r2, [r7, #12]
 8002b18:	490c      	ldr	r1, [pc, #48]	; (8002b4c <appResponse+0xe4>)
 8002b1a:	4630      	mov	r0, r6
 8002b1c:	f007 fb0e 	bl	800a13c <siprintf>
 8002b20:	e006      	b.n	8002b30 <appResponse+0xc8>
    } else {
	sprintf(response, "resp=%s,%d", requestId, responseCode);
 8002b22:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 8002b26:	68bb      	ldr	r3, [r7, #8]
 8002b28:	68fa      	ldr	r2, [r7, #12]
 8002b2a:	4909      	ldr	r1, [pc, #36]	; (8002b50 <appResponse+0xe8>)
 8002b2c:	f007 fb06 	bl	800a13c <siprintf>
    }
	//printf("Response:\r\n%s", response);
	storeSms(address, response);
 8002b30:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8002b34:	4619      	mov	r1, r3
 8002b36:	6938      	ldr	r0, [r7, #16]
 8002b38:	f7fe fd08 	bl	800154c <storeSms>

	return 1;
 8002b3c:	2301      	movs	r3, #1
}
 8002b3e:	4618      	mov	r0, r3
 8002b40:	37e4      	adds	r7, #228	; 0xe4
 8002b42:	46bd      	mov	sp, r7
 8002b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b46:	bf00      	nop
 8002b48:	0800f904 	.word	0x0800f904
 8002b4c:	0800f90c 	.word	0x0800f90c
 8002b50:	0800f92c 	.word	0x0800f92c

08002b54 <processMessageByCommand>:

bool processMessageByCommand(const char* message, const char* address, struct Device* device, const char* command) {
 8002b54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b58:	b0e3      	sub	sp, #396	; 0x18c
 8002b5a:	af06      	add	r7, sp, #24
 8002b5c:	f507 74b8 	add.w	r4, r7, #368	; 0x170
 8002b60:	f5a4 74b2 	sub.w	r4, r4, #356	; 0x164
 8002b64:	6020      	str	r0, [r4, #0]
 8002b66:	f507 70b8 	add.w	r0, r7, #368	; 0x170
 8002b6a:	f5a0 70b4 	sub.w	r0, r0, #360	; 0x168
 8002b6e:	6001      	str	r1, [r0, #0]
 8002b70:	f507 71b8 	add.w	r1, r7, #368	; 0x170
 8002b74:	f5a1 71b6 	sub.w	r1, r1, #364	; 0x16c
 8002b78:	600a      	str	r2, [r1, #0]
 8002b7a:	f507 72b8 	add.w	r2, r7, #368	; 0x170
 8002b7e:	f5a2 72b8 	sub.w	r2, r2, #368	; 0x170
 8002b82:	6013      	str	r3, [r2, #0]
    switch (*command) {
 8002b84:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002b88:	f5a3 73b8 	sub.w	r3, r3, #368	; 0x170
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	781b      	ldrb	r3, [r3, #0]
 8002b90:	2b70      	cmp	r3, #112	; 0x70
 8002b92:	f000 8112 	beq.w	8002dba <processMessageByCommand+0x266>
 8002b96:	2b70      	cmp	r3, #112	; 0x70
 8002b98:	f300 8337 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002b9c:	2b64      	cmp	r3, #100	; 0x64
 8002b9e:	f000 8196 	beq.w	8002ece <processMessageByCommand+0x37a>
 8002ba2:	2b64      	cmp	r3, #100	; 0x64
 8002ba4:	f300 8331 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002ba8:	2b61      	cmp	r3, #97	; 0x61
 8002baa:	d00f      	beq.n	8002bcc <processMessageByCommand+0x78>
 8002bac:	2b61      	cmp	r3, #97	; 0x61
 8002bae:	f300 832c 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002bb2:	2b32      	cmp	r3, #50	; 0x32
 8002bb4:	f000 820d 	beq.w	8002fd2 <processMessageByCommand+0x47e>
 8002bb8:	2b32      	cmp	r3, #50	; 0x32
 8002bba:	f300 8326 	bgt.w	800320a <processMessageByCommand+0x6b6>
 8002bbe:	2b30      	cmp	r3, #48	; 0x30
 8002bc0:	f000 81d6 	beq.w	8002f70 <processMessageByCommand+0x41c>
 8002bc4:	2b31      	cmp	r3, #49	; 0x31
 8002bc6:	f000 824d 	beq.w	8003064 <processMessageByCommand+0x510>
 8002bca:	e31e      	b.n	800320a <processMessageByCommand+0x6b6>
    case 'a': //Subscribe -> setCircle / editCircle
    {
        float circle[3] = { 0,0,0 }; //parameters included in  sms message [rad/interval,lat,lng]
 8002bcc:	f04f 0300 	mov.w	r3, #0
 8002bd0:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
 8002bd4:	f04f 0300 	mov.w	r3, #0
 8002bd8:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8002bdc:	f04f 0300 	mov.w	r3, #0
 8002be0:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154

        if (sscanf(message, "%f,%f,%f", &circle[0], &circle[1], &circle[2]) != 3) {
 8002be4:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 8002be8:	1d19      	adds	r1, r3, #4
 8002bea:	f507 72a6 	add.w	r2, r7, #332	; 0x14c
 8002bee:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002bf2:	f5a3 70b2 	sub.w	r0, r3, #356	; 0x164
 8002bf6:	f507 73a6 	add.w	r3, r7, #332	; 0x14c
 8002bfa:	3308      	adds	r3, #8
 8002bfc:	9300      	str	r3, [sp, #0]
 8002bfe:	460b      	mov	r3, r1
 8002c00:	49c6      	ldr	r1, [pc, #792]	; (8002f1c <processMessageByCommand+0x3c8>)
 8002c02:	6800      	ldr	r0, [r0, #0]
 8002c04:	f007 faba 	bl	800a17c <siscanf>
 8002c08:	4603      	mov	r3, r0
 8002c0a:	2b03      	cmp	r3, #3
 8002c0c:	d001      	beq.n	8002c12 <processMessageByCommand+0xbe>
            return 0;
 8002c0e:	2300      	movs	r3, #0
 8002c10:	e2fc      	b.n	800320c <processMessageByCommand+0x6b8>
        }

        if (!(validNum(circle[0], LATITUDE_MIN, LATITUDE_MAX) && validNum(circle[1], LONGITUDE_MIN, LONGITUDE_MAX) && validNum(circle[2], RADIUS_MIN, RADIUS_MAX)))
 8002c12:	edd7 7a53 	vldr	s15, [r7, #332]	; 0x14c
 8002c16:	ed9f 1ac2 	vldr	s2, [pc, #776]	; 8002f20 <processMessageByCommand+0x3cc>
 8002c1a:	eddf 0ac2 	vldr	s1, [pc, #776]	; 8002f24 <processMessageByCommand+0x3d0>
 8002c1e:	eeb0 0a67 	vmov.f32	s0, s15
 8002c22:	f7ff fefc 	bl	8002a1e <validNum>
 8002c26:	4603      	mov	r3, r0
 8002c28:	f083 0301 	eor.w	r3, r3, #1
 8002c2c:	b2db      	uxtb	r3, r3
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d11f      	bne.n	8002c72 <processMessageByCommand+0x11e>
 8002c32:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 8002c36:	ed9f 1abc 	vldr	s2, [pc, #752]	; 8002f28 <processMessageByCommand+0x3d4>
 8002c3a:	eddf 0abc 	vldr	s1, [pc, #752]	; 8002f2c <processMessageByCommand+0x3d8>
 8002c3e:	eeb0 0a67 	vmov.f32	s0, s15
 8002c42:	f7ff feec 	bl	8002a1e <validNum>
 8002c46:	4603      	mov	r3, r0
 8002c48:	f083 0301 	eor.w	r3, r3, #1
 8002c4c:	b2db      	uxtb	r3, r3
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d10f      	bne.n	8002c72 <processMessageByCommand+0x11e>
 8002c52:	edd7 7a55 	vldr	s15, [r7, #340]	; 0x154
 8002c56:	ed9f 1ab6 	vldr	s2, [pc, #728]	; 8002f30 <processMessageByCommand+0x3dc>
 8002c5a:	eddf 0ab6 	vldr	s1, [pc, #728]	; 8002f34 <processMessageByCommand+0x3e0>
 8002c5e:	eeb0 0a67 	vmov.f32	s0, s15
 8002c62:	f7ff fedc 	bl	8002a1e <validNum>
 8002c66:	4603      	mov	r3, r0
 8002c68:	f083 0301 	eor.w	r3, r3, #1
 8002c6c:	b2db      	uxtb	r3, r3
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d001      	beq.n	8002c76 <processMessageByCommand+0x122>
            return 0;
 8002c72:	2300      	movs	r3, #0
 8002c74:	e2ca      	b.n	800320c <processMessageByCommand+0x6b8>

        struct Subscriber newSubscriber = { "", 0, { circle[0], circle[1], circle[2] } }; //Create element based on message
 8002c76:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002c7a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002c7e:	2200      	movs	r2, #0
 8002c80:	601a      	str	r2, [r3, #0]
 8002c82:	3304      	adds	r3, #4
 8002c84:	2200      	movs	r2, #0
 8002c86:	601a      	str	r2, [r3, #0]
 8002c88:	605a      	str	r2, [r3, #4]
 8002c8a:	609a      	str	r2, [r3, #8]
 8002c8c:	731a      	strb	r2, [r3, #12]
 8002c8e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002c92:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002c96:	2200      	movs	r2, #0
 8002c98:	615a      	str	r2, [r3, #20]
 8002c9a:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 8002c9e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ca2:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002ca6:	619a      	str	r2, [r3, #24]
 8002ca8:	f8d7 2150 	ldr.w	r2, [r7, #336]	; 0x150
 8002cac:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cb0:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002cb4:	61da      	str	r2, [r3, #28]
 8002cb6:	f8d7 2154 	ldr.w	r2, [r7, #340]	; 0x154
 8002cba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cbe:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002cc2:	621a      	str	r2, [r3, #32]
        strncpy(newSubscriber.address, address, strlen(address)); //Fill element based on message
 8002cc4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cc8:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002ccc:	6818      	ldr	r0, [r3, #0]
 8002cce:	f7fd fa91 	bl	80001f4 <strlen>
 8002cd2:	4602      	mov	r2, r0
 8002cd4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cd8:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002cdc:	f107 0014 	add.w	r0, r7, #20
 8002ce0:	6819      	ldr	r1, [r3, #0]
 8002ce2:	f008 f821 	bl	800ad28 <strncpy>
        bool success = subscribe(device, &newSubscriber);
 8002ce6:	f107 0214 	add.w	r2, r7, #20
 8002cea:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002cee:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002cf2:	4611      	mov	r1, r2
 8002cf4:	6818      	ldr	r0, [r3, #0]
 8002cf6:	f7ff f956 	bl	8001fa6 <subscribe>
 8002cfa:	4603      	mov	r3, r0
 8002cfc:	f887 316d 	strb.w	r3, [r7, #365]	; 0x16d


		char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002d00:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002d04:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8002d08:	2200      	movs	r2, #0
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	3304      	adds	r3, #4
 8002d0e:	229c      	movs	r2, #156	; 0x9c
 8002d10:	2100      	movs	r1, #0
 8002d12:	4618      	mov	r0, r3
 8002d14:	f005 fff4 	bl	8008d00 <memset>
        if (success) {
 8002d18:	f897 316d 	ldrb.w	r3, [r7, #365]	; 0x16d
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d020      	beq.n	8002d62 <processMessageByCommand+0x20e>
            sprintf(response, "Subscribed:\r\n%.6f,%.6f,%.0f", circle[0], circle[1], circle[2]);
 8002d20:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8002d24:	4618      	mov	r0, r3
 8002d26:	f7fd fc27 	bl	8000578 <__aeabi_f2d>
 8002d2a:	4680      	mov	r8, r0
 8002d2c:	4689      	mov	r9, r1
 8002d2e:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 8002d32:	4618      	mov	r0, r3
 8002d34:	f7fd fc20 	bl	8000578 <__aeabi_f2d>
 8002d38:	4604      	mov	r4, r0
 8002d3a:	460d      	mov	r5, r1
 8002d3c:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8002d40:	4618      	mov	r0, r3
 8002d42:	f7fd fc19 	bl	8000578 <__aeabi_f2d>
 8002d46:	4602      	mov	r2, r0
 8002d48:	460b      	mov	r3, r1
 8002d4a:	f107 0038 	add.w	r0, r7, #56	; 0x38
 8002d4e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d52:	e9cd 4500 	strd	r4, r5, [sp]
 8002d56:	4642      	mov	r2, r8
 8002d58:	464b      	mov	r3, r9
 8002d5a:	4977      	ldr	r1, [pc, #476]	; (8002f38 <processMessageByCommand+0x3e4>)
 8002d5c:	f007 f9ee 	bl	800a13c <siprintf>
 8002d60:	e01f      	b.n	8002da2 <processMessageByCommand+0x24e>
        }
        else {
            sprintf(response, "Subscription failed:\r\n%.6f,%.6f,%.0f", circle[0], circle[1], circle[2]);
 8002d62:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8002d66:	4618      	mov	r0, r3
 8002d68:	f7fd fc06 	bl	8000578 <__aeabi_f2d>
 8002d6c:	4680      	mov	r8, r0
 8002d6e:	4689      	mov	r9, r1
 8002d70:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 8002d74:	4618      	mov	r0, r3
 8002d76:	f7fd fbff 	bl	8000578 <__aeabi_f2d>
 8002d7a:	4604      	mov	r4, r0
 8002d7c:	460d      	mov	r5, r1
 8002d7e:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8002d82:	4618      	mov	r0, r3
 8002d84:	f7fd fbf8 	bl	8000578 <__aeabi_f2d>
 8002d88:	4602      	mov	r2, r0
 8002d8a:	460b      	mov	r3, r1
 8002d8c:	f107 0038 	add.w	r0, r7, #56	; 0x38
 8002d90:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d94:	e9cd 4500 	strd	r4, r5, [sp]
 8002d98:	4642      	mov	r2, r8
 8002d9a:	464b      	mov	r3, r9
 8002d9c:	4967      	ldr	r1, [pc, #412]	; (8002f3c <processMessageByCommand+0x3e8>)
 8002d9e:	f007 f9cd 	bl	800a13c <siprintf>
        }

        //printf("Response:\r\n%s", response);
        storeSms(address, response);
 8002da2:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002da6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002daa:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002dae:	4611      	mov	r1, r2
 8002db0:	6818      	ldr	r0, [r3, #0]
 8002db2:	f7fe fbcb 	bl	800154c <storeSms>

        return 1;
 8002db6:	2301      	movs	r3, #1
 8002db8:	e228      	b.n	800320c <processMessageByCommand+0x6b8>
    }
    case 'p': //getPosition sms
    {
        //resp=50.446896,18.838770,1678729041,50.446896,18.838770,50000
        char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002dba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002dbe:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8002dc2:	2200      	movs	r2, #0
 8002dc4:	601a      	str	r2, [r3, #0]
 8002dc6:	3304      	adds	r3, #4
 8002dc8:	229c      	movs	r2, #156	; 0x9c
 8002dca:	2100      	movs	r1, #0
 8002dcc:	4618      	mov	r0, r3
 8002dce:	f005 ff97 	bl	8008d00 <memset>
        char circle[MAX_CIRCLE_LEN + 1] = { 0 };
 8002dd2:	2300      	movs	r3, #0
 8002dd4:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8002dd8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8002ddc:	2200      	movs	r2, #0
 8002dde:	601a      	str	r2, [r3, #0]
 8002de0:	605a      	str	r2, [r3, #4]
 8002de2:	609a      	str	r2, [r3, #8]
 8002de4:	60da      	str	r2, [r3, #12]
 8002de6:	611a      	str	r2, [r3, #16]
 8002de8:	615a      	str	r2, [r3, #20]
 8002dea:	831a      	strh	r2, [r3, #24]
        bool hasCircle = circleToString(circle, (device->subscribers), &(device->count), address);
 8002dec:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002df0:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	f103 0114 	add.w	r1, r3, #20
 8002dfa:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002dfe:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	f503 72be 	add.w	r2, r3, #380	; 0x17c
 8002e08:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e0c:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002e10:	f507 7096 	add.w	r0, r7, #300	; 0x12c
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	f7ff fc57 	bl	80026c8 <circleToString>
 8002e1a:	4603      	mov	r3, r0
 8002e1c:	f887 316f 	strb.w	r3, [r7, #367]	; 0x16f
        char time[FORMATTED_TIME_LEN + 1] = { 0 };
 8002e20:	2300      	movs	r3, #0
 8002e22:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8002e26:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8002e2a:	2200      	movs	r2, #0
 8002e2c:	601a      	str	r2, [r3, #0]
 8002e2e:	605a      	str	r2, [r3, #4]
 8002e30:	609a      	str	r2, [r3, #8]
 8002e32:	60da      	str	r2, [r3, #12]
 8002e34:	741a      	strb	r2, [r3, #16]

        unixTimeToString(time, &(device->unixTime));
 8002e36:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e3a:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	f103 0208 	add.w	r2, r3, #8
 8002e44:	f507 738a 	add.w	r3, r7, #276	; 0x114
 8002e48:	4611      	mov	r1, r2
 8002e4a:	4618      	mov	r0, r3
 8002e4c:	f7ff f9be 	bl	80021cc <unixTimeToString>
        sprintf(response, "Position:\r\n%.6f,%.6f\r\nTime:\r\n%s\r\nZone:\r\n%s\r\nInterval:\r\n%d", device->position[0], device->position[1],
 8002e50:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e54:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	f7fd fb8b 	bl	8000578 <__aeabi_f2d>
 8002e62:	4604      	mov	r4, r0
 8002e64:	460d      	mov	r5, r1
 8002e66:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002e6a:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	685b      	ldr	r3, [r3, #4]
 8002e72:	4618      	mov	r0, r3
 8002e74:	f7fd fb80 	bl	8000578 <__aeabi_f2d>
 8002e78:	4602      	mov	r2, r0
 8002e7a:	460b      	mov	r3, r1
 8002e7c:	f897 116f 	ldrb.w	r1, [r7, #367]	; 0x16f
 8002e80:	2900      	cmp	r1, #0
 8002e82:	d002      	beq.n	8002e8a <processMessageByCommand+0x336>
 8002e84:	f507 7196 	add.w	r1, r7, #300	; 0x12c
 8002e88:	e000      	b.n	8002e8c <processMessageByCommand+0x338>
 8002e8a:	492d      	ldr	r1, [pc, #180]	; (8002f40 <processMessageByCommand+0x3ec>)
 8002e8c:	f507 70b8 	add.w	r0, r7, #368	; 0x170
 8002e90:	f5a0 70b6 	sub.w	r0, r0, #364	; 0x16c
 8002e94:	6800      	ldr	r0, [r0, #0]
 8002e96:	6900      	ldr	r0, [r0, #16]
 8002e98:	f107 0638 	add.w	r6, r7, #56	; 0x38
 8002e9c:	9004      	str	r0, [sp, #16]
 8002e9e:	9103      	str	r1, [sp, #12]
 8002ea0:	f507 718a 	add.w	r1, r7, #276	; 0x114
 8002ea4:	9102      	str	r1, [sp, #8]
 8002ea6:	e9cd 2300 	strd	r2, r3, [sp]
 8002eaa:	4622      	mov	r2, r4
 8002eac:	462b      	mov	r3, r5
 8002eae:	4925      	ldr	r1, [pc, #148]	; (8002f44 <processMessageByCommand+0x3f0>)
 8002eb0:	4630      	mov	r0, r6
 8002eb2:	f007 f943 	bl	800a13c <siprintf>
            time, hasCircle ? circle : "not subscribed", device->interval);

        //printf("Response:\r\n%s", response);
        storeSms(address, response);
 8002eb6:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002eba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ebe:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002ec2:	4611      	mov	r1, r2
 8002ec4:	6818      	ldr	r0, [r3, #0]
 8002ec6:	f7fe fb41 	bl	800154c <storeSms>

        return 1;
 8002eca:	2301      	movs	r3, #1
 8002ecc:	e19e      	b.n	800320c <processMessageByCommand+0x6b8>
    }
    case 'd': //Unsubscribe
    {
        bool success = unsubscribe(device, address);
 8002ece:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ed2:	f5a3 72b4 	sub.w	r2, r3, #360	; 0x168
 8002ed6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002eda:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8002ede:	6811      	ldr	r1, [r2, #0]
 8002ee0:	6818      	ldr	r0, [r3, #0]
 8002ee2:	f7ff f8ca 	bl	800207a <unsubscribe>
 8002ee6:	4603      	mov	r3, r0
 8002ee8:	f887 316e 	strb.w	r3, [r7, #366]	; 0x16e
        char response[MAX_SMS_SIZE] = { 0 }; //sms response
 8002eec:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ef0:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8002ef4:	2200      	movs	r2, #0
 8002ef6:	601a      	str	r2, [r3, #0]
 8002ef8:	3304      	adds	r3, #4
 8002efa:	229c      	movs	r2, #156	; 0x9c
 8002efc:	2100      	movs	r1, #0
 8002efe:	4618      	mov	r0, r3
 8002f00:	f005 fefe 	bl	8008d00 <memset>
        if (success) {
 8002f04:	f897 316e 	ldrb.w	r3, [r7, #366]	; 0x16e
 8002f08:	2b00      	cmp	r3, #0
 8002f0a:	d01f      	beq.n	8002f4c <processMessageByCommand+0x3f8>
            sprintf(response, "Unsubscribed");
 8002f0c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002f10:	490d      	ldr	r1, [pc, #52]	; (8002f48 <processMessageByCommand+0x3f4>)
 8002f12:	4618      	mov	r0, r3
 8002f14:	f007 f912 	bl	800a13c <siprintf>
 8002f18:	e01e      	b.n	8002f58 <processMessageByCommand+0x404>
 8002f1a:	bf00      	nop
 8002f1c:	0800f938 	.word	0x0800f938
 8002f20:	42b40000 	.word	0x42b40000
 8002f24:	c2b40000 	.word	0xc2b40000
 8002f28:	43340000 	.word	0x43340000
 8002f2c:	c3340000 	.word	0xc3340000
 8002f30:	4ac26d70 	.word	0x4ac26d70
 8002f34:	42480000 	.word	0x42480000
 8002f38:	0800f944 	.word	0x0800f944
 8002f3c:	0800f960 	.word	0x0800f960
 8002f40:	0800f988 	.word	0x0800f988
 8002f44:	0800f998 	.word	0x0800f998
 8002f48:	0800f9d4 	.word	0x0800f9d4
        }
        else {
            sprintf(response, "Unsubscription failed");
 8002f4c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002f50:	49b1      	ldr	r1, [pc, #708]	; (8003218 <processMessageByCommand+0x6c4>)
 8002f52:	4618      	mov	r0, r3
 8002f54:	f007 f8f2 	bl	800a13c <siprintf>
        }

        //printf("Response:\r\n%s", response);
        storeSms(address, response);
 8002f58:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002f5c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002f60:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8002f64:	4611      	mov	r1, r2
 8002f66:	6818      	ldr	r0, [r3, #0]
 8002f68:	f7fe faf0 	bl	800154c <storeSms>

        return 1;
 8002f6c:	2301      	movs	r3, #1
 8002f6e:	e14d      	b.n	800320c <processMessageByCommand+0x6b8>
    }

	case '0': //Position
    {
		char requestId[REQUEST_ID_LEN+1] = {0};
 8002f70:	2300      	movs	r3, #0
 8002f72:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8002f76:	f507 7384 	add.w	r3, r7, #264	; 0x108
 8002f7a:	2200      	movs	r2, #0
 8002f7c:	601a      	str	r2, [r3, #0]
 8002f7e:	605a      	str	r2, [r3, #4]
 8002f80:	f8c3 2007 	str.w	r2, [r3, #7]
		int responseCode = 0;
 8002f84:	2300      	movs	r3, #0
 8002f86:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158

		if (sscanf(message, "%14s", requestId) != 1)
 8002f8a:	f507 7282 	add.w	r2, r7, #260	; 0x104
 8002f8e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002f92:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 8002f96:	49a1      	ldr	r1, [pc, #644]	; (800321c <processMessageByCommand+0x6c8>)
 8002f98:	6818      	ldr	r0, [r3, #0]
 8002f9a:	f007 f8ef 	bl	800a17c <siscanf>
 8002f9e:	4603      	mov	r3, r0
 8002fa0:	2b01      	cmp	r3, #1
 8002fa2:	d001      	beq.n	8002fa8 <processMessageByCommand+0x454>
			return 0;
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	e131      	b.n	800320c <processMessageByCommand+0x6b8>

		responseCode = 1;
 8002fa8:	2301      	movs	r3, #1
 8002faa:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
		return appResponse(device,address,requestId,responseCode);
 8002fae:	f507 7282 	add.w	r2, r7, #260	; 0x104
 8002fb2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002fb6:	f5a3 71b4 	sub.w	r1, r3, #360	; 0x168
 8002fba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002fbe:	f5a3 70b6 	sub.w	r0, r3, #364	; 0x16c
 8002fc2:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002fc6:	6809      	ldr	r1, [r1, #0]
 8002fc8:	6800      	ldr	r0, [r0, #0]
 8002fca:	f7ff fd4d 	bl	8002a68 <appResponse>
 8002fce:	4603      	mov	r3, r0
 8002fd0:	e11c      	b.n	800320c <processMessageByCommand+0x6b8>
    }

		case '2': //Unsubscribe
    {
		char requestId[REQUEST_ID_LEN+1] = {0};
 8002fd2:	2300      	movs	r3, #0
 8002fd4:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8002fd8:	f107 03f8 	add.w	r3, r7, #248	; 0xf8
 8002fdc:	2200      	movs	r2, #0
 8002fde:	601a      	str	r2, [r3, #0]
 8002fe0:	605a      	str	r2, [r3, #4]
 8002fe2:	f8c3 2007 	str.w	r2, [r3, #7]
		int responseCode = 0;
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
		bool unsubscribeSuccess = 0;
 8002fec:	2300      	movs	r3, #0
 8002fee:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167

		if (sscanf(message, "%14s", requestId) != 1)
 8002ff2:	f107 02f4 	add.w	r2, r7, #244	; 0xf4
 8002ff6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8002ffa:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 8002ffe:	4987      	ldr	r1, [pc, #540]	; (800321c <processMessageByCommand+0x6c8>)
 8003000:	6818      	ldr	r0, [r3, #0]
 8003002:	f007 f8bb 	bl	800a17c <siscanf>
 8003006:	4603      	mov	r3, r0
 8003008:	2b01      	cmp	r3, #1
 800300a:	d001      	beq.n	8003010 <processMessageByCommand+0x4bc>
			return 0;
 800300c:	2300      	movs	r3, #0
 800300e:	e0fd      	b.n	800320c <processMessageByCommand+0x6b8>

		unsubscribeSuccess = unsubscribe(device, address);
 8003010:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003014:	f5a3 72b4 	sub.w	r2, r3, #360	; 0x168
 8003018:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800301c:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8003020:	6811      	ldr	r1, [r2, #0]
 8003022:	6818      	ldr	r0, [r3, #0]
 8003024:	f7ff f829 	bl	800207a <unsubscribe>
 8003028:	4603      	mov	r3, r0
 800302a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167

		responseCode = unsubscribeSuccess ? 21 : 20;
 800302e:	f897 3167 	ldrb.w	r3, [r7, #359]	; 0x167
 8003032:	2b00      	cmp	r3, #0
 8003034:	d001      	beq.n	800303a <processMessageByCommand+0x4e6>
 8003036:	2315      	movs	r3, #21
 8003038:	e000      	b.n	800303c <processMessageByCommand+0x4e8>
 800303a:	2314      	movs	r3, #20
 800303c:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
		return appResponse(device,address,requestId,responseCode);
 8003040:	f107 02f4 	add.w	r2, r7, #244	; 0xf4
 8003044:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003048:	f5a3 71b4 	sub.w	r1, r3, #360	; 0x168
 800304c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003050:	f5a3 70b6 	sub.w	r0, r3, #364	; 0x16c
 8003054:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
 8003058:	6809      	ldr	r1, [r1, #0]
 800305a:	6800      	ldr	r0, [r0, #0]
 800305c:	f7ff fd04 	bl	8002a68 <appResponse>
 8003060:	4603      	mov	r3, r0
 8003062:	e0d3      	b.n	800320c <processMessageByCommand+0x6b8>
    }

	case '1': //Subscribe
	{
		char requestId[REQUEST_ID_LEN+1] = {0};
 8003064:	2300      	movs	r3, #0
 8003066:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800306a:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 800306e:	2200      	movs	r2, #0
 8003070:	601a      	str	r2, [r3, #0]
 8003072:	605a      	str	r2, [r3, #4]
 8003074:	f8c3 2007 	str.w	r2, [r3, #7]
		int responseCode = 0;
 8003078:	2300      	movs	r3, #0
 800307a:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
        float circle[3] = { 0,0,0 };
 800307e:	f04f 0300 	mov.w	r3, #0
 8003082:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003086:	f04f 0300 	mov.w	r3, #0
 800308a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800308e:	f04f 0300 	mov.w	r3, #0
 8003092:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
		int subscribeSuccess = 0;
 8003096:	2300      	movs	r3, #0
 8003098:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c

		if (sscanf(message, "%14[^,],%f,%f,%f", requestId, &circle[0], &circle[1], &circle[2]) != 4)
 800309c:	f107 01d8 	add.w	r1, r7, #216	; 0xd8
 80030a0:	f107 02e4 	add.w	r2, r7, #228	; 0xe4
 80030a4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80030a8:	f5a3 70b2 	sub.w	r0, r3, #356	; 0x164
 80030ac:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 80030b0:	3308      	adds	r3, #8
 80030b2:	9301      	str	r3, [sp, #4]
 80030b4:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 80030b8:	3304      	adds	r3, #4
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	460b      	mov	r3, r1
 80030be:	4958      	ldr	r1, [pc, #352]	; (8003220 <processMessageByCommand+0x6cc>)
 80030c0:	6800      	ldr	r0, [r0, #0]
 80030c2:	f007 f85b 	bl	800a17c <siscanf>
 80030c6:	4603      	mov	r3, r0
 80030c8:	2b04      	cmp	r3, #4
 80030ca:	d001      	beq.n	80030d0 <processMessageByCommand+0x57c>
			return 0;
 80030cc:	2300      	movs	r3, #0
 80030ce:	e09d      	b.n	800320c <processMessageByCommand+0x6b8>
		if (!( validNum(circle[0], LATITUDE_MIN, LATITUDE_MAX) && validNum(circle[1], LONGITUDE_MIN, LONGITUDE_MAX) && validNum(circle[2], RADIUS_MIN, RADIUS_MAX)))
 80030d0:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 80030d4:	ed9f 1a53 	vldr	s2, [pc, #332]	; 8003224 <processMessageByCommand+0x6d0>
 80030d8:	eddf 0a53 	vldr	s1, [pc, #332]	; 8003228 <processMessageByCommand+0x6d4>
 80030dc:	eeb0 0a67 	vmov.f32	s0, s15
 80030e0:	f7ff fc9d 	bl	8002a1e <validNum>
 80030e4:	4603      	mov	r3, r0
 80030e6:	f083 0301 	eor.w	r3, r3, #1
 80030ea:	b2db      	uxtb	r3, r3
 80030ec:	2b00      	cmp	r3, #0
 80030ee:	d11f      	bne.n	8003130 <processMessageByCommand+0x5dc>
 80030f0:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 80030f4:	ed9f 1a4d 	vldr	s2, [pc, #308]	; 800322c <processMessageByCommand+0x6d8>
 80030f8:	eddf 0a4d 	vldr	s1, [pc, #308]	; 8003230 <processMessageByCommand+0x6dc>
 80030fc:	eeb0 0a67 	vmov.f32	s0, s15
 8003100:	f7ff fc8d 	bl	8002a1e <validNum>
 8003104:	4603      	mov	r3, r0
 8003106:	f083 0301 	eor.w	r3, r3, #1
 800310a:	b2db      	uxtb	r3, r3
 800310c:	2b00      	cmp	r3, #0
 800310e:	d10f      	bne.n	8003130 <processMessageByCommand+0x5dc>
 8003110:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 8003114:	ed9f 1a47 	vldr	s2, [pc, #284]	; 8003234 <processMessageByCommand+0x6e0>
 8003118:	eddf 0a47 	vldr	s1, [pc, #284]	; 8003238 <processMessageByCommand+0x6e4>
 800311c:	eeb0 0a67 	vmov.f32	s0, s15
 8003120:	f7ff fc7d 	bl	8002a1e <validNum>
 8003124:	4603      	mov	r3, r0
 8003126:	f083 0301 	eor.w	r3, r3, #1
 800312a:	b2db      	uxtb	r3, r3
 800312c:	2b00      	cmp	r3, #0
 800312e:	d001      	beq.n	8003134 <processMessageByCommand+0x5e0>
			return 0;
 8003130:	2300      	movs	r3, #0
 8003132:	e06b      	b.n	800320c <processMessageByCommand+0x6b8>

        struct Subscriber newSubscriber = { "", 0, { circle[0], circle[1], circle[2] } }; //Create element based on message
 8003134:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003138:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 800313c:	2200      	movs	r2, #0
 800313e:	601a      	str	r2, [r3, #0]
 8003140:	3304      	adds	r3, #4
 8003142:	2200      	movs	r2, #0
 8003144:	601a      	str	r2, [r3, #0]
 8003146:	605a      	str	r2, [r3, #4]
 8003148:	609a      	str	r2, [r3, #8]
 800314a:	731a      	strb	r2, [r3, #12]
 800314c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003150:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003154:	2200      	movs	r2, #0
 8003156:	615a      	str	r2, [r3, #20]
 8003158:	f8d7 20d8 	ldr.w	r2, [r7, #216]	; 0xd8
 800315c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003160:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003164:	619a      	str	r2, [r3, #24]
 8003166:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800316a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800316e:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003172:	61da      	str	r2, [r3, #28]
 8003174:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8003178:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800317c:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 8003180:	621a      	str	r2, [r3, #32]
        strncpy(newSubscriber.address, address, strlen(address)); //Fill element based on message
 8003182:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003186:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 800318a:	6818      	ldr	r0, [r3, #0]
 800318c:	f7fd f832 	bl	80001f4 <strlen>
 8003190:	4602      	mov	r2, r0
 8003192:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8003196:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 800319a:	f107 0038 	add.w	r0, r7, #56	; 0x38
 800319e:	6819      	ldr	r1, [r3, #0]
 80031a0:	f007 fdc2 	bl	800ad28 <strncpy>
        subscribeSuccess = subscribe(device, &newSubscriber);
 80031a4:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80031a8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031ac:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 80031b0:	4611      	mov	r1, r2
 80031b2:	6818      	ldr	r0, [r3, #0]
 80031b4:	f7fe fef7 	bl	8001fa6 <subscribe>
 80031b8:	4603      	mov	r3, r0
 80031ba:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c

        responseCode =  subscribeSuccess ? 11 : (device->count<MAX_PHONES ? 10 : 12);
 80031be:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d10c      	bne.n	80031e0 <processMessageByCommand+0x68c>
 80031c6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031ca:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 80031d4:	2b09      	cmp	r3, #9
 80031d6:	dc01      	bgt.n	80031dc <processMessageByCommand+0x688>
 80031d8:	230a      	movs	r3, #10
 80031da:	e002      	b.n	80031e2 <processMessageByCommand+0x68e>
 80031dc:	230c      	movs	r3, #12
 80031de:	e000      	b.n	80031e2 <processMessageByCommand+0x68e>
 80031e0:	230b      	movs	r3, #11
 80031e2:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
        return appResponse(device,address,requestId,responseCode);
 80031e6:	f107 02e4 	add.w	r2, r7, #228	; 0xe4
 80031ea:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031ee:	f5a3 71b4 	sub.w	r1, r3, #360	; 0x168
 80031f2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80031f6:	f5a3 70b6 	sub.w	r0, r3, #364	; 0x16c
 80031fa:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 80031fe:	6809      	ldr	r1, [r1, #0]
 8003200:	6800      	ldr	r0, [r0, #0]
 8003202:	f7ff fc31 	bl	8002a68 <appResponse>
 8003206:	4603      	mov	r3, r0
 8003208:	e000      	b.n	800320c <processMessageByCommand+0x6b8>
	}

    default:
        return 0;
 800320a:	2300      	movs	r3, #0
    }
}
 800320c:	4618      	mov	r0, r3
 800320e:	f507 77ba 	add.w	r7, r7, #372	; 0x174
 8003212:	46bd      	mov	sp, r7
 8003214:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003218:	0800f9e4 	.word	0x0800f9e4
 800321c:	0800f9fc 	.word	0x0800f9fc
 8003220:	0800fa04 	.word	0x0800fa04
 8003224:	42b40000 	.word	0x42b40000
 8003228:	c2b40000 	.word	0xc2b40000
 800322c:	43340000 	.word	0x43340000
 8003230:	c3340000 	.word	0xc3340000
 8003234:	4ac26d70 	.word	0x4ac26d70
 8003238:	42480000 	.word	0x42480000

0800323c <processMessage>:

bool processMessage(const char* message, const char* address, struct Device* device) {
 800323c:	b580      	push	{r7, lr}
 800323e:	b08c      	sub	sp, #48	; 0x30
 8003240:	af00      	add	r7, sp, #0
 8003242:	60f8      	str	r0, [r7, #12]
 8003244:	60b9      	str	r1, [r7, #8]
 8003246:	607a      	str	r2, [r7, #4]

    char prefixStr[MAX_ICCID_LEN + 2] = ""; //+2 for ",\0"
 8003248:	2300      	movs	r3, #0
 800324a:	61bb      	str	r3, [r7, #24]
 800324c:	f107 031c 	add.w	r3, r7, #28
 8003250:	2200      	movs	r2, #0
 8003252:	601a      	str	r2, [r3, #0]
 8003254:	605a      	str	r2, [r3, #4]
 8003256:	609a      	str	r2, [r3, #8]
 8003258:	60da      	str	r2, [r3, #12]
 800325a:	611a      	str	r2, [r3, #16]
    sprintf(prefixStr, "%s,", device->iccid);
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	f503 72c0 	add.w	r2, r3, #384	; 0x180
 8003262:	f107 0318 	add.w	r3, r7, #24
 8003266:	4921      	ldr	r1, [pc, #132]	; (80032ec <processMessage+0xb0>)
 8003268:	4618      	mov	r0, r3
 800326a:	f006 ff67 	bl	800a13c <siprintf>

    if (!prefix(message, prefixStr)) {
 800326e:	f107 0318 	add.w	r3, r7, #24
 8003272:	4619      	mov	r1, r3
 8003274:	68f8      	ldr	r0, [r7, #12]
 8003276:	f7ff f893 	bl	80023a0 <prefix>
 800327a:	4603      	mov	r3, r0
 800327c:	f083 0301 	eor.w	r3, r3, #1
 8003280:	b2db      	uxtb	r3, r3
 8003282:	2b00      	cmp	r3, #0
 8003284:	d001      	beq.n	800328a <processMessage+0x4e>
        return 0;
 8003286:	2300      	movs	r3, #0
 8003288:	e02b      	b.n	80032e2 <processMessage+0xa6>
    }
    message += strlen(prefixStr); //printf("%s\n", message);
 800328a:	f107 0318 	add.w	r3, r7, #24
 800328e:	4618      	mov	r0, r3
 8003290:	f7fc ffb0 	bl	80001f4 <strlen>
 8003294:	4602      	mov	r2, r0
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	4413      	add	r3, r2
 800329a:	60fb      	str	r3, [r7, #12]

    char command[3] = { 0 };
 800329c:	4b14      	ldr	r3, [pc, #80]	; (80032f0 <processMessage+0xb4>)
 800329e:	881b      	ldrh	r3, [r3, #0]
 80032a0:	82bb      	strh	r3, [r7, #20]
 80032a2:	2300      	movs	r3, #0
 80032a4:	75bb      	strb	r3, [r7, #22]
    strncpy(command, message, 2);
 80032a6:	f107 0314 	add.w	r3, r7, #20
 80032aa:	2202      	movs	r2, #2
 80032ac:	68f9      	ldr	r1, [r7, #12]
 80032ae:	4618      	mov	r0, r3
 80032b0:	f007 fd3a 	bl	800ad28 <strncpy>
    if (!((command[0] != 0 && command[1] == 0) || (command[0] != 0 && command[1] == ',')))
 80032b4:	7d3b      	ldrb	r3, [r7, #20]
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	d002      	beq.n	80032c0 <processMessage+0x84>
 80032ba:	7d7b      	ldrb	r3, [r7, #21]
 80032bc:	2b00      	cmp	r3, #0
 80032be:	d007      	beq.n	80032d0 <processMessage+0x94>
 80032c0:	7d3b      	ldrb	r3, [r7, #20]
 80032c2:	2b00      	cmp	r3, #0
 80032c4:	d002      	beq.n	80032cc <processMessage+0x90>
 80032c6:	7d7b      	ldrb	r3, [r7, #21]
 80032c8:	2b2c      	cmp	r3, #44	; 0x2c
 80032ca:	d001      	beq.n	80032d0 <processMessage+0x94>
    {
        return 0;
 80032cc:	2300      	movs	r3, #0
 80032ce:	e008      	b.n	80032e2 <processMessage+0xa6>
    }

    return processMessageByCommand(message + 2, address, device, &command[0]);
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	1c98      	adds	r0, r3, #2
 80032d4:	f107 0314 	add.w	r3, r7, #20
 80032d8:	687a      	ldr	r2, [r7, #4]
 80032da:	68b9      	ldr	r1, [r7, #8]
 80032dc:	f7ff fc3a 	bl	8002b54 <processMessageByCommand>
 80032e0:	4603      	mov	r3, r0
}
 80032e2:	4618      	mov	r0, r3
 80032e4:	3730      	adds	r7, #48	; 0x30
 80032e6:	46bd      	mov	sp, r7
 80032e8:	bd80      	pop	{r7, pc}
 80032ea:	bf00      	nop
 80032ec:	0800fa18 	.word	0x0800fa18
 80032f0:	0800fa1c 	.word	0x0800fa1c

080032f4 <handleMessages>:

void handleMessages(struct Device* device) {
 80032f4:	b580      	push	{r7, lr}
 80032f6:	b0b8      	sub	sp, #224	; 0xe0
 80032f8:	af02      	add	r7, sp, #8
 80032fa:	6078      	str	r0, [r7, #4]

    char body[MAX_SMS_SIZE] = { 0 }; //sms body
 80032fc:	2300      	movs	r3, #0
 80032fe:	62bb      	str	r3, [r7, #40]	; 0x28
 8003300:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003304:	229c      	movs	r2, #156	; 0x9c
 8003306:	2100      	movs	r1, #0
 8003308:	4618      	mov	r0, r3
 800330a:	f005 fcf9 	bl	8008d00 <memset>
    char address[MAX_PHONE_LEN + 1] = { 0 }; //sms sender
 800330e:	2300      	movs	r3, #0
 8003310:	617b      	str	r3, [r7, #20]
 8003312:	f107 0318 	add.w	r3, r7, #24
 8003316:	2200      	movs	r2, #0
 8003318:	601a      	str	r2, [r3, #0]
 800331a:	605a      	str	r2, [r3, #4]
 800331c:	609a      	str	r2, [r3, #8]
 800331e:	731a      	strb	r2, [r3, #12]
    char index[MAX_INDEX_LEN + 1] = { 0 }; //sms index
 8003320:	2300      	movs	r3, #0
 8003322:	60fb      	str	r3, [r7, #12]
 8003324:	2300      	movs	r3, #0
 8003326:	823b      	strh	r3, [r7, #16]

    uint16_t storedCount = 0;
 8003328:	2300      	movs	r3, #0
 800332a:	817b      	strh	r3, [r7, #10]
    if (!readStoredCount1(&storedCount))
 800332c:	f107 030a 	add.w	r3, r7, #10
 8003330:	4618      	mov	r0, r3
 8003332:	f7fe f95b 	bl	80015ec <readStoredCount1>
 8003336:	4603      	mov	r3, r0
 8003338:	f083 0301 	eor.w	r3, r3, #1
 800333c:	b2db      	uxtb	r3, r3
 800333e:	2b00      	cmp	r3, #0
 8003340:	f040 8083 	bne.w	800344a <handleMessages+0x156>
       return;

    if ( storedCount < 1 ) //exit if no messages
 8003344:	897b      	ldrh	r3, [r7, #10]
 8003346:	2b00      	cmp	r3, #0
 8003348:	f000 8081 	beq.w	800344e <handleMessages+0x15a>
    	return;

    if (storedCount > 128) //ram limits
 800334c:	897b      	ldrh	r3, [r7, #10]
 800334e:	2b80      	cmp	r3, #128	; 0x80
 8003350:	d901      	bls.n	8003356 <handleMessages+0x62>
    	storedCount=128;
 8003352:	2380      	movs	r3, #128	; 0x80
 8003354:	817b      	strh	r3, [r7, #10]

    char* smsList = (char*)malloc(storedCount * MAX_CMGL_RECORD_SIZE);
 8003356:	897b      	ldrh	r3, [r7, #10]
 8003358:	461a      	mov	r2, r3
 800335a:	4613      	mov	r3, r2
 800335c:	019b      	lsls	r3, r3, #6
 800335e:	4413      	add	r3, r2
 8003360:	009b      	lsls	r3, r3, #2
 8003362:	4618      	mov	r0, r3
 8003364:	f005 fcae 	bl	8008cc4 <malloc>
 8003368:	4603      	mov	r3, r0
 800336a:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    //strcpy(smsList,"+CMGL: 0,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:32:05+08\",145,46\r\n891004234814455936,a,50.446896,18.838770,50000\r\n+CMGL: 1,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:32:30+08\",145,20\r\n891004234814455936,0\r\n+CMGL: 2,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:32:58+08\",145,7\r\nTEXT123\r\n+CMGL: 3,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:33:19+08\",145,8\r\nTEXT1234\r\n+CMGL: 4,\"REC UNREAD\",\"+27832729407\",,\"12/03/17,21:34:03+08\",145,9\r\nTEXT12345\r\n\r\nOK\r\n");
    if (!readSmsList(smsList, storedCount * MAX_CMGL_RECORD_SIZE)) {
 800336e:	897b      	ldrh	r3, [r7, #10]
 8003370:	461a      	mov	r2, r3
 8003372:	0192      	lsls	r2, r2, #6
 8003374:	4413      	add	r3, r2
 8003376:	009b      	lsls	r3, r3, #2
 8003378:	b29b      	uxth	r3, r3
 800337a:	4619      	mov	r1, r3
 800337c:	f8d7 00cc 	ldr.w	r0, [r7, #204]	; 0xcc
 8003380:	f7fe f8a8 	bl	80014d4 <readSmsList>
 8003384:	4603      	mov	r3, r0
 8003386:	f083 0301 	eor.w	r3, r3, #1
 800338a:	b2db      	uxtb	r3, r3
 800338c:	2b00      	cmp	r3, #0
 800338e:	d004      	beq.n	800339a <handleMessages+0xa6>
    	free(smsList);
 8003390:	f8d7 00cc 	ldr.w	r0, [r7, #204]	; 0xcc
 8003394:	f005 fc9e 	bl	8008cd4 <free>
    	return;
 8003398:	e05a      	b.n	8003450 <handleMessages+0x15c>
    }

    uint16_t unreadCount = splitText(smsList+2);
 800339a:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800339e:	3302      	adds	r3, #2
 80033a0:	4618      	mov	r0, r3
 80033a2:	f7ff f86b 	bl	800247c <splitText>
 80033a6:	4603      	mov	r3, r0
 80033a8:	f8a7 30ca 	strh.w	r3, [r7, #202]	; 0xca

    char* msg = smsList+2;
 80033ac:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 80033b0:	3302      	adds	r3, #2
 80033b2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    for (uint16_t i = 0; i < unreadCount; i++) {
 80033b6:	2300      	movs	r3, #0
 80033b8:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
 80033bc:	e03a      	b.n	8003434 <handleMessages+0x140>

        //printf("[%d]%s", i, msg);
        getText(body, msg, MAX_SMS_SIZE, "\r\n", "");
 80033be:	f107 0028 	add.w	r0, r7, #40	; 0x28
 80033c2:	4b25      	ldr	r3, [pc, #148]	; (8003458 <handleMessages+0x164>)
 80033c4:	9300      	str	r3, [sp, #0]
 80033c6:	4b25      	ldr	r3, [pc, #148]	; (800345c <handleMessages+0x168>)
 80033c8:	22a0      	movs	r2, #160	; 0xa0
 80033ca:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 80033ce:	f7fe f819 	bl	8001404 <getText>
        getText(address, msg, MAX_PHONE_LEN + 1, "UNREAD\",\"", "\"");
 80033d2:	f107 0014 	add.w	r0, r7, #20
 80033d6:	4b22      	ldr	r3, [pc, #136]	; (8003460 <handleMessages+0x16c>)
 80033d8:	9300      	str	r3, [sp, #0]
 80033da:	4b22      	ldr	r3, [pc, #136]	; (8003464 <handleMessages+0x170>)
 80033dc:	2211      	movs	r2, #17
 80033de:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 80033e2:	f7fe f80f 	bl	8001404 <getText>
        getText(index, msg, MAX_INDEX_LEN + 1, "+CMGL: ", ",");
 80033e6:	f107 000c 	add.w	r0, r7, #12
 80033ea:	4b1f      	ldr	r3, [pc, #124]	; (8003468 <handleMessages+0x174>)
 80033ec:	9300      	str	r3, [sp, #0]
 80033ee:	4b1f      	ldr	r3, [pc, #124]	; (800346c <handleMessages+0x178>)
 80033f0:	2206      	movs	r2, #6
 80033f2:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 80033f6:	f7fe f805 	bl	8001404 <getText>
        processMessage(body, address, device);
 80033fa:	f107 0114 	add.w	r1, r7, #20
 80033fe:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8003402:	687a      	ldr	r2, [r7, #4]
 8003404:	4618      	mov	r0, r3
 8003406:	f7ff ff19 	bl	800323c <processMessage>
        deleteSms(index);  //
 800340a:	f107 030c 	add.w	r3, r7, #12
 800340e:	4618      	mov	r0, r3
 8003410:	f7fe f878 	bl	8001504 <deleteSms>

        msg += strlen(msg) + 2;
 8003414:	f8d7 00d4 	ldr.w	r0, [r7, #212]	; 0xd4
 8003418:	f7fc feec 	bl	80001f4 <strlen>
 800341c:	4603      	mov	r3, r0
 800341e:	3302      	adds	r3, #2
 8003420:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 8003424:	4413      	add	r3, r2
 8003426:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    for (uint16_t i = 0; i < unreadCount; i++) {
 800342a:	f8b7 30d2 	ldrh.w	r3, [r7, #210]	; 0xd2
 800342e:	3301      	adds	r3, #1
 8003430:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
 8003434:	f8b7 20d2 	ldrh.w	r2, [r7, #210]	; 0xd2
 8003438:	f8b7 30ca 	ldrh.w	r3, [r7, #202]	; 0xca
 800343c:	429a      	cmp	r2, r3
 800343e:	d3be      	bcc.n	80033be <handleMessages+0xca>
    }

    free(smsList);
 8003440:	f8d7 00cc 	ldr.w	r0, [r7, #204]	; 0xcc
 8003444:	f005 fc46 	bl	8008cd4 <free>
 8003448:	e002      	b.n	8003450 <handleMessages+0x15c>
       return;
 800344a:	bf00      	nop
 800344c:	e000      	b.n	8003450 <handleMessages+0x15c>
    	return;
 800344e:	bf00      	nop
}
 8003450:	37d8      	adds	r7, #216	; 0xd8
 8003452:	46bd      	mov	sp, r7
 8003454:	bd80      	pop	{r7, pc}
 8003456:	bf00      	nop
 8003458:	0800fa20 	.word	0x0800fa20
 800345c:	0800f810 	.word	0x0800f810
 8003460:	0800fa30 	.word	0x0800fa30
 8003464:	0800fa24 	.word	0x0800fa24
 8003468:	0800fa3c 	.word	0x0800fa3c
 800346c:	0800fa34 	.word	0x0800fa34

08003470 <serviceCycle>:

void serviceCycle(struct Device* device) {
 8003470:	b580      	push	{r7, lr}
 8003472:	b082      	sub	sp, #8
 8003474:	af00      	add	r7, sp, #0
 8003476:	6078      	str	r0, [r7, #4]

	if (!waitConnect(5))
 8003478:	2005      	movs	r0, #5
 800347a:	f7fd ff9f 	bl	80013bc <waitConnect>
 800347e:	4603      	mov	r3, r0
 8003480:	f083 0301 	eor.w	r3, r3, #1
 8003484:	b2db      	uxtb	r3, r3
 8003486:	2b00      	cmp	r3, #0
 8003488:	d15d      	bne.n	8003546 <serviceCycle+0xd6>
		return;

	sendAtCommand("ATE0\r",2000,"OK");
 800348a:	4a37      	ldr	r2, [pc, #220]	; (8003568 <serviceCycle+0xf8>)
 800348c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8003490:	4836      	ldr	r0, [pc, #216]	; (800356c <serviceCycle+0xfc>)
 8003492:	f7fd fe97 	bl	80011c4 <sendAtCommand>

    if (!sendAtCommand("AT+CMGF=1\r",2000,"OK"))
 8003496:	4a34      	ldr	r2, [pc, #208]	; (8003568 <serviceCycle+0xf8>)
 8003498:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800349c:	4834      	ldr	r0, [pc, #208]	; (8003570 <serviceCycle+0x100>)
 800349e:	f7fd fe91 	bl	80011c4 <sendAtCommand>
 80034a2:	4603      	mov	r3, r0
 80034a4:	f083 0301 	eor.w	r3, r3, #1
 80034a8:	b2db      	uxtb	r3, r3
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d14d      	bne.n	800354a <serviceCycle+0xda>
        return;

    if (!sendAtCommand("AT+CSDH=1\r",2000,"OK"))
 80034ae:	4a2e      	ldr	r2, [pc, #184]	; (8003568 <serviceCycle+0xf8>)
 80034b0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80034b4:	482f      	ldr	r0, [pc, #188]	; (8003574 <serviceCycle+0x104>)
 80034b6:	f7fd fe85 	bl	80011c4 <sendAtCommand>
 80034ba:	4603      	mov	r3, r0
 80034bc:	f083 0301 	eor.w	r3, r3, #1
 80034c0:	b2db      	uxtb	r3, r3
 80034c2:	2b00      	cmp	r3, #0
 80034c4:	d143      	bne.n	800354e <serviceCycle+0xde>
        return;

    if (!sendAtCommand("AT+CNMI=2,0,0,0,0\r",5000,"OK"))
 80034c6:	4a28      	ldr	r2, [pc, #160]	; (8003568 <serviceCycle+0xf8>)
 80034c8:	f241 3188 	movw	r1, #5000	; 0x1388
 80034cc:	482a      	ldr	r0, [pc, #168]	; (8003578 <serviceCycle+0x108>)
 80034ce:	f7fd fe79 	bl	80011c4 <sendAtCommand>
 80034d2:	4603      	mov	r3, r0
 80034d4:	f083 0301 	eor.w	r3, r3, #1
 80034d8:	b2db      	uxtb	r3, r3
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d139      	bne.n	8003552 <serviceCycle+0xe2>
    	return;

    if (!sendAtCommand("AT+CPMS=\"SM\",\"ME\",\"SM\"\r",5000,"OK"))
 80034de:	4a22      	ldr	r2, [pc, #136]	; (8003568 <serviceCycle+0xf8>)
 80034e0:	f241 3188 	movw	r1, #5000	; 0x1388
 80034e4:	4825      	ldr	r0, [pc, #148]	; (800357c <serviceCycle+0x10c>)
 80034e6:	f7fd fe6d 	bl	80011c4 <sendAtCommand>
 80034ea:	4603      	mov	r3, r0
 80034ec:	f083 0301 	eor.w	r3, r3, #1
 80034f0:	b2db      	uxtb	r3, r3
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	d12f      	bne.n	8003556 <serviceCycle+0xe6>
    	return;

    if (!handleReadFile(device))
 80034f6:	6878      	ldr	r0, [r7, #4]
 80034f8:	f7fe fcc6 	bl	8001e88 <handleReadFile>
 80034fc:	4603      	mov	r3, r0
 80034fe:	f083 0301 	eor.w	r3, r3, #1
 8003502:	b2db      	uxtb	r3, r3
 8003504:	2b00      	cmp	r3, #0
 8003506:	d128      	bne.n	800355a <serviceCycle+0xea>
        return;

    if (gpsPositioning(device,90000)) {
 8003508:	491d      	ldr	r1, [pc, #116]	; (8003580 <serviceCycle+0x110>)
 800350a:	6878      	ldr	r0, [r7, #4]
 800350c:	f7fe feb2 	bl	8002274 <gpsPositioning>
 8003510:	4603      	mov	r3, r0
 8003512:	2b00      	cmp	r3, #0
 8003514:	d005      	beq.n	8003522 <serviceCycle+0xb2>
        handleWriteFile(device);
 8003516:	6878      	ldr	r0, [r7, #4]
 8003518:	f7fe fce9 	bl	8001eee <handleWriteFile>
        handleNotifications(device);
 800351c:	6878      	ldr	r0, [r7, #4]
 800351e:	f7ff fa55 	bl	80029cc <handleNotifications>
   }

    if (!setIccid(device->iccid))
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8003528:	4618      	mov	r0, r3
 800352a:	f7fe fae1 	bl	8001af0 <setIccid>
 800352e:	4603      	mov	r3, r0
 8003530:	f083 0301 	eor.w	r3, r3, #1
 8003534:	b2db      	uxtb	r3, r3
 8003536:	2b00      	cmp	r3, #0
 8003538:	d111      	bne.n	800355e <serviceCycle+0xee>
    	return;

    handleMessages(device);
 800353a:	6878      	ldr	r0, [r7, #4]
 800353c:	f7ff feda 	bl	80032f4 <handleMessages>

    sendStoredSms();
 8003540:	f7fe f8cc 	bl	80016dc <sendStoredSms>
 8003544:	e00c      	b.n	8003560 <serviceCycle+0xf0>
		return;
 8003546:	bf00      	nop
 8003548:	e00a      	b.n	8003560 <serviceCycle+0xf0>
        return;
 800354a:	bf00      	nop
 800354c:	e008      	b.n	8003560 <serviceCycle+0xf0>
        return;
 800354e:	bf00      	nop
 8003550:	e006      	b.n	8003560 <serviceCycle+0xf0>
    	return;
 8003552:	bf00      	nop
 8003554:	e004      	b.n	8003560 <serviceCycle+0xf0>
    	return;
 8003556:	bf00      	nop
 8003558:	e002      	b.n	8003560 <serviceCycle+0xf0>
        return;
 800355a:	bf00      	nop
 800355c:	e000      	b.n	8003560 <serviceCycle+0xf0>
    	return;
 800355e:	bf00      	nop

}
 8003560:	3708      	adds	r7, #8
 8003562:	46bd      	mov	sp, r7
 8003564:	bd80      	pop	{r7, pc}
 8003566:	bf00      	nop
 8003568:	0800f5f8 	.word	0x0800f5f8
 800356c:	0800fa40 	.word	0x0800fa40
 8003570:	0800fa48 	.word	0x0800fa48
 8003574:	0800fa54 	.word	0x0800fa54
 8003578:	0800fa60 	.word	0x0800fa60
 800357c:	0800fa74 	.word	0x0800fa74
 8003580:	00015f90 	.word	0x00015f90

08003584 <enterSleep>:

void enterSleep(const int* interval) {
 8003584:	b580      	push	{r7, lr}
 8003586:	b082      	sub	sp, #8
 8003588:	af00      	add	r7, sp, #0
 800358a:	6078      	str	r0, [r7, #4]
	/* Set STOP/LOWPOWER mode */
    HAL_SuspendTick();
 800358c:	f000 fc22 	bl	8003dd4 <HAL_SuspendTick>
    HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, *interval , RTC_WAKEUPCLOCK_CK_SPRE_16BITS);
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	2204      	movs	r2, #4
 8003596:	4619      	mov	r1, r3
 8003598:	4808      	ldr	r0, [pc, #32]	; (80035bc <enterSleep+0x38>)
 800359a:	f002 fa95 	bl	8005ac8 <HAL_RTCEx_SetWakeUpTimer_IT>
    /* Enter STOP/LOWPOWER mode */
    HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);
 800359e:	2101      	movs	r1, #1
 80035a0:	2001      	movs	r0, #1
 80035a2:	f001 fae9 	bl	8004b78 <HAL_PWR_EnterSTOPMode>
    HAL_RTCEx_DeactivateWakeUpTimer(&hrtc);
 80035a6:	4805      	ldr	r0, [pc, #20]	; (80035bc <enterSleep+0x38>)
 80035a8:	f002 fb4e 	bl	8005c48 <HAL_RTCEx_DeactivateWakeUpTimer>
    SystemClock_Config();
 80035ac:	f000 f862 	bl	8003674 <SystemClock_Config>
    HAL_ResumeTick();
 80035b0:	f000 fc20 	bl	8003df4 <HAL_ResumeTick>
}
 80035b4:	bf00      	nop
 80035b6:	3708      	adds	r7, #8
 80035b8:	46bd      	mov	sp, r7
 80035ba:	bd80      	pop	{r7, pc}
 80035bc:	20000260 	.word	0x20000260

080035c0 <enterSleepModule>:

void enterSleepModule() {
 80035c0:	b580      	push	{r7, lr}
 80035c2:	af00      	add	r7, sp, #0
	//Enable slow clock controlled by DTR.
	sendAtCommand("AT+CSCLK=1\r",2000,"OK");
 80035c4:	4a06      	ldr	r2, [pc, #24]	; (80035e0 <enterSleepModule+0x20>)
 80035c6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80035ca:	4806      	ldr	r0, [pc, #24]	; (80035e4 <enterSleepModule+0x24>)
 80035cc:	f7fd fdfa 	bl	80011c4 <sendAtCommand>
	//set DTR high in order to enter sleep mode
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 80035d0:	2201      	movs	r2, #1
 80035d2:	2120      	movs	r1, #32
 80035d4:	4804      	ldr	r0, [pc, #16]	; (80035e8 <enterSleepModule+0x28>)
 80035d6:	f001 fab5 	bl	8004b44 <HAL_GPIO_WritePin>
}
 80035da:	bf00      	nop
 80035dc:	bd80      	pop	{r7, pc}
 80035de:	bf00      	nop
 80035e0:	0800f5f8 	.word	0x0800f5f8
 80035e4:	0800fa8c 	.word	0x0800fa8c
 80035e8:	40020400 	.word	0x40020400

080035ec <quitSleepModule>:

void quitSleepModule() {
 80035ec:	b580      	push	{r7, lr}
 80035ee:	af00      	add	r7, sp, #0
	//set DTR low in order to quit sleep mode
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 80035f0:	2200      	movs	r2, #0
 80035f2:	2120      	movs	r1, #32
 80035f4:	4802      	ldr	r0, [pc, #8]	; (8003600 <quitSleepModule+0x14>)
 80035f6:	f001 faa5 	bl	8004b44 <HAL_GPIO_WritePin>
}
 80035fa:	bf00      	nop
 80035fc:	bd80      	pop	{r7, pc}
 80035fe:	bf00      	nop
 8003600:	40020400 	.word	0x40020400

08003604 <workCycle>:

void workCycle() {
 8003604:	b580      	push	{r7, lr}
 8003606:	b0e6      	sub	sp, #408	; 0x198
 8003608:	af00      	add	r7, sp, #0

	quitSleepModule();
 800360a:	f7ff ffef 	bl	80035ec <quitSleepModule>

	struct Device device = {0}; //struct Device device = { {52,19}, 1672527600, 120, { 0 } , 0 , {0} };
 800360e:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 8003612:	f5a3 73cc 	sub.w	r3, r3, #408	; 0x198
 8003616:	4618      	mov	r0, r3
 8003618:	f44f 73cc 	mov.w	r3, #408	; 0x198
 800361c:	461a      	mov	r2, r3
 800361e:	2100      	movs	r1, #0
 8003620:	f005 fb6e 	bl	8008d00 <memset>
	device.interval = 120; //factory interval in s
 8003624:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 8003628:	f5a3 73cc 	sub.w	r3, r3, #408	; 0x198
 800362c:	2278      	movs	r2, #120	; 0x78
 800362e:	611a      	str	r2, [r3, #16]

	serviceCycle(&device);
 8003630:	463b      	mov	r3, r7
 8003632:	4618      	mov	r0, r3
 8003634:	f7ff ff1c 	bl	8003470 <serviceCycle>

	enterSleepModule();
 8003638:	f7ff ffc2 	bl	80035c0 <enterSleepModule>

	enterSleep(&(device.interval));
 800363c:	463b      	mov	r3, r7
 800363e:	3310      	adds	r3, #16
 8003640:	4618      	mov	r0, r3
 8003642:	f7ff ff9f 	bl	8003584 <enterSleep>

}
 8003646:	bf00      	nop
 8003648:	f507 77cc 	add.w	r7, r7, #408	; 0x198
 800364c:	46bd      	mov	sp, r7
 800364e:	bd80      	pop	{r7, pc}

08003650 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003650:	b580      	push	{r7, lr}
 8003652:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003654:	f000 fb28 	bl	8003ca8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003658:	f000 f80c 	bl	8003674 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800365c:	f000 f924 	bl	80038a8 <MX_GPIO_Init>
  MX_DMA_Init();
 8003660:	f000 f902 	bl	8003868 <MX_DMA_Init>
  MX_USART1_UART_Init();
 8003664:	f000 f8d6 	bl	8003814 <MX_USART1_UART_Init>
  MX_RTC_Init();
 8003668:	f000 f870 	bl	800374c <MX_RTC_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  //loop
	  workCycle();
 800366c:	f7ff ffca 	bl	8003604 <workCycle>
 8003670:	e7fc      	b.n	800366c <main+0x1c>
	...

08003674 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003674:	b580      	push	{r7, lr}
 8003676:	b094      	sub	sp, #80	; 0x50
 8003678:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800367a:	f107 0320 	add.w	r3, r7, #32
 800367e:	2230      	movs	r2, #48	; 0x30
 8003680:	2100      	movs	r1, #0
 8003682:	4618      	mov	r0, r3
 8003684:	f005 fb3c 	bl	8008d00 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003688:	f107 030c 	add.w	r3, r7, #12
 800368c:	2200      	movs	r2, #0
 800368e:	601a      	str	r2, [r3, #0]
 8003690:	605a      	str	r2, [r3, #4]
 8003692:	609a      	str	r2, [r3, #8]
 8003694:	60da      	str	r2, [r3, #12]
 8003696:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8003698:	2300      	movs	r3, #0
 800369a:	60bb      	str	r3, [r7, #8]
 800369c:	4b29      	ldr	r3, [pc, #164]	; (8003744 <SystemClock_Config+0xd0>)
 800369e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036a0:	4a28      	ldr	r2, [pc, #160]	; (8003744 <SystemClock_Config+0xd0>)
 80036a2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80036a6:	6413      	str	r3, [r2, #64]	; 0x40
 80036a8:	4b26      	ldr	r3, [pc, #152]	; (8003744 <SystemClock_Config+0xd0>)
 80036aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80036b0:	60bb      	str	r3, [r7, #8]
 80036b2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 80036b4:	2300      	movs	r3, #0
 80036b6:	607b      	str	r3, [r7, #4]
 80036b8:	4b23      	ldr	r3, [pc, #140]	; (8003748 <SystemClock_Config+0xd4>)
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80036c0:	4a21      	ldr	r2, [pc, #132]	; (8003748 <SystemClock_Config+0xd4>)
 80036c2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80036c6:	6013      	str	r3, [r2, #0]
 80036c8:	4b1f      	ldr	r3, [pc, #124]	; (8003748 <SystemClock_Config+0xd4>)
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80036d0:	607b      	str	r3, [r7, #4]
 80036d2:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 80036d4:	230a      	movs	r3, #10
 80036d6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80036d8:	2301      	movs	r3, #1
 80036da:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80036dc:	2310      	movs	r3, #16
 80036de:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80036e0:	2301      	movs	r3, #1
 80036e2:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80036e4:	2302      	movs	r3, #2
 80036e6:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80036e8:	2300      	movs	r3, #0
 80036ea:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 80036ec:	2308      	movs	r3, #8
 80036ee:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 80;
 80036f0:	2350      	movs	r3, #80	; 0x50
 80036f2:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80036f4:	2302      	movs	r3, #2
 80036f6:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80036f8:	2304      	movs	r3, #4
 80036fa:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80036fc:	f107 0320 	add.w	r3, r7, #32
 8003700:	4618      	mov	r0, r3
 8003702:	f001 fa65 	bl	8004bd0 <HAL_RCC_OscConfig>
 8003706:	4603      	mov	r3, r0
 8003708:	2b00      	cmp	r3, #0
 800370a:	d001      	beq.n	8003710 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 800370c:	f000 f964 	bl	80039d8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003710:	230f      	movs	r3, #15
 8003712:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003714:	2302      	movs	r3, #2
 8003716:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 8003718:	2390      	movs	r3, #144	; 0x90
 800371a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800371c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003720:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003722:	2300      	movs	r3, #0
 8003724:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8003726:	f107 030c 	add.w	r3, r7, #12
 800372a:	2100      	movs	r1, #0
 800372c:	4618      	mov	r0, r3
 800372e:	f001 fcc7 	bl	80050c0 <HAL_RCC_ClockConfig>
 8003732:	4603      	mov	r3, r0
 8003734:	2b00      	cmp	r3, #0
 8003736:	d001      	beq.n	800373c <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8003738:	f000 f94e 	bl	80039d8 <Error_Handler>
  }
}
 800373c:	bf00      	nop
 800373e:	3750      	adds	r7, #80	; 0x50
 8003740:	46bd      	mov	sp, r7
 8003742:	bd80      	pop	{r7, pc}
 8003744:	40023800 	.word	0x40023800
 8003748:	40007000 	.word	0x40007000

0800374c <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 800374c:	b580      	push	{r7, lr}
 800374e:	b086      	sub	sp, #24
 8003750:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 8003752:	1d3b      	adds	r3, r7, #4
 8003754:	2200      	movs	r2, #0
 8003756:	601a      	str	r2, [r3, #0]
 8003758:	605a      	str	r2, [r3, #4]
 800375a:	609a      	str	r2, [r3, #8]
 800375c:	60da      	str	r2, [r3, #12]
 800375e:	611a      	str	r2, [r3, #16]
  RTC_DateTypeDef sDate = {0};
 8003760:	2300      	movs	r3, #0
 8003762:	603b      	str	r3, [r7, #0]

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8003764:	4b29      	ldr	r3, [pc, #164]	; (800380c <MX_RTC_Init+0xc0>)
 8003766:	4a2a      	ldr	r2, [pc, #168]	; (8003810 <MX_RTC_Init+0xc4>)
 8003768:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 800376a:	4b28      	ldr	r3, [pc, #160]	; (800380c <MX_RTC_Init+0xc0>)
 800376c:	2200      	movs	r2, #0
 800376e:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 8003770:	4b26      	ldr	r3, [pc, #152]	; (800380c <MX_RTC_Init+0xc0>)
 8003772:	227f      	movs	r2, #127	; 0x7f
 8003774:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8003776:	4b25      	ldr	r3, [pc, #148]	; (800380c <MX_RTC_Init+0xc0>)
 8003778:	22ff      	movs	r2, #255	; 0xff
 800377a:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 800377c:	4b23      	ldr	r3, [pc, #140]	; (800380c <MX_RTC_Init+0xc0>)
 800377e:	2200      	movs	r2, #0
 8003780:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8003782:	4b22      	ldr	r3, [pc, #136]	; (800380c <MX_RTC_Init+0xc0>)
 8003784:	2200      	movs	r2, #0
 8003786:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8003788:	4b20      	ldr	r3, [pc, #128]	; (800380c <MX_RTC_Init+0xc0>)
 800378a:	2200      	movs	r2, #0
 800378c:	619a      	str	r2, [r3, #24]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 800378e:	481f      	ldr	r0, [pc, #124]	; (800380c <MX_RTC_Init+0xc0>)
 8003790:	f001 ff64 	bl	800565c <HAL_RTC_Init>
 8003794:	4603      	mov	r3, r0
 8003796:	2b00      	cmp	r3, #0
 8003798:	d001      	beq.n	800379e <MX_RTC_Init+0x52>
  {
    Error_Handler();
 800379a:	f000 f91d 	bl	80039d8 <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 800379e:	2300      	movs	r3, #0
 80037a0:	713b      	strb	r3, [r7, #4]
  sTime.Minutes = 0x0;
 80037a2:	2300      	movs	r3, #0
 80037a4:	717b      	strb	r3, [r7, #5]
  sTime.Seconds = 0x0;
 80037a6:	2300      	movs	r3, #0
 80037a8:	71bb      	strb	r3, [r7, #6]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80037aa:	2300      	movs	r3, #0
 80037ac:	613b      	str	r3, [r7, #16]
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80037ae:	2300      	movs	r3, #0
 80037b0:	617b      	str	r3, [r7, #20]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80037b2:	1d3b      	adds	r3, r7, #4
 80037b4:	2201      	movs	r2, #1
 80037b6:	4619      	mov	r1, r3
 80037b8:	4814      	ldr	r0, [pc, #80]	; (800380c <MX_RTC_Init+0xc0>)
 80037ba:	f001 ffc5 	bl	8005748 <HAL_RTC_SetTime>
 80037be:	4603      	mov	r3, r0
 80037c0:	2b00      	cmp	r3, #0
 80037c2:	d001      	beq.n	80037c8 <MX_RTC_Init+0x7c>
  {
    Error_Handler();
 80037c4:	f000 f908 	bl	80039d8 <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80037c8:	2301      	movs	r3, #1
 80037ca:	703b      	strb	r3, [r7, #0]
  sDate.Month = RTC_MONTH_JANUARY;
 80037cc:	2301      	movs	r3, #1
 80037ce:	707b      	strb	r3, [r7, #1]
  sDate.Date = 0x1;
 80037d0:	2301      	movs	r3, #1
 80037d2:	70bb      	strb	r3, [r7, #2]
  sDate.Year = 0x0;
 80037d4:	2300      	movs	r3, #0
 80037d6:	70fb      	strb	r3, [r7, #3]

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80037d8:	463b      	mov	r3, r7
 80037da:	2201      	movs	r2, #1
 80037dc:	4619      	mov	r1, r3
 80037de:	480b      	ldr	r0, [pc, #44]	; (800380c <MX_RTC_Init+0xc0>)
 80037e0:	f002 f84c 	bl	800587c <HAL_RTC_SetDate>
 80037e4:	4603      	mov	r3, r0
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d001      	beq.n	80037ee <MX_RTC_Init+0xa2>
  {
    Error_Handler();
 80037ea:	f000 f8f5 	bl	80039d8 <Error_Handler>
  }

  /** Enable the WakeUp
  */
  if (HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, 300, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)
 80037ee:	2204      	movs	r2, #4
 80037f0:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80037f4:	4805      	ldr	r0, [pc, #20]	; (800380c <MX_RTC_Init+0xc0>)
 80037f6:	f002 f967 	bl	8005ac8 <HAL_RTCEx_SetWakeUpTimer_IT>
 80037fa:	4603      	mov	r3, r0
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d001      	beq.n	8003804 <MX_RTC_Init+0xb8>
  {
    Error_Handler();
 8003800:	f000 f8ea 	bl	80039d8 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8003804:	bf00      	nop
 8003806:	3718      	adds	r7, #24
 8003808:	46bd      	mov	sp, r7
 800380a:	bd80      	pop	{r7, pc}
 800380c:	20000260 	.word	0x20000260
 8003810:	40002800 	.word	0x40002800

08003814 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8003814:	b580      	push	{r7, lr}
 8003816:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8003818:	4b11      	ldr	r3, [pc, #68]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 800381a:	4a12      	ldr	r2, [pc, #72]	; (8003864 <MX_USART1_UART_Init+0x50>)
 800381c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800381e:	4b10      	ldr	r3, [pc, #64]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 8003820:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8003824:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003826:	4b0e      	ldr	r3, [pc, #56]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 8003828:	2200      	movs	r2, #0
 800382a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800382c:	4b0c      	ldr	r3, [pc, #48]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 800382e:	2200      	movs	r2, #0
 8003830:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8003832:	4b0b      	ldr	r3, [pc, #44]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 8003834:	2200      	movs	r2, #0
 8003836:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8003838:	4b09      	ldr	r3, [pc, #36]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 800383a:	220c      	movs	r2, #12
 800383c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800383e:	4b08      	ldr	r3, [pc, #32]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 8003840:	2200      	movs	r2, #0
 8003842:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8003844:	4b06      	ldr	r3, [pc, #24]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 8003846:	2200      	movs	r2, #0
 8003848:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800384a:	4805      	ldr	r0, [pc, #20]	; (8003860 <MX_USART1_UART_Init+0x4c>)
 800384c:	f002 fa82 	bl	8005d54 <HAL_UART_Init>
 8003850:	4603      	mov	r3, r0
 8003852:	2b00      	cmp	r3, #0
 8003854:	d001      	beq.n	800385a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8003856:	f000 f8bf 	bl	80039d8 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800385a:	bf00      	nop
 800385c:	bd80      	pop	{r7, pc}
 800385e:	bf00      	nop
 8003860:	20000280 	.word	0x20000280
 8003864:	40011000 	.word	0x40011000

08003868 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8003868:	b580      	push	{r7, lr}
 800386a:	b082      	sub	sp, #8
 800386c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 800386e:	2300      	movs	r3, #0
 8003870:	607b      	str	r3, [r7, #4]
 8003872:	4b0c      	ldr	r3, [pc, #48]	; (80038a4 <MX_DMA_Init+0x3c>)
 8003874:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003876:	4a0b      	ldr	r2, [pc, #44]	; (80038a4 <MX_DMA_Init+0x3c>)
 8003878:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800387c:	6313      	str	r3, [r2, #48]	; 0x30
 800387e:	4b09      	ldr	r3, [pc, #36]	; (80038a4 <MX_DMA_Init+0x3c>)
 8003880:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003882:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003886:	607b      	str	r3, [r7, #4]
 8003888:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 800388a:	2200      	movs	r2, #0
 800388c:	2100      	movs	r1, #0
 800388e:	203a      	movs	r0, #58	; 0x3a
 8003890:	f000 fb9b 	bl	8003fca <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8003894:	203a      	movs	r0, #58	; 0x3a
 8003896:	f000 fbb4 	bl	8004002 <HAL_NVIC_EnableIRQ>

}
 800389a:	bf00      	nop
 800389c:	3708      	adds	r7, #8
 800389e:	46bd      	mov	sp, r7
 80038a0:	bd80      	pop	{r7, pc}
 80038a2:	bf00      	nop
 80038a4:	40023800 	.word	0x40023800

080038a8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80038a8:	b580      	push	{r7, lr}
 80038aa:	b08a      	sub	sp, #40	; 0x28
 80038ac:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80038ae:	f107 0314 	add.w	r3, r7, #20
 80038b2:	2200      	movs	r2, #0
 80038b4:	601a      	str	r2, [r3, #0]
 80038b6:	605a      	str	r2, [r3, #4]
 80038b8:	609a      	str	r2, [r3, #8]
 80038ba:	60da      	str	r2, [r3, #12]
 80038bc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80038be:	2300      	movs	r3, #0
 80038c0:	613b      	str	r3, [r7, #16]
 80038c2:	4b40      	ldr	r3, [pc, #256]	; (80039c4 <MX_GPIO_Init+0x11c>)
 80038c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038c6:	4a3f      	ldr	r2, [pc, #252]	; (80039c4 <MX_GPIO_Init+0x11c>)
 80038c8:	f043 0304 	orr.w	r3, r3, #4
 80038cc:	6313      	str	r3, [r2, #48]	; 0x30
 80038ce:	4b3d      	ldr	r3, [pc, #244]	; (80039c4 <MX_GPIO_Init+0x11c>)
 80038d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038d2:	f003 0304 	and.w	r3, r3, #4
 80038d6:	613b      	str	r3, [r7, #16]
 80038d8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80038da:	2300      	movs	r3, #0
 80038dc:	60fb      	str	r3, [r7, #12]
 80038de:	4b39      	ldr	r3, [pc, #228]	; (80039c4 <MX_GPIO_Init+0x11c>)
 80038e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038e2:	4a38      	ldr	r2, [pc, #224]	; (80039c4 <MX_GPIO_Init+0x11c>)
 80038e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80038e8:	6313      	str	r3, [r2, #48]	; 0x30
 80038ea:	4b36      	ldr	r3, [pc, #216]	; (80039c4 <MX_GPIO_Init+0x11c>)
 80038ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80038f2:	60fb      	str	r3, [r7, #12]
 80038f4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80038f6:	2300      	movs	r3, #0
 80038f8:	60bb      	str	r3, [r7, #8]
 80038fa:	4b32      	ldr	r3, [pc, #200]	; (80039c4 <MX_GPIO_Init+0x11c>)
 80038fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038fe:	4a31      	ldr	r2, [pc, #196]	; (80039c4 <MX_GPIO_Init+0x11c>)
 8003900:	f043 0301 	orr.w	r3, r3, #1
 8003904:	6313      	str	r3, [r2, #48]	; 0x30
 8003906:	4b2f      	ldr	r3, [pc, #188]	; (80039c4 <MX_GPIO_Init+0x11c>)
 8003908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800390a:	f003 0301 	and.w	r3, r3, #1
 800390e:	60bb      	str	r3, [r7, #8]
 8003910:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8003912:	2300      	movs	r3, #0
 8003914:	607b      	str	r3, [r7, #4]
 8003916:	4b2b      	ldr	r3, [pc, #172]	; (80039c4 <MX_GPIO_Init+0x11c>)
 8003918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800391a:	4a2a      	ldr	r2, [pc, #168]	; (80039c4 <MX_GPIO_Init+0x11c>)
 800391c:	f043 0302 	orr.w	r3, r3, #2
 8003920:	6313      	str	r3, [r2, #48]	; 0x30
 8003922:	4b28      	ldr	r3, [pc, #160]	; (80039c4 <MX_GPIO_Init+0x11c>)
 8003924:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003926:	f003 0302 	and.w	r3, r3, #2
 800392a:	607b      	str	r3, [r7, #4]
 800392c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 800392e:	2200      	movs	r2, #0
 8003930:	2120      	movs	r1, #32
 8003932:	4825      	ldr	r0, [pc, #148]	; (80039c8 <MX_GPIO_Init+0x120>)
 8003934:	f001 f906 	bl	8004b44 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC13 PC14 PC15 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8003938:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 800393c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800393e:	2303      	movs	r3, #3
 8003940:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003942:	2300      	movs	r3, #0
 8003944:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003946:	f107 0314 	add.w	r3, r7, #20
 800394a:	4619      	mov	r1, r3
 800394c:	481f      	ldr	r0, [pc, #124]	; (80039cc <MX_GPIO_Init+0x124>)
 800394e:	f000 ff75 	bl	800483c <HAL_GPIO_Init>

  /*Configure GPIO pins : PH0 PH1 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8003952:	2303      	movs	r3, #3
 8003954:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8003956:	2303      	movs	r3, #3
 8003958:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800395a:	2300      	movs	r3, #0
 800395c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800395e:	f107 0314 	add.w	r3, r7, #20
 8003962:	4619      	mov	r1, r3
 8003964:	481a      	ldr	r0, [pc, #104]	; (80039d0 <MX_GPIO_Init+0x128>)
 8003966:	f000 ff69 	bl	800483c <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 PA2 PA3
                           PA4 PA5 PA6 PA7
                           PA8 PA9 PA10 PA11
                           PA12 PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800396a:	f649 73ff 	movw	r3, #40959	; 0x9fff
 800396e:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
                          |GPIO_PIN_12|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8003970:	2303      	movs	r3, #3
 8003972:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003974:	2300      	movs	r3, #0
 8003976:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003978:	f107 0314 	add.w	r3, r7, #20
 800397c:	4619      	mov	r1, r3
 800397e:	4815      	ldr	r0, [pc, #84]	; (80039d4 <MX_GPIO_Init+0x12c>)
 8003980:	f000 ff5c 	bl	800483c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB0 PB1 PB2 PB10
                           PB12 PB13 PB14 PB15
                           PB4 PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 8003984:	f24f 7317 	movw	r3, #63255	; 0xf717
 8003988:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15
                          |GPIO_PIN_4|GPIO_PIN_8|GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800398a:	2303      	movs	r3, #3
 800398c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800398e:	2300      	movs	r3, #0
 8003990:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003992:	f107 0314 	add.w	r3, r7, #20
 8003996:	4619      	mov	r1, r3
 8003998:	480b      	ldr	r0, [pc, #44]	; (80039c8 <MX_GPIO_Init+0x120>)
 800399a:	f000 ff4f 	bl	800483c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 800399e:	2320      	movs	r3, #32
 80039a0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039a2:	2301      	movs	r3, #1
 80039a4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039a6:	2300      	movs	r3, #0
 80039a8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80039aa:	2300      	movs	r3, #0
 80039ac:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80039ae:	f107 0314 	add.w	r3, r7, #20
 80039b2:	4619      	mov	r1, r3
 80039b4:	4804      	ldr	r0, [pc, #16]	; (80039c8 <MX_GPIO_Init+0x120>)
 80039b6:	f000 ff41 	bl	800483c <HAL_GPIO_Init>

}
 80039ba:	bf00      	nop
 80039bc:	3728      	adds	r7, #40	; 0x28
 80039be:	46bd      	mov	sp, r7
 80039c0:	bd80      	pop	{r7, pc}
 80039c2:	bf00      	nop
 80039c4:	40023800 	.word	0x40023800
 80039c8:	40020400 	.word	0x40020400
 80039cc:	40020800 	.word	0x40020800
 80039d0:	40021c00 	.word	0x40021c00
 80039d4:	40020000 	.word	0x40020000

080039d8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80039d8:	b480      	push	{r7}
 80039da:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80039dc:	b672      	cpsid	i
}
 80039de:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80039e0:	e7fe      	b.n	80039e0 <Error_Handler+0x8>
	...

080039e4 <HAL_MspInit>:
 80039e4:	b480      	push	{r7}
 80039e6:	b083      	sub	sp, #12
 80039e8:	af00      	add	r7, sp, #0
 80039ea:	2300      	movs	r3, #0
 80039ec:	607b      	str	r3, [r7, #4]
 80039ee:	4b10      	ldr	r3, [pc, #64]	; (8003a30 <HAL_MspInit+0x4c>)
 80039f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80039f2:	4a0f      	ldr	r2, [pc, #60]	; (8003a30 <HAL_MspInit+0x4c>)
 80039f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80039f8:	6453      	str	r3, [r2, #68]	; 0x44
 80039fa:	4b0d      	ldr	r3, [pc, #52]	; (8003a30 <HAL_MspInit+0x4c>)
 80039fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80039fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003a02:	607b      	str	r3, [r7, #4]
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	2300      	movs	r3, #0
 8003a08:	603b      	str	r3, [r7, #0]
 8003a0a:	4b09      	ldr	r3, [pc, #36]	; (8003a30 <HAL_MspInit+0x4c>)
 8003a0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a0e:	4a08      	ldr	r2, [pc, #32]	; (8003a30 <HAL_MspInit+0x4c>)
 8003a10:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003a14:	6413      	str	r3, [r2, #64]	; 0x40
 8003a16:	4b06      	ldr	r3, [pc, #24]	; (8003a30 <HAL_MspInit+0x4c>)
 8003a18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a1e:	603b      	str	r3, [r7, #0]
 8003a20:	683b      	ldr	r3, [r7, #0]
 8003a22:	bf00      	nop
 8003a24:	370c      	adds	r7, #12
 8003a26:	46bd      	mov	sp, r7
 8003a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a2c:	4770      	bx	lr
 8003a2e:	bf00      	nop
 8003a30:	40023800 	.word	0x40023800

08003a34 <HAL_RTC_MspInit>:
 8003a34:	b580      	push	{r7, lr}
 8003a36:	b088      	sub	sp, #32
 8003a38:	af00      	add	r7, sp, #0
 8003a3a:	6078      	str	r0, [r7, #4]
 8003a3c:	f107 030c 	add.w	r3, r7, #12
 8003a40:	2200      	movs	r2, #0
 8003a42:	601a      	str	r2, [r3, #0]
 8003a44:	605a      	str	r2, [r3, #4]
 8003a46:	609a      	str	r2, [r3, #8]
 8003a48:	60da      	str	r2, [r3, #12]
 8003a4a:	611a      	str	r2, [r3, #16]
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	4a10      	ldr	r2, [pc, #64]	; (8003a94 <HAL_RTC_MspInit+0x60>)
 8003a52:	4293      	cmp	r3, r2
 8003a54:	d119      	bne.n	8003a8a <HAL_RTC_MspInit+0x56>
 8003a56:	2302      	movs	r3, #2
 8003a58:	60fb      	str	r3, [r7, #12]
 8003a5a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003a5e:	61bb      	str	r3, [r7, #24]
 8003a60:	f107 030c 	add.w	r3, r7, #12
 8003a64:	4618      	mov	r0, r3
 8003a66:	f001 fd0b 	bl	8005480 <HAL_RCCEx_PeriphCLKConfig>
 8003a6a:	4603      	mov	r3, r0
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	d001      	beq.n	8003a74 <HAL_RTC_MspInit+0x40>
 8003a70:	f7ff ffb2 	bl	80039d8 <Error_Handler>
 8003a74:	4b08      	ldr	r3, [pc, #32]	; (8003a98 <HAL_RTC_MspInit+0x64>)
 8003a76:	2201      	movs	r2, #1
 8003a78:	601a      	str	r2, [r3, #0]
 8003a7a:	2200      	movs	r2, #0
 8003a7c:	2100      	movs	r1, #0
 8003a7e:	2003      	movs	r0, #3
 8003a80:	f000 faa3 	bl	8003fca <HAL_NVIC_SetPriority>
 8003a84:	2003      	movs	r0, #3
 8003a86:	f000 fabc 	bl	8004002 <HAL_NVIC_EnableIRQ>
 8003a8a:	bf00      	nop
 8003a8c:	3720      	adds	r7, #32
 8003a8e:	46bd      	mov	sp, r7
 8003a90:	bd80      	pop	{r7, pc}
 8003a92:	bf00      	nop
 8003a94:	40002800 	.word	0x40002800
 8003a98:	42470e3c 	.word	0x42470e3c

08003a9c <HAL_UART_MspInit>:
 8003a9c:	b580      	push	{r7, lr}
 8003a9e:	b08a      	sub	sp, #40	; 0x28
 8003aa0:	af00      	add	r7, sp, #0
 8003aa2:	6078      	str	r0, [r7, #4]
 8003aa4:	f107 0314 	add.w	r3, r7, #20
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	601a      	str	r2, [r3, #0]
 8003aac:	605a      	str	r2, [r3, #4]
 8003aae:	609a      	str	r2, [r3, #8]
 8003ab0:	60da      	str	r2, [r3, #12]
 8003ab2:	611a      	str	r2, [r3, #16]
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	4a34      	ldr	r2, [pc, #208]	; (8003b8c <HAL_UART_MspInit+0xf0>)
 8003aba:	4293      	cmp	r3, r2
 8003abc:	d161      	bne.n	8003b82 <HAL_UART_MspInit+0xe6>
 8003abe:	2300      	movs	r3, #0
 8003ac0:	613b      	str	r3, [r7, #16]
 8003ac2:	4b33      	ldr	r3, [pc, #204]	; (8003b90 <HAL_UART_MspInit+0xf4>)
 8003ac4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ac6:	4a32      	ldr	r2, [pc, #200]	; (8003b90 <HAL_UART_MspInit+0xf4>)
 8003ac8:	f043 0310 	orr.w	r3, r3, #16
 8003acc:	6453      	str	r3, [r2, #68]	; 0x44
 8003ace:	4b30      	ldr	r3, [pc, #192]	; (8003b90 <HAL_UART_MspInit+0xf4>)
 8003ad0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ad2:	f003 0310 	and.w	r3, r3, #16
 8003ad6:	613b      	str	r3, [r7, #16]
 8003ad8:	693b      	ldr	r3, [r7, #16]
 8003ada:	2300      	movs	r3, #0
 8003adc:	60fb      	str	r3, [r7, #12]
 8003ade:	4b2c      	ldr	r3, [pc, #176]	; (8003b90 <HAL_UART_MspInit+0xf4>)
 8003ae0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ae2:	4a2b      	ldr	r2, [pc, #172]	; (8003b90 <HAL_UART_MspInit+0xf4>)
 8003ae4:	f043 0302 	orr.w	r3, r3, #2
 8003ae8:	6313      	str	r3, [r2, #48]	; 0x30
 8003aea:	4b29      	ldr	r3, [pc, #164]	; (8003b90 <HAL_UART_MspInit+0xf4>)
 8003aec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003aee:	f003 0302 	and.w	r3, r3, #2
 8003af2:	60fb      	str	r3, [r7, #12]
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	23c0      	movs	r3, #192	; 0xc0
 8003af8:	617b      	str	r3, [r7, #20]
 8003afa:	2302      	movs	r3, #2
 8003afc:	61bb      	str	r3, [r7, #24]
 8003afe:	2300      	movs	r3, #0
 8003b00:	61fb      	str	r3, [r7, #28]
 8003b02:	2300      	movs	r3, #0
 8003b04:	623b      	str	r3, [r7, #32]
 8003b06:	2307      	movs	r3, #7
 8003b08:	627b      	str	r3, [r7, #36]	; 0x24
 8003b0a:	f107 0314 	add.w	r3, r7, #20
 8003b0e:	4619      	mov	r1, r3
 8003b10:	4820      	ldr	r0, [pc, #128]	; (8003b94 <HAL_UART_MspInit+0xf8>)
 8003b12:	f000 fe93 	bl	800483c <HAL_GPIO_Init>
 8003b16:	4b20      	ldr	r3, [pc, #128]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b18:	4a20      	ldr	r2, [pc, #128]	; (8003b9c <HAL_UART_MspInit+0x100>)
 8003b1a:	601a      	str	r2, [r3, #0]
 8003b1c:	4b1e      	ldr	r3, [pc, #120]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b1e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003b22:	605a      	str	r2, [r3, #4]
 8003b24:	4b1c      	ldr	r3, [pc, #112]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b26:	2200      	movs	r2, #0
 8003b28:	609a      	str	r2, [r3, #8]
 8003b2a:	4b1b      	ldr	r3, [pc, #108]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	60da      	str	r2, [r3, #12]
 8003b30:	4b19      	ldr	r3, [pc, #100]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b32:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003b36:	611a      	str	r2, [r3, #16]
 8003b38:	4b17      	ldr	r3, [pc, #92]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b3a:	2200      	movs	r2, #0
 8003b3c:	615a      	str	r2, [r3, #20]
 8003b3e:	4b16      	ldr	r3, [pc, #88]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b40:	2200      	movs	r2, #0
 8003b42:	619a      	str	r2, [r3, #24]
 8003b44:	4b14      	ldr	r3, [pc, #80]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b46:	2200      	movs	r2, #0
 8003b48:	61da      	str	r2, [r3, #28]
 8003b4a:	4b13      	ldr	r3, [pc, #76]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b4c:	2200      	movs	r2, #0
 8003b4e:	621a      	str	r2, [r3, #32]
 8003b50:	4b11      	ldr	r3, [pc, #68]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b52:	2200      	movs	r2, #0
 8003b54:	625a      	str	r2, [r3, #36]	; 0x24
 8003b56:	4810      	ldr	r0, [pc, #64]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b58:	f000 fa6e 	bl	8004038 <HAL_DMA_Init>
 8003b5c:	4603      	mov	r3, r0
 8003b5e:	2b00      	cmp	r3, #0
 8003b60:	d001      	beq.n	8003b66 <HAL_UART_MspInit+0xca>
 8003b62:	f7ff ff39 	bl	80039d8 <Error_Handler>
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	4a0b      	ldr	r2, [pc, #44]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b6a:	639a      	str	r2, [r3, #56]	; 0x38
 8003b6c:	4a0a      	ldr	r2, [pc, #40]	; (8003b98 <HAL_UART_MspInit+0xfc>)
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	6393      	str	r3, [r2, #56]	; 0x38
 8003b72:	2200      	movs	r2, #0
 8003b74:	2100      	movs	r1, #0
 8003b76:	2025      	movs	r0, #37	; 0x25
 8003b78:	f000 fa27 	bl	8003fca <HAL_NVIC_SetPriority>
 8003b7c:	2025      	movs	r0, #37	; 0x25
 8003b7e:	f000 fa40 	bl	8004002 <HAL_NVIC_EnableIRQ>
 8003b82:	bf00      	nop
 8003b84:	3728      	adds	r7, #40	; 0x28
 8003b86:	46bd      	mov	sp, r7
 8003b88:	bd80      	pop	{r7, pc}
 8003b8a:	bf00      	nop
 8003b8c:	40011000 	.word	0x40011000
 8003b90:	40023800 	.word	0x40023800
 8003b94:	40020400 	.word	0x40020400
 8003b98:	200002c4 	.word	0x200002c4
 8003b9c:	40026440 	.word	0x40026440

08003ba0 <NMI_Handler>:
 8003ba0:	b480      	push	{r7}
 8003ba2:	af00      	add	r7, sp, #0
 8003ba4:	e7fe      	b.n	8003ba4 <NMI_Handler+0x4>

08003ba6 <HardFault_Handler>:
 8003ba6:	b480      	push	{r7}
 8003ba8:	af00      	add	r7, sp, #0
 8003baa:	e7fe      	b.n	8003baa <HardFault_Handler+0x4>

08003bac <MemManage_Handler>:
 8003bac:	b480      	push	{r7}
 8003bae:	af00      	add	r7, sp, #0
 8003bb0:	e7fe      	b.n	8003bb0 <MemManage_Handler+0x4>

08003bb2 <BusFault_Handler>:
 8003bb2:	b480      	push	{r7}
 8003bb4:	af00      	add	r7, sp, #0
 8003bb6:	e7fe      	b.n	8003bb6 <BusFault_Handler+0x4>

08003bb8 <UsageFault_Handler>:
 8003bb8:	b480      	push	{r7}
 8003bba:	af00      	add	r7, sp, #0
 8003bbc:	e7fe      	b.n	8003bbc <UsageFault_Handler+0x4>

08003bbe <SVC_Handler>:
 8003bbe:	b480      	push	{r7}
 8003bc0:	af00      	add	r7, sp, #0
 8003bc2:	bf00      	nop
 8003bc4:	46bd      	mov	sp, r7
 8003bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bca:	4770      	bx	lr

08003bcc <DebugMon_Handler>:
 8003bcc:	b480      	push	{r7}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	bf00      	nop
 8003bd2:	46bd      	mov	sp, r7
 8003bd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bd8:	4770      	bx	lr

08003bda <PendSV_Handler>:
 8003bda:	b480      	push	{r7}
 8003bdc:	af00      	add	r7, sp, #0
 8003bde:	bf00      	nop
 8003be0:	46bd      	mov	sp, r7
 8003be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003be6:	4770      	bx	lr

08003be8 <SysTick_Handler>:
 8003be8:	b580      	push	{r7, lr}
 8003bea:	af00      	add	r7, sp, #0
 8003bec:	f000 f8ae 	bl	8003d4c <HAL_IncTick>
 8003bf0:	bf00      	nop
 8003bf2:	bd80      	pop	{r7, pc}

08003bf4 <RTC_WKUP_IRQHandler>:
 8003bf4:	b580      	push	{r7, lr}
 8003bf6:	af00      	add	r7, sp, #0
 8003bf8:	4802      	ldr	r0, [pc, #8]	; (8003c04 <RTC_WKUP_IRQHandler+0x10>)
 8003bfa:	f002 f87d 	bl	8005cf8 <HAL_RTCEx_WakeUpTimerIRQHandler>
 8003bfe:	bf00      	nop
 8003c00:	bd80      	pop	{r7, pc}
 8003c02:	bf00      	nop
 8003c04:	20000260 	.word	0x20000260

08003c08 <USART1_IRQHandler>:
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	af00      	add	r7, sp, #0
 8003c0c:	4802      	ldr	r0, [pc, #8]	; (8003c18 <USART1_IRQHandler+0x10>)
 8003c0e:	f002 fa65 	bl	80060dc <HAL_UART_IRQHandler>
 8003c12:	bf00      	nop
 8003c14:	bd80      	pop	{r7, pc}
 8003c16:	bf00      	nop
 8003c18:	20000280 	.word	0x20000280

08003c1c <DMA2_Stream2_IRQHandler>:
 8003c1c:	b580      	push	{r7, lr}
 8003c1e:	af00      	add	r7, sp, #0
 8003c20:	4802      	ldr	r0, [pc, #8]	; (8003c2c <DMA2_Stream2_IRQHandler+0x10>)
 8003c22:	f000 fba1 	bl	8004368 <HAL_DMA_IRQHandler>
 8003c26:	bf00      	nop
 8003c28:	bd80      	pop	{r7, pc}
 8003c2a:	bf00      	nop
 8003c2c:	200002c4 	.word	0x200002c4

08003c30 <SystemInit>:
 8003c30:	b480      	push	{r7}
 8003c32:	af00      	add	r7, sp, #0
 8003c34:	4b06      	ldr	r3, [pc, #24]	; (8003c50 <SystemInit+0x20>)
 8003c36:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003c3a:	4a05      	ldr	r2, [pc, #20]	; (8003c50 <SystemInit+0x20>)
 8003c3c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003c40:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003c44:	bf00      	nop
 8003c46:	46bd      	mov	sp, r7
 8003c48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c4c:	4770      	bx	lr
 8003c4e:	bf00      	nop
 8003c50:	e000ed00 	.word	0xe000ed00

08003c54 <Reset_Handler>:
 8003c54:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003c8c <LoopFillZerobss+0x12>
 8003c58:	480d      	ldr	r0, [pc, #52]	; (8003c90 <LoopFillZerobss+0x16>)
 8003c5a:	490e      	ldr	r1, [pc, #56]	; (8003c94 <LoopFillZerobss+0x1a>)
 8003c5c:	4a0e      	ldr	r2, [pc, #56]	; (8003c98 <LoopFillZerobss+0x1e>)
 8003c5e:	2300      	movs	r3, #0
 8003c60:	e002      	b.n	8003c68 <LoopCopyDataInit>

08003c62 <CopyDataInit>:
 8003c62:	58d4      	ldr	r4, [r2, r3]
 8003c64:	50c4      	str	r4, [r0, r3]
 8003c66:	3304      	adds	r3, #4

08003c68 <LoopCopyDataInit>:
 8003c68:	18c4      	adds	r4, r0, r3
 8003c6a:	428c      	cmp	r4, r1
 8003c6c:	d3f9      	bcc.n	8003c62 <CopyDataInit>
 8003c6e:	4a0b      	ldr	r2, [pc, #44]	; (8003c9c <LoopFillZerobss+0x22>)
 8003c70:	4c0b      	ldr	r4, [pc, #44]	; (8003ca0 <LoopFillZerobss+0x26>)
 8003c72:	2300      	movs	r3, #0
 8003c74:	e001      	b.n	8003c7a <LoopFillZerobss>

08003c76 <FillZerobss>:
 8003c76:	6013      	str	r3, [r2, #0]
 8003c78:	3204      	adds	r2, #4

08003c7a <LoopFillZerobss>:
 8003c7a:	42a2      	cmp	r2, r4
 8003c7c:	d3fb      	bcc.n	8003c76 <FillZerobss>
 8003c7e:	f7ff ffd7 	bl	8003c30 <SystemInit>
 8003c82:	f004 fee9 	bl	8008a58 <__libc_init_array>
 8003c86:	f7ff fce3 	bl	8003650 <main>
 8003c8a:	4770      	bx	lr
 8003c8c:	20010000 	.word	0x20010000
 8003c90:	20000000 	.word	0x20000000
 8003c94:	20000244 	.word	0x20000244
 8003c98:	08010540 	.word	0x08010540
 8003c9c:	20000244 	.word	0x20000244
 8003ca0:	2000036c 	.word	0x2000036c

08003ca4 <ADC_IRQHandler>:
 8003ca4:	e7fe      	b.n	8003ca4 <ADC_IRQHandler>
	...

08003ca8 <HAL_Init>:
 8003ca8:	b580      	push	{r7, lr}
 8003caa:	af00      	add	r7, sp, #0
 8003cac:	4b0e      	ldr	r3, [pc, #56]	; (8003ce8 <HAL_Init+0x40>)
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	4a0d      	ldr	r2, [pc, #52]	; (8003ce8 <HAL_Init+0x40>)
 8003cb2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003cb6:	6013      	str	r3, [r2, #0]
 8003cb8:	4b0b      	ldr	r3, [pc, #44]	; (8003ce8 <HAL_Init+0x40>)
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	4a0a      	ldr	r2, [pc, #40]	; (8003ce8 <HAL_Init+0x40>)
 8003cbe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003cc2:	6013      	str	r3, [r2, #0]
 8003cc4:	4b08      	ldr	r3, [pc, #32]	; (8003ce8 <HAL_Init+0x40>)
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	4a07      	ldr	r2, [pc, #28]	; (8003ce8 <HAL_Init+0x40>)
 8003cca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003cce:	6013      	str	r3, [r2, #0]
 8003cd0:	2003      	movs	r0, #3
 8003cd2:	f000 f96f 	bl	8003fb4 <HAL_NVIC_SetPriorityGrouping>
 8003cd6:	200f      	movs	r0, #15
 8003cd8:	f000 f808 	bl	8003cec <HAL_InitTick>
 8003cdc:	f7ff fe82 	bl	80039e4 <HAL_MspInit>
 8003ce0:	2300      	movs	r3, #0
 8003ce2:	4618      	mov	r0, r3
 8003ce4:	bd80      	pop	{r7, pc}
 8003ce6:	bf00      	nop
 8003ce8:	40023c00 	.word	0x40023c00

08003cec <HAL_InitTick>:
 8003cec:	b580      	push	{r7, lr}
 8003cee:	b082      	sub	sp, #8
 8003cf0:	af00      	add	r7, sp, #0
 8003cf2:	6078      	str	r0, [r7, #4]
 8003cf4:	4b12      	ldr	r3, [pc, #72]	; (8003d40 <HAL_InitTick+0x54>)
 8003cf6:	681a      	ldr	r2, [r3, #0]
 8003cf8:	4b12      	ldr	r3, [pc, #72]	; (8003d44 <HAL_InitTick+0x58>)
 8003cfa:	781b      	ldrb	r3, [r3, #0]
 8003cfc:	4619      	mov	r1, r3
 8003cfe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003d02:	fbb3 f3f1 	udiv	r3, r3, r1
 8003d06:	fbb2 f3f3 	udiv	r3, r2, r3
 8003d0a:	4618      	mov	r0, r3
 8003d0c:	f000 f987 	bl	800401e <HAL_SYSTICK_Config>
 8003d10:	4603      	mov	r3, r0
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	d001      	beq.n	8003d1a <HAL_InitTick+0x2e>
 8003d16:	2301      	movs	r3, #1
 8003d18:	e00e      	b.n	8003d38 <HAL_InitTick+0x4c>
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	2b0f      	cmp	r3, #15
 8003d1e:	d80a      	bhi.n	8003d36 <HAL_InitTick+0x4a>
 8003d20:	2200      	movs	r2, #0
 8003d22:	6879      	ldr	r1, [r7, #4]
 8003d24:	f04f 30ff 	mov.w	r0, #4294967295
 8003d28:	f000 f94f 	bl	8003fca <HAL_NVIC_SetPriority>
 8003d2c:	4a06      	ldr	r2, [pc, #24]	; (8003d48 <HAL_InitTick+0x5c>)
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	6013      	str	r3, [r2, #0]
 8003d32:	2300      	movs	r3, #0
 8003d34:	e000      	b.n	8003d38 <HAL_InitTick+0x4c>
 8003d36:	2301      	movs	r3, #1
 8003d38:	4618      	mov	r0, r3
 8003d3a:	3708      	adds	r7, #8
 8003d3c:	46bd      	mov	sp, r7
 8003d3e:	bd80      	pop	{r7, pc}
 8003d40:	20000000 	.word	0x20000000
 8003d44:	20000008 	.word	0x20000008
 8003d48:	20000004 	.word	0x20000004

08003d4c <HAL_IncTick>:
 8003d4c:	b480      	push	{r7}
 8003d4e:	af00      	add	r7, sp, #0
 8003d50:	4b06      	ldr	r3, [pc, #24]	; (8003d6c <HAL_IncTick+0x20>)
 8003d52:	781b      	ldrb	r3, [r3, #0]
 8003d54:	461a      	mov	r2, r3
 8003d56:	4b06      	ldr	r3, [pc, #24]	; (8003d70 <HAL_IncTick+0x24>)
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	4413      	add	r3, r2
 8003d5c:	4a04      	ldr	r2, [pc, #16]	; (8003d70 <HAL_IncTick+0x24>)
 8003d5e:	6013      	str	r3, [r2, #0]
 8003d60:	bf00      	nop
 8003d62:	46bd      	mov	sp, r7
 8003d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d68:	4770      	bx	lr
 8003d6a:	bf00      	nop
 8003d6c:	20000008 	.word	0x20000008
 8003d70:	20000328 	.word	0x20000328

08003d74 <HAL_GetTick>:
 8003d74:	b480      	push	{r7}
 8003d76:	af00      	add	r7, sp, #0
 8003d78:	4b03      	ldr	r3, [pc, #12]	; (8003d88 <HAL_GetTick+0x14>)
 8003d7a:	681b      	ldr	r3, [r3, #0]
 8003d7c:	4618      	mov	r0, r3
 8003d7e:	46bd      	mov	sp, r7
 8003d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d84:	4770      	bx	lr
 8003d86:	bf00      	nop
 8003d88:	20000328 	.word	0x20000328

08003d8c <HAL_Delay>:
 8003d8c:	b580      	push	{r7, lr}
 8003d8e:	b084      	sub	sp, #16
 8003d90:	af00      	add	r7, sp, #0
 8003d92:	6078      	str	r0, [r7, #4]
 8003d94:	f7ff ffee 	bl	8003d74 <HAL_GetTick>
 8003d98:	60b8      	str	r0, [r7, #8]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	60fb      	str	r3, [r7, #12]
 8003d9e:	68fb      	ldr	r3, [r7, #12]
 8003da0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003da4:	d005      	beq.n	8003db2 <HAL_Delay+0x26>
 8003da6:	4b0a      	ldr	r3, [pc, #40]	; (8003dd0 <HAL_Delay+0x44>)
 8003da8:	781b      	ldrb	r3, [r3, #0]
 8003daa:	461a      	mov	r2, r3
 8003dac:	68fb      	ldr	r3, [r7, #12]
 8003dae:	4413      	add	r3, r2
 8003db0:	60fb      	str	r3, [r7, #12]
 8003db2:	bf00      	nop
 8003db4:	f7ff ffde 	bl	8003d74 <HAL_GetTick>
 8003db8:	4602      	mov	r2, r0
 8003dba:	68bb      	ldr	r3, [r7, #8]
 8003dbc:	1ad3      	subs	r3, r2, r3
 8003dbe:	68fa      	ldr	r2, [r7, #12]
 8003dc0:	429a      	cmp	r2, r3
 8003dc2:	d8f7      	bhi.n	8003db4 <HAL_Delay+0x28>
 8003dc4:	bf00      	nop
 8003dc6:	bf00      	nop
 8003dc8:	3710      	adds	r7, #16
 8003dca:	46bd      	mov	sp, r7
 8003dcc:	bd80      	pop	{r7, pc}
 8003dce:	bf00      	nop
 8003dd0:	20000008 	.word	0x20000008

08003dd4 <HAL_SuspendTick>:
 8003dd4:	b480      	push	{r7}
 8003dd6:	af00      	add	r7, sp, #0
 8003dd8:	4b05      	ldr	r3, [pc, #20]	; (8003df0 <HAL_SuspendTick+0x1c>)
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	4a04      	ldr	r2, [pc, #16]	; (8003df0 <HAL_SuspendTick+0x1c>)
 8003dde:	f023 0302 	bic.w	r3, r3, #2
 8003de2:	6013      	str	r3, [r2, #0]
 8003de4:	bf00      	nop
 8003de6:	46bd      	mov	sp, r7
 8003de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dec:	4770      	bx	lr
 8003dee:	bf00      	nop
 8003df0:	e000e010 	.word	0xe000e010

08003df4 <HAL_ResumeTick>:
 8003df4:	b480      	push	{r7}
 8003df6:	af00      	add	r7, sp, #0
 8003df8:	4b05      	ldr	r3, [pc, #20]	; (8003e10 <HAL_ResumeTick+0x1c>)
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	4a04      	ldr	r2, [pc, #16]	; (8003e10 <HAL_ResumeTick+0x1c>)
 8003dfe:	f043 0302 	orr.w	r3, r3, #2
 8003e02:	6013      	str	r3, [r2, #0]
 8003e04:	bf00      	nop
 8003e06:	46bd      	mov	sp, r7
 8003e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e0c:	4770      	bx	lr
 8003e0e:	bf00      	nop
 8003e10:	e000e010 	.word	0xe000e010

08003e14 <__NVIC_SetPriorityGrouping>:
 8003e14:	b480      	push	{r7}
 8003e16:	b085      	sub	sp, #20
 8003e18:	af00      	add	r7, sp, #0
 8003e1a:	6078      	str	r0, [r7, #4]
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	f003 0307 	and.w	r3, r3, #7
 8003e22:	60fb      	str	r3, [r7, #12]
 8003e24:	4b0c      	ldr	r3, [pc, #48]	; (8003e58 <__NVIC_SetPriorityGrouping+0x44>)
 8003e26:	68db      	ldr	r3, [r3, #12]
 8003e28:	60bb      	str	r3, [r7, #8]
 8003e2a:	68ba      	ldr	r2, [r7, #8]
 8003e2c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003e30:	4013      	ands	r3, r2
 8003e32:	60bb      	str	r3, [r7, #8]
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	021a      	lsls	r2, r3, #8
 8003e38:	68bb      	ldr	r3, [r7, #8]
 8003e3a:	4313      	orrs	r3, r2
 8003e3c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003e40:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003e44:	60bb      	str	r3, [r7, #8]
 8003e46:	4a04      	ldr	r2, [pc, #16]	; (8003e58 <__NVIC_SetPriorityGrouping+0x44>)
 8003e48:	68bb      	ldr	r3, [r7, #8]
 8003e4a:	60d3      	str	r3, [r2, #12]
 8003e4c:	bf00      	nop
 8003e4e:	3714      	adds	r7, #20
 8003e50:	46bd      	mov	sp, r7
 8003e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e56:	4770      	bx	lr
 8003e58:	e000ed00 	.word	0xe000ed00

08003e5c <__NVIC_GetPriorityGrouping>:
 8003e5c:	b480      	push	{r7}
 8003e5e:	af00      	add	r7, sp, #0
 8003e60:	4b04      	ldr	r3, [pc, #16]	; (8003e74 <__NVIC_GetPriorityGrouping+0x18>)
 8003e62:	68db      	ldr	r3, [r3, #12]
 8003e64:	0a1b      	lsrs	r3, r3, #8
 8003e66:	f003 0307 	and.w	r3, r3, #7
 8003e6a:	4618      	mov	r0, r3
 8003e6c:	46bd      	mov	sp, r7
 8003e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e72:	4770      	bx	lr
 8003e74:	e000ed00 	.word	0xe000ed00

08003e78 <__NVIC_EnableIRQ>:
 8003e78:	b480      	push	{r7}
 8003e7a:	b083      	sub	sp, #12
 8003e7c:	af00      	add	r7, sp, #0
 8003e7e:	4603      	mov	r3, r0
 8003e80:	71fb      	strb	r3, [r7, #7]
 8003e82:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e86:	2b00      	cmp	r3, #0
 8003e88:	db0b      	blt.n	8003ea2 <__NVIC_EnableIRQ+0x2a>
 8003e8a:	79fb      	ldrb	r3, [r7, #7]
 8003e8c:	f003 021f 	and.w	r2, r3, #31
 8003e90:	4907      	ldr	r1, [pc, #28]	; (8003eb0 <__NVIC_EnableIRQ+0x38>)
 8003e92:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e96:	095b      	lsrs	r3, r3, #5
 8003e98:	2001      	movs	r0, #1
 8003e9a:	fa00 f202 	lsl.w	r2, r0, r2
 8003e9e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003ea2:	bf00      	nop
 8003ea4:	370c      	adds	r7, #12
 8003ea6:	46bd      	mov	sp, r7
 8003ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eac:	4770      	bx	lr
 8003eae:	bf00      	nop
 8003eb0:	e000e100 	.word	0xe000e100

08003eb4 <__NVIC_SetPriority>:
 8003eb4:	b480      	push	{r7}
 8003eb6:	b083      	sub	sp, #12
 8003eb8:	af00      	add	r7, sp, #0
 8003eba:	4603      	mov	r3, r0
 8003ebc:	6039      	str	r1, [r7, #0]
 8003ebe:	71fb      	strb	r3, [r7, #7]
 8003ec0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	db0a      	blt.n	8003ede <__NVIC_SetPriority+0x2a>
 8003ec8:	683b      	ldr	r3, [r7, #0]
 8003eca:	b2da      	uxtb	r2, r3
 8003ecc:	490c      	ldr	r1, [pc, #48]	; (8003f00 <__NVIC_SetPriority+0x4c>)
 8003ece:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ed2:	0112      	lsls	r2, r2, #4
 8003ed4:	b2d2      	uxtb	r2, r2
 8003ed6:	440b      	add	r3, r1
 8003ed8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003edc:	e00a      	b.n	8003ef4 <__NVIC_SetPriority+0x40>
 8003ede:	683b      	ldr	r3, [r7, #0]
 8003ee0:	b2da      	uxtb	r2, r3
 8003ee2:	4908      	ldr	r1, [pc, #32]	; (8003f04 <__NVIC_SetPriority+0x50>)
 8003ee4:	79fb      	ldrb	r3, [r7, #7]
 8003ee6:	f003 030f 	and.w	r3, r3, #15
 8003eea:	3b04      	subs	r3, #4
 8003eec:	0112      	lsls	r2, r2, #4
 8003eee:	b2d2      	uxtb	r2, r2
 8003ef0:	440b      	add	r3, r1
 8003ef2:	761a      	strb	r2, [r3, #24]
 8003ef4:	bf00      	nop
 8003ef6:	370c      	adds	r7, #12
 8003ef8:	46bd      	mov	sp, r7
 8003efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003efe:	4770      	bx	lr
 8003f00:	e000e100 	.word	0xe000e100
 8003f04:	e000ed00 	.word	0xe000ed00

08003f08 <NVIC_EncodePriority>:
 8003f08:	b480      	push	{r7}
 8003f0a:	b089      	sub	sp, #36	; 0x24
 8003f0c:	af00      	add	r7, sp, #0
 8003f0e:	60f8      	str	r0, [r7, #12]
 8003f10:	60b9      	str	r1, [r7, #8]
 8003f12:	607a      	str	r2, [r7, #4]
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	f003 0307 	and.w	r3, r3, #7
 8003f1a:	61fb      	str	r3, [r7, #28]
 8003f1c:	69fb      	ldr	r3, [r7, #28]
 8003f1e:	f1c3 0307 	rsb	r3, r3, #7
 8003f22:	2b04      	cmp	r3, #4
 8003f24:	bf28      	it	cs
 8003f26:	2304      	movcs	r3, #4
 8003f28:	61bb      	str	r3, [r7, #24]
 8003f2a:	69fb      	ldr	r3, [r7, #28]
 8003f2c:	3304      	adds	r3, #4
 8003f2e:	2b06      	cmp	r3, #6
 8003f30:	d902      	bls.n	8003f38 <NVIC_EncodePriority+0x30>
 8003f32:	69fb      	ldr	r3, [r7, #28]
 8003f34:	3b03      	subs	r3, #3
 8003f36:	e000      	b.n	8003f3a <NVIC_EncodePriority+0x32>
 8003f38:	2300      	movs	r3, #0
 8003f3a:	617b      	str	r3, [r7, #20]
 8003f3c:	f04f 32ff 	mov.w	r2, #4294967295
 8003f40:	69bb      	ldr	r3, [r7, #24]
 8003f42:	fa02 f303 	lsl.w	r3, r2, r3
 8003f46:	43da      	mvns	r2, r3
 8003f48:	68bb      	ldr	r3, [r7, #8]
 8003f4a:	401a      	ands	r2, r3
 8003f4c:	697b      	ldr	r3, [r7, #20]
 8003f4e:	409a      	lsls	r2, r3
 8003f50:	f04f 31ff 	mov.w	r1, #4294967295
 8003f54:	697b      	ldr	r3, [r7, #20]
 8003f56:	fa01 f303 	lsl.w	r3, r1, r3
 8003f5a:	43d9      	mvns	r1, r3
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	400b      	ands	r3, r1
 8003f60:	4313      	orrs	r3, r2
 8003f62:	4618      	mov	r0, r3
 8003f64:	3724      	adds	r7, #36	; 0x24
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr
	...

08003f70 <SysTick_Config>:
 8003f70:	b580      	push	{r7, lr}
 8003f72:	b082      	sub	sp, #8
 8003f74:	af00      	add	r7, sp, #0
 8003f76:	6078      	str	r0, [r7, #4]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	3b01      	subs	r3, #1
 8003f7c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003f80:	d301      	bcc.n	8003f86 <SysTick_Config+0x16>
 8003f82:	2301      	movs	r3, #1
 8003f84:	e00f      	b.n	8003fa6 <SysTick_Config+0x36>
 8003f86:	4a0a      	ldr	r2, [pc, #40]	; (8003fb0 <SysTick_Config+0x40>)
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	3b01      	subs	r3, #1
 8003f8c:	6053      	str	r3, [r2, #4]
 8003f8e:	210f      	movs	r1, #15
 8003f90:	f04f 30ff 	mov.w	r0, #4294967295
 8003f94:	f7ff ff8e 	bl	8003eb4 <__NVIC_SetPriority>
 8003f98:	4b05      	ldr	r3, [pc, #20]	; (8003fb0 <SysTick_Config+0x40>)
 8003f9a:	2200      	movs	r2, #0
 8003f9c:	609a      	str	r2, [r3, #8]
 8003f9e:	4b04      	ldr	r3, [pc, #16]	; (8003fb0 <SysTick_Config+0x40>)
 8003fa0:	2207      	movs	r2, #7
 8003fa2:	601a      	str	r2, [r3, #0]
 8003fa4:	2300      	movs	r3, #0
 8003fa6:	4618      	mov	r0, r3
 8003fa8:	3708      	adds	r7, #8
 8003faa:	46bd      	mov	sp, r7
 8003fac:	bd80      	pop	{r7, pc}
 8003fae:	bf00      	nop
 8003fb0:	e000e010 	.word	0xe000e010

08003fb4 <HAL_NVIC_SetPriorityGrouping>:
 8003fb4:	b580      	push	{r7, lr}
 8003fb6:	b082      	sub	sp, #8
 8003fb8:	af00      	add	r7, sp, #0
 8003fba:	6078      	str	r0, [r7, #4]
 8003fbc:	6878      	ldr	r0, [r7, #4]
 8003fbe:	f7ff ff29 	bl	8003e14 <__NVIC_SetPriorityGrouping>
 8003fc2:	bf00      	nop
 8003fc4:	3708      	adds	r7, #8
 8003fc6:	46bd      	mov	sp, r7
 8003fc8:	bd80      	pop	{r7, pc}

08003fca <HAL_NVIC_SetPriority>:
 8003fca:	b580      	push	{r7, lr}
 8003fcc:	b086      	sub	sp, #24
 8003fce:	af00      	add	r7, sp, #0
 8003fd0:	4603      	mov	r3, r0
 8003fd2:	60b9      	str	r1, [r7, #8]
 8003fd4:	607a      	str	r2, [r7, #4]
 8003fd6:	73fb      	strb	r3, [r7, #15]
 8003fd8:	2300      	movs	r3, #0
 8003fda:	617b      	str	r3, [r7, #20]
 8003fdc:	f7ff ff3e 	bl	8003e5c <__NVIC_GetPriorityGrouping>
 8003fe0:	6178      	str	r0, [r7, #20]
 8003fe2:	687a      	ldr	r2, [r7, #4]
 8003fe4:	68b9      	ldr	r1, [r7, #8]
 8003fe6:	6978      	ldr	r0, [r7, #20]
 8003fe8:	f7ff ff8e 	bl	8003f08 <NVIC_EncodePriority>
 8003fec:	4602      	mov	r2, r0
 8003fee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003ff2:	4611      	mov	r1, r2
 8003ff4:	4618      	mov	r0, r3
 8003ff6:	f7ff ff5d 	bl	8003eb4 <__NVIC_SetPriority>
 8003ffa:	bf00      	nop
 8003ffc:	3718      	adds	r7, #24
 8003ffe:	46bd      	mov	sp, r7
 8004000:	bd80      	pop	{r7, pc}

08004002 <HAL_NVIC_EnableIRQ>:
 8004002:	b580      	push	{r7, lr}
 8004004:	b082      	sub	sp, #8
 8004006:	af00      	add	r7, sp, #0
 8004008:	4603      	mov	r3, r0
 800400a:	71fb      	strb	r3, [r7, #7]
 800400c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004010:	4618      	mov	r0, r3
 8004012:	f7ff ff31 	bl	8003e78 <__NVIC_EnableIRQ>
 8004016:	bf00      	nop
 8004018:	3708      	adds	r7, #8
 800401a:	46bd      	mov	sp, r7
 800401c:	bd80      	pop	{r7, pc}

0800401e <HAL_SYSTICK_Config>:
 800401e:	b580      	push	{r7, lr}
 8004020:	b082      	sub	sp, #8
 8004022:	af00      	add	r7, sp, #0
 8004024:	6078      	str	r0, [r7, #4]
 8004026:	6878      	ldr	r0, [r7, #4]
 8004028:	f7ff ffa2 	bl	8003f70 <SysTick_Config>
 800402c:	4603      	mov	r3, r0
 800402e:	4618      	mov	r0, r3
 8004030:	3708      	adds	r7, #8
 8004032:	46bd      	mov	sp, r7
 8004034:	bd80      	pop	{r7, pc}
	...

08004038 <HAL_DMA_Init>:
 8004038:	b580      	push	{r7, lr}
 800403a:	b086      	sub	sp, #24
 800403c:	af00      	add	r7, sp, #0
 800403e:	6078      	str	r0, [r7, #4]
 8004040:	2300      	movs	r3, #0
 8004042:	617b      	str	r3, [r7, #20]
 8004044:	f7ff fe96 	bl	8003d74 <HAL_GetTick>
 8004048:	6138      	str	r0, [r7, #16]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	2b00      	cmp	r3, #0
 800404e:	d101      	bne.n	8004054 <HAL_DMA_Init+0x1c>
 8004050:	2301      	movs	r3, #1
 8004052:	e099      	b.n	8004188 <HAL_DMA_Init+0x150>
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	2202      	movs	r2, #2
 8004058:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	2200      	movs	r2, #0
 8004060:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	681a      	ldr	r2, [r3, #0]
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	f022 0201 	bic.w	r2, r2, #1
 8004072:	601a      	str	r2, [r3, #0]
 8004074:	e00f      	b.n	8004096 <HAL_DMA_Init+0x5e>
 8004076:	f7ff fe7d 	bl	8003d74 <HAL_GetTick>
 800407a:	4602      	mov	r2, r0
 800407c:	693b      	ldr	r3, [r7, #16]
 800407e:	1ad3      	subs	r3, r2, r3
 8004080:	2b05      	cmp	r3, #5
 8004082:	d908      	bls.n	8004096 <HAL_DMA_Init+0x5e>
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	2220      	movs	r2, #32
 8004088:	655a      	str	r2, [r3, #84]	; 0x54
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	2203      	movs	r2, #3
 800408e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004092:	2303      	movs	r3, #3
 8004094:	e078      	b.n	8004188 <HAL_DMA_Init+0x150>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	f003 0301 	and.w	r3, r3, #1
 80040a0:	2b00      	cmp	r3, #0
 80040a2:	d1e8      	bne.n	8004076 <HAL_DMA_Init+0x3e>
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	617b      	str	r3, [r7, #20]
 80040ac:	697a      	ldr	r2, [r7, #20]
 80040ae:	4b38      	ldr	r3, [pc, #224]	; (8004190 <HAL_DMA_Init+0x158>)
 80040b0:	4013      	ands	r3, r2
 80040b2:	617b      	str	r3, [r7, #20]
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	685a      	ldr	r2, [r3, #4]
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	689b      	ldr	r3, [r3, #8]
 80040bc:	431a      	orrs	r2, r3
 80040be:	687b      	ldr	r3, [r7, #4]
 80040c0:	68db      	ldr	r3, [r3, #12]
 80040c2:	431a      	orrs	r2, r3
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	691b      	ldr	r3, [r3, #16]
 80040c8:	431a      	orrs	r2, r3
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	695b      	ldr	r3, [r3, #20]
 80040ce:	431a      	orrs	r2, r3
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	699b      	ldr	r3, [r3, #24]
 80040d4:	431a      	orrs	r2, r3
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	69db      	ldr	r3, [r3, #28]
 80040da:	431a      	orrs	r2, r3
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	6a1b      	ldr	r3, [r3, #32]
 80040e0:	4313      	orrs	r3, r2
 80040e2:	697a      	ldr	r2, [r7, #20]
 80040e4:	4313      	orrs	r3, r2
 80040e6:	617b      	str	r3, [r7, #20]
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040ec:	2b04      	cmp	r3, #4
 80040ee:	d107      	bne.n	8004100 <HAL_DMA_Init+0xc8>
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040f8:	4313      	orrs	r3, r2
 80040fa:	697a      	ldr	r2, [r7, #20]
 80040fc:	4313      	orrs	r3, r2
 80040fe:	617b      	str	r3, [r7, #20]
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	697a      	ldr	r2, [r7, #20]
 8004106:	601a      	str	r2, [r3, #0]
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	695b      	ldr	r3, [r3, #20]
 800410e:	617b      	str	r3, [r7, #20]
 8004110:	697b      	ldr	r3, [r7, #20]
 8004112:	f023 0307 	bic.w	r3, r3, #7
 8004116:	617b      	str	r3, [r7, #20]
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800411c:	697a      	ldr	r2, [r7, #20]
 800411e:	4313      	orrs	r3, r2
 8004120:	617b      	str	r3, [r7, #20]
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004126:	2b04      	cmp	r3, #4
 8004128:	d117      	bne.n	800415a <HAL_DMA_Init+0x122>
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800412e:	697a      	ldr	r2, [r7, #20]
 8004130:	4313      	orrs	r3, r2
 8004132:	617b      	str	r3, [r7, #20]
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004138:	2b00      	cmp	r3, #0
 800413a:	d00e      	beq.n	800415a <HAL_DMA_Init+0x122>
 800413c:	6878      	ldr	r0, [r7, #4]
 800413e:	f000 fb01 	bl	8004744 <DMA_CheckFifoParam>
 8004142:	4603      	mov	r3, r0
 8004144:	2b00      	cmp	r3, #0
 8004146:	d008      	beq.n	800415a <HAL_DMA_Init+0x122>
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	2240      	movs	r2, #64	; 0x40
 800414c:	655a      	str	r2, [r3, #84]	; 0x54
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	2201      	movs	r2, #1
 8004152:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004156:	2301      	movs	r3, #1
 8004158:	e016      	b.n	8004188 <HAL_DMA_Init+0x150>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	681b      	ldr	r3, [r3, #0]
 800415e:	697a      	ldr	r2, [r7, #20]
 8004160:	615a      	str	r2, [r3, #20]
 8004162:	6878      	ldr	r0, [r7, #4]
 8004164:	f000 fab8 	bl	80046d8 <DMA_CalcBaseAndBitshift>
 8004168:	4603      	mov	r3, r0
 800416a:	60fb      	str	r3, [r7, #12]
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004170:	223f      	movs	r2, #63	; 0x3f
 8004172:	409a      	lsls	r2, r3
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	609a      	str	r2, [r3, #8]
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	2200      	movs	r2, #0
 800417c:	655a      	str	r2, [r3, #84]	; 0x54
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	2201      	movs	r2, #1
 8004182:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004186:	2300      	movs	r3, #0
 8004188:	4618      	mov	r0, r3
 800418a:	3718      	adds	r7, #24
 800418c:	46bd      	mov	sp, r7
 800418e:	bd80      	pop	{r7, pc}
 8004190:	f010803f 	.word	0xf010803f

08004194 <HAL_DMA_Start_IT>:
 8004194:	b580      	push	{r7, lr}
 8004196:	b086      	sub	sp, #24
 8004198:	af00      	add	r7, sp, #0
 800419a:	60f8      	str	r0, [r7, #12]
 800419c:	60b9      	str	r1, [r7, #8]
 800419e:	607a      	str	r2, [r7, #4]
 80041a0:	603b      	str	r3, [r7, #0]
 80041a2:	2300      	movs	r3, #0
 80041a4:	75fb      	strb	r3, [r7, #23]
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80041aa:	613b      	str	r3, [r7, #16]
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80041b2:	2b01      	cmp	r3, #1
 80041b4:	d101      	bne.n	80041ba <HAL_DMA_Start_IT+0x26>
 80041b6:	2302      	movs	r3, #2
 80041b8:	e040      	b.n	800423c <HAL_DMA_Start_IT+0xa8>
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	2201      	movs	r2, #1
 80041be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80041c2:	68fb      	ldr	r3, [r7, #12]
 80041c4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80041c8:	b2db      	uxtb	r3, r3
 80041ca:	2b01      	cmp	r3, #1
 80041cc:	d12f      	bne.n	800422e <HAL_DMA_Start_IT+0x9a>
 80041ce:	68fb      	ldr	r3, [r7, #12]
 80041d0:	2202      	movs	r2, #2
 80041d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	2200      	movs	r2, #0
 80041da:	655a      	str	r2, [r3, #84]	; 0x54
 80041dc:	683b      	ldr	r3, [r7, #0]
 80041de:	687a      	ldr	r2, [r7, #4]
 80041e0:	68b9      	ldr	r1, [r7, #8]
 80041e2:	68f8      	ldr	r0, [r7, #12]
 80041e4:	f000 fa4a 	bl	800467c <DMA_SetConfig>
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80041ec:	223f      	movs	r2, #63	; 0x3f
 80041ee:	409a      	lsls	r2, r3
 80041f0:	693b      	ldr	r3, [r7, #16]
 80041f2:	609a      	str	r2, [r3, #8]
 80041f4:	68fb      	ldr	r3, [r7, #12]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	681a      	ldr	r2, [r3, #0]
 80041fa:	68fb      	ldr	r3, [r7, #12]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f042 0216 	orr.w	r2, r2, #22
 8004202:	601a      	str	r2, [r3, #0]
 8004204:	68fb      	ldr	r3, [r7, #12]
 8004206:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004208:	2b00      	cmp	r3, #0
 800420a:	d007      	beq.n	800421c <HAL_DMA_Start_IT+0x88>
 800420c:	68fb      	ldr	r3, [r7, #12]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	681a      	ldr	r2, [r3, #0]
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	f042 0208 	orr.w	r2, r2, #8
 800421a:	601a      	str	r2, [r3, #0]
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	681a      	ldr	r2, [r3, #0]
 8004222:	68fb      	ldr	r3, [r7, #12]
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	f042 0201 	orr.w	r2, r2, #1
 800422a:	601a      	str	r2, [r3, #0]
 800422c:	e005      	b.n	800423a <HAL_DMA_Start_IT+0xa6>
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	2200      	movs	r2, #0
 8004232:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004236:	2302      	movs	r3, #2
 8004238:	75fb      	strb	r3, [r7, #23]
 800423a:	7dfb      	ldrb	r3, [r7, #23]
 800423c:	4618      	mov	r0, r3
 800423e:	3718      	adds	r7, #24
 8004240:	46bd      	mov	sp, r7
 8004242:	bd80      	pop	{r7, pc}

08004244 <HAL_DMA_Abort>:
 8004244:	b580      	push	{r7, lr}
 8004246:	b084      	sub	sp, #16
 8004248:	af00      	add	r7, sp, #0
 800424a:	6078      	str	r0, [r7, #4]
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004250:	60fb      	str	r3, [r7, #12]
 8004252:	f7ff fd8f 	bl	8003d74 <HAL_GetTick>
 8004256:	60b8      	str	r0, [r7, #8]
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800425e:	b2db      	uxtb	r3, r3
 8004260:	2b02      	cmp	r3, #2
 8004262:	d008      	beq.n	8004276 <HAL_DMA_Abort+0x32>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	2280      	movs	r2, #128	; 0x80
 8004268:	655a      	str	r2, [r3, #84]	; 0x54
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	2200      	movs	r2, #0
 800426e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004272:	2301      	movs	r3, #1
 8004274:	e052      	b.n	800431c <HAL_DMA_Abort+0xd8>
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	681a      	ldr	r2, [r3, #0]
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	f022 0216 	bic.w	r2, r2, #22
 8004284:	601a      	str	r2, [r3, #0]
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	695a      	ldr	r2, [r3, #20]
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004294:	615a      	str	r2, [r3, #20]
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800429a:	2b00      	cmp	r3, #0
 800429c:	d103      	bne.n	80042a6 <HAL_DMA_Abort+0x62>
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d007      	beq.n	80042b6 <HAL_DMA_Abort+0x72>
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	681a      	ldr	r2, [r3, #0]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	f022 0208 	bic.w	r2, r2, #8
 80042b4:	601a      	str	r2, [r3, #0]
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	681a      	ldr	r2, [r3, #0]
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	f022 0201 	bic.w	r2, r2, #1
 80042c4:	601a      	str	r2, [r3, #0]
 80042c6:	e013      	b.n	80042f0 <HAL_DMA_Abort+0xac>
 80042c8:	f7ff fd54 	bl	8003d74 <HAL_GetTick>
 80042cc:	4602      	mov	r2, r0
 80042ce:	68bb      	ldr	r3, [r7, #8]
 80042d0:	1ad3      	subs	r3, r2, r3
 80042d2:	2b05      	cmp	r3, #5
 80042d4:	d90c      	bls.n	80042f0 <HAL_DMA_Abort+0xac>
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	2220      	movs	r2, #32
 80042da:	655a      	str	r2, [r3, #84]	; 0x54
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	2203      	movs	r2, #3
 80042e0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	2200      	movs	r2, #0
 80042e8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80042ec:	2303      	movs	r3, #3
 80042ee:	e015      	b.n	800431c <HAL_DMA_Abort+0xd8>
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	f003 0301 	and.w	r3, r3, #1
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d1e4      	bne.n	80042c8 <HAL_DMA_Abort+0x84>
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004302:	223f      	movs	r2, #63	; 0x3f
 8004304:	409a      	lsls	r2, r3
 8004306:	68fb      	ldr	r3, [r7, #12]
 8004308:	609a      	str	r2, [r3, #8]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	2201      	movs	r2, #1
 800430e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	2200      	movs	r2, #0
 8004316:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800431a:	2300      	movs	r3, #0
 800431c:	4618      	mov	r0, r3
 800431e:	3710      	adds	r7, #16
 8004320:	46bd      	mov	sp, r7
 8004322:	bd80      	pop	{r7, pc}

08004324 <HAL_DMA_Abort_IT>:
 8004324:	b480      	push	{r7}
 8004326:	b083      	sub	sp, #12
 8004328:	af00      	add	r7, sp, #0
 800432a:	6078      	str	r0, [r7, #4]
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004332:	b2db      	uxtb	r3, r3
 8004334:	2b02      	cmp	r3, #2
 8004336:	d004      	beq.n	8004342 <HAL_DMA_Abort_IT+0x1e>
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	2280      	movs	r2, #128	; 0x80
 800433c:	655a      	str	r2, [r3, #84]	; 0x54
 800433e:	2301      	movs	r3, #1
 8004340:	e00c      	b.n	800435c <HAL_DMA_Abort_IT+0x38>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	2205      	movs	r2, #5
 8004346:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	681a      	ldr	r2, [r3, #0]
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	f022 0201 	bic.w	r2, r2, #1
 8004358:	601a      	str	r2, [r3, #0]
 800435a:	2300      	movs	r3, #0
 800435c:	4618      	mov	r0, r3
 800435e:	370c      	adds	r7, #12
 8004360:	46bd      	mov	sp, r7
 8004362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004366:	4770      	bx	lr

08004368 <HAL_DMA_IRQHandler>:
 8004368:	b580      	push	{r7, lr}
 800436a:	b086      	sub	sp, #24
 800436c:	af00      	add	r7, sp, #0
 800436e:	6078      	str	r0, [r7, #4]
 8004370:	2300      	movs	r3, #0
 8004372:	60bb      	str	r3, [r7, #8]
 8004374:	4b8e      	ldr	r3, [pc, #568]	; (80045b0 <HAL_DMA_IRQHandler+0x248>)
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	4a8e      	ldr	r2, [pc, #568]	; (80045b4 <HAL_DMA_IRQHandler+0x24c>)
 800437a:	fba2 2303 	umull	r2, r3, r2, r3
 800437e:	0a9b      	lsrs	r3, r3, #10
 8004380:	617b      	str	r3, [r7, #20]
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004386:	613b      	str	r3, [r7, #16]
 8004388:	693b      	ldr	r3, [r7, #16]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	60fb      	str	r3, [r7, #12]
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004392:	2208      	movs	r2, #8
 8004394:	409a      	lsls	r2, r3
 8004396:	68fb      	ldr	r3, [r7, #12]
 8004398:	4013      	ands	r3, r2
 800439a:	2b00      	cmp	r3, #0
 800439c:	d01a      	beq.n	80043d4 <HAL_DMA_IRQHandler+0x6c>
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	f003 0304 	and.w	r3, r3, #4
 80043a8:	2b00      	cmp	r3, #0
 80043aa:	d013      	beq.n	80043d4 <HAL_DMA_IRQHandler+0x6c>
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	681a      	ldr	r2, [r3, #0]
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	f022 0204 	bic.w	r2, r2, #4
 80043ba:	601a      	str	r2, [r3, #0]
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043c0:	2208      	movs	r2, #8
 80043c2:	409a      	lsls	r2, r3
 80043c4:	693b      	ldr	r3, [r7, #16]
 80043c6:	609a      	str	r2, [r3, #8]
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80043cc:	f043 0201 	orr.w	r2, r3, #1
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	655a      	str	r2, [r3, #84]	; 0x54
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043d8:	2201      	movs	r2, #1
 80043da:	409a      	lsls	r2, r3
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	4013      	ands	r3, r2
 80043e0:	2b00      	cmp	r3, #0
 80043e2:	d012      	beq.n	800440a <HAL_DMA_IRQHandler+0xa2>
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	695b      	ldr	r3, [r3, #20]
 80043ea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	d00b      	beq.n	800440a <HAL_DMA_IRQHandler+0xa2>
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043f6:	2201      	movs	r2, #1
 80043f8:	409a      	lsls	r2, r3
 80043fa:	693b      	ldr	r3, [r7, #16]
 80043fc:	609a      	str	r2, [r3, #8]
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004402:	f043 0202 	orr.w	r2, r3, #2
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	655a      	str	r2, [r3, #84]	; 0x54
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800440e:	2204      	movs	r2, #4
 8004410:	409a      	lsls	r2, r3
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	4013      	ands	r3, r2
 8004416:	2b00      	cmp	r3, #0
 8004418:	d012      	beq.n	8004440 <HAL_DMA_IRQHandler+0xd8>
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	f003 0302 	and.w	r3, r3, #2
 8004424:	2b00      	cmp	r3, #0
 8004426:	d00b      	beq.n	8004440 <HAL_DMA_IRQHandler+0xd8>
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800442c:	2204      	movs	r2, #4
 800442e:	409a      	lsls	r2, r3
 8004430:	693b      	ldr	r3, [r7, #16]
 8004432:	609a      	str	r2, [r3, #8]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004438:	f043 0204 	orr.w	r2, r3, #4
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	655a      	str	r2, [r3, #84]	; 0x54
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004444:	2210      	movs	r2, #16
 8004446:	409a      	lsls	r2, r3
 8004448:	68fb      	ldr	r3, [r7, #12]
 800444a:	4013      	ands	r3, r2
 800444c:	2b00      	cmp	r3, #0
 800444e:	d043      	beq.n	80044d8 <HAL_DMA_IRQHandler+0x170>
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f003 0308 	and.w	r3, r3, #8
 800445a:	2b00      	cmp	r3, #0
 800445c:	d03c      	beq.n	80044d8 <HAL_DMA_IRQHandler+0x170>
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004462:	2210      	movs	r2, #16
 8004464:	409a      	lsls	r2, r3
 8004466:	693b      	ldr	r3, [r7, #16]
 8004468:	609a      	str	r2, [r3, #8]
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	681b      	ldr	r3, [r3, #0]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004474:	2b00      	cmp	r3, #0
 8004476:	d018      	beq.n	80044aa <HAL_DMA_IRQHandler+0x142>
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004482:	2b00      	cmp	r3, #0
 8004484:	d108      	bne.n	8004498 <HAL_DMA_IRQHandler+0x130>
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800448a:	2b00      	cmp	r3, #0
 800448c:	d024      	beq.n	80044d8 <HAL_DMA_IRQHandler+0x170>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004492:	6878      	ldr	r0, [r7, #4]
 8004494:	4798      	blx	r3
 8004496:	e01f      	b.n	80044d8 <HAL_DMA_IRQHandler+0x170>
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800449c:	2b00      	cmp	r3, #0
 800449e:	d01b      	beq.n	80044d8 <HAL_DMA_IRQHandler+0x170>
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80044a4:	6878      	ldr	r0, [r7, #4]
 80044a6:	4798      	blx	r3
 80044a8:	e016      	b.n	80044d8 <HAL_DMA_IRQHandler+0x170>
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	d107      	bne.n	80044c8 <HAL_DMA_IRQHandler+0x160>
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	681a      	ldr	r2, [r3, #0]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	681b      	ldr	r3, [r3, #0]
 80044c2:	f022 0208 	bic.w	r2, r2, #8
 80044c6:	601a      	str	r2, [r3, #0]
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	d003      	beq.n	80044d8 <HAL_DMA_IRQHandler+0x170>
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044d4:	6878      	ldr	r0, [r7, #4]
 80044d6:	4798      	blx	r3
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80044dc:	2220      	movs	r2, #32
 80044de:	409a      	lsls	r2, r3
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	4013      	ands	r3, r2
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	f000 808f 	beq.w	8004608 <HAL_DMA_IRQHandler+0x2a0>
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	681b      	ldr	r3, [r3, #0]
 80044f0:	f003 0310 	and.w	r3, r3, #16
 80044f4:	2b00      	cmp	r3, #0
 80044f6:	f000 8087 	beq.w	8004608 <HAL_DMA_IRQHandler+0x2a0>
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80044fe:	2220      	movs	r2, #32
 8004500:	409a      	lsls	r2, r3
 8004502:	693b      	ldr	r3, [r7, #16]
 8004504:	609a      	str	r2, [r3, #8]
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800450c:	b2db      	uxtb	r3, r3
 800450e:	2b05      	cmp	r3, #5
 8004510:	d136      	bne.n	8004580 <HAL_DMA_IRQHandler+0x218>
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	681a      	ldr	r2, [r3, #0]
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	681b      	ldr	r3, [r3, #0]
 800451c:	f022 0216 	bic.w	r2, r2, #22
 8004520:	601a      	str	r2, [r3, #0]
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	695a      	ldr	r2, [r3, #20]
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004530:	615a      	str	r2, [r3, #20]
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004536:	2b00      	cmp	r3, #0
 8004538:	d103      	bne.n	8004542 <HAL_DMA_IRQHandler+0x1da>
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800453e:	2b00      	cmp	r3, #0
 8004540:	d007      	beq.n	8004552 <HAL_DMA_IRQHandler+0x1ea>
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	681a      	ldr	r2, [r3, #0]
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	f022 0208 	bic.w	r2, r2, #8
 8004550:	601a      	str	r2, [r3, #0]
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004556:	223f      	movs	r2, #63	; 0x3f
 8004558:	409a      	lsls	r2, r3
 800455a:	693b      	ldr	r3, [r7, #16]
 800455c:	609a      	str	r2, [r3, #8]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	2201      	movs	r2, #1
 8004562:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	2200      	movs	r2, #0
 800456a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004572:	2b00      	cmp	r3, #0
 8004574:	d07e      	beq.n	8004674 <HAL_DMA_IRQHandler+0x30c>
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800457a:	6878      	ldr	r0, [r7, #4]
 800457c:	4798      	blx	r3
 800457e:	e079      	b.n	8004674 <HAL_DMA_IRQHandler+0x30c>
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	681b      	ldr	r3, [r3, #0]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800458a:	2b00      	cmp	r3, #0
 800458c:	d01d      	beq.n	80045ca <HAL_DMA_IRQHandler+0x262>
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004598:	2b00      	cmp	r3, #0
 800459a:	d10d      	bne.n	80045b8 <HAL_DMA_IRQHandler+0x250>
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045a0:	2b00      	cmp	r3, #0
 80045a2:	d031      	beq.n	8004608 <HAL_DMA_IRQHandler+0x2a0>
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045a8:	6878      	ldr	r0, [r7, #4]
 80045aa:	4798      	blx	r3
 80045ac:	e02c      	b.n	8004608 <HAL_DMA_IRQHandler+0x2a0>
 80045ae:	bf00      	nop
 80045b0:	20000000 	.word	0x20000000
 80045b4:	1b4e81b5 	.word	0x1b4e81b5
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045bc:	2b00      	cmp	r3, #0
 80045be:	d023      	beq.n	8004608 <HAL_DMA_IRQHandler+0x2a0>
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045c4:	6878      	ldr	r0, [r7, #4]
 80045c6:	4798      	blx	r3
 80045c8:	e01e      	b.n	8004608 <HAL_DMA_IRQHandler+0x2a0>
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d10f      	bne.n	80045f8 <HAL_DMA_IRQHandler+0x290>
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	681b      	ldr	r3, [r3, #0]
 80045dc:	681a      	ldr	r2, [r3, #0]
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	f022 0210 	bic.w	r2, r2, #16
 80045e6:	601a      	str	r2, [r3, #0]
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	2201      	movs	r2, #1
 80045ec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	2200      	movs	r2, #0
 80045f4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045fc:	2b00      	cmp	r3, #0
 80045fe:	d003      	beq.n	8004608 <HAL_DMA_IRQHandler+0x2a0>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004604:	6878      	ldr	r0, [r7, #4]
 8004606:	4798      	blx	r3
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800460c:	2b00      	cmp	r3, #0
 800460e:	d032      	beq.n	8004676 <HAL_DMA_IRQHandler+0x30e>
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004614:	f003 0301 	and.w	r3, r3, #1
 8004618:	2b00      	cmp	r3, #0
 800461a:	d022      	beq.n	8004662 <HAL_DMA_IRQHandler+0x2fa>
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	2205      	movs	r2, #5
 8004620:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	681b      	ldr	r3, [r3, #0]
 8004628:	681a      	ldr	r2, [r3, #0]
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	f022 0201 	bic.w	r2, r2, #1
 8004632:	601a      	str	r2, [r3, #0]
 8004634:	68bb      	ldr	r3, [r7, #8]
 8004636:	3301      	adds	r3, #1
 8004638:	60bb      	str	r3, [r7, #8]
 800463a:	697a      	ldr	r2, [r7, #20]
 800463c:	429a      	cmp	r2, r3
 800463e:	d307      	bcc.n	8004650 <HAL_DMA_IRQHandler+0x2e8>
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	f003 0301 	and.w	r3, r3, #1
 800464a:	2b00      	cmp	r3, #0
 800464c:	d1f2      	bne.n	8004634 <HAL_DMA_IRQHandler+0x2cc>
 800464e:	e000      	b.n	8004652 <HAL_DMA_IRQHandler+0x2ea>
 8004650:	bf00      	nop
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	2201      	movs	r2, #1
 8004656:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	2200      	movs	r2, #0
 800465e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004666:	2b00      	cmp	r3, #0
 8004668:	d005      	beq.n	8004676 <HAL_DMA_IRQHandler+0x30e>
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800466e:	6878      	ldr	r0, [r7, #4]
 8004670:	4798      	blx	r3
 8004672:	e000      	b.n	8004676 <HAL_DMA_IRQHandler+0x30e>
 8004674:	bf00      	nop
 8004676:	3718      	adds	r7, #24
 8004678:	46bd      	mov	sp, r7
 800467a:	bd80      	pop	{r7, pc}

0800467c <DMA_SetConfig>:
 800467c:	b480      	push	{r7}
 800467e:	b085      	sub	sp, #20
 8004680:	af00      	add	r7, sp, #0
 8004682:	60f8      	str	r0, [r7, #12]
 8004684:	60b9      	str	r1, [r7, #8]
 8004686:	607a      	str	r2, [r7, #4]
 8004688:	603b      	str	r3, [r7, #0]
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	681b      	ldr	r3, [r3, #0]
 800468e:	681a      	ldr	r2, [r3, #0]
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	681b      	ldr	r3, [r3, #0]
 8004694:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004698:	601a      	str	r2, [r3, #0]
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	683a      	ldr	r2, [r7, #0]
 80046a0:	605a      	str	r2, [r3, #4]
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	689b      	ldr	r3, [r3, #8]
 80046a6:	2b40      	cmp	r3, #64	; 0x40
 80046a8:	d108      	bne.n	80046bc <DMA_SetConfig+0x40>
 80046aa:	68fb      	ldr	r3, [r7, #12]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	687a      	ldr	r2, [r7, #4]
 80046b0:	609a      	str	r2, [r3, #8]
 80046b2:	68fb      	ldr	r3, [r7, #12]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	68ba      	ldr	r2, [r7, #8]
 80046b8:	60da      	str	r2, [r3, #12]
 80046ba:	e007      	b.n	80046cc <DMA_SetConfig+0x50>
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	68ba      	ldr	r2, [r7, #8]
 80046c2:	609a      	str	r2, [r3, #8]
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	687a      	ldr	r2, [r7, #4]
 80046ca:	60da      	str	r2, [r3, #12]
 80046cc:	bf00      	nop
 80046ce:	3714      	adds	r7, #20
 80046d0:	46bd      	mov	sp, r7
 80046d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046d6:	4770      	bx	lr

080046d8 <DMA_CalcBaseAndBitshift>:
 80046d8:	b480      	push	{r7}
 80046da:	b085      	sub	sp, #20
 80046dc:	af00      	add	r7, sp, #0
 80046de:	6078      	str	r0, [r7, #4]
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	b2db      	uxtb	r3, r3
 80046e6:	3b10      	subs	r3, #16
 80046e8:	4a14      	ldr	r2, [pc, #80]	; (800473c <DMA_CalcBaseAndBitshift+0x64>)
 80046ea:	fba2 2303 	umull	r2, r3, r2, r3
 80046ee:	091b      	lsrs	r3, r3, #4
 80046f0:	60fb      	str	r3, [r7, #12]
 80046f2:	4a13      	ldr	r2, [pc, #76]	; (8004740 <DMA_CalcBaseAndBitshift+0x68>)
 80046f4:	68fb      	ldr	r3, [r7, #12]
 80046f6:	4413      	add	r3, r2
 80046f8:	781b      	ldrb	r3, [r3, #0]
 80046fa:	461a      	mov	r2, r3
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	65da      	str	r2, [r3, #92]	; 0x5c
 8004700:	68fb      	ldr	r3, [r7, #12]
 8004702:	2b03      	cmp	r3, #3
 8004704:	d909      	bls.n	800471a <DMA_CalcBaseAndBitshift+0x42>
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800470e:	f023 0303 	bic.w	r3, r3, #3
 8004712:	1d1a      	adds	r2, r3, #4
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	659a      	str	r2, [r3, #88]	; 0x58
 8004718:	e007      	b.n	800472a <DMA_CalcBaseAndBitshift+0x52>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8004722:	f023 0303 	bic.w	r3, r3, #3
 8004726:	687a      	ldr	r2, [r7, #4]
 8004728:	6593      	str	r3, [r2, #88]	; 0x58
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800472e:	4618      	mov	r0, r3
 8004730:	3714      	adds	r7, #20
 8004732:	46bd      	mov	sp, r7
 8004734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004738:	4770      	bx	lr
 800473a:	bf00      	nop
 800473c:	aaaaaaab 	.word	0xaaaaaaab
 8004740:	0800fabc 	.word	0x0800fabc

08004744 <DMA_CheckFifoParam>:
 8004744:	b480      	push	{r7}
 8004746:	b085      	sub	sp, #20
 8004748:	af00      	add	r7, sp, #0
 800474a:	6078      	str	r0, [r7, #4]
 800474c:	2300      	movs	r3, #0
 800474e:	73fb      	strb	r3, [r7, #15]
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004754:	60bb      	str	r3, [r7, #8]
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	699b      	ldr	r3, [r3, #24]
 800475a:	2b00      	cmp	r3, #0
 800475c:	d11f      	bne.n	800479e <DMA_CheckFifoParam+0x5a>
 800475e:	68bb      	ldr	r3, [r7, #8]
 8004760:	2b03      	cmp	r3, #3
 8004762:	d856      	bhi.n	8004812 <DMA_CheckFifoParam+0xce>
 8004764:	a201      	add	r2, pc, #4	; (adr r2, 800476c <DMA_CheckFifoParam+0x28>)
 8004766:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800476a:	bf00      	nop
 800476c:	0800477d 	.word	0x0800477d
 8004770:	0800478f 	.word	0x0800478f
 8004774:	0800477d 	.word	0x0800477d
 8004778:	08004813 	.word	0x08004813
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004780:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004784:	2b00      	cmp	r3, #0
 8004786:	d046      	beq.n	8004816 <DMA_CheckFifoParam+0xd2>
 8004788:	2301      	movs	r3, #1
 800478a:	73fb      	strb	r3, [r7, #15]
 800478c:	e043      	b.n	8004816 <DMA_CheckFifoParam+0xd2>
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004792:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004796:	d140      	bne.n	800481a <DMA_CheckFifoParam+0xd6>
 8004798:	2301      	movs	r3, #1
 800479a:	73fb      	strb	r3, [r7, #15]
 800479c:	e03d      	b.n	800481a <DMA_CheckFifoParam+0xd6>
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	699b      	ldr	r3, [r3, #24]
 80047a2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80047a6:	d121      	bne.n	80047ec <DMA_CheckFifoParam+0xa8>
 80047a8:	68bb      	ldr	r3, [r7, #8]
 80047aa:	2b03      	cmp	r3, #3
 80047ac:	d837      	bhi.n	800481e <DMA_CheckFifoParam+0xda>
 80047ae:	a201      	add	r2, pc, #4	; (adr r2, 80047b4 <DMA_CheckFifoParam+0x70>)
 80047b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80047b4:	080047c5 	.word	0x080047c5
 80047b8:	080047cb 	.word	0x080047cb
 80047bc:	080047c5 	.word	0x080047c5
 80047c0:	080047dd 	.word	0x080047dd
 80047c4:	2301      	movs	r3, #1
 80047c6:	73fb      	strb	r3, [r7, #15]
 80047c8:	e030      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047ce:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d025      	beq.n	8004822 <DMA_CheckFifoParam+0xde>
 80047d6:	2301      	movs	r3, #1
 80047d8:	73fb      	strb	r3, [r7, #15]
 80047da:	e022      	b.n	8004822 <DMA_CheckFifoParam+0xde>
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047e0:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80047e4:	d11f      	bne.n	8004826 <DMA_CheckFifoParam+0xe2>
 80047e6:	2301      	movs	r3, #1
 80047e8:	73fb      	strb	r3, [r7, #15]
 80047ea:	e01c      	b.n	8004826 <DMA_CheckFifoParam+0xe2>
 80047ec:	68bb      	ldr	r3, [r7, #8]
 80047ee:	2b02      	cmp	r3, #2
 80047f0:	d903      	bls.n	80047fa <DMA_CheckFifoParam+0xb6>
 80047f2:	68bb      	ldr	r3, [r7, #8]
 80047f4:	2b03      	cmp	r3, #3
 80047f6:	d003      	beq.n	8004800 <DMA_CheckFifoParam+0xbc>
 80047f8:	e018      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 80047fa:	2301      	movs	r3, #1
 80047fc:	73fb      	strb	r3, [r7, #15]
 80047fe:	e015      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004804:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004808:	2b00      	cmp	r3, #0
 800480a:	d00e      	beq.n	800482a <DMA_CheckFifoParam+0xe6>
 800480c:	2301      	movs	r3, #1
 800480e:	73fb      	strb	r3, [r7, #15]
 8004810:	e00b      	b.n	800482a <DMA_CheckFifoParam+0xe6>
 8004812:	bf00      	nop
 8004814:	e00a      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 8004816:	bf00      	nop
 8004818:	e008      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 800481a:	bf00      	nop
 800481c:	e006      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 800481e:	bf00      	nop
 8004820:	e004      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 8004822:	bf00      	nop
 8004824:	e002      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 8004826:	bf00      	nop
 8004828:	e000      	b.n	800482c <DMA_CheckFifoParam+0xe8>
 800482a:	bf00      	nop
 800482c:	7bfb      	ldrb	r3, [r7, #15]
 800482e:	4618      	mov	r0, r3
 8004830:	3714      	adds	r7, #20
 8004832:	46bd      	mov	sp, r7
 8004834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004838:	4770      	bx	lr
 800483a:	bf00      	nop

0800483c <HAL_GPIO_Init>:
 800483c:	b480      	push	{r7}
 800483e:	b089      	sub	sp, #36	; 0x24
 8004840:	af00      	add	r7, sp, #0
 8004842:	6078      	str	r0, [r7, #4]
 8004844:	6039      	str	r1, [r7, #0]
 8004846:	2300      	movs	r3, #0
 8004848:	617b      	str	r3, [r7, #20]
 800484a:	2300      	movs	r3, #0
 800484c:	613b      	str	r3, [r7, #16]
 800484e:	2300      	movs	r3, #0
 8004850:	61bb      	str	r3, [r7, #24]
 8004852:	2300      	movs	r3, #0
 8004854:	61fb      	str	r3, [r7, #28]
 8004856:	e159      	b.n	8004b0c <HAL_GPIO_Init+0x2d0>
 8004858:	2201      	movs	r2, #1
 800485a:	69fb      	ldr	r3, [r7, #28]
 800485c:	fa02 f303 	lsl.w	r3, r2, r3
 8004860:	617b      	str	r3, [r7, #20]
 8004862:	683b      	ldr	r3, [r7, #0]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	697a      	ldr	r2, [r7, #20]
 8004868:	4013      	ands	r3, r2
 800486a:	613b      	str	r3, [r7, #16]
 800486c:	693a      	ldr	r2, [r7, #16]
 800486e:	697b      	ldr	r3, [r7, #20]
 8004870:	429a      	cmp	r2, r3
 8004872:	f040 8148 	bne.w	8004b06 <HAL_GPIO_Init+0x2ca>
 8004876:	683b      	ldr	r3, [r7, #0]
 8004878:	685b      	ldr	r3, [r3, #4]
 800487a:	f003 0303 	and.w	r3, r3, #3
 800487e:	2b01      	cmp	r3, #1
 8004880:	d005      	beq.n	800488e <HAL_GPIO_Init+0x52>
 8004882:	683b      	ldr	r3, [r7, #0]
 8004884:	685b      	ldr	r3, [r3, #4]
 8004886:	f003 0303 	and.w	r3, r3, #3
 800488a:	2b02      	cmp	r3, #2
 800488c:	d130      	bne.n	80048f0 <HAL_GPIO_Init+0xb4>
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	689b      	ldr	r3, [r3, #8]
 8004892:	61bb      	str	r3, [r7, #24]
 8004894:	69fb      	ldr	r3, [r7, #28]
 8004896:	005b      	lsls	r3, r3, #1
 8004898:	2203      	movs	r2, #3
 800489a:	fa02 f303 	lsl.w	r3, r2, r3
 800489e:	43db      	mvns	r3, r3
 80048a0:	69ba      	ldr	r2, [r7, #24]
 80048a2:	4013      	ands	r3, r2
 80048a4:	61bb      	str	r3, [r7, #24]
 80048a6:	683b      	ldr	r3, [r7, #0]
 80048a8:	68da      	ldr	r2, [r3, #12]
 80048aa:	69fb      	ldr	r3, [r7, #28]
 80048ac:	005b      	lsls	r3, r3, #1
 80048ae:	fa02 f303 	lsl.w	r3, r2, r3
 80048b2:	69ba      	ldr	r2, [r7, #24]
 80048b4:	4313      	orrs	r3, r2
 80048b6:	61bb      	str	r3, [r7, #24]
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	69ba      	ldr	r2, [r7, #24]
 80048bc:	609a      	str	r2, [r3, #8]
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	685b      	ldr	r3, [r3, #4]
 80048c2:	61bb      	str	r3, [r7, #24]
 80048c4:	2201      	movs	r2, #1
 80048c6:	69fb      	ldr	r3, [r7, #28]
 80048c8:	fa02 f303 	lsl.w	r3, r2, r3
 80048cc:	43db      	mvns	r3, r3
 80048ce:	69ba      	ldr	r2, [r7, #24]
 80048d0:	4013      	ands	r3, r2
 80048d2:	61bb      	str	r3, [r7, #24]
 80048d4:	683b      	ldr	r3, [r7, #0]
 80048d6:	685b      	ldr	r3, [r3, #4]
 80048d8:	091b      	lsrs	r3, r3, #4
 80048da:	f003 0201 	and.w	r2, r3, #1
 80048de:	69fb      	ldr	r3, [r7, #28]
 80048e0:	fa02 f303 	lsl.w	r3, r2, r3
 80048e4:	69ba      	ldr	r2, [r7, #24]
 80048e6:	4313      	orrs	r3, r2
 80048e8:	61bb      	str	r3, [r7, #24]
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	69ba      	ldr	r2, [r7, #24]
 80048ee:	605a      	str	r2, [r3, #4]
 80048f0:	683b      	ldr	r3, [r7, #0]
 80048f2:	685b      	ldr	r3, [r3, #4]
 80048f4:	f003 0303 	and.w	r3, r3, #3
 80048f8:	2b03      	cmp	r3, #3
 80048fa:	d017      	beq.n	800492c <HAL_GPIO_Init+0xf0>
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	68db      	ldr	r3, [r3, #12]
 8004900:	61bb      	str	r3, [r7, #24]
 8004902:	69fb      	ldr	r3, [r7, #28]
 8004904:	005b      	lsls	r3, r3, #1
 8004906:	2203      	movs	r2, #3
 8004908:	fa02 f303 	lsl.w	r3, r2, r3
 800490c:	43db      	mvns	r3, r3
 800490e:	69ba      	ldr	r2, [r7, #24]
 8004910:	4013      	ands	r3, r2
 8004912:	61bb      	str	r3, [r7, #24]
 8004914:	683b      	ldr	r3, [r7, #0]
 8004916:	689a      	ldr	r2, [r3, #8]
 8004918:	69fb      	ldr	r3, [r7, #28]
 800491a:	005b      	lsls	r3, r3, #1
 800491c:	fa02 f303 	lsl.w	r3, r2, r3
 8004920:	69ba      	ldr	r2, [r7, #24]
 8004922:	4313      	orrs	r3, r2
 8004924:	61bb      	str	r3, [r7, #24]
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	69ba      	ldr	r2, [r7, #24]
 800492a:	60da      	str	r2, [r3, #12]
 800492c:	683b      	ldr	r3, [r7, #0]
 800492e:	685b      	ldr	r3, [r3, #4]
 8004930:	f003 0303 	and.w	r3, r3, #3
 8004934:	2b02      	cmp	r3, #2
 8004936:	d123      	bne.n	8004980 <HAL_GPIO_Init+0x144>
 8004938:	69fb      	ldr	r3, [r7, #28]
 800493a:	08da      	lsrs	r2, r3, #3
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	3208      	adds	r2, #8
 8004940:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004944:	61bb      	str	r3, [r7, #24]
 8004946:	69fb      	ldr	r3, [r7, #28]
 8004948:	f003 0307 	and.w	r3, r3, #7
 800494c:	009b      	lsls	r3, r3, #2
 800494e:	220f      	movs	r2, #15
 8004950:	fa02 f303 	lsl.w	r3, r2, r3
 8004954:	43db      	mvns	r3, r3
 8004956:	69ba      	ldr	r2, [r7, #24]
 8004958:	4013      	ands	r3, r2
 800495a:	61bb      	str	r3, [r7, #24]
 800495c:	683b      	ldr	r3, [r7, #0]
 800495e:	691a      	ldr	r2, [r3, #16]
 8004960:	69fb      	ldr	r3, [r7, #28]
 8004962:	f003 0307 	and.w	r3, r3, #7
 8004966:	009b      	lsls	r3, r3, #2
 8004968:	fa02 f303 	lsl.w	r3, r2, r3
 800496c:	69ba      	ldr	r2, [r7, #24]
 800496e:	4313      	orrs	r3, r2
 8004970:	61bb      	str	r3, [r7, #24]
 8004972:	69fb      	ldr	r3, [r7, #28]
 8004974:	08da      	lsrs	r2, r3, #3
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	3208      	adds	r2, #8
 800497a:	69b9      	ldr	r1, [r7, #24]
 800497c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	61bb      	str	r3, [r7, #24]
 8004986:	69fb      	ldr	r3, [r7, #28]
 8004988:	005b      	lsls	r3, r3, #1
 800498a:	2203      	movs	r2, #3
 800498c:	fa02 f303 	lsl.w	r3, r2, r3
 8004990:	43db      	mvns	r3, r3
 8004992:	69ba      	ldr	r2, [r7, #24]
 8004994:	4013      	ands	r3, r2
 8004996:	61bb      	str	r3, [r7, #24]
 8004998:	683b      	ldr	r3, [r7, #0]
 800499a:	685b      	ldr	r3, [r3, #4]
 800499c:	f003 0203 	and.w	r2, r3, #3
 80049a0:	69fb      	ldr	r3, [r7, #28]
 80049a2:	005b      	lsls	r3, r3, #1
 80049a4:	fa02 f303 	lsl.w	r3, r2, r3
 80049a8:	69ba      	ldr	r2, [r7, #24]
 80049aa:	4313      	orrs	r3, r2
 80049ac:	61bb      	str	r3, [r7, #24]
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	69ba      	ldr	r2, [r7, #24]
 80049b2:	601a      	str	r2, [r3, #0]
 80049b4:	683b      	ldr	r3, [r7, #0]
 80049b6:	685b      	ldr	r3, [r3, #4]
 80049b8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80049bc:	2b00      	cmp	r3, #0
 80049be:	f000 80a2 	beq.w	8004b06 <HAL_GPIO_Init+0x2ca>
 80049c2:	2300      	movs	r3, #0
 80049c4:	60fb      	str	r3, [r7, #12]
 80049c6:	4b57      	ldr	r3, [pc, #348]	; (8004b24 <HAL_GPIO_Init+0x2e8>)
 80049c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049ca:	4a56      	ldr	r2, [pc, #344]	; (8004b24 <HAL_GPIO_Init+0x2e8>)
 80049cc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80049d0:	6453      	str	r3, [r2, #68]	; 0x44
 80049d2:	4b54      	ldr	r3, [pc, #336]	; (8004b24 <HAL_GPIO_Init+0x2e8>)
 80049d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049d6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80049da:	60fb      	str	r3, [r7, #12]
 80049dc:	68fb      	ldr	r3, [r7, #12]
 80049de:	4a52      	ldr	r2, [pc, #328]	; (8004b28 <HAL_GPIO_Init+0x2ec>)
 80049e0:	69fb      	ldr	r3, [r7, #28]
 80049e2:	089b      	lsrs	r3, r3, #2
 80049e4:	3302      	adds	r3, #2
 80049e6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80049ea:	61bb      	str	r3, [r7, #24]
 80049ec:	69fb      	ldr	r3, [r7, #28]
 80049ee:	f003 0303 	and.w	r3, r3, #3
 80049f2:	009b      	lsls	r3, r3, #2
 80049f4:	220f      	movs	r2, #15
 80049f6:	fa02 f303 	lsl.w	r3, r2, r3
 80049fa:	43db      	mvns	r3, r3
 80049fc:	69ba      	ldr	r2, [r7, #24]
 80049fe:	4013      	ands	r3, r2
 8004a00:	61bb      	str	r3, [r7, #24]
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	4a49      	ldr	r2, [pc, #292]	; (8004b2c <HAL_GPIO_Init+0x2f0>)
 8004a06:	4293      	cmp	r3, r2
 8004a08:	d019      	beq.n	8004a3e <HAL_GPIO_Init+0x202>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	4a48      	ldr	r2, [pc, #288]	; (8004b30 <HAL_GPIO_Init+0x2f4>)
 8004a0e:	4293      	cmp	r3, r2
 8004a10:	d013      	beq.n	8004a3a <HAL_GPIO_Init+0x1fe>
 8004a12:	687b      	ldr	r3, [r7, #4]
 8004a14:	4a47      	ldr	r2, [pc, #284]	; (8004b34 <HAL_GPIO_Init+0x2f8>)
 8004a16:	4293      	cmp	r3, r2
 8004a18:	d00d      	beq.n	8004a36 <HAL_GPIO_Init+0x1fa>
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	4a46      	ldr	r2, [pc, #280]	; (8004b38 <HAL_GPIO_Init+0x2fc>)
 8004a1e:	4293      	cmp	r3, r2
 8004a20:	d007      	beq.n	8004a32 <HAL_GPIO_Init+0x1f6>
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	4a45      	ldr	r2, [pc, #276]	; (8004b3c <HAL_GPIO_Init+0x300>)
 8004a26:	4293      	cmp	r3, r2
 8004a28:	d101      	bne.n	8004a2e <HAL_GPIO_Init+0x1f2>
 8004a2a:	2304      	movs	r3, #4
 8004a2c:	e008      	b.n	8004a40 <HAL_GPIO_Init+0x204>
 8004a2e:	2307      	movs	r3, #7
 8004a30:	e006      	b.n	8004a40 <HAL_GPIO_Init+0x204>
 8004a32:	2303      	movs	r3, #3
 8004a34:	e004      	b.n	8004a40 <HAL_GPIO_Init+0x204>
 8004a36:	2302      	movs	r3, #2
 8004a38:	e002      	b.n	8004a40 <HAL_GPIO_Init+0x204>
 8004a3a:	2301      	movs	r3, #1
 8004a3c:	e000      	b.n	8004a40 <HAL_GPIO_Init+0x204>
 8004a3e:	2300      	movs	r3, #0
 8004a40:	69fa      	ldr	r2, [r7, #28]
 8004a42:	f002 0203 	and.w	r2, r2, #3
 8004a46:	0092      	lsls	r2, r2, #2
 8004a48:	4093      	lsls	r3, r2
 8004a4a:	69ba      	ldr	r2, [r7, #24]
 8004a4c:	4313      	orrs	r3, r2
 8004a4e:	61bb      	str	r3, [r7, #24]
 8004a50:	4935      	ldr	r1, [pc, #212]	; (8004b28 <HAL_GPIO_Init+0x2ec>)
 8004a52:	69fb      	ldr	r3, [r7, #28]
 8004a54:	089b      	lsrs	r3, r3, #2
 8004a56:	3302      	adds	r3, #2
 8004a58:	69ba      	ldr	r2, [r7, #24]
 8004a5a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004a5e:	4b38      	ldr	r3, [pc, #224]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004a60:	689b      	ldr	r3, [r3, #8]
 8004a62:	61bb      	str	r3, [r7, #24]
 8004a64:	693b      	ldr	r3, [r7, #16]
 8004a66:	43db      	mvns	r3, r3
 8004a68:	69ba      	ldr	r2, [r7, #24]
 8004a6a:	4013      	ands	r3, r2
 8004a6c:	61bb      	str	r3, [r7, #24]
 8004a6e:	683b      	ldr	r3, [r7, #0]
 8004a70:	685b      	ldr	r3, [r3, #4]
 8004a72:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	d003      	beq.n	8004a82 <HAL_GPIO_Init+0x246>
 8004a7a:	69ba      	ldr	r2, [r7, #24]
 8004a7c:	693b      	ldr	r3, [r7, #16]
 8004a7e:	4313      	orrs	r3, r2
 8004a80:	61bb      	str	r3, [r7, #24]
 8004a82:	4a2f      	ldr	r2, [pc, #188]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004a84:	69bb      	ldr	r3, [r7, #24]
 8004a86:	6093      	str	r3, [r2, #8]
 8004a88:	4b2d      	ldr	r3, [pc, #180]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004a8a:	68db      	ldr	r3, [r3, #12]
 8004a8c:	61bb      	str	r3, [r7, #24]
 8004a8e:	693b      	ldr	r3, [r7, #16]
 8004a90:	43db      	mvns	r3, r3
 8004a92:	69ba      	ldr	r2, [r7, #24]
 8004a94:	4013      	ands	r3, r2
 8004a96:	61bb      	str	r3, [r7, #24]
 8004a98:	683b      	ldr	r3, [r7, #0]
 8004a9a:	685b      	ldr	r3, [r3, #4]
 8004a9c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004aa0:	2b00      	cmp	r3, #0
 8004aa2:	d003      	beq.n	8004aac <HAL_GPIO_Init+0x270>
 8004aa4:	69ba      	ldr	r2, [r7, #24]
 8004aa6:	693b      	ldr	r3, [r7, #16]
 8004aa8:	4313      	orrs	r3, r2
 8004aaa:	61bb      	str	r3, [r7, #24]
 8004aac:	4a24      	ldr	r2, [pc, #144]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004aae:	69bb      	ldr	r3, [r7, #24]
 8004ab0:	60d3      	str	r3, [r2, #12]
 8004ab2:	4b23      	ldr	r3, [pc, #140]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004ab4:	685b      	ldr	r3, [r3, #4]
 8004ab6:	61bb      	str	r3, [r7, #24]
 8004ab8:	693b      	ldr	r3, [r7, #16]
 8004aba:	43db      	mvns	r3, r3
 8004abc:	69ba      	ldr	r2, [r7, #24]
 8004abe:	4013      	ands	r3, r2
 8004ac0:	61bb      	str	r3, [r7, #24]
 8004ac2:	683b      	ldr	r3, [r7, #0]
 8004ac4:	685b      	ldr	r3, [r3, #4]
 8004ac6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d003      	beq.n	8004ad6 <HAL_GPIO_Init+0x29a>
 8004ace:	69ba      	ldr	r2, [r7, #24]
 8004ad0:	693b      	ldr	r3, [r7, #16]
 8004ad2:	4313      	orrs	r3, r2
 8004ad4:	61bb      	str	r3, [r7, #24]
 8004ad6:	4a1a      	ldr	r2, [pc, #104]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004ad8:	69bb      	ldr	r3, [r7, #24]
 8004ada:	6053      	str	r3, [r2, #4]
 8004adc:	4b18      	ldr	r3, [pc, #96]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	61bb      	str	r3, [r7, #24]
 8004ae2:	693b      	ldr	r3, [r7, #16]
 8004ae4:	43db      	mvns	r3, r3
 8004ae6:	69ba      	ldr	r2, [r7, #24]
 8004ae8:	4013      	ands	r3, r2
 8004aea:	61bb      	str	r3, [r7, #24]
 8004aec:	683b      	ldr	r3, [r7, #0]
 8004aee:	685b      	ldr	r3, [r3, #4]
 8004af0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004af4:	2b00      	cmp	r3, #0
 8004af6:	d003      	beq.n	8004b00 <HAL_GPIO_Init+0x2c4>
 8004af8:	69ba      	ldr	r2, [r7, #24]
 8004afa:	693b      	ldr	r3, [r7, #16]
 8004afc:	4313      	orrs	r3, r2
 8004afe:	61bb      	str	r3, [r7, #24]
 8004b00:	4a0f      	ldr	r2, [pc, #60]	; (8004b40 <HAL_GPIO_Init+0x304>)
 8004b02:	69bb      	ldr	r3, [r7, #24]
 8004b04:	6013      	str	r3, [r2, #0]
 8004b06:	69fb      	ldr	r3, [r7, #28]
 8004b08:	3301      	adds	r3, #1
 8004b0a:	61fb      	str	r3, [r7, #28]
 8004b0c:	69fb      	ldr	r3, [r7, #28]
 8004b0e:	2b0f      	cmp	r3, #15
 8004b10:	f67f aea2 	bls.w	8004858 <HAL_GPIO_Init+0x1c>
 8004b14:	bf00      	nop
 8004b16:	bf00      	nop
 8004b18:	3724      	adds	r7, #36	; 0x24
 8004b1a:	46bd      	mov	sp, r7
 8004b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b20:	4770      	bx	lr
 8004b22:	bf00      	nop
 8004b24:	40023800 	.word	0x40023800
 8004b28:	40013800 	.word	0x40013800
 8004b2c:	40020000 	.word	0x40020000
 8004b30:	40020400 	.word	0x40020400
 8004b34:	40020800 	.word	0x40020800
 8004b38:	40020c00 	.word	0x40020c00
 8004b3c:	40021000 	.word	0x40021000
 8004b40:	40013c00 	.word	0x40013c00

08004b44 <HAL_GPIO_WritePin>:
 8004b44:	b480      	push	{r7}
 8004b46:	b083      	sub	sp, #12
 8004b48:	af00      	add	r7, sp, #0
 8004b4a:	6078      	str	r0, [r7, #4]
 8004b4c:	460b      	mov	r3, r1
 8004b4e:	807b      	strh	r3, [r7, #2]
 8004b50:	4613      	mov	r3, r2
 8004b52:	707b      	strb	r3, [r7, #1]
 8004b54:	787b      	ldrb	r3, [r7, #1]
 8004b56:	2b00      	cmp	r3, #0
 8004b58:	d003      	beq.n	8004b62 <HAL_GPIO_WritePin+0x1e>
 8004b5a:	887a      	ldrh	r2, [r7, #2]
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	619a      	str	r2, [r3, #24]
 8004b60:	e003      	b.n	8004b6a <HAL_GPIO_WritePin+0x26>
 8004b62:	887b      	ldrh	r3, [r7, #2]
 8004b64:	041a      	lsls	r2, r3, #16
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	619a      	str	r2, [r3, #24]
 8004b6a:	bf00      	nop
 8004b6c:	370c      	adds	r7, #12
 8004b6e:	46bd      	mov	sp, r7
 8004b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b74:	4770      	bx	lr
	...

08004b78 <HAL_PWR_EnterSTOPMode>:
 8004b78:	b480      	push	{r7}
 8004b7a:	b083      	sub	sp, #12
 8004b7c:	af00      	add	r7, sp, #0
 8004b7e:	6078      	str	r0, [r7, #4]
 8004b80:	460b      	mov	r3, r1
 8004b82:	70fb      	strb	r3, [r7, #3]
 8004b84:	4b10      	ldr	r3, [pc, #64]	; (8004bc8 <HAL_PWR_EnterSTOPMode+0x50>)
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	f023 0203 	bic.w	r2, r3, #3
 8004b8c:	490e      	ldr	r1, [pc, #56]	; (8004bc8 <HAL_PWR_EnterSTOPMode+0x50>)
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	4313      	orrs	r3, r2
 8004b92:	600b      	str	r3, [r1, #0]
 8004b94:	4b0d      	ldr	r3, [pc, #52]	; (8004bcc <HAL_PWR_EnterSTOPMode+0x54>)
 8004b96:	691b      	ldr	r3, [r3, #16]
 8004b98:	4a0c      	ldr	r2, [pc, #48]	; (8004bcc <HAL_PWR_EnterSTOPMode+0x54>)
 8004b9a:	f043 0304 	orr.w	r3, r3, #4
 8004b9e:	6113      	str	r3, [r2, #16]
 8004ba0:	78fb      	ldrb	r3, [r7, #3]
 8004ba2:	2b01      	cmp	r3, #1
 8004ba4:	d101      	bne.n	8004baa <HAL_PWR_EnterSTOPMode+0x32>
 8004ba6:	bf30      	wfi
 8004ba8:	e002      	b.n	8004bb0 <HAL_PWR_EnterSTOPMode+0x38>
 8004baa:	bf40      	sev
 8004bac:	bf20      	wfe
 8004bae:	bf20      	wfe
 8004bb0:	4b06      	ldr	r3, [pc, #24]	; (8004bcc <HAL_PWR_EnterSTOPMode+0x54>)
 8004bb2:	691b      	ldr	r3, [r3, #16]
 8004bb4:	4a05      	ldr	r2, [pc, #20]	; (8004bcc <HAL_PWR_EnterSTOPMode+0x54>)
 8004bb6:	f023 0304 	bic.w	r3, r3, #4
 8004bba:	6113      	str	r3, [r2, #16]
 8004bbc:	bf00      	nop
 8004bbe:	370c      	adds	r7, #12
 8004bc0:	46bd      	mov	sp, r7
 8004bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bc6:	4770      	bx	lr
 8004bc8:	40007000 	.word	0x40007000
 8004bcc:	e000ed00 	.word	0xe000ed00

08004bd0 <HAL_RCC_OscConfig>:
 8004bd0:	b580      	push	{r7, lr}
 8004bd2:	b086      	sub	sp, #24
 8004bd4:	af00      	add	r7, sp, #0
 8004bd6:	6078      	str	r0, [r7, #4]
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d101      	bne.n	8004be2 <HAL_RCC_OscConfig+0x12>
 8004bde:	2301      	movs	r3, #1
 8004be0:	e267      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	f003 0301 	and.w	r3, r3, #1
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d075      	beq.n	8004cda <HAL_RCC_OscConfig+0x10a>
 8004bee:	4b88      	ldr	r3, [pc, #544]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004bf0:	689b      	ldr	r3, [r3, #8]
 8004bf2:	f003 030c 	and.w	r3, r3, #12
 8004bf6:	2b04      	cmp	r3, #4
 8004bf8:	d00c      	beq.n	8004c14 <HAL_RCC_OscConfig+0x44>
 8004bfa:	4b85      	ldr	r3, [pc, #532]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004bfc:	689b      	ldr	r3, [r3, #8]
 8004bfe:	f003 030c 	and.w	r3, r3, #12
 8004c02:	2b08      	cmp	r3, #8
 8004c04:	d112      	bne.n	8004c2c <HAL_RCC_OscConfig+0x5c>
 8004c06:	4b82      	ldr	r3, [pc, #520]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c08:	685b      	ldr	r3, [r3, #4]
 8004c0a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004c0e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004c12:	d10b      	bne.n	8004c2c <HAL_RCC_OscConfig+0x5c>
 8004c14:	4b7e      	ldr	r3, [pc, #504]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d05b      	beq.n	8004cd8 <HAL_RCC_OscConfig+0x108>
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	685b      	ldr	r3, [r3, #4]
 8004c24:	2b00      	cmp	r3, #0
 8004c26:	d157      	bne.n	8004cd8 <HAL_RCC_OscConfig+0x108>
 8004c28:	2301      	movs	r3, #1
 8004c2a:	e242      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	685b      	ldr	r3, [r3, #4]
 8004c30:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004c34:	d106      	bne.n	8004c44 <HAL_RCC_OscConfig+0x74>
 8004c36:	4b76      	ldr	r3, [pc, #472]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	4a75      	ldr	r2, [pc, #468]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c3c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004c40:	6013      	str	r3, [r2, #0]
 8004c42:	e01d      	b.n	8004c80 <HAL_RCC_OscConfig+0xb0>
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	685b      	ldr	r3, [r3, #4]
 8004c48:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004c4c:	d10c      	bne.n	8004c68 <HAL_RCC_OscConfig+0x98>
 8004c4e:	4b70      	ldr	r3, [pc, #448]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	4a6f      	ldr	r2, [pc, #444]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c54:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004c58:	6013      	str	r3, [r2, #0]
 8004c5a:	4b6d      	ldr	r3, [pc, #436]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	4a6c      	ldr	r2, [pc, #432]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c60:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004c64:	6013      	str	r3, [r2, #0]
 8004c66:	e00b      	b.n	8004c80 <HAL_RCC_OscConfig+0xb0>
 8004c68:	4b69      	ldr	r3, [pc, #420]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	4a68      	ldr	r2, [pc, #416]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c6e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004c72:	6013      	str	r3, [r2, #0]
 8004c74:	4b66      	ldr	r3, [pc, #408]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	4a65      	ldr	r2, [pc, #404]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004c7a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004c7e:	6013      	str	r3, [r2, #0]
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	685b      	ldr	r3, [r3, #4]
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	d013      	beq.n	8004cb0 <HAL_RCC_OscConfig+0xe0>
 8004c88:	f7ff f874 	bl	8003d74 <HAL_GetTick>
 8004c8c:	6138      	str	r0, [r7, #16]
 8004c8e:	e008      	b.n	8004ca2 <HAL_RCC_OscConfig+0xd2>
 8004c90:	f7ff f870 	bl	8003d74 <HAL_GetTick>
 8004c94:	4602      	mov	r2, r0
 8004c96:	693b      	ldr	r3, [r7, #16]
 8004c98:	1ad3      	subs	r3, r2, r3
 8004c9a:	2b64      	cmp	r3, #100	; 0x64
 8004c9c:	d901      	bls.n	8004ca2 <HAL_RCC_OscConfig+0xd2>
 8004c9e:	2303      	movs	r3, #3
 8004ca0:	e207      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004ca2:	4b5b      	ldr	r3, [pc, #364]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d0f0      	beq.n	8004c90 <HAL_RCC_OscConfig+0xc0>
 8004cae:	e014      	b.n	8004cda <HAL_RCC_OscConfig+0x10a>
 8004cb0:	f7ff f860 	bl	8003d74 <HAL_GetTick>
 8004cb4:	6138      	str	r0, [r7, #16]
 8004cb6:	e008      	b.n	8004cca <HAL_RCC_OscConfig+0xfa>
 8004cb8:	f7ff f85c 	bl	8003d74 <HAL_GetTick>
 8004cbc:	4602      	mov	r2, r0
 8004cbe:	693b      	ldr	r3, [r7, #16]
 8004cc0:	1ad3      	subs	r3, r2, r3
 8004cc2:	2b64      	cmp	r3, #100	; 0x64
 8004cc4:	d901      	bls.n	8004cca <HAL_RCC_OscConfig+0xfa>
 8004cc6:	2303      	movs	r3, #3
 8004cc8:	e1f3      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004cca:	4b51      	ldr	r3, [pc, #324]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d1f0      	bne.n	8004cb8 <HAL_RCC_OscConfig+0xe8>
 8004cd6:	e000      	b.n	8004cda <HAL_RCC_OscConfig+0x10a>
 8004cd8:	bf00      	nop
 8004cda:	687b      	ldr	r3, [r7, #4]
 8004cdc:	681b      	ldr	r3, [r3, #0]
 8004cde:	f003 0302 	and.w	r3, r3, #2
 8004ce2:	2b00      	cmp	r3, #0
 8004ce4:	d063      	beq.n	8004dae <HAL_RCC_OscConfig+0x1de>
 8004ce6:	4b4a      	ldr	r3, [pc, #296]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004ce8:	689b      	ldr	r3, [r3, #8]
 8004cea:	f003 030c 	and.w	r3, r3, #12
 8004cee:	2b00      	cmp	r3, #0
 8004cf0:	d00b      	beq.n	8004d0a <HAL_RCC_OscConfig+0x13a>
 8004cf2:	4b47      	ldr	r3, [pc, #284]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004cf4:	689b      	ldr	r3, [r3, #8]
 8004cf6:	f003 030c 	and.w	r3, r3, #12
 8004cfa:	2b08      	cmp	r3, #8
 8004cfc:	d11c      	bne.n	8004d38 <HAL_RCC_OscConfig+0x168>
 8004cfe:	4b44      	ldr	r3, [pc, #272]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004d00:	685b      	ldr	r3, [r3, #4]
 8004d02:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d116      	bne.n	8004d38 <HAL_RCC_OscConfig+0x168>
 8004d0a:	4b41      	ldr	r3, [pc, #260]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	f003 0302 	and.w	r3, r3, #2
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d005      	beq.n	8004d22 <HAL_RCC_OscConfig+0x152>
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	68db      	ldr	r3, [r3, #12]
 8004d1a:	2b01      	cmp	r3, #1
 8004d1c:	d001      	beq.n	8004d22 <HAL_RCC_OscConfig+0x152>
 8004d1e:	2301      	movs	r3, #1
 8004d20:	e1c7      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004d22:	4b3b      	ldr	r3, [pc, #236]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004d24:	681b      	ldr	r3, [r3, #0]
 8004d26:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	691b      	ldr	r3, [r3, #16]
 8004d2e:	00db      	lsls	r3, r3, #3
 8004d30:	4937      	ldr	r1, [pc, #220]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004d32:	4313      	orrs	r3, r2
 8004d34:	600b      	str	r3, [r1, #0]
 8004d36:	e03a      	b.n	8004dae <HAL_RCC_OscConfig+0x1de>
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	68db      	ldr	r3, [r3, #12]
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	d020      	beq.n	8004d82 <HAL_RCC_OscConfig+0x1b2>
 8004d40:	4b34      	ldr	r3, [pc, #208]	; (8004e14 <HAL_RCC_OscConfig+0x244>)
 8004d42:	2201      	movs	r2, #1
 8004d44:	601a      	str	r2, [r3, #0]
 8004d46:	f7ff f815 	bl	8003d74 <HAL_GetTick>
 8004d4a:	6138      	str	r0, [r7, #16]
 8004d4c:	e008      	b.n	8004d60 <HAL_RCC_OscConfig+0x190>
 8004d4e:	f7ff f811 	bl	8003d74 <HAL_GetTick>
 8004d52:	4602      	mov	r2, r0
 8004d54:	693b      	ldr	r3, [r7, #16]
 8004d56:	1ad3      	subs	r3, r2, r3
 8004d58:	2b02      	cmp	r3, #2
 8004d5a:	d901      	bls.n	8004d60 <HAL_RCC_OscConfig+0x190>
 8004d5c:	2303      	movs	r3, #3
 8004d5e:	e1a8      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004d60:	4b2b      	ldr	r3, [pc, #172]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	f003 0302 	and.w	r3, r3, #2
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d0f0      	beq.n	8004d4e <HAL_RCC_OscConfig+0x17e>
 8004d6c:	4b28      	ldr	r3, [pc, #160]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	691b      	ldr	r3, [r3, #16]
 8004d78:	00db      	lsls	r3, r3, #3
 8004d7a:	4925      	ldr	r1, [pc, #148]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004d7c:	4313      	orrs	r3, r2
 8004d7e:	600b      	str	r3, [r1, #0]
 8004d80:	e015      	b.n	8004dae <HAL_RCC_OscConfig+0x1de>
 8004d82:	4b24      	ldr	r3, [pc, #144]	; (8004e14 <HAL_RCC_OscConfig+0x244>)
 8004d84:	2200      	movs	r2, #0
 8004d86:	601a      	str	r2, [r3, #0]
 8004d88:	f7fe fff4 	bl	8003d74 <HAL_GetTick>
 8004d8c:	6138      	str	r0, [r7, #16]
 8004d8e:	e008      	b.n	8004da2 <HAL_RCC_OscConfig+0x1d2>
 8004d90:	f7fe fff0 	bl	8003d74 <HAL_GetTick>
 8004d94:	4602      	mov	r2, r0
 8004d96:	693b      	ldr	r3, [r7, #16]
 8004d98:	1ad3      	subs	r3, r2, r3
 8004d9a:	2b02      	cmp	r3, #2
 8004d9c:	d901      	bls.n	8004da2 <HAL_RCC_OscConfig+0x1d2>
 8004d9e:	2303      	movs	r3, #3
 8004da0:	e187      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004da2:	4b1b      	ldr	r3, [pc, #108]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	f003 0302 	and.w	r3, r3, #2
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d1f0      	bne.n	8004d90 <HAL_RCC_OscConfig+0x1c0>
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	f003 0308 	and.w	r3, r3, #8
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d036      	beq.n	8004e28 <HAL_RCC_OscConfig+0x258>
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	695b      	ldr	r3, [r3, #20]
 8004dbe:	2b00      	cmp	r3, #0
 8004dc0:	d016      	beq.n	8004df0 <HAL_RCC_OscConfig+0x220>
 8004dc2:	4b15      	ldr	r3, [pc, #84]	; (8004e18 <HAL_RCC_OscConfig+0x248>)
 8004dc4:	2201      	movs	r2, #1
 8004dc6:	601a      	str	r2, [r3, #0]
 8004dc8:	f7fe ffd4 	bl	8003d74 <HAL_GetTick>
 8004dcc:	6138      	str	r0, [r7, #16]
 8004dce:	e008      	b.n	8004de2 <HAL_RCC_OscConfig+0x212>
 8004dd0:	f7fe ffd0 	bl	8003d74 <HAL_GetTick>
 8004dd4:	4602      	mov	r2, r0
 8004dd6:	693b      	ldr	r3, [r7, #16]
 8004dd8:	1ad3      	subs	r3, r2, r3
 8004dda:	2b02      	cmp	r3, #2
 8004ddc:	d901      	bls.n	8004de2 <HAL_RCC_OscConfig+0x212>
 8004dde:	2303      	movs	r3, #3
 8004de0:	e167      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004de2:	4b0b      	ldr	r3, [pc, #44]	; (8004e10 <HAL_RCC_OscConfig+0x240>)
 8004de4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004de6:	f003 0302 	and.w	r3, r3, #2
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	d0f0      	beq.n	8004dd0 <HAL_RCC_OscConfig+0x200>
 8004dee:	e01b      	b.n	8004e28 <HAL_RCC_OscConfig+0x258>
 8004df0:	4b09      	ldr	r3, [pc, #36]	; (8004e18 <HAL_RCC_OscConfig+0x248>)
 8004df2:	2200      	movs	r2, #0
 8004df4:	601a      	str	r2, [r3, #0]
 8004df6:	f7fe ffbd 	bl	8003d74 <HAL_GetTick>
 8004dfa:	6138      	str	r0, [r7, #16]
 8004dfc:	e00e      	b.n	8004e1c <HAL_RCC_OscConfig+0x24c>
 8004dfe:	f7fe ffb9 	bl	8003d74 <HAL_GetTick>
 8004e02:	4602      	mov	r2, r0
 8004e04:	693b      	ldr	r3, [r7, #16]
 8004e06:	1ad3      	subs	r3, r2, r3
 8004e08:	2b02      	cmp	r3, #2
 8004e0a:	d907      	bls.n	8004e1c <HAL_RCC_OscConfig+0x24c>
 8004e0c:	2303      	movs	r3, #3
 8004e0e:	e150      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004e10:	40023800 	.word	0x40023800
 8004e14:	42470000 	.word	0x42470000
 8004e18:	42470e80 	.word	0x42470e80
 8004e1c:	4b88      	ldr	r3, [pc, #544]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004e1e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004e20:	f003 0302 	and.w	r3, r3, #2
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	d1ea      	bne.n	8004dfe <HAL_RCC_OscConfig+0x22e>
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	681b      	ldr	r3, [r3, #0]
 8004e2c:	f003 0304 	and.w	r3, r3, #4
 8004e30:	2b00      	cmp	r3, #0
 8004e32:	f000 8097 	beq.w	8004f64 <HAL_RCC_OscConfig+0x394>
 8004e36:	2300      	movs	r3, #0
 8004e38:	75fb      	strb	r3, [r7, #23]
 8004e3a:	4b81      	ldr	r3, [pc, #516]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004e3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e3e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d10f      	bne.n	8004e66 <HAL_RCC_OscConfig+0x296>
 8004e46:	2300      	movs	r3, #0
 8004e48:	60bb      	str	r3, [r7, #8]
 8004e4a:	4b7d      	ldr	r3, [pc, #500]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004e4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e4e:	4a7c      	ldr	r2, [pc, #496]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004e50:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004e54:	6413      	str	r3, [r2, #64]	; 0x40
 8004e56:	4b7a      	ldr	r3, [pc, #488]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004e58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e5a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004e5e:	60bb      	str	r3, [r7, #8]
 8004e60:	68bb      	ldr	r3, [r7, #8]
 8004e62:	2301      	movs	r3, #1
 8004e64:	75fb      	strb	r3, [r7, #23]
 8004e66:	4b77      	ldr	r3, [pc, #476]	; (8005044 <HAL_RCC_OscConfig+0x474>)
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e6e:	2b00      	cmp	r3, #0
 8004e70:	d118      	bne.n	8004ea4 <HAL_RCC_OscConfig+0x2d4>
 8004e72:	4b74      	ldr	r3, [pc, #464]	; (8005044 <HAL_RCC_OscConfig+0x474>)
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4a73      	ldr	r2, [pc, #460]	; (8005044 <HAL_RCC_OscConfig+0x474>)
 8004e78:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004e7c:	6013      	str	r3, [r2, #0]
 8004e7e:	f7fe ff79 	bl	8003d74 <HAL_GetTick>
 8004e82:	6138      	str	r0, [r7, #16]
 8004e84:	e008      	b.n	8004e98 <HAL_RCC_OscConfig+0x2c8>
 8004e86:	f7fe ff75 	bl	8003d74 <HAL_GetTick>
 8004e8a:	4602      	mov	r2, r0
 8004e8c:	693b      	ldr	r3, [r7, #16]
 8004e8e:	1ad3      	subs	r3, r2, r3
 8004e90:	2b02      	cmp	r3, #2
 8004e92:	d901      	bls.n	8004e98 <HAL_RCC_OscConfig+0x2c8>
 8004e94:	2303      	movs	r3, #3
 8004e96:	e10c      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004e98:	4b6a      	ldr	r3, [pc, #424]	; (8005044 <HAL_RCC_OscConfig+0x474>)
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d0f0      	beq.n	8004e86 <HAL_RCC_OscConfig+0x2b6>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	689b      	ldr	r3, [r3, #8]
 8004ea8:	2b01      	cmp	r3, #1
 8004eaa:	d106      	bne.n	8004eba <HAL_RCC_OscConfig+0x2ea>
 8004eac:	4b64      	ldr	r3, [pc, #400]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004eae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004eb0:	4a63      	ldr	r2, [pc, #396]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004eb2:	f043 0301 	orr.w	r3, r3, #1
 8004eb6:	6713      	str	r3, [r2, #112]	; 0x70
 8004eb8:	e01c      	b.n	8004ef4 <HAL_RCC_OscConfig+0x324>
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	689b      	ldr	r3, [r3, #8]
 8004ebe:	2b05      	cmp	r3, #5
 8004ec0:	d10c      	bne.n	8004edc <HAL_RCC_OscConfig+0x30c>
 8004ec2:	4b5f      	ldr	r3, [pc, #380]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004ec4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ec6:	4a5e      	ldr	r2, [pc, #376]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004ec8:	f043 0304 	orr.w	r3, r3, #4
 8004ecc:	6713      	str	r3, [r2, #112]	; 0x70
 8004ece:	4b5c      	ldr	r3, [pc, #368]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004ed0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ed2:	4a5b      	ldr	r2, [pc, #364]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004ed4:	f043 0301 	orr.w	r3, r3, #1
 8004ed8:	6713      	str	r3, [r2, #112]	; 0x70
 8004eda:	e00b      	b.n	8004ef4 <HAL_RCC_OscConfig+0x324>
 8004edc:	4b58      	ldr	r3, [pc, #352]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004ede:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ee0:	4a57      	ldr	r2, [pc, #348]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004ee2:	f023 0301 	bic.w	r3, r3, #1
 8004ee6:	6713      	str	r3, [r2, #112]	; 0x70
 8004ee8:	4b55      	ldr	r3, [pc, #340]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004eea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004eec:	4a54      	ldr	r2, [pc, #336]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004eee:	f023 0304 	bic.w	r3, r3, #4
 8004ef2:	6713      	str	r3, [r2, #112]	; 0x70
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	689b      	ldr	r3, [r3, #8]
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	d015      	beq.n	8004f28 <HAL_RCC_OscConfig+0x358>
 8004efc:	f7fe ff3a 	bl	8003d74 <HAL_GetTick>
 8004f00:	6138      	str	r0, [r7, #16]
 8004f02:	e00a      	b.n	8004f1a <HAL_RCC_OscConfig+0x34a>
 8004f04:	f7fe ff36 	bl	8003d74 <HAL_GetTick>
 8004f08:	4602      	mov	r2, r0
 8004f0a:	693b      	ldr	r3, [r7, #16]
 8004f0c:	1ad3      	subs	r3, r2, r3
 8004f0e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004f12:	4293      	cmp	r3, r2
 8004f14:	d901      	bls.n	8004f1a <HAL_RCC_OscConfig+0x34a>
 8004f16:	2303      	movs	r3, #3
 8004f18:	e0cb      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004f1a:	4b49      	ldr	r3, [pc, #292]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004f1c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004f1e:	f003 0302 	and.w	r3, r3, #2
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d0ee      	beq.n	8004f04 <HAL_RCC_OscConfig+0x334>
 8004f26:	e014      	b.n	8004f52 <HAL_RCC_OscConfig+0x382>
 8004f28:	f7fe ff24 	bl	8003d74 <HAL_GetTick>
 8004f2c:	6138      	str	r0, [r7, #16]
 8004f2e:	e00a      	b.n	8004f46 <HAL_RCC_OscConfig+0x376>
 8004f30:	f7fe ff20 	bl	8003d74 <HAL_GetTick>
 8004f34:	4602      	mov	r2, r0
 8004f36:	693b      	ldr	r3, [r7, #16]
 8004f38:	1ad3      	subs	r3, r2, r3
 8004f3a:	f241 3288 	movw	r2, #5000	; 0x1388
 8004f3e:	4293      	cmp	r3, r2
 8004f40:	d901      	bls.n	8004f46 <HAL_RCC_OscConfig+0x376>
 8004f42:	2303      	movs	r3, #3
 8004f44:	e0b5      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004f46:	4b3e      	ldr	r3, [pc, #248]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004f48:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004f4a:	f003 0302 	and.w	r3, r3, #2
 8004f4e:	2b00      	cmp	r3, #0
 8004f50:	d1ee      	bne.n	8004f30 <HAL_RCC_OscConfig+0x360>
 8004f52:	7dfb      	ldrb	r3, [r7, #23]
 8004f54:	2b01      	cmp	r3, #1
 8004f56:	d105      	bne.n	8004f64 <HAL_RCC_OscConfig+0x394>
 8004f58:	4b39      	ldr	r3, [pc, #228]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004f5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f5c:	4a38      	ldr	r2, [pc, #224]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004f5e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004f62:	6413      	str	r3, [r2, #64]	; 0x40
 8004f64:	687b      	ldr	r3, [r7, #4]
 8004f66:	699b      	ldr	r3, [r3, #24]
 8004f68:	2b00      	cmp	r3, #0
 8004f6a:	f000 80a1 	beq.w	80050b0 <HAL_RCC_OscConfig+0x4e0>
 8004f6e:	4b34      	ldr	r3, [pc, #208]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004f70:	689b      	ldr	r3, [r3, #8]
 8004f72:	f003 030c 	and.w	r3, r3, #12
 8004f76:	2b08      	cmp	r3, #8
 8004f78:	d05c      	beq.n	8005034 <HAL_RCC_OscConfig+0x464>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	699b      	ldr	r3, [r3, #24]
 8004f7e:	2b02      	cmp	r3, #2
 8004f80:	d141      	bne.n	8005006 <HAL_RCC_OscConfig+0x436>
 8004f82:	4b31      	ldr	r3, [pc, #196]	; (8005048 <HAL_RCC_OscConfig+0x478>)
 8004f84:	2200      	movs	r2, #0
 8004f86:	601a      	str	r2, [r3, #0]
 8004f88:	f7fe fef4 	bl	8003d74 <HAL_GetTick>
 8004f8c:	6138      	str	r0, [r7, #16]
 8004f8e:	e008      	b.n	8004fa2 <HAL_RCC_OscConfig+0x3d2>
 8004f90:	f7fe fef0 	bl	8003d74 <HAL_GetTick>
 8004f94:	4602      	mov	r2, r0
 8004f96:	693b      	ldr	r3, [r7, #16]
 8004f98:	1ad3      	subs	r3, r2, r3
 8004f9a:	2b02      	cmp	r3, #2
 8004f9c:	d901      	bls.n	8004fa2 <HAL_RCC_OscConfig+0x3d2>
 8004f9e:	2303      	movs	r3, #3
 8004fa0:	e087      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004fa2:	4b27      	ldr	r3, [pc, #156]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	d1f0      	bne.n	8004f90 <HAL_RCC_OscConfig+0x3c0>
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	69da      	ldr	r2, [r3, #28]
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	6a1b      	ldr	r3, [r3, #32]
 8004fb6:	431a      	orrs	r2, r3
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fbc:	019b      	lsls	r3, r3, #6
 8004fbe:	431a      	orrs	r2, r3
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004fc4:	085b      	lsrs	r3, r3, #1
 8004fc6:	3b01      	subs	r3, #1
 8004fc8:	041b      	lsls	r3, r3, #16
 8004fca:	431a      	orrs	r2, r3
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004fd0:	061b      	lsls	r3, r3, #24
 8004fd2:	491b      	ldr	r1, [pc, #108]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004fd4:	4313      	orrs	r3, r2
 8004fd6:	604b      	str	r3, [r1, #4]
 8004fd8:	4b1b      	ldr	r3, [pc, #108]	; (8005048 <HAL_RCC_OscConfig+0x478>)
 8004fda:	2201      	movs	r2, #1
 8004fdc:	601a      	str	r2, [r3, #0]
 8004fde:	f7fe fec9 	bl	8003d74 <HAL_GetTick>
 8004fe2:	6138      	str	r0, [r7, #16]
 8004fe4:	e008      	b.n	8004ff8 <HAL_RCC_OscConfig+0x428>
 8004fe6:	f7fe fec5 	bl	8003d74 <HAL_GetTick>
 8004fea:	4602      	mov	r2, r0
 8004fec:	693b      	ldr	r3, [r7, #16]
 8004fee:	1ad3      	subs	r3, r2, r3
 8004ff0:	2b02      	cmp	r3, #2
 8004ff2:	d901      	bls.n	8004ff8 <HAL_RCC_OscConfig+0x428>
 8004ff4:	2303      	movs	r3, #3
 8004ff6:	e05c      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8004ff8:	4b11      	ldr	r3, [pc, #68]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005000:	2b00      	cmp	r3, #0
 8005002:	d0f0      	beq.n	8004fe6 <HAL_RCC_OscConfig+0x416>
 8005004:	e054      	b.n	80050b0 <HAL_RCC_OscConfig+0x4e0>
 8005006:	4b10      	ldr	r3, [pc, #64]	; (8005048 <HAL_RCC_OscConfig+0x478>)
 8005008:	2200      	movs	r2, #0
 800500a:	601a      	str	r2, [r3, #0]
 800500c:	f7fe feb2 	bl	8003d74 <HAL_GetTick>
 8005010:	6138      	str	r0, [r7, #16]
 8005012:	e008      	b.n	8005026 <HAL_RCC_OscConfig+0x456>
 8005014:	f7fe feae 	bl	8003d74 <HAL_GetTick>
 8005018:	4602      	mov	r2, r0
 800501a:	693b      	ldr	r3, [r7, #16]
 800501c:	1ad3      	subs	r3, r2, r3
 800501e:	2b02      	cmp	r3, #2
 8005020:	d901      	bls.n	8005026 <HAL_RCC_OscConfig+0x456>
 8005022:	2303      	movs	r3, #3
 8005024:	e045      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8005026:	4b06      	ldr	r3, [pc, #24]	; (8005040 <HAL_RCC_OscConfig+0x470>)
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800502e:	2b00      	cmp	r3, #0
 8005030:	d1f0      	bne.n	8005014 <HAL_RCC_OscConfig+0x444>
 8005032:	e03d      	b.n	80050b0 <HAL_RCC_OscConfig+0x4e0>
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	699b      	ldr	r3, [r3, #24]
 8005038:	2b01      	cmp	r3, #1
 800503a:	d107      	bne.n	800504c <HAL_RCC_OscConfig+0x47c>
 800503c:	2301      	movs	r3, #1
 800503e:	e038      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 8005040:	40023800 	.word	0x40023800
 8005044:	40007000 	.word	0x40007000
 8005048:	42470060 	.word	0x42470060
 800504c:	4b1b      	ldr	r3, [pc, #108]	; (80050bc <HAL_RCC_OscConfig+0x4ec>)
 800504e:	685b      	ldr	r3, [r3, #4]
 8005050:	60fb      	str	r3, [r7, #12]
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	699b      	ldr	r3, [r3, #24]
 8005056:	2b01      	cmp	r3, #1
 8005058:	d028      	beq.n	80050ac <HAL_RCC_OscConfig+0x4dc>
 800505a:	68fb      	ldr	r3, [r7, #12]
 800505c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	69db      	ldr	r3, [r3, #28]
 8005064:	429a      	cmp	r2, r3
 8005066:	d121      	bne.n	80050ac <HAL_RCC_OscConfig+0x4dc>
 8005068:	68fb      	ldr	r3, [r7, #12]
 800506a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	6a1b      	ldr	r3, [r3, #32]
 8005072:	429a      	cmp	r2, r3
 8005074:	d11a      	bne.n	80050ac <HAL_RCC_OscConfig+0x4dc>
 8005076:	68fa      	ldr	r2, [r7, #12]
 8005078:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800507c:	4013      	ands	r3, r2
 800507e:	687a      	ldr	r2, [r7, #4]
 8005080:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005082:	0192      	lsls	r2, r2, #6
 8005084:	4293      	cmp	r3, r2
 8005086:	d111      	bne.n	80050ac <HAL_RCC_OscConfig+0x4dc>
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005092:	085b      	lsrs	r3, r3, #1
 8005094:	3b01      	subs	r3, #1
 8005096:	041b      	lsls	r3, r3, #16
 8005098:	429a      	cmp	r2, r3
 800509a:	d107      	bne.n	80050ac <HAL_RCC_OscConfig+0x4dc>
 800509c:	68fb      	ldr	r3, [r7, #12]
 800509e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80050a6:	061b      	lsls	r3, r3, #24
 80050a8:	429a      	cmp	r2, r3
 80050aa:	d001      	beq.n	80050b0 <HAL_RCC_OscConfig+0x4e0>
 80050ac:	2301      	movs	r3, #1
 80050ae:	e000      	b.n	80050b2 <HAL_RCC_OscConfig+0x4e2>
 80050b0:	2300      	movs	r3, #0
 80050b2:	4618      	mov	r0, r3
 80050b4:	3718      	adds	r7, #24
 80050b6:	46bd      	mov	sp, r7
 80050b8:	bd80      	pop	{r7, pc}
 80050ba:	bf00      	nop
 80050bc:	40023800 	.word	0x40023800

080050c0 <HAL_RCC_ClockConfig>:
 80050c0:	b580      	push	{r7, lr}
 80050c2:	b084      	sub	sp, #16
 80050c4:	af00      	add	r7, sp, #0
 80050c6:	6078      	str	r0, [r7, #4]
 80050c8:	6039      	str	r1, [r7, #0]
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	2b00      	cmp	r3, #0
 80050ce:	d101      	bne.n	80050d4 <HAL_RCC_ClockConfig+0x14>
 80050d0:	2301      	movs	r3, #1
 80050d2:	e0cc      	b.n	800526e <HAL_RCC_ClockConfig+0x1ae>
 80050d4:	4b68      	ldr	r3, [pc, #416]	; (8005278 <HAL_RCC_ClockConfig+0x1b8>)
 80050d6:	681b      	ldr	r3, [r3, #0]
 80050d8:	f003 0307 	and.w	r3, r3, #7
 80050dc:	683a      	ldr	r2, [r7, #0]
 80050de:	429a      	cmp	r2, r3
 80050e0:	d90c      	bls.n	80050fc <HAL_RCC_ClockConfig+0x3c>
 80050e2:	4b65      	ldr	r3, [pc, #404]	; (8005278 <HAL_RCC_ClockConfig+0x1b8>)
 80050e4:	683a      	ldr	r2, [r7, #0]
 80050e6:	b2d2      	uxtb	r2, r2
 80050e8:	701a      	strb	r2, [r3, #0]
 80050ea:	4b63      	ldr	r3, [pc, #396]	; (8005278 <HAL_RCC_ClockConfig+0x1b8>)
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	f003 0307 	and.w	r3, r3, #7
 80050f2:	683a      	ldr	r2, [r7, #0]
 80050f4:	429a      	cmp	r2, r3
 80050f6:	d001      	beq.n	80050fc <HAL_RCC_ClockConfig+0x3c>
 80050f8:	2301      	movs	r3, #1
 80050fa:	e0b8      	b.n	800526e <HAL_RCC_ClockConfig+0x1ae>
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	f003 0302 	and.w	r3, r3, #2
 8005104:	2b00      	cmp	r3, #0
 8005106:	d020      	beq.n	800514a <HAL_RCC_ClockConfig+0x8a>
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	f003 0304 	and.w	r3, r3, #4
 8005110:	2b00      	cmp	r3, #0
 8005112:	d005      	beq.n	8005120 <HAL_RCC_ClockConfig+0x60>
 8005114:	4b59      	ldr	r3, [pc, #356]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005116:	689b      	ldr	r3, [r3, #8]
 8005118:	4a58      	ldr	r2, [pc, #352]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 800511a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800511e:	6093      	str	r3, [r2, #8]
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	f003 0308 	and.w	r3, r3, #8
 8005128:	2b00      	cmp	r3, #0
 800512a:	d005      	beq.n	8005138 <HAL_RCC_ClockConfig+0x78>
 800512c:	4b53      	ldr	r3, [pc, #332]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 800512e:	689b      	ldr	r3, [r3, #8]
 8005130:	4a52      	ldr	r2, [pc, #328]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005132:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005136:	6093      	str	r3, [r2, #8]
 8005138:	4b50      	ldr	r3, [pc, #320]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 800513a:	689b      	ldr	r3, [r3, #8]
 800513c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	689b      	ldr	r3, [r3, #8]
 8005144:	494d      	ldr	r1, [pc, #308]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005146:	4313      	orrs	r3, r2
 8005148:	608b      	str	r3, [r1, #8]
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	f003 0301 	and.w	r3, r3, #1
 8005152:	2b00      	cmp	r3, #0
 8005154:	d044      	beq.n	80051e0 <HAL_RCC_ClockConfig+0x120>
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	685b      	ldr	r3, [r3, #4]
 800515a:	2b01      	cmp	r3, #1
 800515c:	d107      	bne.n	800516e <HAL_RCC_ClockConfig+0xae>
 800515e:	4b47      	ldr	r3, [pc, #284]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005160:	681b      	ldr	r3, [r3, #0]
 8005162:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005166:	2b00      	cmp	r3, #0
 8005168:	d119      	bne.n	800519e <HAL_RCC_ClockConfig+0xde>
 800516a:	2301      	movs	r3, #1
 800516c:	e07f      	b.n	800526e <HAL_RCC_ClockConfig+0x1ae>
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	685b      	ldr	r3, [r3, #4]
 8005172:	2b02      	cmp	r3, #2
 8005174:	d003      	beq.n	800517e <HAL_RCC_ClockConfig+0xbe>
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	685b      	ldr	r3, [r3, #4]
 800517a:	2b03      	cmp	r3, #3
 800517c:	d107      	bne.n	800518e <HAL_RCC_ClockConfig+0xce>
 800517e:	4b3f      	ldr	r3, [pc, #252]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005186:	2b00      	cmp	r3, #0
 8005188:	d109      	bne.n	800519e <HAL_RCC_ClockConfig+0xde>
 800518a:	2301      	movs	r3, #1
 800518c:	e06f      	b.n	800526e <HAL_RCC_ClockConfig+0x1ae>
 800518e:	4b3b      	ldr	r3, [pc, #236]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	f003 0302 	and.w	r3, r3, #2
 8005196:	2b00      	cmp	r3, #0
 8005198:	d101      	bne.n	800519e <HAL_RCC_ClockConfig+0xde>
 800519a:	2301      	movs	r3, #1
 800519c:	e067      	b.n	800526e <HAL_RCC_ClockConfig+0x1ae>
 800519e:	4b37      	ldr	r3, [pc, #220]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 80051a0:	689b      	ldr	r3, [r3, #8]
 80051a2:	f023 0203 	bic.w	r2, r3, #3
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	685b      	ldr	r3, [r3, #4]
 80051aa:	4934      	ldr	r1, [pc, #208]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 80051ac:	4313      	orrs	r3, r2
 80051ae:	608b      	str	r3, [r1, #8]
 80051b0:	f7fe fde0 	bl	8003d74 <HAL_GetTick>
 80051b4:	60f8      	str	r0, [r7, #12]
 80051b6:	e00a      	b.n	80051ce <HAL_RCC_ClockConfig+0x10e>
 80051b8:	f7fe fddc 	bl	8003d74 <HAL_GetTick>
 80051bc:	4602      	mov	r2, r0
 80051be:	68fb      	ldr	r3, [r7, #12]
 80051c0:	1ad3      	subs	r3, r2, r3
 80051c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80051c6:	4293      	cmp	r3, r2
 80051c8:	d901      	bls.n	80051ce <HAL_RCC_ClockConfig+0x10e>
 80051ca:	2303      	movs	r3, #3
 80051cc:	e04f      	b.n	800526e <HAL_RCC_ClockConfig+0x1ae>
 80051ce:	4b2b      	ldr	r3, [pc, #172]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 80051d0:	689b      	ldr	r3, [r3, #8]
 80051d2:	f003 020c 	and.w	r2, r3, #12
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	685b      	ldr	r3, [r3, #4]
 80051da:	009b      	lsls	r3, r3, #2
 80051dc:	429a      	cmp	r2, r3
 80051de:	d1eb      	bne.n	80051b8 <HAL_RCC_ClockConfig+0xf8>
 80051e0:	4b25      	ldr	r3, [pc, #148]	; (8005278 <HAL_RCC_ClockConfig+0x1b8>)
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	f003 0307 	and.w	r3, r3, #7
 80051e8:	683a      	ldr	r2, [r7, #0]
 80051ea:	429a      	cmp	r2, r3
 80051ec:	d20c      	bcs.n	8005208 <HAL_RCC_ClockConfig+0x148>
 80051ee:	4b22      	ldr	r3, [pc, #136]	; (8005278 <HAL_RCC_ClockConfig+0x1b8>)
 80051f0:	683a      	ldr	r2, [r7, #0]
 80051f2:	b2d2      	uxtb	r2, r2
 80051f4:	701a      	strb	r2, [r3, #0]
 80051f6:	4b20      	ldr	r3, [pc, #128]	; (8005278 <HAL_RCC_ClockConfig+0x1b8>)
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	f003 0307 	and.w	r3, r3, #7
 80051fe:	683a      	ldr	r2, [r7, #0]
 8005200:	429a      	cmp	r2, r3
 8005202:	d001      	beq.n	8005208 <HAL_RCC_ClockConfig+0x148>
 8005204:	2301      	movs	r3, #1
 8005206:	e032      	b.n	800526e <HAL_RCC_ClockConfig+0x1ae>
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	f003 0304 	and.w	r3, r3, #4
 8005210:	2b00      	cmp	r3, #0
 8005212:	d008      	beq.n	8005226 <HAL_RCC_ClockConfig+0x166>
 8005214:	4b19      	ldr	r3, [pc, #100]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005216:	689b      	ldr	r3, [r3, #8]
 8005218:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	68db      	ldr	r3, [r3, #12]
 8005220:	4916      	ldr	r1, [pc, #88]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005222:	4313      	orrs	r3, r2
 8005224:	608b      	str	r3, [r1, #8]
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	681b      	ldr	r3, [r3, #0]
 800522a:	f003 0308 	and.w	r3, r3, #8
 800522e:	2b00      	cmp	r3, #0
 8005230:	d009      	beq.n	8005246 <HAL_RCC_ClockConfig+0x186>
 8005232:	4b12      	ldr	r3, [pc, #72]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005234:	689b      	ldr	r3, [r3, #8]
 8005236:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	691b      	ldr	r3, [r3, #16]
 800523e:	00db      	lsls	r3, r3, #3
 8005240:	490e      	ldr	r1, [pc, #56]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 8005242:	4313      	orrs	r3, r2
 8005244:	608b      	str	r3, [r1, #8]
 8005246:	f000 f821 	bl	800528c <HAL_RCC_GetSysClockFreq>
 800524a:	4602      	mov	r2, r0
 800524c:	4b0b      	ldr	r3, [pc, #44]	; (800527c <HAL_RCC_ClockConfig+0x1bc>)
 800524e:	689b      	ldr	r3, [r3, #8]
 8005250:	091b      	lsrs	r3, r3, #4
 8005252:	f003 030f 	and.w	r3, r3, #15
 8005256:	490a      	ldr	r1, [pc, #40]	; (8005280 <HAL_RCC_ClockConfig+0x1c0>)
 8005258:	5ccb      	ldrb	r3, [r1, r3]
 800525a:	fa22 f303 	lsr.w	r3, r2, r3
 800525e:	4a09      	ldr	r2, [pc, #36]	; (8005284 <HAL_RCC_ClockConfig+0x1c4>)
 8005260:	6013      	str	r3, [r2, #0]
 8005262:	4b09      	ldr	r3, [pc, #36]	; (8005288 <HAL_RCC_ClockConfig+0x1c8>)
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	4618      	mov	r0, r3
 8005268:	f7fe fd40 	bl	8003cec <HAL_InitTick>
 800526c:	2300      	movs	r3, #0
 800526e:	4618      	mov	r0, r3
 8005270:	3710      	adds	r7, #16
 8005272:	46bd      	mov	sp, r7
 8005274:	bd80      	pop	{r7, pc}
 8005276:	bf00      	nop
 8005278:	40023c00 	.word	0x40023c00
 800527c:	40023800 	.word	0x40023800
 8005280:	0800faa4 	.word	0x0800faa4
 8005284:	20000000 	.word	0x20000000
 8005288:	20000004 	.word	0x20000004

0800528c <HAL_RCC_GetSysClockFreq>:
 800528c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005290:	b090      	sub	sp, #64	; 0x40
 8005292:	af00      	add	r7, sp, #0
 8005294:	2300      	movs	r3, #0
 8005296:	637b      	str	r3, [r7, #52]	; 0x34
 8005298:	2300      	movs	r3, #0
 800529a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800529c:	2300      	movs	r3, #0
 800529e:	633b      	str	r3, [r7, #48]	; 0x30
 80052a0:	2300      	movs	r3, #0
 80052a2:	63bb      	str	r3, [r7, #56]	; 0x38
 80052a4:	4b59      	ldr	r3, [pc, #356]	; (800540c <HAL_RCC_GetSysClockFreq+0x180>)
 80052a6:	689b      	ldr	r3, [r3, #8]
 80052a8:	f003 030c 	and.w	r3, r3, #12
 80052ac:	2b08      	cmp	r3, #8
 80052ae:	d00d      	beq.n	80052cc <HAL_RCC_GetSysClockFreq+0x40>
 80052b0:	2b08      	cmp	r3, #8
 80052b2:	f200 80a1 	bhi.w	80053f8 <HAL_RCC_GetSysClockFreq+0x16c>
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d002      	beq.n	80052c0 <HAL_RCC_GetSysClockFreq+0x34>
 80052ba:	2b04      	cmp	r3, #4
 80052bc:	d003      	beq.n	80052c6 <HAL_RCC_GetSysClockFreq+0x3a>
 80052be:	e09b      	b.n	80053f8 <HAL_RCC_GetSysClockFreq+0x16c>
 80052c0:	4b53      	ldr	r3, [pc, #332]	; (8005410 <HAL_RCC_GetSysClockFreq+0x184>)
 80052c2:	63bb      	str	r3, [r7, #56]	; 0x38
 80052c4:	e09b      	b.n	80053fe <HAL_RCC_GetSysClockFreq+0x172>
 80052c6:	4b53      	ldr	r3, [pc, #332]	; (8005414 <HAL_RCC_GetSysClockFreq+0x188>)
 80052c8:	63bb      	str	r3, [r7, #56]	; 0x38
 80052ca:	e098      	b.n	80053fe <HAL_RCC_GetSysClockFreq+0x172>
 80052cc:	4b4f      	ldr	r3, [pc, #316]	; (800540c <HAL_RCC_GetSysClockFreq+0x180>)
 80052ce:	685b      	ldr	r3, [r3, #4]
 80052d0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80052d4:	637b      	str	r3, [r7, #52]	; 0x34
 80052d6:	4b4d      	ldr	r3, [pc, #308]	; (800540c <HAL_RCC_GetSysClockFreq+0x180>)
 80052d8:	685b      	ldr	r3, [r3, #4]
 80052da:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80052de:	2b00      	cmp	r3, #0
 80052e0:	d028      	beq.n	8005334 <HAL_RCC_GetSysClockFreq+0xa8>
 80052e2:	4b4a      	ldr	r3, [pc, #296]	; (800540c <HAL_RCC_GetSysClockFreq+0x180>)
 80052e4:	685b      	ldr	r3, [r3, #4]
 80052e6:	099b      	lsrs	r3, r3, #6
 80052e8:	2200      	movs	r2, #0
 80052ea:	623b      	str	r3, [r7, #32]
 80052ec:	627a      	str	r2, [r7, #36]	; 0x24
 80052ee:	6a3b      	ldr	r3, [r7, #32]
 80052f0:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80052f4:	2100      	movs	r1, #0
 80052f6:	4b47      	ldr	r3, [pc, #284]	; (8005414 <HAL_RCC_GetSysClockFreq+0x188>)
 80052f8:	fb03 f201 	mul.w	r2, r3, r1
 80052fc:	2300      	movs	r3, #0
 80052fe:	fb00 f303 	mul.w	r3, r0, r3
 8005302:	4413      	add	r3, r2
 8005304:	4a43      	ldr	r2, [pc, #268]	; (8005414 <HAL_RCC_GetSysClockFreq+0x188>)
 8005306:	fba0 1202 	umull	r1, r2, r0, r2
 800530a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800530c:	460a      	mov	r2, r1
 800530e:	62ba      	str	r2, [r7, #40]	; 0x28
 8005310:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005312:	4413      	add	r3, r2
 8005314:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005316:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005318:	2200      	movs	r2, #0
 800531a:	61bb      	str	r3, [r7, #24]
 800531c:	61fa      	str	r2, [r7, #28]
 800531e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005322:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8005326:	f7fb fd17 	bl	8000d58 <__aeabi_uldivmod>
 800532a:	4602      	mov	r2, r0
 800532c:	460b      	mov	r3, r1
 800532e:	4613      	mov	r3, r2
 8005330:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005332:	e053      	b.n	80053dc <HAL_RCC_GetSysClockFreq+0x150>
 8005334:	4b35      	ldr	r3, [pc, #212]	; (800540c <HAL_RCC_GetSysClockFreq+0x180>)
 8005336:	685b      	ldr	r3, [r3, #4]
 8005338:	099b      	lsrs	r3, r3, #6
 800533a:	2200      	movs	r2, #0
 800533c:	613b      	str	r3, [r7, #16]
 800533e:	617a      	str	r2, [r7, #20]
 8005340:	693b      	ldr	r3, [r7, #16]
 8005342:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8005346:	f04f 0b00 	mov.w	fp, #0
 800534a:	4652      	mov	r2, sl
 800534c:	465b      	mov	r3, fp
 800534e:	f04f 0000 	mov.w	r0, #0
 8005352:	f04f 0100 	mov.w	r1, #0
 8005356:	0159      	lsls	r1, r3, #5
 8005358:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800535c:	0150      	lsls	r0, r2, #5
 800535e:	4602      	mov	r2, r0
 8005360:	460b      	mov	r3, r1
 8005362:	ebb2 080a 	subs.w	r8, r2, sl
 8005366:	eb63 090b 	sbc.w	r9, r3, fp
 800536a:	f04f 0200 	mov.w	r2, #0
 800536e:	f04f 0300 	mov.w	r3, #0
 8005372:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8005376:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800537a:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800537e:	ebb2 0408 	subs.w	r4, r2, r8
 8005382:	eb63 0509 	sbc.w	r5, r3, r9
 8005386:	f04f 0200 	mov.w	r2, #0
 800538a:	f04f 0300 	mov.w	r3, #0
 800538e:	00eb      	lsls	r3, r5, #3
 8005390:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005394:	00e2      	lsls	r2, r4, #3
 8005396:	4614      	mov	r4, r2
 8005398:	461d      	mov	r5, r3
 800539a:	eb14 030a 	adds.w	r3, r4, sl
 800539e:	603b      	str	r3, [r7, #0]
 80053a0:	eb45 030b 	adc.w	r3, r5, fp
 80053a4:	607b      	str	r3, [r7, #4]
 80053a6:	f04f 0200 	mov.w	r2, #0
 80053aa:	f04f 0300 	mov.w	r3, #0
 80053ae:	e9d7 4500 	ldrd	r4, r5, [r7]
 80053b2:	4629      	mov	r1, r5
 80053b4:	028b      	lsls	r3, r1, #10
 80053b6:	4621      	mov	r1, r4
 80053b8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80053bc:	4621      	mov	r1, r4
 80053be:	028a      	lsls	r2, r1, #10
 80053c0:	4610      	mov	r0, r2
 80053c2:	4619      	mov	r1, r3
 80053c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80053c6:	2200      	movs	r2, #0
 80053c8:	60bb      	str	r3, [r7, #8]
 80053ca:	60fa      	str	r2, [r7, #12]
 80053cc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80053d0:	f7fb fcc2 	bl	8000d58 <__aeabi_uldivmod>
 80053d4:	4602      	mov	r2, r0
 80053d6:	460b      	mov	r3, r1
 80053d8:	4613      	mov	r3, r2
 80053da:	63fb      	str	r3, [r7, #60]	; 0x3c
 80053dc:	4b0b      	ldr	r3, [pc, #44]	; (800540c <HAL_RCC_GetSysClockFreq+0x180>)
 80053de:	685b      	ldr	r3, [r3, #4]
 80053e0:	0c1b      	lsrs	r3, r3, #16
 80053e2:	f003 0303 	and.w	r3, r3, #3
 80053e6:	3301      	adds	r3, #1
 80053e8:	005b      	lsls	r3, r3, #1
 80053ea:	633b      	str	r3, [r7, #48]	; 0x30
 80053ec:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80053ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80053f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80053f4:	63bb      	str	r3, [r7, #56]	; 0x38
 80053f6:	e002      	b.n	80053fe <HAL_RCC_GetSysClockFreq+0x172>
 80053f8:	4b05      	ldr	r3, [pc, #20]	; (8005410 <HAL_RCC_GetSysClockFreq+0x184>)
 80053fa:	63bb      	str	r3, [r7, #56]	; 0x38
 80053fc:	bf00      	nop
 80053fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005400:	4618      	mov	r0, r3
 8005402:	3740      	adds	r7, #64	; 0x40
 8005404:	46bd      	mov	sp, r7
 8005406:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800540a:	bf00      	nop
 800540c:	40023800 	.word	0x40023800
 8005410:	00f42400 	.word	0x00f42400
 8005414:	017d7840 	.word	0x017d7840

08005418 <HAL_RCC_GetHCLKFreq>:
 8005418:	b480      	push	{r7}
 800541a:	af00      	add	r7, sp, #0
 800541c:	4b03      	ldr	r3, [pc, #12]	; (800542c <HAL_RCC_GetHCLKFreq+0x14>)
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	4618      	mov	r0, r3
 8005422:	46bd      	mov	sp, r7
 8005424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005428:	4770      	bx	lr
 800542a:	bf00      	nop
 800542c:	20000000 	.word	0x20000000

08005430 <HAL_RCC_GetPCLK1Freq>:
 8005430:	b580      	push	{r7, lr}
 8005432:	af00      	add	r7, sp, #0
 8005434:	f7ff fff0 	bl	8005418 <HAL_RCC_GetHCLKFreq>
 8005438:	4602      	mov	r2, r0
 800543a:	4b05      	ldr	r3, [pc, #20]	; (8005450 <HAL_RCC_GetPCLK1Freq+0x20>)
 800543c:	689b      	ldr	r3, [r3, #8]
 800543e:	0a9b      	lsrs	r3, r3, #10
 8005440:	f003 0307 	and.w	r3, r3, #7
 8005444:	4903      	ldr	r1, [pc, #12]	; (8005454 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005446:	5ccb      	ldrb	r3, [r1, r3]
 8005448:	fa22 f303 	lsr.w	r3, r2, r3
 800544c:	4618      	mov	r0, r3
 800544e:	bd80      	pop	{r7, pc}
 8005450:	40023800 	.word	0x40023800
 8005454:	0800fab4 	.word	0x0800fab4

08005458 <HAL_RCC_GetPCLK2Freq>:
 8005458:	b580      	push	{r7, lr}
 800545a:	af00      	add	r7, sp, #0
 800545c:	f7ff ffdc 	bl	8005418 <HAL_RCC_GetHCLKFreq>
 8005460:	4602      	mov	r2, r0
 8005462:	4b05      	ldr	r3, [pc, #20]	; (8005478 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005464:	689b      	ldr	r3, [r3, #8]
 8005466:	0b5b      	lsrs	r3, r3, #13
 8005468:	f003 0307 	and.w	r3, r3, #7
 800546c:	4903      	ldr	r1, [pc, #12]	; (800547c <HAL_RCC_GetPCLK2Freq+0x24>)
 800546e:	5ccb      	ldrb	r3, [r1, r3]
 8005470:	fa22 f303 	lsr.w	r3, r2, r3
 8005474:	4618      	mov	r0, r3
 8005476:	bd80      	pop	{r7, pc}
 8005478:	40023800 	.word	0x40023800
 800547c:	0800fab4 	.word	0x0800fab4

08005480 <HAL_RCCEx_PeriphCLKConfig>:
 8005480:	b580      	push	{r7, lr}
 8005482:	b086      	sub	sp, #24
 8005484:	af00      	add	r7, sp, #0
 8005486:	6078      	str	r0, [r7, #4]
 8005488:	2300      	movs	r3, #0
 800548a:	617b      	str	r3, [r7, #20]
 800548c:	2300      	movs	r3, #0
 800548e:	613b      	str	r3, [r7, #16]
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	f003 0301 	and.w	r3, r3, #1
 8005498:	2b00      	cmp	r3, #0
 800549a:	d105      	bne.n	80054a8 <HAL_RCCEx_PeriphCLKConfig+0x28>
 800549c:	687b      	ldr	r3, [r7, #4]
 800549e:	681b      	ldr	r3, [r3, #0]
 80054a0:	f003 0304 	and.w	r3, r3, #4
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d035      	beq.n	8005514 <HAL_RCCEx_PeriphCLKConfig+0x94>
 80054a8:	4b67      	ldr	r3, [pc, #412]	; (8005648 <HAL_RCCEx_PeriphCLKConfig+0x1c8>)
 80054aa:	2200      	movs	r2, #0
 80054ac:	601a      	str	r2, [r3, #0]
 80054ae:	f7fe fc61 	bl	8003d74 <HAL_GetTick>
 80054b2:	6178      	str	r0, [r7, #20]
 80054b4:	e008      	b.n	80054c8 <HAL_RCCEx_PeriphCLKConfig+0x48>
 80054b6:	f7fe fc5d 	bl	8003d74 <HAL_GetTick>
 80054ba:	4602      	mov	r2, r0
 80054bc:	697b      	ldr	r3, [r7, #20]
 80054be:	1ad3      	subs	r3, r2, r3
 80054c0:	2b02      	cmp	r3, #2
 80054c2:	d901      	bls.n	80054c8 <HAL_RCCEx_PeriphCLKConfig+0x48>
 80054c4:	2303      	movs	r3, #3
 80054c6:	e0ba      	b.n	800563e <HAL_RCCEx_PeriphCLKConfig+0x1be>
 80054c8:	4b60      	ldr	r3, [pc, #384]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80054ca:	681b      	ldr	r3, [r3, #0]
 80054cc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80054d0:	2b00      	cmp	r3, #0
 80054d2:	d1f0      	bne.n	80054b6 <HAL_RCCEx_PeriphCLKConfig+0x36>
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	685b      	ldr	r3, [r3, #4]
 80054d8:	019a      	lsls	r2, r3, #6
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	689b      	ldr	r3, [r3, #8]
 80054de:	071b      	lsls	r3, r3, #28
 80054e0:	495a      	ldr	r1, [pc, #360]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80054e2:	4313      	orrs	r3, r2
 80054e4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80054e8:	4b57      	ldr	r3, [pc, #348]	; (8005648 <HAL_RCCEx_PeriphCLKConfig+0x1c8>)
 80054ea:	2201      	movs	r2, #1
 80054ec:	601a      	str	r2, [r3, #0]
 80054ee:	f7fe fc41 	bl	8003d74 <HAL_GetTick>
 80054f2:	6178      	str	r0, [r7, #20]
 80054f4:	e008      	b.n	8005508 <HAL_RCCEx_PeriphCLKConfig+0x88>
 80054f6:	f7fe fc3d 	bl	8003d74 <HAL_GetTick>
 80054fa:	4602      	mov	r2, r0
 80054fc:	697b      	ldr	r3, [r7, #20]
 80054fe:	1ad3      	subs	r3, r2, r3
 8005500:	2b02      	cmp	r3, #2
 8005502:	d901      	bls.n	8005508 <HAL_RCCEx_PeriphCLKConfig+0x88>
 8005504:	2303      	movs	r3, #3
 8005506:	e09a      	b.n	800563e <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8005508:	4b50      	ldr	r3, [pc, #320]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005510:	2b00      	cmp	r3, #0
 8005512:	d0f0      	beq.n	80054f6 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	f003 0302 	and.w	r3, r3, #2
 800551c:	2b00      	cmp	r3, #0
 800551e:	f000 8083 	beq.w	8005628 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8005522:	2300      	movs	r3, #0
 8005524:	60fb      	str	r3, [r7, #12]
 8005526:	4b49      	ldr	r3, [pc, #292]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005528:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800552a:	4a48      	ldr	r2, [pc, #288]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800552c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005530:	6413      	str	r3, [r2, #64]	; 0x40
 8005532:	4b46      	ldr	r3, [pc, #280]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005534:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005536:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800553a:	60fb      	str	r3, [r7, #12]
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	4b44      	ldr	r3, [pc, #272]	; (8005650 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005540:	681b      	ldr	r3, [r3, #0]
 8005542:	4a43      	ldr	r2, [pc, #268]	; (8005650 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005544:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005548:	6013      	str	r3, [r2, #0]
 800554a:	f7fe fc13 	bl	8003d74 <HAL_GetTick>
 800554e:	6178      	str	r0, [r7, #20]
 8005550:	e008      	b.n	8005564 <HAL_RCCEx_PeriphCLKConfig+0xe4>
 8005552:	f7fe fc0f 	bl	8003d74 <HAL_GetTick>
 8005556:	4602      	mov	r2, r0
 8005558:	697b      	ldr	r3, [r7, #20]
 800555a:	1ad3      	subs	r3, r2, r3
 800555c:	2b02      	cmp	r3, #2
 800555e:	d901      	bls.n	8005564 <HAL_RCCEx_PeriphCLKConfig+0xe4>
 8005560:	2303      	movs	r3, #3
 8005562:	e06c      	b.n	800563e <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8005564:	4b3a      	ldr	r3, [pc, #232]	; (8005650 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800556c:	2b00      	cmp	r3, #0
 800556e:	d0f0      	beq.n	8005552 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8005570:	4b36      	ldr	r3, [pc, #216]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005572:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005574:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005578:	613b      	str	r3, [r7, #16]
 800557a:	693b      	ldr	r3, [r7, #16]
 800557c:	2b00      	cmp	r3, #0
 800557e:	d02f      	beq.n	80055e0 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	68db      	ldr	r3, [r3, #12]
 8005584:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005588:	693a      	ldr	r2, [r7, #16]
 800558a:	429a      	cmp	r2, r3
 800558c:	d028      	beq.n	80055e0 <HAL_RCCEx_PeriphCLKConfig+0x160>
 800558e:	4b2f      	ldr	r3, [pc, #188]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005590:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005592:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005596:	613b      	str	r3, [r7, #16]
 8005598:	4b2e      	ldr	r3, [pc, #184]	; (8005654 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 800559a:	2201      	movs	r2, #1
 800559c:	601a      	str	r2, [r3, #0]
 800559e:	4b2d      	ldr	r3, [pc, #180]	; (8005654 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80055a0:	2200      	movs	r2, #0
 80055a2:	601a      	str	r2, [r3, #0]
 80055a4:	4a29      	ldr	r2, [pc, #164]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80055a6:	693b      	ldr	r3, [r7, #16]
 80055a8:	6713      	str	r3, [r2, #112]	; 0x70
 80055aa:	4b28      	ldr	r3, [pc, #160]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80055ac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80055ae:	f003 0301 	and.w	r3, r3, #1
 80055b2:	2b01      	cmp	r3, #1
 80055b4:	d114      	bne.n	80055e0 <HAL_RCCEx_PeriphCLKConfig+0x160>
 80055b6:	f7fe fbdd 	bl	8003d74 <HAL_GetTick>
 80055ba:	6178      	str	r0, [r7, #20]
 80055bc:	e00a      	b.n	80055d4 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80055be:	f7fe fbd9 	bl	8003d74 <HAL_GetTick>
 80055c2:	4602      	mov	r2, r0
 80055c4:	697b      	ldr	r3, [r7, #20]
 80055c6:	1ad3      	subs	r3, r2, r3
 80055c8:	f241 3288 	movw	r2, #5000	; 0x1388
 80055cc:	4293      	cmp	r3, r2
 80055ce:	d901      	bls.n	80055d4 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80055d0:	2303      	movs	r3, #3
 80055d2:	e034      	b.n	800563e <HAL_RCCEx_PeriphCLKConfig+0x1be>
 80055d4:	4b1d      	ldr	r3, [pc, #116]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80055d6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80055d8:	f003 0302 	and.w	r3, r3, #2
 80055dc:	2b00      	cmp	r3, #0
 80055de:	d0ee      	beq.n	80055be <HAL_RCCEx_PeriphCLKConfig+0x13e>
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	68db      	ldr	r3, [r3, #12]
 80055e4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80055e8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80055ec:	d10d      	bne.n	800560a <HAL_RCCEx_PeriphCLKConfig+0x18a>
 80055ee:	4b17      	ldr	r3, [pc, #92]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 80055f0:	689b      	ldr	r3, [r3, #8]
 80055f2:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	68db      	ldr	r3, [r3, #12]
 80055fa:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80055fe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005602:	4912      	ldr	r1, [pc, #72]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005604:	4313      	orrs	r3, r2
 8005606:	608b      	str	r3, [r1, #8]
 8005608:	e005      	b.n	8005616 <HAL_RCCEx_PeriphCLKConfig+0x196>
 800560a:	4b10      	ldr	r3, [pc, #64]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 800560c:	689b      	ldr	r3, [r3, #8]
 800560e:	4a0f      	ldr	r2, [pc, #60]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005610:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005614:	6093      	str	r3, [r2, #8]
 8005616:	4b0d      	ldr	r3, [pc, #52]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005618:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800561a:	687b      	ldr	r3, [r7, #4]
 800561c:	68db      	ldr	r3, [r3, #12]
 800561e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005622:	490a      	ldr	r1, [pc, #40]	; (800564c <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
 8005624:	4313      	orrs	r3, r2
 8005626:	670b      	str	r3, [r1, #112]	; 0x70
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	f003 0308 	and.w	r3, r3, #8
 8005630:	2b00      	cmp	r3, #0
 8005632:	d003      	beq.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
 8005634:	687b      	ldr	r3, [r7, #4]
 8005636:	7c1a      	ldrb	r2, [r3, #16]
 8005638:	4b07      	ldr	r3, [pc, #28]	; (8005658 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800563a:	601a      	str	r2, [r3, #0]
 800563c:	2300      	movs	r3, #0
 800563e:	4618      	mov	r0, r3
 8005640:	3718      	adds	r7, #24
 8005642:	46bd      	mov	sp, r7
 8005644:	bd80      	pop	{r7, pc}
 8005646:	bf00      	nop
 8005648:	42470068 	.word	0x42470068
 800564c:	40023800 	.word	0x40023800
 8005650:	40007000 	.word	0x40007000
 8005654:	42470e40 	.word	0x42470e40
 8005658:	424711e0 	.word	0x424711e0

0800565c <HAL_RTC_Init>:
 800565c:	b580      	push	{r7, lr}
 800565e:	b084      	sub	sp, #16
 8005660:	af00      	add	r7, sp, #0
 8005662:	6078      	str	r0, [r7, #4]
 8005664:	2301      	movs	r3, #1
 8005666:	73fb      	strb	r3, [r7, #15]
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	2b00      	cmp	r3, #0
 800566c:	d101      	bne.n	8005672 <HAL_RTC_Init+0x16>
 800566e:	2301      	movs	r3, #1
 8005670:	e066      	b.n	8005740 <HAL_RTC_Init+0xe4>
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	7f5b      	ldrb	r3, [r3, #29]
 8005676:	b2db      	uxtb	r3, r3
 8005678:	2b00      	cmp	r3, #0
 800567a:	d105      	bne.n	8005688 <HAL_RTC_Init+0x2c>
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	2200      	movs	r2, #0
 8005680:	771a      	strb	r2, [r3, #28]
 8005682:	6878      	ldr	r0, [r7, #4]
 8005684:	f7fe f9d6 	bl	8003a34 <HAL_RTC_MspInit>
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	2202      	movs	r2, #2
 800568c:	775a      	strb	r2, [r3, #29]
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	22ca      	movs	r2, #202	; 0xca
 8005694:	625a      	str	r2, [r3, #36]	; 0x24
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	681b      	ldr	r3, [r3, #0]
 800569a:	2253      	movs	r2, #83	; 0x53
 800569c:	625a      	str	r2, [r3, #36]	; 0x24
 800569e:	6878      	ldr	r0, [r7, #4]
 80056a0:	f000 f998 	bl	80059d4 <RTC_EnterInitMode>
 80056a4:	4603      	mov	r3, r0
 80056a6:	73fb      	strb	r3, [r7, #15]
 80056a8:	7bfb      	ldrb	r3, [r7, #15]
 80056aa:	2b00      	cmp	r3, #0
 80056ac:	d12c      	bne.n	8005708 <HAL_RTC_Init+0xac>
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	681b      	ldr	r3, [r3, #0]
 80056b2:	689b      	ldr	r3, [r3, #8]
 80056b4:	687a      	ldr	r2, [r7, #4]
 80056b6:	6812      	ldr	r2, [r2, #0]
 80056b8:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80056bc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80056c0:	6093      	str	r3, [r2, #8]
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	6899      	ldr	r1, [r3, #8]
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	685a      	ldr	r2, [r3, #4]
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	691b      	ldr	r3, [r3, #16]
 80056d0:	431a      	orrs	r2, r3
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	695b      	ldr	r3, [r3, #20]
 80056d6:	431a      	orrs	r2, r3
 80056d8:	687b      	ldr	r3, [r7, #4]
 80056da:	681b      	ldr	r3, [r3, #0]
 80056dc:	430a      	orrs	r2, r1
 80056de:	609a      	str	r2, [r3, #8]
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	687a      	ldr	r2, [r7, #4]
 80056e6:	68d2      	ldr	r2, [r2, #12]
 80056e8:	611a      	str	r2, [r3, #16]
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	681b      	ldr	r3, [r3, #0]
 80056ee:	6919      	ldr	r1, [r3, #16]
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	689b      	ldr	r3, [r3, #8]
 80056f4:	041a      	lsls	r2, r3, #16
 80056f6:	687b      	ldr	r3, [r7, #4]
 80056f8:	681b      	ldr	r3, [r3, #0]
 80056fa:	430a      	orrs	r2, r1
 80056fc:	611a      	str	r2, [r3, #16]
 80056fe:	6878      	ldr	r0, [r7, #4]
 8005700:	f000 f99f 	bl	8005a42 <RTC_ExitInitMode>
 8005704:	4603      	mov	r3, r0
 8005706:	73fb      	strb	r3, [r7, #15]
 8005708:	7bfb      	ldrb	r3, [r7, #15]
 800570a:	2b00      	cmp	r3, #0
 800570c:	d113      	bne.n	8005736 <HAL_RTC_Init+0xda>
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005714:	687b      	ldr	r3, [r7, #4]
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800571c:	641a      	str	r2, [r3, #64]	; 0x40
 800571e:	687b      	ldr	r3, [r7, #4]
 8005720:	681b      	ldr	r3, [r3, #0]
 8005722:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	699a      	ldr	r2, [r3, #24]
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	681b      	ldr	r3, [r3, #0]
 800572c:	430a      	orrs	r2, r1
 800572e:	641a      	str	r2, [r3, #64]	; 0x40
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	2201      	movs	r2, #1
 8005734:	775a      	strb	r2, [r3, #29]
 8005736:	687b      	ldr	r3, [r7, #4]
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	22ff      	movs	r2, #255	; 0xff
 800573c:	625a      	str	r2, [r3, #36]	; 0x24
 800573e:	7bfb      	ldrb	r3, [r7, #15]
 8005740:	4618      	mov	r0, r3
 8005742:	3710      	adds	r7, #16
 8005744:	46bd      	mov	sp, r7
 8005746:	bd80      	pop	{r7, pc}

08005748 <HAL_RTC_SetTime>:
 8005748:	b590      	push	{r4, r7, lr}
 800574a:	b087      	sub	sp, #28
 800574c:	af00      	add	r7, sp, #0
 800574e:	60f8      	str	r0, [r7, #12]
 8005750:	60b9      	str	r1, [r7, #8]
 8005752:	607a      	str	r2, [r7, #4]
 8005754:	2300      	movs	r3, #0
 8005756:	617b      	str	r3, [r7, #20]
 8005758:	68fb      	ldr	r3, [r7, #12]
 800575a:	7f1b      	ldrb	r3, [r3, #28]
 800575c:	2b01      	cmp	r3, #1
 800575e:	d101      	bne.n	8005764 <HAL_RTC_SetTime+0x1c>
 8005760:	2302      	movs	r3, #2
 8005762:	e087      	b.n	8005874 <HAL_RTC_SetTime+0x12c>
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	2201      	movs	r2, #1
 8005768:	771a      	strb	r2, [r3, #28]
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	2202      	movs	r2, #2
 800576e:	775a      	strb	r2, [r3, #29]
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	2b00      	cmp	r3, #0
 8005774:	d126      	bne.n	80057c4 <HAL_RTC_SetTime+0x7c>
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	689b      	ldr	r3, [r3, #8]
 800577c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005780:	2b00      	cmp	r3, #0
 8005782:	d102      	bne.n	800578a <HAL_RTC_SetTime+0x42>
 8005784:	68bb      	ldr	r3, [r7, #8]
 8005786:	2200      	movs	r2, #0
 8005788:	70da      	strb	r2, [r3, #3]
 800578a:	68bb      	ldr	r3, [r7, #8]
 800578c:	781b      	ldrb	r3, [r3, #0]
 800578e:	4618      	mov	r0, r3
 8005790:	f000 f97c 	bl	8005a8c <RTC_ByteToBcd2>
 8005794:	4603      	mov	r3, r0
 8005796:	041c      	lsls	r4, r3, #16
 8005798:	68bb      	ldr	r3, [r7, #8]
 800579a:	785b      	ldrb	r3, [r3, #1]
 800579c:	4618      	mov	r0, r3
 800579e:	f000 f975 	bl	8005a8c <RTC_ByteToBcd2>
 80057a2:	4603      	mov	r3, r0
 80057a4:	021b      	lsls	r3, r3, #8
 80057a6:	431c      	orrs	r4, r3
 80057a8:	68bb      	ldr	r3, [r7, #8]
 80057aa:	789b      	ldrb	r3, [r3, #2]
 80057ac:	4618      	mov	r0, r3
 80057ae:	f000 f96d 	bl	8005a8c <RTC_ByteToBcd2>
 80057b2:	4603      	mov	r3, r0
 80057b4:	ea44 0203 	orr.w	r2, r4, r3
 80057b8:	68bb      	ldr	r3, [r7, #8]
 80057ba:	78db      	ldrb	r3, [r3, #3]
 80057bc:	059b      	lsls	r3, r3, #22
 80057be:	4313      	orrs	r3, r2
 80057c0:	617b      	str	r3, [r7, #20]
 80057c2:	e018      	b.n	80057f6 <HAL_RTC_SetTime+0xae>
 80057c4:	68fb      	ldr	r3, [r7, #12]
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	689b      	ldr	r3, [r3, #8]
 80057ca:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80057ce:	2b00      	cmp	r3, #0
 80057d0:	d102      	bne.n	80057d8 <HAL_RTC_SetTime+0x90>
 80057d2:	68bb      	ldr	r3, [r7, #8]
 80057d4:	2200      	movs	r2, #0
 80057d6:	70da      	strb	r2, [r3, #3]
 80057d8:	68bb      	ldr	r3, [r7, #8]
 80057da:	781b      	ldrb	r3, [r3, #0]
 80057dc:	041a      	lsls	r2, r3, #16
 80057de:	68bb      	ldr	r3, [r7, #8]
 80057e0:	785b      	ldrb	r3, [r3, #1]
 80057e2:	021b      	lsls	r3, r3, #8
 80057e4:	4313      	orrs	r3, r2
 80057e6:	68ba      	ldr	r2, [r7, #8]
 80057e8:	7892      	ldrb	r2, [r2, #2]
 80057ea:	431a      	orrs	r2, r3
 80057ec:	68bb      	ldr	r3, [r7, #8]
 80057ee:	78db      	ldrb	r3, [r3, #3]
 80057f0:	059b      	lsls	r3, r3, #22
 80057f2:	4313      	orrs	r3, r2
 80057f4:	617b      	str	r3, [r7, #20]
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	22ca      	movs	r2, #202	; 0xca
 80057fc:	625a      	str	r2, [r3, #36]	; 0x24
 80057fe:	68fb      	ldr	r3, [r7, #12]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	2253      	movs	r2, #83	; 0x53
 8005804:	625a      	str	r2, [r3, #36]	; 0x24
 8005806:	68f8      	ldr	r0, [r7, #12]
 8005808:	f000 f8e4 	bl	80059d4 <RTC_EnterInitMode>
 800580c:	4603      	mov	r3, r0
 800580e:	74fb      	strb	r3, [r7, #19]
 8005810:	7cfb      	ldrb	r3, [r7, #19]
 8005812:	2b00      	cmp	r3, #0
 8005814:	d120      	bne.n	8005858 <HAL_RTC_SetTime+0x110>
 8005816:	68fb      	ldr	r3, [r7, #12]
 8005818:	681a      	ldr	r2, [r3, #0]
 800581a:	697b      	ldr	r3, [r7, #20]
 800581c:	f003 337f 	and.w	r3, r3, #2139062143	; 0x7f7f7f7f
 8005820:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8005824:	6013      	str	r3, [r2, #0]
 8005826:	68fb      	ldr	r3, [r7, #12]
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	689a      	ldr	r2, [r3, #8]
 800582c:	68fb      	ldr	r3, [r7, #12]
 800582e:	681b      	ldr	r3, [r3, #0]
 8005830:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005834:	609a      	str	r2, [r3, #8]
 8005836:	68fb      	ldr	r3, [r7, #12]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	6899      	ldr	r1, [r3, #8]
 800583c:	68bb      	ldr	r3, [r7, #8]
 800583e:	68da      	ldr	r2, [r3, #12]
 8005840:	68bb      	ldr	r3, [r7, #8]
 8005842:	691b      	ldr	r3, [r3, #16]
 8005844:	431a      	orrs	r2, r3
 8005846:	68fb      	ldr	r3, [r7, #12]
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	430a      	orrs	r2, r1
 800584c:	609a      	str	r2, [r3, #8]
 800584e:	68f8      	ldr	r0, [r7, #12]
 8005850:	f000 f8f7 	bl	8005a42 <RTC_ExitInitMode>
 8005854:	4603      	mov	r3, r0
 8005856:	74fb      	strb	r3, [r7, #19]
 8005858:	7cfb      	ldrb	r3, [r7, #19]
 800585a:	2b00      	cmp	r3, #0
 800585c:	d102      	bne.n	8005864 <HAL_RTC_SetTime+0x11c>
 800585e:	68fb      	ldr	r3, [r7, #12]
 8005860:	2201      	movs	r2, #1
 8005862:	775a      	strb	r2, [r3, #29]
 8005864:	68fb      	ldr	r3, [r7, #12]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	22ff      	movs	r2, #255	; 0xff
 800586a:	625a      	str	r2, [r3, #36]	; 0x24
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	2200      	movs	r2, #0
 8005870:	771a      	strb	r2, [r3, #28]
 8005872:	7cfb      	ldrb	r3, [r7, #19]
 8005874:	4618      	mov	r0, r3
 8005876:	371c      	adds	r7, #28
 8005878:	46bd      	mov	sp, r7
 800587a:	bd90      	pop	{r4, r7, pc}

0800587c <HAL_RTC_SetDate>:
 800587c:	b590      	push	{r4, r7, lr}
 800587e:	b087      	sub	sp, #28
 8005880:	af00      	add	r7, sp, #0
 8005882:	60f8      	str	r0, [r7, #12]
 8005884:	60b9      	str	r1, [r7, #8]
 8005886:	607a      	str	r2, [r7, #4]
 8005888:	2300      	movs	r3, #0
 800588a:	617b      	str	r3, [r7, #20]
 800588c:	68fb      	ldr	r3, [r7, #12]
 800588e:	7f1b      	ldrb	r3, [r3, #28]
 8005890:	2b01      	cmp	r3, #1
 8005892:	d101      	bne.n	8005898 <HAL_RTC_SetDate+0x1c>
 8005894:	2302      	movs	r3, #2
 8005896:	e071      	b.n	800597c <HAL_RTC_SetDate+0x100>
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	2201      	movs	r2, #1
 800589c:	771a      	strb	r2, [r3, #28]
 800589e:	68fb      	ldr	r3, [r7, #12]
 80058a0:	2202      	movs	r2, #2
 80058a2:	775a      	strb	r2, [r3, #29]
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	2b00      	cmp	r3, #0
 80058a8:	d10e      	bne.n	80058c8 <HAL_RTC_SetDate+0x4c>
 80058aa:	68bb      	ldr	r3, [r7, #8]
 80058ac:	785b      	ldrb	r3, [r3, #1]
 80058ae:	f003 0310 	and.w	r3, r3, #16
 80058b2:	2b00      	cmp	r3, #0
 80058b4:	d008      	beq.n	80058c8 <HAL_RTC_SetDate+0x4c>
 80058b6:	68bb      	ldr	r3, [r7, #8]
 80058b8:	785b      	ldrb	r3, [r3, #1]
 80058ba:	f023 0310 	bic.w	r3, r3, #16
 80058be:	b2db      	uxtb	r3, r3
 80058c0:	330a      	adds	r3, #10
 80058c2:	b2da      	uxtb	r2, r3
 80058c4:	68bb      	ldr	r3, [r7, #8]
 80058c6:	705a      	strb	r2, [r3, #1]
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d11c      	bne.n	8005908 <HAL_RTC_SetDate+0x8c>
 80058ce:	68bb      	ldr	r3, [r7, #8]
 80058d0:	78db      	ldrb	r3, [r3, #3]
 80058d2:	4618      	mov	r0, r3
 80058d4:	f000 f8da 	bl	8005a8c <RTC_ByteToBcd2>
 80058d8:	4603      	mov	r3, r0
 80058da:	041c      	lsls	r4, r3, #16
 80058dc:	68bb      	ldr	r3, [r7, #8]
 80058de:	785b      	ldrb	r3, [r3, #1]
 80058e0:	4618      	mov	r0, r3
 80058e2:	f000 f8d3 	bl	8005a8c <RTC_ByteToBcd2>
 80058e6:	4603      	mov	r3, r0
 80058e8:	021b      	lsls	r3, r3, #8
 80058ea:	431c      	orrs	r4, r3
 80058ec:	68bb      	ldr	r3, [r7, #8]
 80058ee:	789b      	ldrb	r3, [r3, #2]
 80058f0:	4618      	mov	r0, r3
 80058f2:	f000 f8cb 	bl	8005a8c <RTC_ByteToBcd2>
 80058f6:	4603      	mov	r3, r0
 80058f8:	ea44 0203 	orr.w	r2, r4, r3
 80058fc:	68bb      	ldr	r3, [r7, #8]
 80058fe:	781b      	ldrb	r3, [r3, #0]
 8005900:	035b      	lsls	r3, r3, #13
 8005902:	4313      	orrs	r3, r2
 8005904:	617b      	str	r3, [r7, #20]
 8005906:	e00e      	b.n	8005926 <HAL_RTC_SetDate+0xaa>
 8005908:	68bb      	ldr	r3, [r7, #8]
 800590a:	78db      	ldrb	r3, [r3, #3]
 800590c:	041a      	lsls	r2, r3, #16
 800590e:	68bb      	ldr	r3, [r7, #8]
 8005910:	785b      	ldrb	r3, [r3, #1]
 8005912:	021b      	lsls	r3, r3, #8
 8005914:	4313      	orrs	r3, r2
 8005916:	68ba      	ldr	r2, [r7, #8]
 8005918:	7892      	ldrb	r2, [r2, #2]
 800591a:	431a      	orrs	r2, r3
 800591c:	68bb      	ldr	r3, [r7, #8]
 800591e:	781b      	ldrb	r3, [r3, #0]
 8005920:	035b      	lsls	r3, r3, #13
 8005922:	4313      	orrs	r3, r2
 8005924:	617b      	str	r3, [r7, #20]
 8005926:	68fb      	ldr	r3, [r7, #12]
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	22ca      	movs	r2, #202	; 0xca
 800592c:	625a      	str	r2, [r3, #36]	; 0x24
 800592e:	68fb      	ldr	r3, [r7, #12]
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	2253      	movs	r2, #83	; 0x53
 8005934:	625a      	str	r2, [r3, #36]	; 0x24
 8005936:	68f8      	ldr	r0, [r7, #12]
 8005938:	f000 f84c 	bl	80059d4 <RTC_EnterInitMode>
 800593c:	4603      	mov	r3, r0
 800593e:	74fb      	strb	r3, [r7, #19]
 8005940:	7cfb      	ldrb	r3, [r7, #19]
 8005942:	2b00      	cmp	r3, #0
 8005944:	d10c      	bne.n	8005960 <HAL_RTC_SetDate+0xe4>
 8005946:	68fb      	ldr	r3, [r7, #12]
 8005948:	681a      	ldr	r2, [r3, #0]
 800594a:	697b      	ldr	r3, [r7, #20]
 800594c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8005950:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8005954:	6053      	str	r3, [r2, #4]
 8005956:	68f8      	ldr	r0, [r7, #12]
 8005958:	f000 f873 	bl	8005a42 <RTC_ExitInitMode>
 800595c:	4603      	mov	r3, r0
 800595e:	74fb      	strb	r3, [r7, #19]
 8005960:	7cfb      	ldrb	r3, [r7, #19]
 8005962:	2b00      	cmp	r3, #0
 8005964:	d102      	bne.n	800596c <HAL_RTC_SetDate+0xf0>
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	2201      	movs	r2, #1
 800596a:	775a      	strb	r2, [r3, #29]
 800596c:	68fb      	ldr	r3, [r7, #12]
 800596e:	681b      	ldr	r3, [r3, #0]
 8005970:	22ff      	movs	r2, #255	; 0xff
 8005972:	625a      	str	r2, [r3, #36]	; 0x24
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	2200      	movs	r2, #0
 8005978:	771a      	strb	r2, [r3, #28]
 800597a:	7cfb      	ldrb	r3, [r7, #19]
 800597c:	4618      	mov	r0, r3
 800597e:	371c      	adds	r7, #28
 8005980:	46bd      	mov	sp, r7
 8005982:	bd90      	pop	{r4, r7, pc}

08005984 <HAL_RTC_WaitForSynchro>:
 8005984:	b580      	push	{r7, lr}
 8005986:	b084      	sub	sp, #16
 8005988:	af00      	add	r7, sp, #0
 800598a:	6078      	str	r0, [r7, #4]
 800598c:	2300      	movs	r3, #0
 800598e:	60fb      	str	r3, [r7, #12]
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	681b      	ldr	r3, [r3, #0]
 8005994:	68da      	ldr	r2, [r3, #12]
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 800599e:	60da      	str	r2, [r3, #12]
 80059a0:	f7fe f9e8 	bl	8003d74 <HAL_GetTick>
 80059a4:	60f8      	str	r0, [r7, #12]
 80059a6:	e009      	b.n	80059bc <HAL_RTC_WaitForSynchro+0x38>
 80059a8:	f7fe f9e4 	bl	8003d74 <HAL_GetTick>
 80059ac:	4602      	mov	r2, r0
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	1ad3      	subs	r3, r2, r3
 80059b2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80059b6:	d901      	bls.n	80059bc <HAL_RTC_WaitForSynchro+0x38>
 80059b8:	2303      	movs	r3, #3
 80059ba:	e007      	b.n	80059cc <HAL_RTC_WaitForSynchro+0x48>
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	681b      	ldr	r3, [r3, #0]
 80059c0:	68db      	ldr	r3, [r3, #12]
 80059c2:	f003 0320 	and.w	r3, r3, #32
 80059c6:	2b00      	cmp	r3, #0
 80059c8:	d0ee      	beq.n	80059a8 <HAL_RTC_WaitForSynchro+0x24>
 80059ca:	2300      	movs	r3, #0
 80059cc:	4618      	mov	r0, r3
 80059ce:	3710      	adds	r7, #16
 80059d0:	46bd      	mov	sp, r7
 80059d2:	bd80      	pop	{r7, pc}

080059d4 <RTC_EnterInitMode>:
 80059d4:	b580      	push	{r7, lr}
 80059d6:	b084      	sub	sp, #16
 80059d8:	af00      	add	r7, sp, #0
 80059da:	6078      	str	r0, [r7, #4]
 80059dc:	2300      	movs	r3, #0
 80059de:	60bb      	str	r3, [r7, #8]
 80059e0:	2300      	movs	r3, #0
 80059e2:	73fb      	strb	r3, [r7, #15]
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	681b      	ldr	r3, [r3, #0]
 80059e8:	68db      	ldr	r3, [r3, #12]
 80059ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80059ee:	2b00      	cmp	r3, #0
 80059f0:	d122      	bne.n	8005a38 <RTC_EnterInitMode+0x64>
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	68da      	ldr	r2, [r3, #12]
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005a00:	60da      	str	r2, [r3, #12]
 8005a02:	f7fe f9b7 	bl	8003d74 <HAL_GetTick>
 8005a06:	60b8      	str	r0, [r7, #8]
 8005a08:	e00c      	b.n	8005a24 <RTC_EnterInitMode+0x50>
 8005a0a:	f7fe f9b3 	bl	8003d74 <HAL_GetTick>
 8005a0e:	4602      	mov	r2, r0
 8005a10:	68bb      	ldr	r3, [r7, #8]
 8005a12:	1ad3      	subs	r3, r2, r3
 8005a14:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005a18:	d904      	bls.n	8005a24 <RTC_EnterInitMode+0x50>
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	2204      	movs	r2, #4
 8005a1e:	775a      	strb	r2, [r3, #29]
 8005a20:	2301      	movs	r3, #1
 8005a22:	73fb      	strb	r3, [r7, #15]
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	68db      	ldr	r3, [r3, #12]
 8005a2a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005a2e:	2b00      	cmp	r3, #0
 8005a30:	d102      	bne.n	8005a38 <RTC_EnterInitMode+0x64>
 8005a32:	7bfb      	ldrb	r3, [r7, #15]
 8005a34:	2b01      	cmp	r3, #1
 8005a36:	d1e8      	bne.n	8005a0a <RTC_EnterInitMode+0x36>
 8005a38:	7bfb      	ldrb	r3, [r7, #15]
 8005a3a:	4618      	mov	r0, r3
 8005a3c:	3710      	adds	r7, #16
 8005a3e:	46bd      	mov	sp, r7
 8005a40:	bd80      	pop	{r7, pc}

08005a42 <RTC_ExitInitMode>:
 8005a42:	b580      	push	{r7, lr}
 8005a44:	b084      	sub	sp, #16
 8005a46:	af00      	add	r7, sp, #0
 8005a48:	6078      	str	r0, [r7, #4]
 8005a4a:	2300      	movs	r3, #0
 8005a4c:	73fb      	strb	r3, [r7, #15]
 8005a4e:	687b      	ldr	r3, [r7, #4]
 8005a50:	681b      	ldr	r3, [r3, #0]
 8005a52:	68da      	ldr	r2, [r3, #12]
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	681b      	ldr	r3, [r3, #0]
 8005a58:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005a5c:	60da      	str	r2, [r3, #12]
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	689b      	ldr	r3, [r3, #8]
 8005a64:	f003 0320 	and.w	r3, r3, #32
 8005a68:	2b00      	cmp	r3, #0
 8005a6a:	d10a      	bne.n	8005a82 <RTC_ExitInitMode+0x40>
 8005a6c:	6878      	ldr	r0, [r7, #4]
 8005a6e:	f7ff ff89 	bl	8005984 <HAL_RTC_WaitForSynchro>
 8005a72:	4603      	mov	r3, r0
 8005a74:	2b00      	cmp	r3, #0
 8005a76:	d004      	beq.n	8005a82 <RTC_ExitInitMode+0x40>
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	2204      	movs	r2, #4
 8005a7c:	775a      	strb	r2, [r3, #29]
 8005a7e:	2301      	movs	r3, #1
 8005a80:	73fb      	strb	r3, [r7, #15]
 8005a82:	7bfb      	ldrb	r3, [r7, #15]
 8005a84:	4618      	mov	r0, r3
 8005a86:	3710      	adds	r7, #16
 8005a88:	46bd      	mov	sp, r7
 8005a8a:	bd80      	pop	{r7, pc}

08005a8c <RTC_ByteToBcd2>:
 8005a8c:	b480      	push	{r7}
 8005a8e:	b085      	sub	sp, #20
 8005a90:	af00      	add	r7, sp, #0
 8005a92:	4603      	mov	r3, r0
 8005a94:	71fb      	strb	r3, [r7, #7]
 8005a96:	2300      	movs	r3, #0
 8005a98:	73fb      	strb	r3, [r7, #15]
 8005a9a:	e005      	b.n	8005aa8 <RTC_ByteToBcd2+0x1c>
 8005a9c:	7bfb      	ldrb	r3, [r7, #15]
 8005a9e:	3301      	adds	r3, #1
 8005aa0:	73fb      	strb	r3, [r7, #15]
 8005aa2:	79fb      	ldrb	r3, [r7, #7]
 8005aa4:	3b0a      	subs	r3, #10
 8005aa6:	71fb      	strb	r3, [r7, #7]
 8005aa8:	79fb      	ldrb	r3, [r7, #7]
 8005aaa:	2b09      	cmp	r3, #9
 8005aac:	d8f6      	bhi.n	8005a9c <RTC_ByteToBcd2+0x10>
 8005aae:	7bfb      	ldrb	r3, [r7, #15]
 8005ab0:	011b      	lsls	r3, r3, #4
 8005ab2:	b2da      	uxtb	r2, r3
 8005ab4:	79fb      	ldrb	r3, [r7, #7]
 8005ab6:	4313      	orrs	r3, r2
 8005ab8:	b2db      	uxtb	r3, r3
 8005aba:	4618      	mov	r0, r3
 8005abc:	3714      	adds	r7, #20
 8005abe:	46bd      	mov	sp, r7
 8005ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ac4:	4770      	bx	lr
	...

08005ac8 <HAL_RTCEx_SetWakeUpTimer_IT>:
 8005ac8:	b480      	push	{r7}
 8005aca:	b087      	sub	sp, #28
 8005acc:	af00      	add	r7, sp, #0
 8005ace:	60f8      	str	r0, [r7, #12]
 8005ad0:	60b9      	str	r1, [r7, #8]
 8005ad2:	607a      	str	r2, [r7, #4]
 8005ad4:	4b59      	ldr	r3, [pc, #356]	; (8005c3c <HAL_RTCEx_SetWakeUpTimer_IT+0x174>)
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	4a59      	ldr	r2, [pc, #356]	; (8005c40 <HAL_RTCEx_SetWakeUpTimer_IT+0x178>)
 8005ada:	fba2 2303 	umull	r2, r3, r2, r3
 8005ade:	0adb      	lsrs	r3, r3, #11
 8005ae0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005ae4:	fb02 f303 	mul.w	r3, r2, r3
 8005ae8:	617b      	str	r3, [r7, #20]
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	7f1b      	ldrb	r3, [r3, #28]
 8005aee:	2b01      	cmp	r3, #1
 8005af0:	d101      	bne.n	8005af6 <HAL_RTCEx_SetWakeUpTimer_IT+0x2e>
 8005af2:	2302      	movs	r3, #2
 8005af4:	e09b      	b.n	8005c2e <HAL_RTCEx_SetWakeUpTimer_IT+0x166>
 8005af6:	68fb      	ldr	r3, [r7, #12]
 8005af8:	2201      	movs	r2, #1
 8005afa:	771a      	strb	r2, [r3, #28]
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	2202      	movs	r2, #2
 8005b00:	775a      	strb	r2, [r3, #29]
 8005b02:	68fb      	ldr	r3, [r7, #12]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	22ca      	movs	r2, #202	; 0xca
 8005b08:	625a      	str	r2, [r3, #36]	; 0x24
 8005b0a:	68fb      	ldr	r3, [r7, #12]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	2253      	movs	r2, #83	; 0x53
 8005b10:	625a      	str	r2, [r3, #36]	; 0x24
 8005b12:	68fb      	ldr	r3, [r7, #12]
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	689b      	ldr	r3, [r3, #8]
 8005b18:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005b1c:	2b00      	cmp	r3, #0
 8005b1e:	d017      	beq.n	8005b50 <HAL_RTCEx_SetWakeUpTimer_IT+0x88>
 8005b20:	697b      	ldr	r3, [r7, #20]
 8005b22:	1e5a      	subs	r2, r3, #1
 8005b24:	617a      	str	r2, [r7, #20]
 8005b26:	2b00      	cmp	r3, #0
 8005b28:	d10b      	bne.n	8005b42 <HAL_RTCEx_SetWakeUpTimer_IT+0x7a>
 8005b2a:	68fb      	ldr	r3, [r7, #12]
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	22ff      	movs	r2, #255	; 0xff
 8005b30:	625a      	str	r2, [r3, #36]	; 0x24
 8005b32:	68fb      	ldr	r3, [r7, #12]
 8005b34:	2203      	movs	r2, #3
 8005b36:	775a      	strb	r2, [r3, #29]
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	2200      	movs	r2, #0
 8005b3c:	771a      	strb	r2, [r3, #28]
 8005b3e:	2303      	movs	r3, #3
 8005b40:	e075      	b.n	8005c2e <HAL_RTCEx_SetWakeUpTimer_IT+0x166>
 8005b42:	68fb      	ldr	r3, [r7, #12]
 8005b44:	681b      	ldr	r3, [r3, #0]
 8005b46:	68db      	ldr	r3, [r3, #12]
 8005b48:	f003 0304 	and.w	r3, r3, #4
 8005b4c:	2b00      	cmp	r3, #0
 8005b4e:	d1e7      	bne.n	8005b20 <HAL_RTCEx_SetWakeUpTimer_IT+0x58>
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	689a      	ldr	r2, [r3, #8]
 8005b56:	68fb      	ldr	r3, [r7, #12]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b5e:	609a      	str	r2, [r3, #8]
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	68db      	ldr	r3, [r3, #12]
 8005b66:	b2da      	uxtb	r2, r3
 8005b68:	68fb      	ldr	r3, [r7, #12]
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	f462 6290 	orn	r2, r2, #1152	; 0x480
 8005b70:	60da      	str	r2, [r3, #12]
 8005b72:	4b32      	ldr	r3, [pc, #200]	; (8005c3c <HAL_RTCEx_SetWakeUpTimer_IT+0x174>)
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	4a32      	ldr	r2, [pc, #200]	; (8005c40 <HAL_RTCEx_SetWakeUpTimer_IT+0x178>)
 8005b78:	fba2 2303 	umull	r2, r3, r2, r3
 8005b7c:	0adb      	lsrs	r3, r3, #11
 8005b7e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005b82:	fb02 f303 	mul.w	r3, r2, r3
 8005b86:	617b      	str	r3, [r7, #20]
 8005b88:	697b      	ldr	r3, [r7, #20]
 8005b8a:	1e5a      	subs	r2, r3, #1
 8005b8c:	617a      	str	r2, [r7, #20]
 8005b8e:	2b00      	cmp	r3, #0
 8005b90:	d10b      	bne.n	8005baa <HAL_RTCEx_SetWakeUpTimer_IT+0xe2>
 8005b92:	68fb      	ldr	r3, [r7, #12]
 8005b94:	681b      	ldr	r3, [r3, #0]
 8005b96:	22ff      	movs	r2, #255	; 0xff
 8005b98:	625a      	str	r2, [r3, #36]	; 0x24
 8005b9a:	68fb      	ldr	r3, [r7, #12]
 8005b9c:	2203      	movs	r2, #3
 8005b9e:	775a      	strb	r2, [r3, #29]
 8005ba0:	68fb      	ldr	r3, [r7, #12]
 8005ba2:	2200      	movs	r2, #0
 8005ba4:	771a      	strb	r2, [r3, #28]
 8005ba6:	2303      	movs	r3, #3
 8005ba8:	e041      	b.n	8005c2e <HAL_RTCEx_SetWakeUpTimer_IT+0x166>
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	68db      	ldr	r3, [r3, #12]
 8005bb0:	f003 0304 	and.w	r3, r3, #4
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	d0e7      	beq.n	8005b88 <HAL_RTCEx_SetWakeUpTimer_IT+0xc0>
 8005bb8:	68fb      	ldr	r3, [r7, #12]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	689a      	ldr	r2, [r3, #8]
 8005bbe:	68fb      	ldr	r3, [r7, #12]
 8005bc0:	681b      	ldr	r3, [r3, #0]
 8005bc2:	f022 0207 	bic.w	r2, r2, #7
 8005bc6:	609a      	str	r2, [r3, #8]
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	6899      	ldr	r1, [r3, #8]
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	687a      	ldr	r2, [r7, #4]
 8005bd4:	430a      	orrs	r2, r1
 8005bd6:	609a      	str	r2, [r3, #8]
 8005bd8:	68fb      	ldr	r3, [r7, #12]
 8005bda:	681b      	ldr	r3, [r3, #0]
 8005bdc:	68ba      	ldr	r2, [r7, #8]
 8005bde:	615a      	str	r2, [r3, #20]
 8005be0:	4b18      	ldr	r3, [pc, #96]	; (8005c44 <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005be2:	681b      	ldr	r3, [r3, #0]
 8005be4:	4a17      	ldr	r2, [pc, #92]	; (8005c44 <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005be6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8005bea:	6013      	str	r3, [r2, #0]
 8005bec:	4b15      	ldr	r3, [pc, #84]	; (8005c44 <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005bee:	689b      	ldr	r3, [r3, #8]
 8005bf0:	4a14      	ldr	r2, [pc, #80]	; (8005c44 <HAL_RTCEx_SetWakeUpTimer_IT+0x17c>)
 8005bf2:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8005bf6:	6093      	str	r3, [r2, #8]
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	681b      	ldr	r3, [r3, #0]
 8005bfc:	689a      	ldr	r2, [r3, #8]
 8005bfe:	68fb      	ldr	r3, [r7, #12]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005c06:	609a      	str	r2, [r3, #8]
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	689a      	ldr	r2, [r3, #8]
 8005c0e:	68fb      	ldr	r3, [r7, #12]
 8005c10:	681b      	ldr	r3, [r3, #0]
 8005c12:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005c16:	609a      	str	r2, [r3, #8]
 8005c18:	68fb      	ldr	r3, [r7, #12]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	22ff      	movs	r2, #255	; 0xff
 8005c1e:	625a      	str	r2, [r3, #36]	; 0x24
 8005c20:	68fb      	ldr	r3, [r7, #12]
 8005c22:	2201      	movs	r2, #1
 8005c24:	775a      	strb	r2, [r3, #29]
 8005c26:	68fb      	ldr	r3, [r7, #12]
 8005c28:	2200      	movs	r2, #0
 8005c2a:	771a      	strb	r2, [r3, #28]
 8005c2c:	2300      	movs	r3, #0
 8005c2e:	4618      	mov	r0, r3
 8005c30:	371c      	adds	r7, #28
 8005c32:	46bd      	mov	sp, r7
 8005c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c38:	4770      	bx	lr
 8005c3a:	bf00      	nop
 8005c3c:	20000000 	.word	0x20000000
 8005c40:	10624dd3 	.word	0x10624dd3
 8005c44:	40013c00 	.word	0x40013c00

08005c48 <HAL_RTCEx_DeactivateWakeUpTimer>:
 8005c48:	b580      	push	{r7, lr}
 8005c4a:	b084      	sub	sp, #16
 8005c4c:	af00      	add	r7, sp, #0
 8005c4e:	6078      	str	r0, [r7, #4]
 8005c50:	2300      	movs	r3, #0
 8005c52:	60fb      	str	r3, [r7, #12]
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	7f1b      	ldrb	r3, [r3, #28]
 8005c58:	2b01      	cmp	r3, #1
 8005c5a:	d101      	bne.n	8005c60 <HAL_RTCEx_DeactivateWakeUpTimer+0x18>
 8005c5c:	2302      	movs	r3, #2
 8005c5e:	e047      	b.n	8005cf0 <HAL_RTCEx_DeactivateWakeUpTimer+0xa8>
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	2201      	movs	r2, #1
 8005c64:	771a      	strb	r2, [r3, #28]
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	2202      	movs	r2, #2
 8005c6a:	775a      	strb	r2, [r3, #29]
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	22ca      	movs	r2, #202	; 0xca
 8005c72:	625a      	str	r2, [r3, #36]	; 0x24
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	2253      	movs	r2, #83	; 0x53
 8005c7a:	625a      	str	r2, [r3, #36]	; 0x24
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	689a      	ldr	r2, [r3, #8]
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005c8a:	609a      	str	r2, [r3, #8]
 8005c8c:	687b      	ldr	r3, [r7, #4]
 8005c8e:	681b      	ldr	r3, [r3, #0]
 8005c90:	689a      	ldr	r2, [r3, #8]
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005c9a:	609a      	str	r2, [r3, #8]
 8005c9c:	f7fe f86a 	bl	8003d74 <HAL_GetTick>
 8005ca0:	60f8      	str	r0, [r7, #12]
 8005ca2:	e013      	b.n	8005ccc <HAL_RTCEx_DeactivateWakeUpTimer+0x84>
 8005ca4:	f7fe f866 	bl	8003d74 <HAL_GetTick>
 8005ca8:	4602      	mov	r2, r0
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	1ad3      	subs	r3, r2, r3
 8005cae:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005cb2:	d90b      	bls.n	8005ccc <HAL_RTCEx_DeactivateWakeUpTimer+0x84>
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	22ff      	movs	r2, #255	; 0xff
 8005cba:	625a      	str	r2, [r3, #36]	; 0x24
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	2203      	movs	r2, #3
 8005cc0:	775a      	strb	r2, [r3, #29]
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	2200      	movs	r2, #0
 8005cc6:	771a      	strb	r2, [r3, #28]
 8005cc8:	2303      	movs	r3, #3
 8005cca:	e011      	b.n	8005cf0 <HAL_RTCEx_DeactivateWakeUpTimer+0xa8>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	68db      	ldr	r3, [r3, #12]
 8005cd2:	f003 0304 	and.w	r3, r3, #4
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d0e4      	beq.n	8005ca4 <HAL_RTCEx_DeactivateWakeUpTimer+0x5c>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	22ff      	movs	r2, #255	; 0xff
 8005ce0:	625a      	str	r2, [r3, #36]	; 0x24
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	2201      	movs	r2, #1
 8005ce6:	775a      	strb	r2, [r3, #29]
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	2200      	movs	r2, #0
 8005cec:	771a      	strb	r2, [r3, #28]
 8005cee:	2300      	movs	r3, #0
 8005cf0:	4618      	mov	r0, r3
 8005cf2:	3710      	adds	r7, #16
 8005cf4:	46bd      	mov	sp, r7
 8005cf6:	bd80      	pop	{r7, pc}

08005cf8 <HAL_RTCEx_WakeUpTimerIRQHandler>:
 8005cf8:	b580      	push	{r7, lr}
 8005cfa:	b082      	sub	sp, #8
 8005cfc:	af00      	add	r7, sp, #0
 8005cfe:	6078      	str	r0, [r7, #4]
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	68db      	ldr	r3, [r3, #12]
 8005d06:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005d0a:	2b00      	cmp	r3, #0
 8005d0c:	d00b      	beq.n	8005d26 <HAL_RTCEx_WakeUpTimerIRQHandler+0x2e>
 8005d0e:	6878      	ldr	r0, [r7, #4]
 8005d10:	f000 f816 	bl	8005d40 <HAL_RTCEx_WakeUpTimerEventCallback>
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	68db      	ldr	r3, [r3, #12]
 8005d1a:	b2da      	uxtb	r2, r3
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	681b      	ldr	r3, [r3, #0]
 8005d20:	f462 6290 	orn	r2, r2, #1152	; 0x480
 8005d24:	60da      	str	r2, [r3, #12]
 8005d26:	4b05      	ldr	r3, [pc, #20]	; (8005d3c <HAL_RTCEx_WakeUpTimerIRQHandler+0x44>)
 8005d28:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8005d2c:	615a      	str	r2, [r3, #20]
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	2201      	movs	r2, #1
 8005d32:	775a      	strb	r2, [r3, #29]
 8005d34:	bf00      	nop
 8005d36:	3708      	adds	r7, #8
 8005d38:	46bd      	mov	sp, r7
 8005d3a:	bd80      	pop	{r7, pc}
 8005d3c:	40013c00 	.word	0x40013c00

08005d40 <HAL_RTCEx_WakeUpTimerEventCallback>:
 8005d40:	b480      	push	{r7}
 8005d42:	b083      	sub	sp, #12
 8005d44:	af00      	add	r7, sp, #0
 8005d46:	6078      	str	r0, [r7, #4]
 8005d48:	bf00      	nop
 8005d4a:	370c      	adds	r7, #12
 8005d4c:	46bd      	mov	sp, r7
 8005d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d52:	4770      	bx	lr

08005d54 <HAL_UART_Init>:
 8005d54:	b580      	push	{r7, lr}
 8005d56:	b082      	sub	sp, #8
 8005d58:	af00      	add	r7, sp, #0
 8005d5a:	6078      	str	r0, [r7, #4]
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	2b00      	cmp	r3, #0
 8005d60:	d101      	bne.n	8005d66 <HAL_UART_Init+0x12>
 8005d62:	2301      	movs	r3, #1
 8005d64:	e03f      	b.n	8005de6 <HAL_UART_Init+0x92>
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005d6c:	b2db      	uxtb	r3, r3
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d106      	bne.n	8005d80 <HAL_UART_Init+0x2c>
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	2200      	movs	r2, #0
 8005d76:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d7a:	6878      	ldr	r0, [r7, #4]
 8005d7c:	f7fd fe8e 	bl	8003a9c <HAL_UART_MspInit>
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	2224      	movs	r2, #36	; 0x24
 8005d84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	681b      	ldr	r3, [r3, #0]
 8005d8c:	68da      	ldr	r2, [r3, #12]
 8005d8e:	687b      	ldr	r3, [r7, #4]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005d96:	60da      	str	r2, [r3, #12]
 8005d98:	6878      	ldr	r0, [r7, #4]
 8005d9a:	f001 f811 	bl	8006dc0 <UART_SetConfig>
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	691a      	ldr	r2, [r3, #16]
 8005da4:	687b      	ldr	r3, [r7, #4]
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8005dac:	611a      	str	r2, [r3, #16]
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	695a      	ldr	r2, [r3, #20]
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005dbc:	615a      	str	r2, [r3, #20]
 8005dbe:	687b      	ldr	r3, [r7, #4]
 8005dc0:	681b      	ldr	r3, [r3, #0]
 8005dc2:	68da      	ldr	r2, [r3, #12]
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005dcc:	60da      	str	r2, [r3, #12]
 8005dce:	687b      	ldr	r3, [r7, #4]
 8005dd0:	2200      	movs	r2, #0
 8005dd2:	641a      	str	r2, [r3, #64]	; 0x40
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	2220      	movs	r2, #32
 8005dd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	2220      	movs	r2, #32
 8005de0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005de4:	2300      	movs	r3, #0
 8005de6:	4618      	mov	r0, r3
 8005de8:	3708      	adds	r7, #8
 8005dea:	46bd      	mov	sp, r7
 8005dec:	bd80      	pop	{r7, pc}

08005dee <HAL_UART_Transmit>:
 8005dee:	b580      	push	{r7, lr}
 8005df0:	b08a      	sub	sp, #40	; 0x28
 8005df2:	af02      	add	r7, sp, #8
 8005df4:	60f8      	str	r0, [r7, #12]
 8005df6:	60b9      	str	r1, [r7, #8]
 8005df8:	603b      	str	r3, [r7, #0]
 8005dfa:	4613      	mov	r3, r2
 8005dfc:	80fb      	strh	r3, [r7, #6]
 8005dfe:	2300      	movs	r3, #0
 8005e00:	617b      	str	r3, [r7, #20]
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005e08:	b2db      	uxtb	r3, r3
 8005e0a:	2b20      	cmp	r3, #32
 8005e0c:	d17c      	bne.n	8005f08 <HAL_UART_Transmit+0x11a>
 8005e0e:	68bb      	ldr	r3, [r7, #8]
 8005e10:	2b00      	cmp	r3, #0
 8005e12:	d002      	beq.n	8005e1a <HAL_UART_Transmit+0x2c>
 8005e14:	88fb      	ldrh	r3, [r7, #6]
 8005e16:	2b00      	cmp	r3, #0
 8005e18:	d101      	bne.n	8005e1e <HAL_UART_Transmit+0x30>
 8005e1a:	2301      	movs	r3, #1
 8005e1c:	e075      	b.n	8005f0a <HAL_UART_Transmit+0x11c>
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005e24:	2b01      	cmp	r3, #1
 8005e26:	d101      	bne.n	8005e2c <HAL_UART_Transmit+0x3e>
 8005e28:	2302      	movs	r3, #2
 8005e2a:	e06e      	b.n	8005f0a <HAL_UART_Transmit+0x11c>
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	2201      	movs	r2, #1
 8005e30:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005e34:	68fb      	ldr	r3, [r7, #12]
 8005e36:	2200      	movs	r2, #0
 8005e38:	641a      	str	r2, [r3, #64]	; 0x40
 8005e3a:	68fb      	ldr	r3, [r7, #12]
 8005e3c:	2221      	movs	r2, #33	; 0x21
 8005e3e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e42:	f7fd ff97 	bl	8003d74 <HAL_GetTick>
 8005e46:	6178      	str	r0, [r7, #20]
 8005e48:	68fb      	ldr	r3, [r7, #12]
 8005e4a:	88fa      	ldrh	r2, [r7, #6]
 8005e4c:	849a      	strh	r2, [r3, #36]	; 0x24
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	88fa      	ldrh	r2, [r7, #6]
 8005e52:	84da      	strh	r2, [r3, #38]	; 0x26
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	689b      	ldr	r3, [r3, #8]
 8005e58:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005e5c:	d108      	bne.n	8005e70 <HAL_UART_Transmit+0x82>
 8005e5e:	68fb      	ldr	r3, [r7, #12]
 8005e60:	691b      	ldr	r3, [r3, #16]
 8005e62:	2b00      	cmp	r3, #0
 8005e64:	d104      	bne.n	8005e70 <HAL_UART_Transmit+0x82>
 8005e66:	2300      	movs	r3, #0
 8005e68:	61fb      	str	r3, [r7, #28]
 8005e6a:	68bb      	ldr	r3, [r7, #8]
 8005e6c:	61bb      	str	r3, [r7, #24]
 8005e6e:	e003      	b.n	8005e78 <HAL_UART_Transmit+0x8a>
 8005e70:	68bb      	ldr	r3, [r7, #8]
 8005e72:	61fb      	str	r3, [r7, #28]
 8005e74:	2300      	movs	r3, #0
 8005e76:	61bb      	str	r3, [r7, #24]
 8005e78:	68fb      	ldr	r3, [r7, #12]
 8005e7a:	2200      	movs	r2, #0
 8005e7c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005e80:	e02a      	b.n	8005ed8 <HAL_UART_Transmit+0xea>
 8005e82:	683b      	ldr	r3, [r7, #0]
 8005e84:	9300      	str	r3, [sp, #0]
 8005e86:	697b      	ldr	r3, [r7, #20]
 8005e88:	2200      	movs	r2, #0
 8005e8a:	2180      	movs	r1, #128	; 0x80
 8005e8c:	68f8      	ldr	r0, [r7, #12]
 8005e8e:	f000 fcc9 	bl	8006824 <UART_WaitOnFlagUntilTimeout>
 8005e92:	4603      	mov	r3, r0
 8005e94:	2b00      	cmp	r3, #0
 8005e96:	d001      	beq.n	8005e9c <HAL_UART_Transmit+0xae>
 8005e98:	2303      	movs	r3, #3
 8005e9a:	e036      	b.n	8005f0a <HAL_UART_Transmit+0x11c>
 8005e9c:	69fb      	ldr	r3, [r7, #28]
 8005e9e:	2b00      	cmp	r3, #0
 8005ea0:	d10b      	bne.n	8005eba <HAL_UART_Transmit+0xcc>
 8005ea2:	69bb      	ldr	r3, [r7, #24]
 8005ea4:	881b      	ldrh	r3, [r3, #0]
 8005ea6:	461a      	mov	r2, r3
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005eb0:	605a      	str	r2, [r3, #4]
 8005eb2:	69bb      	ldr	r3, [r7, #24]
 8005eb4:	3302      	adds	r3, #2
 8005eb6:	61bb      	str	r3, [r7, #24]
 8005eb8:	e007      	b.n	8005eca <HAL_UART_Transmit+0xdc>
 8005eba:	69fb      	ldr	r3, [r7, #28]
 8005ebc:	781a      	ldrb	r2, [r3, #0]
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	605a      	str	r2, [r3, #4]
 8005ec4:	69fb      	ldr	r3, [r7, #28]
 8005ec6:	3301      	adds	r3, #1
 8005ec8:	61fb      	str	r3, [r7, #28]
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005ece:	b29b      	uxth	r3, r3
 8005ed0:	3b01      	subs	r3, #1
 8005ed2:	b29a      	uxth	r2, r3
 8005ed4:	68fb      	ldr	r3, [r7, #12]
 8005ed6:	84da      	strh	r2, [r3, #38]	; 0x26
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005edc:	b29b      	uxth	r3, r3
 8005ede:	2b00      	cmp	r3, #0
 8005ee0:	d1cf      	bne.n	8005e82 <HAL_UART_Transmit+0x94>
 8005ee2:	683b      	ldr	r3, [r7, #0]
 8005ee4:	9300      	str	r3, [sp, #0]
 8005ee6:	697b      	ldr	r3, [r7, #20]
 8005ee8:	2200      	movs	r2, #0
 8005eea:	2140      	movs	r1, #64	; 0x40
 8005eec:	68f8      	ldr	r0, [r7, #12]
 8005eee:	f000 fc99 	bl	8006824 <UART_WaitOnFlagUntilTimeout>
 8005ef2:	4603      	mov	r3, r0
 8005ef4:	2b00      	cmp	r3, #0
 8005ef6:	d001      	beq.n	8005efc <HAL_UART_Transmit+0x10e>
 8005ef8:	2303      	movs	r3, #3
 8005efa:	e006      	b.n	8005f0a <HAL_UART_Transmit+0x11c>
 8005efc:	68fb      	ldr	r3, [r7, #12]
 8005efe:	2220      	movs	r2, #32
 8005f00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f04:	2300      	movs	r3, #0
 8005f06:	e000      	b.n	8005f0a <HAL_UART_Transmit+0x11c>
 8005f08:	2302      	movs	r3, #2
 8005f0a:	4618      	mov	r0, r3
 8005f0c:	3720      	adds	r7, #32
 8005f0e:	46bd      	mov	sp, r7
 8005f10:	bd80      	pop	{r7, pc}

08005f12 <HAL_UART_DMAStop>:
 8005f12:	b580      	push	{r7, lr}
 8005f14:	b090      	sub	sp, #64	; 0x40
 8005f16:	af00      	add	r7, sp, #0
 8005f18:	6078      	str	r0, [r7, #4]
 8005f1a:	2300      	movs	r3, #0
 8005f1c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	681b      	ldr	r3, [r3, #0]
 8005f22:	695b      	ldr	r3, [r3, #20]
 8005f24:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005f28:	2b80      	cmp	r3, #128	; 0x80
 8005f2a:	bf0c      	ite	eq
 8005f2c:	2301      	moveq	r3, #1
 8005f2e:	2300      	movne	r3, #0
 8005f30:	b2db      	uxtb	r3, r3
 8005f32:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005f3a:	b2db      	uxtb	r3, r3
 8005f3c:	2b21      	cmp	r3, #33	; 0x21
 8005f3e:	d128      	bne.n	8005f92 <HAL_UART_DMAStop+0x80>
 8005f40:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005f42:	2b00      	cmp	r3, #0
 8005f44:	d025      	beq.n	8005f92 <HAL_UART_DMAStop+0x80>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	681b      	ldr	r3, [r3, #0]
 8005f4a:	3314      	adds	r3, #20
 8005f4c:	627b      	str	r3, [r7, #36]	; 0x24
 8005f4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f50:	e853 3f00 	ldrex	r3, [r3]
 8005f54:	623b      	str	r3, [r7, #32]
 8005f56:	6a3b      	ldr	r3, [r7, #32]
 8005f58:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005f5c:	63bb      	str	r3, [r7, #56]	; 0x38
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	681b      	ldr	r3, [r3, #0]
 8005f62:	3314      	adds	r3, #20
 8005f64:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8005f66:	633a      	str	r2, [r7, #48]	; 0x30
 8005f68:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f6a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8005f6c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005f6e:	e841 2300 	strex	r3, r2, [r1]
 8005f72:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f74:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	d1e5      	bne.n	8005f46 <HAL_UART_DMAStop+0x34>
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005f7e:	2b00      	cmp	r3, #0
 8005f80:	d004      	beq.n	8005f8c <HAL_UART_DMAStop+0x7a>
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005f86:	4618      	mov	r0, r3
 8005f88:	f7fe f95c 	bl	8004244 <HAL_DMA_Abort>
 8005f8c:	6878      	ldr	r0, [r7, #4]
 8005f8e:	f000 fd55 	bl	8006a3c <UART_EndTxTransfer>
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	695b      	ldr	r3, [r3, #20]
 8005f98:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005f9c:	2b40      	cmp	r3, #64	; 0x40
 8005f9e:	bf0c      	ite	eq
 8005fa0:	2301      	moveq	r3, #1
 8005fa2:	2300      	movne	r3, #0
 8005fa4:	b2db      	uxtb	r3, r3
 8005fa6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005fae:	b2db      	uxtb	r3, r3
 8005fb0:	2b22      	cmp	r3, #34	; 0x22
 8005fb2:	d128      	bne.n	8006006 <HAL_UART_DMAStop+0xf4>
 8005fb4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d025      	beq.n	8006006 <HAL_UART_DMAStop+0xf4>
 8005fba:	687b      	ldr	r3, [r7, #4]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	3314      	adds	r3, #20
 8005fc0:	613b      	str	r3, [r7, #16]
 8005fc2:	693b      	ldr	r3, [r7, #16]
 8005fc4:	e853 3f00 	ldrex	r3, [r3]
 8005fc8:	60fb      	str	r3, [r7, #12]
 8005fca:	68fb      	ldr	r3, [r7, #12]
 8005fcc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005fd0:	637b      	str	r3, [r7, #52]	; 0x34
 8005fd2:	687b      	ldr	r3, [r7, #4]
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	3314      	adds	r3, #20
 8005fd8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005fda:	61fa      	str	r2, [r7, #28]
 8005fdc:	61bb      	str	r3, [r7, #24]
 8005fde:	69b9      	ldr	r1, [r7, #24]
 8005fe0:	69fa      	ldr	r2, [r7, #28]
 8005fe2:	e841 2300 	strex	r3, r2, [r1]
 8005fe6:	617b      	str	r3, [r7, #20]
 8005fe8:	697b      	ldr	r3, [r7, #20]
 8005fea:	2b00      	cmp	r3, #0
 8005fec:	d1e5      	bne.n	8005fba <HAL_UART_DMAStop+0xa8>
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005ff2:	2b00      	cmp	r3, #0
 8005ff4:	d004      	beq.n	8006000 <HAL_UART_DMAStop+0xee>
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005ffa:	4618      	mov	r0, r3
 8005ffc:	f7fe f922 	bl	8004244 <HAL_DMA_Abort>
 8006000:	6878      	ldr	r0, [r7, #4]
 8006002:	f000 fd43 	bl	8006a8c <UART_EndRxTransfer>
 8006006:	2300      	movs	r3, #0
 8006008:	4618      	mov	r0, r3
 800600a:	3740      	adds	r7, #64	; 0x40
 800600c:	46bd      	mov	sp, r7
 800600e:	bd80      	pop	{r7, pc}

08006010 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8006010:	b580      	push	{r7, lr}
 8006012:	b08c      	sub	sp, #48	; 0x30
 8006014:	af00      	add	r7, sp, #0
 8006016:	60f8      	str	r0, [r7, #12]
 8006018:	60b9      	str	r1, [r7, #8]
 800601a:	4613      	mov	r3, r2
 800601c:	80fb      	strh	r3, [r7, #6]
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006024:	b2db      	uxtb	r3, r3
 8006026:	2b20      	cmp	r3, #32
 8006028:	d152      	bne.n	80060d0 <HAL_UARTEx_ReceiveToIdle_DMA+0xc0>
 800602a:	68bb      	ldr	r3, [r7, #8]
 800602c:	2b00      	cmp	r3, #0
 800602e:	d002      	beq.n	8006036 <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8006030:	88fb      	ldrh	r3, [r7, #6]
 8006032:	2b00      	cmp	r3, #0
 8006034:	d101      	bne.n	800603a <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
 8006036:	2301      	movs	r3, #1
 8006038:	e04b      	b.n	80060d2 <HAL_UARTEx_ReceiveToIdle_DMA+0xc2>
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006040:	2b01      	cmp	r3, #1
 8006042:	d101      	bne.n	8006048 <HAL_UARTEx_ReceiveToIdle_DMA+0x38>
 8006044:	2302      	movs	r3, #2
 8006046:	e044      	b.n	80060d2 <HAL_UARTEx_ReceiveToIdle_DMA+0xc2>
 8006048:	68fb      	ldr	r3, [r7, #12]
 800604a:	2201      	movs	r2, #1
 800604c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006050:	68fb      	ldr	r3, [r7, #12]
 8006052:	2201      	movs	r2, #1
 8006054:	631a      	str	r2, [r3, #48]	; 0x30
 8006056:	88fb      	ldrh	r3, [r7, #6]
 8006058:	461a      	mov	r2, r3
 800605a:	68b9      	ldr	r1, [r7, #8]
 800605c:	68f8      	ldr	r0, [r7, #12]
 800605e:	f000 fc4f 	bl	8006900 <UART_Start_Receive_DMA>
 8006062:	4603      	mov	r3, r0
 8006064:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8006068:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800606c:	2b00      	cmp	r3, #0
 800606e:	d12c      	bne.n	80060ca <HAL_UARTEx_ReceiveToIdle_DMA+0xba>
 8006070:	68fb      	ldr	r3, [r7, #12]
 8006072:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006074:	2b01      	cmp	r3, #1
 8006076:	d125      	bne.n	80060c4 <HAL_UARTEx_ReceiveToIdle_DMA+0xb4>
 8006078:	2300      	movs	r3, #0
 800607a:	613b      	str	r3, [r7, #16]
 800607c:	68fb      	ldr	r3, [r7, #12]
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	613b      	str	r3, [r7, #16]
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	681b      	ldr	r3, [r3, #0]
 8006088:	685b      	ldr	r3, [r3, #4]
 800608a:	613b      	str	r3, [r7, #16]
 800608c:	693b      	ldr	r3, [r7, #16]
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	330c      	adds	r3, #12
 8006094:	61bb      	str	r3, [r7, #24]
 8006096:	69bb      	ldr	r3, [r7, #24]
 8006098:	e853 3f00 	ldrex	r3, [r3]
 800609c:	617b      	str	r3, [r7, #20]
 800609e:	697b      	ldr	r3, [r7, #20]
 80060a0:	f043 0310 	orr.w	r3, r3, #16
 80060a4:	62bb      	str	r3, [r7, #40]	; 0x28
 80060a6:	68fb      	ldr	r3, [r7, #12]
 80060a8:	681b      	ldr	r3, [r3, #0]
 80060aa:	330c      	adds	r3, #12
 80060ac:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80060ae:	627a      	str	r2, [r7, #36]	; 0x24
 80060b0:	623b      	str	r3, [r7, #32]
 80060b2:	6a39      	ldr	r1, [r7, #32]
 80060b4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80060b6:	e841 2300 	strex	r3, r2, [r1]
 80060ba:	61fb      	str	r3, [r7, #28]
 80060bc:	69fb      	ldr	r3, [r7, #28]
 80060be:	2b00      	cmp	r3, #0
 80060c0:	d1e5      	bne.n	800608e <HAL_UARTEx_ReceiveToIdle_DMA+0x7e>
 80060c2:	e002      	b.n	80060ca <HAL_UARTEx_ReceiveToIdle_DMA+0xba>
 80060c4:	2301      	movs	r3, #1
 80060c6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80060ca:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80060ce:	e000      	b.n	80060d2 <HAL_UARTEx_ReceiveToIdle_DMA+0xc2>
 80060d0:	2302      	movs	r3, #2
 80060d2:	4618      	mov	r0, r3
 80060d4:	3730      	adds	r7, #48	; 0x30
 80060d6:	46bd      	mov	sp, r7
 80060d8:	bd80      	pop	{r7, pc}
	...

080060dc <HAL_UART_IRQHandler>:
 80060dc:	b580      	push	{r7, lr}
 80060de:	b0ba      	sub	sp, #232	; 0xe8
 80060e0:	af00      	add	r7, sp, #0
 80060e2:	6078      	str	r0, [r7, #4]
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	681b      	ldr	r3, [r3, #0]
 80060e8:	681b      	ldr	r3, [r3, #0]
 80060ea:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	68db      	ldr	r3, [r3, #12]
 80060f4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80060f8:	687b      	ldr	r3, [r7, #4]
 80060fa:	681b      	ldr	r3, [r3, #0]
 80060fc:	695b      	ldr	r3, [r3, #20]
 80060fe:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8006102:	2300      	movs	r3, #0
 8006104:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006108:	2300      	movs	r3, #0
 800610a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800610e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006112:	f003 030f 	and.w	r3, r3, #15
 8006116:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800611a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800611e:	2b00      	cmp	r3, #0
 8006120:	d10f      	bne.n	8006142 <HAL_UART_IRQHandler+0x66>
 8006122:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006126:	f003 0320 	and.w	r3, r3, #32
 800612a:	2b00      	cmp	r3, #0
 800612c:	d009      	beq.n	8006142 <HAL_UART_IRQHandler+0x66>
 800612e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006132:	f003 0320 	and.w	r3, r3, #32
 8006136:	2b00      	cmp	r3, #0
 8006138:	d003      	beq.n	8006142 <HAL_UART_IRQHandler+0x66>
 800613a:	6878      	ldr	r0, [r7, #4]
 800613c:	f000 fd85 	bl	8006c4a <UART_Receive_IT>
 8006140:	e256      	b.n	80065f0 <HAL_UART_IRQHandler+0x514>
 8006142:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8006146:	2b00      	cmp	r3, #0
 8006148:	f000 80de 	beq.w	8006308 <HAL_UART_IRQHandler+0x22c>
 800614c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006150:	f003 0301 	and.w	r3, r3, #1
 8006154:	2b00      	cmp	r3, #0
 8006156:	d106      	bne.n	8006166 <HAL_UART_IRQHandler+0x8a>
 8006158:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800615c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8006160:	2b00      	cmp	r3, #0
 8006162:	f000 80d1 	beq.w	8006308 <HAL_UART_IRQHandler+0x22c>
 8006166:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800616a:	f003 0301 	and.w	r3, r3, #1
 800616e:	2b00      	cmp	r3, #0
 8006170:	d00b      	beq.n	800618a <HAL_UART_IRQHandler+0xae>
 8006172:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006176:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800617a:	2b00      	cmp	r3, #0
 800617c:	d005      	beq.n	800618a <HAL_UART_IRQHandler+0xae>
 800617e:	687b      	ldr	r3, [r7, #4]
 8006180:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006182:	f043 0201 	orr.w	r2, r3, #1
 8006186:	687b      	ldr	r3, [r7, #4]
 8006188:	641a      	str	r2, [r3, #64]	; 0x40
 800618a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800618e:	f003 0304 	and.w	r3, r3, #4
 8006192:	2b00      	cmp	r3, #0
 8006194:	d00b      	beq.n	80061ae <HAL_UART_IRQHandler+0xd2>
 8006196:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800619a:	f003 0301 	and.w	r3, r3, #1
 800619e:	2b00      	cmp	r3, #0
 80061a0:	d005      	beq.n	80061ae <HAL_UART_IRQHandler+0xd2>
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061a6:	f043 0202 	orr.w	r2, r3, #2
 80061aa:	687b      	ldr	r3, [r7, #4]
 80061ac:	641a      	str	r2, [r3, #64]	; 0x40
 80061ae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80061b2:	f003 0302 	and.w	r3, r3, #2
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d00b      	beq.n	80061d2 <HAL_UART_IRQHandler+0xf6>
 80061ba:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80061be:	f003 0301 	and.w	r3, r3, #1
 80061c2:	2b00      	cmp	r3, #0
 80061c4:	d005      	beq.n	80061d2 <HAL_UART_IRQHandler+0xf6>
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061ca:	f043 0204 	orr.w	r2, r3, #4
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	641a      	str	r2, [r3, #64]	; 0x40
 80061d2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80061d6:	f003 0308 	and.w	r3, r3, #8
 80061da:	2b00      	cmp	r3, #0
 80061dc:	d011      	beq.n	8006202 <HAL_UART_IRQHandler+0x126>
 80061de:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80061e2:	f003 0320 	and.w	r3, r3, #32
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d105      	bne.n	80061f6 <HAL_UART_IRQHandler+0x11a>
 80061ea:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80061ee:	f003 0301 	and.w	r3, r3, #1
 80061f2:	2b00      	cmp	r3, #0
 80061f4:	d005      	beq.n	8006202 <HAL_UART_IRQHandler+0x126>
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061fa:	f043 0208 	orr.w	r2, r3, #8
 80061fe:	687b      	ldr	r3, [r7, #4]
 8006200:	641a      	str	r2, [r3, #64]	; 0x40
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006206:	2b00      	cmp	r3, #0
 8006208:	f000 81ed 	beq.w	80065e6 <HAL_UART_IRQHandler+0x50a>
 800620c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006210:	f003 0320 	and.w	r3, r3, #32
 8006214:	2b00      	cmp	r3, #0
 8006216:	d008      	beq.n	800622a <HAL_UART_IRQHandler+0x14e>
 8006218:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800621c:	f003 0320 	and.w	r3, r3, #32
 8006220:	2b00      	cmp	r3, #0
 8006222:	d002      	beq.n	800622a <HAL_UART_IRQHandler+0x14e>
 8006224:	6878      	ldr	r0, [r7, #4]
 8006226:	f000 fd10 	bl	8006c4a <UART_Receive_IT>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	695b      	ldr	r3, [r3, #20]
 8006230:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006234:	2b40      	cmp	r3, #64	; 0x40
 8006236:	bf0c      	ite	eq
 8006238:	2301      	moveq	r3, #1
 800623a:	2300      	movne	r3, #0
 800623c:	b2db      	uxtb	r3, r3
 800623e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006246:	f003 0308 	and.w	r3, r3, #8
 800624a:	2b00      	cmp	r3, #0
 800624c:	d103      	bne.n	8006256 <HAL_UART_IRQHandler+0x17a>
 800624e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8006252:	2b00      	cmp	r3, #0
 8006254:	d04f      	beq.n	80062f6 <HAL_UART_IRQHandler+0x21a>
 8006256:	6878      	ldr	r0, [r7, #4]
 8006258:	f000 fc18 	bl	8006a8c <UART_EndRxTransfer>
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	695b      	ldr	r3, [r3, #20]
 8006262:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006266:	2b40      	cmp	r3, #64	; 0x40
 8006268:	d141      	bne.n	80062ee <HAL_UART_IRQHandler+0x212>
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	681b      	ldr	r3, [r3, #0]
 800626e:	3314      	adds	r3, #20
 8006270:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8006274:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8006278:	e853 3f00 	ldrex	r3, [r3]
 800627c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8006280:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8006284:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006288:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	3314      	adds	r3, #20
 8006292:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8006296:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800629a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800629e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80062a2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80062a6:	e841 2300 	strex	r3, r2, [r1]
 80062aa:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80062ae:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d1d9      	bne.n	800626a <HAL_UART_IRQHandler+0x18e>
 80062b6:	687b      	ldr	r3, [r7, #4]
 80062b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062ba:	2b00      	cmp	r3, #0
 80062bc:	d013      	beq.n	80062e6 <HAL_UART_IRQHandler+0x20a>
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062c2:	4a7d      	ldr	r2, [pc, #500]	; (80064b8 <HAL_UART_IRQHandler+0x3dc>)
 80062c4:	651a      	str	r2, [r3, #80]	; 0x50
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062ca:	4618      	mov	r0, r3
 80062cc:	f7fe f82a 	bl	8004324 <HAL_DMA_Abort_IT>
 80062d0:	4603      	mov	r3, r0
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d016      	beq.n	8006304 <HAL_UART_IRQHandler+0x228>
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80062dc:	687a      	ldr	r2, [r7, #4]
 80062de:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80062e0:	4610      	mov	r0, r2
 80062e2:	4798      	blx	r3
 80062e4:	e00e      	b.n	8006304 <HAL_UART_IRQHandler+0x228>
 80062e6:	6878      	ldr	r0, [r7, #4]
 80062e8:	f7fa ff00 	bl	80010ec <HAL_UART_ErrorCallback>
 80062ec:	e00a      	b.n	8006304 <HAL_UART_IRQHandler+0x228>
 80062ee:	6878      	ldr	r0, [r7, #4]
 80062f0:	f7fa fefc 	bl	80010ec <HAL_UART_ErrorCallback>
 80062f4:	e006      	b.n	8006304 <HAL_UART_IRQHandler+0x228>
 80062f6:	6878      	ldr	r0, [r7, #4]
 80062f8:	f7fa fef8 	bl	80010ec <HAL_UART_ErrorCallback>
 80062fc:	687b      	ldr	r3, [r7, #4]
 80062fe:	2200      	movs	r2, #0
 8006300:	641a      	str	r2, [r3, #64]	; 0x40
 8006302:	e170      	b.n	80065e6 <HAL_UART_IRQHandler+0x50a>
 8006304:	bf00      	nop
 8006306:	e16e      	b.n	80065e6 <HAL_UART_IRQHandler+0x50a>
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800630c:	2b01      	cmp	r3, #1
 800630e:	f040 814a 	bne.w	80065a6 <HAL_UART_IRQHandler+0x4ca>
 8006312:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006316:	f003 0310 	and.w	r3, r3, #16
 800631a:	2b00      	cmp	r3, #0
 800631c:	f000 8143 	beq.w	80065a6 <HAL_UART_IRQHandler+0x4ca>
 8006320:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006324:	f003 0310 	and.w	r3, r3, #16
 8006328:	2b00      	cmp	r3, #0
 800632a:	f000 813c 	beq.w	80065a6 <HAL_UART_IRQHandler+0x4ca>
 800632e:	2300      	movs	r3, #0
 8006330:	60bb      	str	r3, [r7, #8]
 8006332:	687b      	ldr	r3, [r7, #4]
 8006334:	681b      	ldr	r3, [r3, #0]
 8006336:	681b      	ldr	r3, [r3, #0]
 8006338:	60bb      	str	r3, [r7, #8]
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	681b      	ldr	r3, [r3, #0]
 800633e:	685b      	ldr	r3, [r3, #4]
 8006340:	60bb      	str	r3, [r7, #8]
 8006342:	68bb      	ldr	r3, [r7, #8]
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	695b      	ldr	r3, [r3, #20]
 800634a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800634e:	2b40      	cmp	r3, #64	; 0x40
 8006350:	f040 80b4 	bne.w	80064bc <HAL_UART_IRQHandler+0x3e0>
 8006354:	687b      	ldr	r3, [r7, #4]
 8006356:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006358:	681b      	ldr	r3, [r3, #0]
 800635a:	685b      	ldr	r3, [r3, #4]
 800635c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8006360:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8006364:	2b00      	cmp	r3, #0
 8006366:	f000 8140 	beq.w	80065ea <HAL_UART_IRQHandler+0x50e>
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800636e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8006372:	429a      	cmp	r2, r3
 8006374:	f080 8139 	bcs.w	80065ea <HAL_UART_IRQHandler+0x50e>
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800637e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006384:	69db      	ldr	r3, [r3, #28]
 8006386:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800638a:	f000 8088 	beq.w	800649e <HAL_UART_IRQHandler+0x3c2>
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	681b      	ldr	r3, [r3, #0]
 8006392:	330c      	adds	r3, #12
 8006394:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8006398:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800639c:	e853 3f00 	ldrex	r3, [r3]
 80063a0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80063a4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80063a8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80063ac:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80063b0:	687b      	ldr	r3, [r7, #4]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	330c      	adds	r3, #12
 80063b6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 80063ba:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80063be:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80063c2:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 80063c6:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80063ca:	e841 2300 	strex	r3, r2, [r1]
 80063ce:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80063d2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80063d6:	2b00      	cmp	r3, #0
 80063d8:	d1d9      	bne.n	800638e <HAL_UART_IRQHandler+0x2b2>
 80063da:	687b      	ldr	r3, [r7, #4]
 80063dc:	681b      	ldr	r3, [r3, #0]
 80063de:	3314      	adds	r3, #20
 80063e0:	677b      	str	r3, [r7, #116]	; 0x74
 80063e2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80063e4:	e853 3f00 	ldrex	r3, [r3]
 80063e8:	673b      	str	r3, [r7, #112]	; 0x70
 80063ea:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80063ec:	f023 0301 	bic.w	r3, r3, #1
 80063f0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	3314      	adds	r3, #20
 80063fa:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80063fe:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8006402:	67fb      	str	r3, [r7, #124]	; 0x7c
 8006404:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8006406:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800640a:	e841 2300 	strex	r3, r2, [r1]
 800640e:	67bb      	str	r3, [r7, #120]	; 0x78
 8006410:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006412:	2b00      	cmp	r3, #0
 8006414:	d1e1      	bne.n	80063da <HAL_UART_IRQHandler+0x2fe>
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	681b      	ldr	r3, [r3, #0]
 800641a:	3314      	adds	r3, #20
 800641c:	663b      	str	r3, [r7, #96]	; 0x60
 800641e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006420:	e853 3f00 	ldrex	r3, [r3]
 8006424:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006426:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006428:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800642c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006430:	687b      	ldr	r3, [r7, #4]
 8006432:	681b      	ldr	r3, [r3, #0]
 8006434:	3314      	adds	r3, #20
 8006436:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800643a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800643c:	66bb      	str	r3, [r7, #104]	; 0x68
 800643e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8006440:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8006442:	e841 2300 	strex	r3, r2, [r1]
 8006446:	667b      	str	r3, [r7, #100]	; 0x64
 8006448:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800644a:	2b00      	cmp	r3, #0
 800644c:	d1e3      	bne.n	8006416 <HAL_UART_IRQHandler+0x33a>
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	2220      	movs	r2, #32
 8006452:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	2200      	movs	r2, #0
 800645a:	631a      	str	r2, [r3, #48]	; 0x30
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	681b      	ldr	r3, [r3, #0]
 8006460:	330c      	adds	r3, #12
 8006462:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006464:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006466:	e853 3f00 	ldrex	r3, [r3]
 800646a:	64bb      	str	r3, [r7, #72]	; 0x48
 800646c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800646e:	f023 0310 	bic.w	r3, r3, #16
 8006472:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	330c      	adds	r3, #12
 800647c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8006480:	65ba      	str	r2, [r7, #88]	; 0x58
 8006482:	657b      	str	r3, [r7, #84]	; 0x54
 8006484:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8006486:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006488:	e841 2300 	strex	r3, r2, [r1]
 800648c:	653b      	str	r3, [r7, #80]	; 0x50
 800648e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006490:	2b00      	cmp	r3, #0
 8006492:	d1e3      	bne.n	800645c <HAL_UART_IRQHandler+0x380>
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006498:	4618      	mov	r0, r3
 800649a:	f7fd fed3 	bl	8004244 <HAL_DMA_Abort>
 800649e:	687b      	ldr	r3, [r7, #4]
 80064a0:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80064a6:	b29b      	uxth	r3, r3
 80064a8:	1ad3      	subs	r3, r2, r3
 80064aa:	b29b      	uxth	r3, r3
 80064ac:	4619      	mov	r1, r3
 80064ae:	6878      	ldr	r0, [r7, #4]
 80064b0:	f7fa fe0a 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 80064b4:	e099      	b.n	80065ea <HAL_UART_IRQHandler+0x50e>
 80064b6:	bf00      	nop
 80064b8:	08006b53 	.word	0x08006b53
 80064bc:	687b      	ldr	r3, [r7, #4]
 80064be:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80064c4:	b29b      	uxth	r3, r3
 80064c6:	1ad3      	subs	r3, r2, r3
 80064c8:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80064cc:	687b      	ldr	r3, [r7, #4]
 80064ce:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80064d0:	b29b      	uxth	r3, r3
 80064d2:	2b00      	cmp	r3, #0
 80064d4:	f000 808b 	beq.w	80065ee <HAL_UART_IRQHandler+0x512>
 80064d8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80064dc:	2b00      	cmp	r3, #0
 80064de:	f000 8086 	beq.w	80065ee <HAL_UART_IRQHandler+0x512>
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	330c      	adds	r3, #12
 80064e8:	63bb      	str	r3, [r7, #56]	; 0x38
 80064ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80064ec:	e853 3f00 	ldrex	r3, [r3]
 80064f0:	637b      	str	r3, [r7, #52]	; 0x34
 80064f2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80064f4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80064f8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80064fc:	687b      	ldr	r3, [r7, #4]
 80064fe:	681b      	ldr	r3, [r3, #0]
 8006500:	330c      	adds	r3, #12
 8006502:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8006506:	647a      	str	r2, [r7, #68]	; 0x44
 8006508:	643b      	str	r3, [r7, #64]	; 0x40
 800650a:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800650c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800650e:	e841 2300 	strex	r3, r2, [r1]
 8006512:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006514:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006516:	2b00      	cmp	r3, #0
 8006518:	d1e3      	bne.n	80064e2 <HAL_UART_IRQHandler+0x406>
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	681b      	ldr	r3, [r3, #0]
 800651e:	3314      	adds	r3, #20
 8006520:	627b      	str	r3, [r7, #36]	; 0x24
 8006522:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006524:	e853 3f00 	ldrex	r3, [r3]
 8006528:	623b      	str	r3, [r7, #32]
 800652a:	6a3b      	ldr	r3, [r7, #32]
 800652c:	f023 0301 	bic.w	r3, r3, #1
 8006530:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	681b      	ldr	r3, [r3, #0]
 8006538:	3314      	adds	r3, #20
 800653a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800653e:	633a      	str	r2, [r7, #48]	; 0x30
 8006540:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006542:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8006544:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006546:	e841 2300 	strex	r3, r2, [r1]
 800654a:	62bb      	str	r3, [r7, #40]	; 0x28
 800654c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800654e:	2b00      	cmp	r3, #0
 8006550:	d1e3      	bne.n	800651a <HAL_UART_IRQHandler+0x43e>
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	2220      	movs	r2, #32
 8006556:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	2200      	movs	r2, #0
 800655e:	631a      	str	r2, [r3, #48]	; 0x30
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	330c      	adds	r3, #12
 8006566:	613b      	str	r3, [r7, #16]
 8006568:	693b      	ldr	r3, [r7, #16]
 800656a:	e853 3f00 	ldrex	r3, [r3]
 800656e:	60fb      	str	r3, [r7, #12]
 8006570:	68fb      	ldr	r3, [r7, #12]
 8006572:	f023 0310 	bic.w	r3, r3, #16
 8006576:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	681b      	ldr	r3, [r3, #0]
 800657e:	330c      	adds	r3, #12
 8006580:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8006584:	61fa      	str	r2, [r7, #28]
 8006586:	61bb      	str	r3, [r7, #24]
 8006588:	69b9      	ldr	r1, [r7, #24]
 800658a:	69fa      	ldr	r2, [r7, #28]
 800658c:	e841 2300 	strex	r3, r2, [r1]
 8006590:	617b      	str	r3, [r7, #20]
 8006592:	697b      	ldr	r3, [r7, #20]
 8006594:	2b00      	cmp	r3, #0
 8006596:	d1e3      	bne.n	8006560 <HAL_UART_IRQHandler+0x484>
 8006598:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800659c:	4619      	mov	r1, r3
 800659e:	6878      	ldr	r0, [r7, #4]
 80065a0:	f7fa fd92 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 80065a4:	e023      	b.n	80065ee <HAL_UART_IRQHandler+0x512>
 80065a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80065aa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80065ae:	2b00      	cmp	r3, #0
 80065b0:	d009      	beq.n	80065c6 <HAL_UART_IRQHandler+0x4ea>
 80065b2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80065b6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d003      	beq.n	80065c6 <HAL_UART_IRQHandler+0x4ea>
 80065be:	6878      	ldr	r0, [r7, #4]
 80065c0:	f000 fadb 	bl	8006b7a <UART_Transmit_IT>
 80065c4:	e014      	b.n	80065f0 <HAL_UART_IRQHandler+0x514>
 80065c6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80065ca:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80065ce:	2b00      	cmp	r3, #0
 80065d0:	d00e      	beq.n	80065f0 <HAL_UART_IRQHandler+0x514>
 80065d2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80065d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80065da:	2b00      	cmp	r3, #0
 80065dc:	d008      	beq.n	80065f0 <HAL_UART_IRQHandler+0x514>
 80065de:	6878      	ldr	r0, [r7, #4]
 80065e0:	f000 fb1b 	bl	8006c1a <UART_EndTransmit_IT>
 80065e4:	e004      	b.n	80065f0 <HAL_UART_IRQHandler+0x514>
 80065e6:	bf00      	nop
 80065e8:	e002      	b.n	80065f0 <HAL_UART_IRQHandler+0x514>
 80065ea:	bf00      	nop
 80065ec:	e000      	b.n	80065f0 <HAL_UART_IRQHandler+0x514>
 80065ee:	bf00      	nop
 80065f0:	37e8      	adds	r7, #232	; 0xe8
 80065f2:	46bd      	mov	sp, r7
 80065f4:	bd80      	pop	{r7, pc}
 80065f6:	bf00      	nop

080065f8 <HAL_UART_TxCpltCallback>:
 80065f8:	b480      	push	{r7}
 80065fa:	b083      	sub	sp, #12
 80065fc:	af00      	add	r7, sp, #0
 80065fe:	6078      	str	r0, [r7, #4]
 8006600:	bf00      	nop
 8006602:	370c      	adds	r7, #12
 8006604:	46bd      	mov	sp, r7
 8006606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800660a:	4770      	bx	lr

0800660c <HAL_UART_RxCpltCallback>:
 800660c:	b480      	push	{r7}
 800660e:	b083      	sub	sp, #12
 8006610:	af00      	add	r7, sp, #0
 8006612:	6078      	str	r0, [r7, #4]
 8006614:	bf00      	nop
 8006616:	370c      	adds	r7, #12
 8006618:	46bd      	mov	sp, r7
 800661a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800661e:	4770      	bx	lr

08006620 <HAL_UART_RxHalfCpltCallback>:
 8006620:	b480      	push	{r7}
 8006622:	b083      	sub	sp, #12
 8006624:	af00      	add	r7, sp, #0
 8006626:	6078      	str	r0, [r7, #4]
 8006628:	bf00      	nop
 800662a:	370c      	adds	r7, #12
 800662c:	46bd      	mov	sp, r7
 800662e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006632:	4770      	bx	lr

08006634 <UART_DMAReceiveCplt>:
 8006634:	b580      	push	{r7, lr}
 8006636:	b09c      	sub	sp, #112	; 0x70
 8006638:	af00      	add	r7, sp, #0
 800663a:	6078      	str	r0, [r7, #4]
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006640:	66fb      	str	r3, [r7, #108]	; 0x6c
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800664c:	2b00      	cmp	r3, #0
 800664e:	d172      	bne.n	8006736 <UART_DMAReceiveCplt+0x102>
 8006650:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006652:	2200      	movs	r2, #0
 8006654:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006656:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	330c      	adds	r3, #12
 800665c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800665e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006660:	e853 3f00 	ldrex	r3, [r3]
 8006664:	64bb      	str	r3, [r7, #72]	; 0x48
 8006666:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006668:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800666c:	66bb      	str	r3, [r7, #104]	; 0x68
 800666e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006670:	681b      	ldr	r3, [r3, #0]
 8006672:	330c      	adds	r3, #12
 8006674:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8006676:	65ba      	str	r2, [r7, #88]	; 0x58
 8006678:	657b      	str	r3, [r7, #84]	; 0x54
 800667a:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800667c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800667e:	e841 2300 	strex	r3, r2, [r1]
 8006682:	653b      	str	r3, [r7, #80]	; 0x50
 8006684:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006686:	2b00      	cmp	r3, #0
 8006688:	d1e5      	bne.n	8006656 <UART_DMAReceiveCplt+0x22>
 800668a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	3314      	adds	r3, #20
 8006690:	63bb      	str	r3, [r7, #56]	; 0x38
 8006692:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006694:	e853 3f00 	ldrex	r3, [r3]
 8006698:	637b      	str	r3, [r7, #52]	; 0x34
 800669a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800669c:	f023 0301 	bic.w	r3, r3, #1
 80066a0:	667b      	str	r3, [r7, #100]	; 0x64
 80066a2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	3314      	adds	r3, #20
 80066a8:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 80066aa:	647a      	str	r2, [r7, #68]	; 0x44
 80066ac:	643b      	str	r3, [r7, #64]	; 0x40
 80066ae:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80066b0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80066b2:	e841 2300 	strex	r3, r2, [r1]
 80066b6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80066b8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d1e5      	bne.n	800668a <UART_DMAReceiveCplt+0x56>
 80066be:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80066c0:	681b      	ldr	r3, [r3, #0]
 80066c2:	3314      	adds	r3, #20
 80066c4:	627b      	str	r3, [r7, #36]	; 0x24
 80066c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066c8:	e853 3f00 	ldrex	r3, [r3]
 80066cc:	623b      	str	r3, [r7, #32]
 80066ce:	6a3b      	ldr	r3, [r7, #32]
 80066d0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80066d4:	663b      	str	r3, [r7, #96]	; 0x60
 80066d6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80066d8:	681b      	ldr	r3, [r3, #0]
 80066da:	3314      	adds	r3, #20
 80066dc:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80066de:	633a      	str	r2, [r7, #48]	; 0x30
 80066e0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80066e2:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80066e4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80066e6:	e841 2300 	strex	r3, r2, [r1]
 80066ea:	62bb      	str	r3, [r7, #40]	; 0x28
 80066ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d1e5      	bne.n	80066be <UART_DMAReceiveCplt+0x8a>
 80066f2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80066f4:	2220      	movs	r2, #32
 80066f6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80066fa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80066fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066fe:	2b01      	cmp	r3, #1
 8006700:	d119      	bne.n	8006736 <UART_DMAReceiveCplt+0x102>
 8006702:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006704:	681b      	ldr	r3, [r3, #0]
 8006706:	330c      	adds	r3, #12
 8006708:	613b      	str	r3, [r7, #16]
 800670a:	693b      	ldr	r3, [r7, #16]
 800670c:	e853 3f00 	ldrex	r3, [r3]
 8006710:	60fb      	str	r3, [r7, #12]
 8006712:	68fb      	ldr	r3, [r7, #12]
 8006714:	f023 0310 	bic.w	r3, r3, #16
 8006718:	65fb      	str	r3, [r7, #92]	; 0x5c
 800671a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	330c      	adds	r3, #12
 8006720:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8006722:	61fa      	str	r2, [r7, #28]
 8006724:	61bb      	str	r3, [r7, #24]
 8006726:	69b9      	ldr	r1, [r7, #24]
 8006728:	69fa      	ldr	r2, [r7, #28]
 800672a:	e841 2300 	strex	r3, r2, [r1]
 800672e:	617b      	str	r3, [r7, #20]
 8006730:	697b      	ldr	r3, [r7, #20]
 8006732:	2b00      	cmp	r3, #0
 8006734:	d1e5      	bne.n	8006702 <UART_DMAReceiveCplt+0xce>
 8006736:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006738:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800673a:	2b01      	cmp	r3, #1
 800673c:	d106      	bne.n	800674c <UART_DMAReceiveCplt+0x118>
 800673e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006740:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8006742:	4619      	mov	r1, r3
 8006744:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8006746:	f7fa fcbf 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 800674a:	e002      	b.n	8006752 <UART_DMAReceiveCplt+0x11e>
 800674c:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800674e:	f7ff ff5d 	bl	800660c <HAL_UART_RxCpltCallback>
 8006752:	bf00      	nop
 8006754:	3770      	adds	r7, #112	; 0x70
 8006756:	46bd      	mov	sp, r7
 8006758:	bd80      	pop	{r7, pc}

0800675a <UART_DMARxHalfCplt>:
 800675a:	b580      	push	{r7, lr}
 800675c:	b084      	sub	sp, #16
 800675e:	af00      	add	r7, sp, #0
 8006760:	6078      	str	r0, [r7, #4]
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006766:	60fb      	str	r3, [r7, #12]
 8006768:	68fb      	ldr	r3, [r7, #12]
 800676a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800676c:	2b01      	cmp	r3, #1
 800676e:	d108      	bne.n	8006782 <UART_DMARxHalfCplt+0x28>
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8006774:	085b      	lsrs	r3, r3, #1
 8006776:	b29b      	uxth	r3, r3
 8006778:	4619      	mov	r1, r3
 800677a:	68f8      	ldr	r0, [r7, #12]
 800677c:	f7fa fca4 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 8006780:	e002      	b.n	8006788 <UART_DMARxHalfCplt+0x2e>
 8006782:	68f8      	ldr	r0, [r7, #12]
 8006784:	f7ff ff4c 	bl	8006620 <HAL_UART_RxHalfCpltCallback>
 8006788:	bf00      	nop
 800678a:	3710      	adds	r7, #16
 800678c:	46bd      	mov	sp, r7
 800678e:	bd80      	pop	{r7, pc}

08006790 <UART_DMAError>:
 8006790:	b580      	push	{r7, lr}
 8006792:	b084      	sub	sp, #16
 8006794:	af00      	add	r7, sp, #0
 8006796:	6078      	str	r0, [r7, #4]
 8006798:	2300      	movs	r3, #0
 800679a:	60fb      	str	r3, [r7, #12]
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80067a0:	60bb      	str	r3, [r7, #8]
 80067a2:	68bb      	ldr	r3, [r7, #8]
 80067a4:	681b      	ldr	r3, [r3, #0]
 80067a6:	695b      	ldr	r3, [r3, #20]
 80067a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80067ac:	2b80      	cmp	r3, #128	; 0x80
 80067ae:	bf0c      	ite	eq
 80067b0:	2301      	moveq	r3, #1
 80067b2:	2300      	movne	r3, #0
 80067b4:	b2db      	uxtb	r3, r3
 80067b6:	60fb      	str	r3, [r7, #12]
 80067b8:	68bb      	ldr	r3, [r7, #8]
 80067ba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80067be:	b2db      	uxtb	r3, r3
 80067c0:	2b21      	cmp	r3, #33	; 0x21
 80067c2:	d108      	bne.n	80067d6 <UART_DMAError+0x46>
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	2b00      	cmp	r3, #0
 80067c8:	d005      	beq.n	80067d6 <UART_DMAError+0x46>
 80067ca:	68bb      	ldr	r3, [r7, #8]
 80067cc:	2200      	movs	r2, #0
 80067ce:	84da      	strh	r2, [r3, #38]	; 0x26
 80067d0:	68b8      	ldr	r0, [r7, #8]
 80067d2:	f000 f933 	bl	8006a3c <UART_EndTxTransfer>
 80067d6:	68bb      	ldr	r3, [r7, #8]
 80067d8:	681b      	ldr	r3, [r3, #0]
 80067da:	695b      	ldr	r3, [r3, #20]
 80067dc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80067e0:	2b40      	cmp	r3, #64	; 0x40
 80067e2:	bf0c      	ite	eq
 80067e4:	2301      	moveq	r3, #1
 80067e6:	2300      	movne	r3, #0
 80067e8:	b2db      	uxtb	r3, r3
 80067ea:	60fb      	str	r3, [r7, #12]
 80067ec:	68bb      	ldr	r3, [r7, #8]
 80067ee:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80067f2:	b2db      	uxtb	r3, r3
 80067f4:	2b22      	cmp	r3, #34	; 0x22
 80067f6:	d108      	bne.n	800680a <UART_DMAError+0x7a>
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d005      	beq.n	800680a <UART_DMAError+0x7a>
 80067fe:	68bb      	ldr	r3, [r7, #8]
 8006800:	2200      	movs	r2, #0
 8006802:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006804:	68b8      	ldr	r0, [r7, #8]
 8006806:	f000 f941 	bl	8006a8c <UART_EndRxTransfer>
 800680a:	68bb      	ldr	r3, [r7, #8]
 800680c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800680e:	f043 0210 	orr.w	r2, r3, #16
 8006812:	68bb      	ldr	r3, [r7, #8]
 8006814:	641a      	str	r2, [r3, #64]	; 0x40
 8006816:	68b8      	ldr	r0, [r7, #8]
 8006818:	f7fa fc68 	bl	80010ec <HAL_UART_ErrorCallback>
 800681c:	bf00      	nop
 800681e:	3710      	adds	r7, #16
 8006820:	46bd      	mov	sp, r7
 8006822:	bd80      	pop	{r7, pc}

08006824 <UART_WaitOnFlagUntilTimeout>:
 8006824:	b580      	push	{r7, lr}
 8006826:	b090      	sub	sp, #64	; 0x40
 8006828:	af00      	add	r7, sp, #0
 800682a:	60f8      	str	r0, [r7, #12]
 800682c:	60b9      	str	r1, [r7, #8]
 800682e:	603b      	str	r3, [r7, #0]
 8006830:	4613      	mov	r3, r2
 8006832:	71fb      	strb	r3, [r7, #7]
 8006834:	e050      	b.n	80068d8 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006836:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006838:	f1b3 3fff 	cmp.w	r3, #4294967295
 800683c:	d04c      	beq.n	80068d8 <UART_WaitOnFlagUntilTimeout+0xb4>
 800683e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006840:	2b00      	cmp	r3, #0
 8006842:	d007      	beq.n	8006854 <UART_WaitOnFlagUntilTimeout+0x30>
 8006844:	f7fd fa96 	bl	8003d74 <HAL_GetTick>
 8006848:	4602      	mov	r2, r0
 800684a:	683b      	ldr	r3, [r7, #0]
 800684c:	1ad3      	subs	r3, r2, r3
 800684e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006850:	429a      	cmp	r2, r3
 8006852:	d241      	bcs.n	80068d8 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006854:	68fb      	ldr	r3, [r7, #12]
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	330c      	adds	r3, #12
 800685a:	62bb      	str	r3, [r7, #40]	; 0x28
 800685c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800685e:	e853 3f00 	ldrex	r3, [r3]
 8006862:	627b      	str	r3, [r7, #36]	; 0x24
 8006864:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006866:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800686a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800686c:	68fb      	ldr	r3, [r7, #12]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	330c      	adds	r3, #12
 8006872:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8006874:	637a      	str	r2, [r7, #52]	; 0x34
 8006876:	633b      	str	r3, [r7, #48]	; 0x30
 8006878:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800687a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800687c:	e841 2300 	strex	r3, r2, [r1]
 8006880:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006882:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006884:	2b00      	cmp	r3, #0
 8006886:	d1e5      	bne.n	8006854 <UART_WaitOnFlagUntilTimeout+0x30>
 8006888:	68fb      	ldr	r3, [r7, #12]
 800688a:	681b      	ldr	r3, [r3, #0]
 800688c:	3314      	adds	r3, #20
 800688e:	617b      	str	r3, [r7, #20]
 8006890:	697b      	ldr	r3, [r7, #20]
 8006892:	e853 3f00 	ldrex	r3, [r3]
 8006896:	613b      	str	r3, [r7, #16]
 8006898:	693b      	ldr	r3, [r7, #16]
 800689a:	f023 0301 	bic.w	r3, r3, #1
 800689e:	63bb      	str	r3, [r7, #56]	; 0x38
 80068a0:	68fb      	ldr	r3, [r7, #12]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	3314      	adds	r3, #20
 80068a6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80068a8:	623a      	str	r2, [r7, #32]
 80068aa:	61fb      	str	r3, [r7, #28]
 80068ac:	69f9      	ldr	r1, [r7, #28]
 80068ae:	6a3a      	ldr	r2, [r7, #32]
 80068b0:	e841 2300 	strex	r3, r2, [r1]
 80068b4:	61bb      	str	r3, [r7, #24]
 80068b6:	69bb      	ldr	r3, [r7, #24]
 80068b8:	2b00      	cmp	r3, #0
 80068ba:	d1e5      	bne.n	8006888 <UART_WaitOnFlagUntilTimeout+0x64>
 80068bc:	68fb      	ldr	r3, [r7, #12]
 80068be:	2220      	movs	r2, #32
 80068c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	2220      	movs	r2, #32
 80068c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	2200      	movs	r2, #0
 80068d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80068d4:	2303      	movs	r3, #3
 80068d6:	e00f      	b.n	80068f8 <UART_WaitOnFlagUntilTimeout+0xd4>
 80068d8:	68fb      	ldr	r3, [r7, #12]
 80068da:	681b      	ldr	r3, [r3, #0]
 80068dc:	681a      	ldr	r2, [r3, #0]
 80068de:	68bb      	ldr	r3, [r7, #8]
 80068e0:	4013      	ands	r3, r2
 80068e2:	68ba      	ldr	r2, [r7, #8]
 80068e4:	429a      	cmp	r2, r3
 80068e6:	bf0c      	ite	eq
 80068e8:	2301      	moveq	r3, #1
 80068ea:	2300      	movne	r3, #0
 80068ec:	b2db      	uxtb	r3, r3
 80068ee:	461a      	mov	r2, r3
 80068f0:	79fb      	ldrb	r3, [r7, #7]
 80068f2:	429a      	cmp	r2, r3
 80068f4:	d09f      	beq.n	8006836 <UART_WaitOnFlagUntilTimeout+0x12>
 80068f6:	2300      	movs	r3, #0
 80068f8:	4618      	mov	r0, r3
 80068fa:	3740      	adds	r7, #64	; 0x40
 80068fc:	46bd      	mov	sp, r7
 80068fe:	bd80      	pop	{r7, pc}

08006900 <UART_Start_Receive_DMA>:
 8006900:	b580      	push	{r7, lr}
 8006902:	b098      	sub	sp, #96	; 0x60
 8006904:	af00      	add	r7, sp, #0
 8006906:	60f8      	str	r0, [r7, #12]
 8006908:	60b9      	str	r1, [r7, #8]
 800690a:	4613      	mov	r3, r2
 800690c:	80fb      	strh	r3, [r7, #6]
 800690e:	68ba      	ldr	r2, [r7, #8]
 8006910:	68fb      	ldr	r3, [r7, #12]
 8006912:	629a      	str	r2, [r3, #40]	; 0x28
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	88fa      	ldrh	r2, [r7, #6]
 8006918:	859a      	strh	r2, [r3, #44]	; 0x2c
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	2200      	movs	r2, #0
 800691e:	641a      	str	r2, [r3, #64]	; 0x40
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	2222      	movs	r2, #34	; 0x22
 8006924:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800692c:	4a40      	ldr	r2, [pc, #256]	; (8006a30 <UART_Start_Receive_DMA+0x130>)
 800692e:	63da      	str	r2, [r3, #60]	; 0x3c
 8006930:	68fb      	ldr	r3, [r7, #12]
 8006932:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006934:	4a3f      	ldr	r2, [pc, #252]	; (8006a34 <UART_Start_Receive_DMA+0x134>)
 8006936:	641a      	str	r2, [r3, #64]	; 0x40
 8006938:	68fb      	ldr	r3, [r7, #12]
 800693a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800693c:	4a3e      	ldr	r2, [pc, #248]	; (8006a38 <UART_Start_Receive_DMA+0x138>)
 800693e:	64da      	str	r2, [r3, #76]	; 0x4c
 8006940:	68fb      	ldr	r3, [r7, #12]
 8006942:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006944:	2200      	movs	r2, #0
 8006946:	651a      	str	r2, [r3, #80]	; 0x50
 8006948:	f107 0308 	add.w	r3, r7, #8
 800694c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800694e:	68fb      	ldr	r3, [r7, #12]
 8006950:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	681b      	ldr	r3, [r3, #0]
 8006956:	3304      	adds	r3, #4
 8006958:	4619      	mov	r1, r3
 800695a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800695c:	681a      	ldr	r2, [r3, #0]
 800695e:	88fb      	ldrh	r3, [r7, #6]
 8006960:	f7fd fc18 	bl	8004194 <HAL_DMA_Start_IT>
 8006964:	2300      	movs	r3, #0
 8006966:	613b      	str	r3, [r7, #16]
 8006968:	68fb      	ldr	r3, [r7, #12]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	613b      	str	r3, [r7, #16]
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	685b      	ldr	r3, [r3, #4]
 8006976:	613b      	str	r3, [r7, #16]
 8006978:	693b      	ldr	r3, [r7, #16]
 800697a:	68fb      	ldr	r3, [r7, #12]
 800697c:	2200      	movs	r2, #0
 800697e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006982:	68fb      	ldr	r3, [r7, #12]
 8006984:	691b      	ldr	r3, [r3, #16]
 8006986:	2b00      	cmp	r3, #0
 8006988:	d019      	beq.n	80069be <UART_Start_Receive_DMA+0xbe>
 800698a:	68fb      	ldr	r3, [r7, #12]
 800698c:	681b      	ldr	r3, [r3, #0]
 800698e:	330c      	adds	r3, #12
 8006990:	643b      	str	r3, [r7, #64]	; 0x40
 8006992:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8006994:	e853 3f00 	ldrex	r3, [r3]
 8006998:	63fb      	str	r3, [r7, #60]	; 0x3c
 800699a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800699c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80069a0:	65bb      	str	r3, [r7, #88]	; 0x58
 80069a2:	68fb      	ldr	r3, [r7, #12]
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	330c      	adds	r3, #12
 80069a8:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80069aa:	64fa      	str	r2, [r7, #76]	; 0x4c
 80069ac:	64bb      	str	r3, [r7, #72]	; 0x48
 80069ae:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80069b0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80069b2:	e841 2300 	strex	r3, r2, [r1]
 80069b6:	647b      	str	r3, [r7, #68]	; 0x44
 80069b8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80069ba:	2b00      	cmp	r3, #0
 80069bc:	d1e5      	bne.n	800698a <UART_Start_Receive_DMA+0x8a>
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	3314      	adds	r3, #20
 80069c4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80069c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80069c8:	e853 3f00 	ldrex	r3, [r3]
 80069cc:	62bb      	str	r3, [r7, #40]	; 0x28
 80069ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80069d0:	f043 0301 	orr.w	r3, r3, #1
 80069d4:	657b      	str	r3, [r7, #84]	; 0x54
 80069d6:	68fb      	ldr	r3, [r7, #12]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	3314      	adds	r3, #20
 80069dc:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80069de:	63ba      	str	r2, [r7, #56]	; 0x38
 80069e0:	637b      	str	r3, [r7, #52]	; 0x34
 80069e2:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80069e4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80069e6:	e841 2300 	strex	r3, r2, [r1]
 80069ea:	633b      	str	r3, [r7, #48]	; 0x30
 80069ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d1e5      	bne.n	80069be <UART_Start_Receive_DMA+0xbe>
 80069f2:	68fb      	ldr	r3, [r7, #12]
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	3314      	adds	r3, #20
 80069f8:	61bb      	str	r3, [r7, #24]
 80069fa:	69bb      	ldr	r3, [r7, #24]
 80069fc:	e853 3f00 	ldrex	r3, [r3]
 8006a00:	617b      	str	r3, [r7, #20]
 8006a02:	697b      	ldr	r3, [r7, #20]
 8006a04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006a08:	653b      	str	r3, [r7, #80]	; 0x50
 8006a0a:	68fb      	ldr	r3, [r7, #12]
 8006a0c:	681b      	ldr	r3, [r3, #0]
 8006a0e:	3314      	adds	r3, #20
 8006a10:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8006a12:	627a      	str	r2, [r7, #36]	; 0x24
 8006a14:	623b      	str	r3, [r7, #32]
 8006a16:	6a39      	ldr	r1, [r7, #32]
 8006a18:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006a1a:	e841 2300 	strex	r3, r2, [r1]
 8006a1e:	61fb      	str	r3, [r7, #28]
 8006a20:	69fb      	ldr	r3, [r7, #28]
 8006a22:	2b00      	cmp	r3, #0
 8006a24:	d1e5      	bne.n	80069f2 <UART_Start_Receive_DMA+0xf2>
 8006a26:	2300      	movs	r3, #0
 8006a28:	4618      	mov	r0, r3
 8006a2a:	3760      	adds	r7, #96	; 0x60
 8006a2c:	46bd      	mov	sp, r7
 8006a2e:	bd80      	pop	{r7, pc}
 8006a30:	08006635 	.word	0x08006635
 8006a34:	0800675b 	.word	0x0800675b
 8006a38:	08006791 	.word	0x08006791

08006a3c <UART_EndTxTransfer>:
 8006a3c:	b480      	push	{r7}
 8006a3e:	b089      	sub	sp, #36	; 0x24
 8006a40:	af00      	add	r7, sp, #0
 8006a42:	6078      	str	r0, [r7, #4]
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	681b      	ldr	r3, [r3, #0]
 8006a48:	330c      	adds	r3, #12
 8006a4a:	60fb      	str	r3, [r7, #12]
 8006a4c:	68fb      	ldr	r3, [r7, #12]
 8006a4e:	e853 3f00 	ldrex	r3, [r3]
 8006a52:	60bb      	str	r3, [r7, #8]
 8006a54:	68bb      	ldr	r3, [r7, #8]
 8006a56:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8006a5a:	61fb      	str	r3, [r7, #28]
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	681b      	ldr	r3, [r3, #0]
 8006a60:	330c      	adds	r3, #12
 8006a62:	69fa      	ldr	r2, [r7, #28]
 8006a64:	61ba      	str	r2, [r7, #24]
 8006a66:	617b      	str	r3, [r7, #20]
 8006a68:	6979      	ldr	r1, [r7, #20]
 8006a6a:	69ba      	ldr	r2, [r7, #24]
 8006a6c:	e841 2300 	strex	r3, r2, [r1]
 8006a70:	613b      	str	r3, [r7, #16]
 8006a72:	693b      	ldr	r3, [r7, #16]
 8006a74:	2b00      	cmp	r3, #0
 8006a76:	d1e5      	bne.n	8006a44 <UART_EndTxTransfer+0x8>
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	2220      	movs	r2, #32
 8006a7c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a80:	bf00      	nop
 8006a82:	3724      	adds	r7, #36	; 0x24
 8006a84:	46bd      	mov	sp, r7
 8006a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a8a:	4770      	bx	lr

08006a8c <UART_EndRxTransfer>:
 8006a8c:	b480      	push	{r7}
 8006a8e:	b095      	sub	sp, #84	; 0x54
 8006a90:	af00      	add	r7, sp, #0
 8006a92:	6078      	str	r0, [r7, #4]
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	681b      	ldr	r3, [r3, #0]
 8006a98:	330c      	adds	r3, #12
 8006a9a:	637b      	str	r3, [r7, #52]	; 0x34
 8006a9c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006a9e:	e853 3f00 	ldrex	r3, [r3]
 8006aa2:	633b      	str	r3, [r7, #48]	; 0x30
 8006aa4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006aa6:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006aaa:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	330c      	adds	r3, #12
 8006ab2:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8006ab4:	643a      	str	r2, [r7, #64]	; 0x40
 8006ab6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006ab8:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8006aba:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8006abc:	e841 2300 	strex	r3, r2, [r1]
 8006ac0:	63bb      	str	r3, [r7, #56]	; 0x38
 8006ac2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006ac4:	2b00      	cmp	r3, #0
 8006ac6:	d1e5      	bne.n	8006a94 <UART_EndRxTransfer+0x8>
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	3314      	adds	r3, #20
 8006ace:	623b      	str	r3, [r7, #32]
 8006ad0:	6a3b      	ldr	r3, [r7, #32]
 8006ad2:	e853 3f00 	ldrex	r3, [r3]
 8006ad6:	61fb      	str	r3, [r7, #28]
 8006ad8:	69fb      	ldr	r3, [r7, #28]
 8006ada:	f023 0301 	bic.w	r3, r3, #1
 8006ade:	64bb      	str	r3, [r7, #72]	; 0x48
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	3314      	adds	r3, #20
 8006ae6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006ae8:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006aea:	62bb      	str	r3, [r7, #40]	; 0x28
 8006aec:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8006aee:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006af0:	e841 2300 	strex	r3, r2, [r1]
 8006af4:	627b      	str	r3, [r7, #36]	; 0x24
 8006af6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006af8:	2b00      	cmp	r3, #0
 8006afa:	d1e5      	bne.n	8006ac8 <UART_EndRxTransfer+0x3c>
 8006afc:	687b      	ldr	r3, [r7, #4]
 8006afe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006b00:	2b01      	cmp	r3, #1
 8006b02:	d119      	bne.n	8006b38 <UART_EndRxTransfer+0xac>
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	681b      	ldr	r3, [r3, #0]
 8006b08:	330c      	adds	r3, #12
 8006b0a:	60fb      	str	r3, [r7, #12]
 8006b0c:	68fb      	ldr	r3, [r7, #12]
 8006b0e:	e853 3f00 	ldrex	r3, [r3]
 8006b12:	60bb      	str	r3, [r7, #8]
 8006b14:	68bb      	ldr	r3, [r7, #8]
 8006b16:	f023 0310 	bic.w	r3, r3, #16
 8006b1a:	647b      	str	r3, [r7, #68]	; 0x44
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	681b      	ldr	r3, [r3, #0]
 8006b20:	330c      	adds	r3, #12
 8006b22:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006b24:	61ba      	str	r2, [r7, #24]
 8006b26:	617b      	str	r3, [r7, #20]
 8006b28:	6979      	ldr	r1, [r7, #20]
 8006b2a:	69ba      	ldr	r2, [r7, #24]
 8006b2c:	e841 2300 	strex	r3, r2, [r1]
 8006b30:	613b      	str	r3, [r7, #16]
 8006b32:	693b      	ldr	r3, [r7, #16]
 8006b34:	2b00      	cmp	r3, #0
 8006b36:	d1e5      	bne.n	8006b04 <UART_EndRxTransfer+0x78>
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	2220      	movs	r2, #32
 8006b3c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	2200      	movs	r2, #0
 8006b44:	631a      	str	r2, [r3, #48]	; 0x30
 8006b46:	bf00      	nop
 8006b48:	3754      	adds	r7, #84	; 0x54
 8006b4a:	46bd      	mov	sp, r7
 8006b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b50:	4770      	bx	lr

08006b52 <UART_DMAAbortOnError>:
 8006b52:	b580      	push	{r7, lr}
 8006b54:	b084      	sub	sp, #16
 8006b56:	af00      	add	r7, sp, #0
 8006b58:	6078      	str	r0, [r7, #4]
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b5e:	60fb      	str	r3, [r7, #12]
 8006b60:	68fb      	ldr	r3, [r7, #12]
 8006b62:	2200      	movs	r2, #0
 8006b64:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006b66:	68fb      	ldr	r3, [r7, #12]
 8006b68:	2200      	movs	r2, #0
 8006b6a:	84da      	strh	r2, [r3, #38]	; 0x26
 8006b6c:	68f8      	ldr	r0, [r7, #12]
 8006b6e:	f7fa fabd 	bl	80010ec <HAL_UART_ErrorCallback>
 8006b72:	bf00      	nop
 8006b74:	3710      	adds	r7, #16
 8006b76:	46bd      	mov	sp, r7
 8006b78:	bd80      	pop	{r7, pc}

08006b7a <UART_Transmit_IT>:
 8006b7a:	b480      	push	{r7}
 8006b7c:	b085      	sub	sp, #20
 8006b7e:	af00      	add	r7, sp, #0
 8006b80:	6078      	str	r0, [r7, #4]
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006b88:	b2db      	uxtb	r3, r3
 8006b8a:	2b21      	cmp	r3, #33	; 0x21
 8006b8c:	d13e      	bne.n	8006c0c <UART_Transmit_IT+0x92>
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	689b      	ldr	r3, [r3, #8]
 8006b92:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006b96:	d114      	bne.n	8006bc2 <UART_Transmit_IT+0x48>
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	691b      	ldr	r3, [r3, #16]
 8006b9c:	2b00      	cmp	r3, #0
 8006b9e:	d110      	bne.n	8006bc2 <UART_Transmit_IT+0x48>
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	6a1b      	ldr	r3, [r3, #32]
 8006ba4:	60fb      	str	r3, [r7, #12]
 8006ba6:	68fb      	ldr	r3, [r7, #12]
 8006ba8:	881b      	ldrh	r3, [r3, #0]
 8006baa:	461a      	mov	r2, r3
 8006bac:	687b      	ldr	r3, [r7, #4]
 8006bae:	681b      	ldr	r3, [r3, #0]
 8006bb0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006bb4:	605a      	str	r2, [r3, #4]
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	6a1b      	ldr	r3, [r3, #32]
 8006bba:	1c9a      	adds	r2, r3, #2
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	621a      	str	r2, [r3, #32]
 8006bc0:	e008      	b.n	8006bd4 <UART_Transmit_IT+0x5a>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	6a1b      	ldr	r3, [r3, #32]
 8006bc6:	1c59      	adds	r1, r3, #1
 8006bc8:	687a      	ldr	r2, [r7, #4]
 8006bca:	6211      	str	r1, [r2, #32]
 8006bcc:	781a      	ldrb	r2, [r3, #0]
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	681b      	ldr	r3, [r3, #0]
 8006bd2:	605a      	str	r2, [r3, #4]
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006bd8:	b29b      	uxth	r3, r3
 8006bda:	3b01      	subs	r3, #1
 8006bdc:	b29b      	uxth	r3, r3
 8006bde:	687a      	ldr	r2, [r7, #4]
 8006be0:	4619      	mov	r1, r3
 8006be2:	84d1      	strh	r1, [r2, #38]	; 0x26
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	d10f      	bne.n	8006c08 <UART_Transmit_IT+0x8e>
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	681b      	ldr	r3, [r3, #0]
 8006bec:	68da      	ldr	r2, [r3, #12]
 8006bee:	687b      	ldr	r3, [r7, #4]
 8006bf0:	681b      	ldr	r3, [r3, #0]
 8006bf2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006bf6:	60da      	str	r2, [r3, #12]
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	681b      	ldr	r3, [r3, #0]
 8006bfc:	68da      	ldr	r2, [r3, #12]
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006c06:	60da      	str	r2, [r3, #12]
 8006c08:	2300      	movs	r3, #0
 8006c0a:	e000      	b.n	8006c0e <UART_Transmit_IT+0x94>
 8006c0c:	2302      	movs	r3, #2
 8006c0e:	4618      	mov	r0, r3
 8006c10:	3714      	adds	r7, #20
 8006c12:	46bd      	mov	sp, r7
 8006c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c18:	4770      	bx	lr

08006c1a <UART_EndTransmit_IT>:
 8006c1a:	b580      	push	{r7, lr}
 8006c1c:	b082      	sub	sp, #8
 8006c1e:	af00      	add	r7, sp, #0
 8006c20:	6078      	str	r0, [r7, #4]
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	681b      	ldr	r3, [r3, #0]
 8006c26:	68da      	ldr	r2, [r3, #12]
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006c30:	60da      	str	r2, [r3, #12]
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	2220      	movs	r2, #32
 8006c36:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006c3a:	6878      	ldr	r0, [r7, #4]
 8006c3c:	f7ff fcdc 	bl	80065f8 <HAL_UART_TxCpltCallback>
 8006c40:	2300      	movs	r3, #0
 8006c42:	4618      	mov	r0, r3
 8006c44:	3708      	adds	r7, #8
 8006c46:	46bd      	mov	sp, r7
 8006c48:	bd80      	pop	{r7, pc}

08006c4a <UART_Receive_IT>:
 8006c4a:	b580      	push	{r7, lr}
 8006c4c:	b08c      	sub	sp, #48	; 0x30
 8006c4e:	af00      	add	r7, sp, #0
 8006c50:	6078      	str	r0, [r7, #4]
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006c58:	b2db      	uxtb	r3, r3
 8006c5a:	2b22      	cmp	r3, #34	; 0x22
 8006c5c:	f040 80ab 	bne.w	8006db6 <UART_Receive_IT+0x16c>
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	689b      	ldr	r3, [r3, #8]
 8006c64:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006c68:	d117      	bne.n	8006c9a <UART_Receive_IT+0x50>
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	691b      	ldr	r3, [r3, #16]
 8006c6e:	2b00      	cmp	r3, #0
 8006c70:	d113      	bne.n	8006c9a <UART_Receive_IT+0x50>
 8006c72:	2300      	movs	r3, #0
 8006c74:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c7a:	62bb      	str	r3, [r7, #40]	; 0x28
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	685b      	ldr	r3, [r3, #4]
 8006c82:	b29b      	uxth	r3, r3
 8006c84:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006c88:	b29a      	uxth	r2, r3
 8006c8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c8c:	801a      	strh	r2, [r3, #0]
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c92:	1c9a      	adds	r2, r3, #2
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	629a      	str	r2, [r3, #40]	; 0x28
 8006c98:	e026      	b.n	8006ce8 <UART_Receive_IT+0x9e>
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c9e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006ca0:	2300      	movs	r3, #0
 8006ca2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	689b      	ldr	r3, [r3, #8]
 8006ca8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006cac:	d007      	beq.n	8006cbe <UART_Receive_IT+0x74>
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	689b      	ldr	r3, [r3, #8]
 8006cb2:	2b00      	cmp	r3, #0
 8006cb4:	d10a      	bne.n	8006ccc <UART_Receive_IT+0x82>
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	691b      	ldr	r3, [r3, #16]
 8006cba:	2b00      	cmp	r3, #0
 8006cbc:	d106      	bne.n	8006ccc <UART_Receive_IT+0x82>
 8006cbe:	687b      	ldr	r3, [r7, #4]
 8006cc0:	681b      	ldr	r3, [r3, #0]
 8006cc2:	685b      	ldr	r3, [r3, #4]
 8006cc4:	b2da      	uxtb	r2, r3
 8006cc6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006cc8:	701a      	strb	r2, [r3, #0]
 8006cca:	e008      	b.n	8006cde <UART_Receive_IT+0x94>
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	681b      	ldr	r3, [r3, #0]
 8006cd0:	685b      	ldr	r3, [r3, #4]
 8006cd2:	b2db      	uxtb	r3, r3
 8006cd4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006cd8:	b2da      	uxtb	r2, r3
 8006cda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006cdc:	701a      	strb	r2, [r3, #0]
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006ce2:	1c5a      	adds	r2, r3, #1
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	629a      	str	r2, [r3, #40]	; 0x28
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006cec:	b29b      	uxth	r3, r3
 8006cee:	3b01      	subs	r3, #1
 8006cf0:	b29b      	uxth	r3, r3
 8006cf2:	687a      	ldr	r2, [r7, #4]
 8006cf4:	4619      	mov	r1, r3
 8006cf6:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8006cf8:	2b00      	cmp	r3, #0
 8006cfa:	d15a      	bne.n	8006db2 <UART_Receive_IT+0x168>
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	68da      	ldr	r2, [r3, #12]
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	f022 0220 	bic.w	r2, r2, #32
 8006d0a:	60da      	str	r2, [r3, #12]
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	681b      	ldr	r3, [r3, #0]
 8006d10:	68da      	ldr	r2, [r3, #12]
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006d1a:	60da      	str	r2, [r3, #12]
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	681b      	ldr	r3, [r3, #0]
 8006d20:	695a      	ldr	r2, [r3, #20]
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	681b      	ldr	r3, [r3, #0]
 8006d26:	f022 0201 	bic.w	r2, r2, #1
 8006d2a:	615a      	str	r2, [r3, #20]
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	2220      	movs	r2, #32
 8006d30:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d38:	2b01      	cmp	r3, #1
 8006d3a:	d135      	bne.n	8006da8 <UART_Receive_IT+0x15e>
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	2200      	movs	r2, #0
 8006d40:	631a      	str	r2, [r3, #48]	; 0x30
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	330c      	adds	r3, #12
 8006d48:	617b      	str	r3, [r7, #20]
 8006d4a:	697b      	ldr	r3, [r7, #20]
 8006d4c:	e853 3f00 	ldrex	r3, [r3]
 8006d50:	613b      	str	r3, [r7, #16]
 8006d52:	693b      	ldr	r3, [r7, #16]
 8006d54:	f023 0310 	bic.w	r3, r3, #16
 8006d58:	627b      	str	r3, [r7, #36]	; 0x24
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	681b      	ldr	r3, [r3, #0]
 8006d5e:	330c      	adds	r3, #12
 8006d60:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006d62:	623a      	str	r2, [r7, #32]
 8006d64:	61fb      	str	r3, [r7, #28]
 8006d66:	69f9      	ldr	r1, [r7, #28]
 8006d68:	6a3a      	ldr	r2, [r7, #32]
 8006d6a:	e841 2300 	strex	r3, r2, [r1]
 8006d6e:	61bb      	str	r3, [r7, #24]
 8006d70:	69bb      	ldr	r3, [r7, #24]
 8006d72:	2b00      	cmp	r3, #0
 8006d74:	d1e5      	bne.n	8006d42 <UART_Receive_IT+0xf8>
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	681b      	ldr	r3, [r3, #0]
 8006d7c:	f003 0310 	and.w	r3, r3, #16
 8006d80:	2b10      	cmp	r3, #16
 8006d82:	d10a      	bne.n	8006d9a <UART_Receive_IT+0x150>
 8006d84:	2300      	movs	r3, #0
 8006d86:	60fb      	str	r3, [r7, #12]
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	681b      	ldr	r3, [r3, #0]
 8006d8c:	681b      	ldr	r3, [r3, #0]
 8006d8e:	60fb      	str	r3, [r7, #12]
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	681b      	ldr	r3, [r3, #0]
 8006d94:	685b      	ldr	r3, [r3, #4]
 8006d96:	60fb      	str	r3, [r7, #12]
 8006d98:	68fb      	ldr	r3, [r7, #12]
 8006d9a:	687b      	ldr	r3, [r7, #4]
 8006d9c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8006d9e:	4619      	mov	r1, r3
 8006da0:	6878      	ldr	r0, [r7, #4]
 8006da2:	f7fa f991 	bl	80010c8 <HAL_UARTEx_RxEventCallback>
 8006da6:	e002      	b.n	8006dae <UART_Receive_IT+0x164>
 8006da8:	6878      	ldr	r0, [r7, #4]
 8006daa:	f7ff fc2f 	bl	800660c <HAL_UART_RxCpltCallback>
 8006dae:	2300      	movs	r3, #0
 8006db0:	e002      	b.n	8006db8 <UART_Receive_IT+0x16e>
 8006db2:	2300      	movs	r3, #0
 8006db4:	e000      	b.n	8006db8 <UART_Receive_IT+0x16e>
 8006db6:	2302      	movs	r3, #2
 8006db8:	4618      	mov	r0, r3
 8006dba:	3730      	adds	r7, #48	; 0x30
 8006dbc:	46bd      	mov	sp, r7
 8006dbe:	bd80      	pop	{r7, pc}

08006dc0 <UART_SetConfig>:
 8006dc0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006dc4:	b0c0      	sub	sp, #256	; 0x100
 8006dc6:	af00      	add	r7, sp, #0
 8006dc8:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8006dcc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006dd0:	681b      	ldr	r3, [r3, #0]
 8006dd2:	691b      	ldr	r3, [r3, #16]
 8006dd4:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8006dd8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ddc:	68d9      	ldr	r1, [r3, #12]
 8006dde:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006de2:	681a      	ldr	r2, [r3, #0]
 8006de4:	ea40 0301 	orr.w	r3, r0, r1
 8006de8:	6113      	str	r3, [r2, #16]
 8006dea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006dee:	689a      	ldr	r2, [r3, #8]
 8006df0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006df4:	691b      	ldr	r3, [r3, #16]
 8006df6:	431a      	orrs	r2, r3
 8006df8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006dfc:	695b      	ldr	r3, [r3, #20]
 8006dfe:	431a      	orrs	r2, r3
 8006e00:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e04:	69db      	ldr	r3, [r3, #28]
 8006e06:	4313      	orrs	r3, r2
 8006e08:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8006e0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e10:	681b      	ldr	r3, [r3, #0]
 8006e12:	68db      	ldr	r3, [r3, #12]
 8006e14:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8006e18:	f021 010c 	bic.w	r1, r1, #12
 8006e1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e20:	681a      	ldr	r2, [r3, #0]
 8006e22:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8006e26:	430b      	orrs	r3, r1
 8006e28:	60d3      	str	r3, [r2, #12]
 8006e2a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e2e:	681b      	ldr	r3, [r3, #0]
 8006e30:	695b      	ldr	r3, [r3, #20]
 8006e32:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8006e36:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e3a:	6999      	ldr	r1, [r3, #24]
 8006e3c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e40:	681a      	ldr	r2, [r3, #0]
 8006e42:	ea40 0301 	orr.w	r3, r0, r1
 8006e46:	6153      	str	r3, [r2, #20]
 8006e48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e4c:	681a      	ldr	r2, [r3, #0]
 8006e4e:	4b8f      	ldr	r3, [pc, #572]	; (800708c <UART_SetConfig+0x2cc>)
 8006e50:	429a      	cmp	r2, r3
 8006e52:	d005      	beq.n	8006e60 <UART_SetConfig+0xa0>
 8006e54:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e58:	681a      	ldr	r2, [r3, #0]
 8006e5a:	4b8d      	ldr	r3, [pc, #564]	; (8007090 <UART_SetConfig+0x2d0>)
 8006e5c:	429a      	cmp	r2, r3
 8006e5e:	d104      	bne.n	8006e6a <UART_SetConfig+0xaa>
 8006e60:	f7fe fafa 	bl	8005458 <HAL_RCC_GetPCLK2Freq>
 8006e64:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8006e68:	e003      	b.n	8006e72 <UART_SetConfig+0xb2>
 8006e6a:	f7fe fae1 	bl	8005430 <HAL_RCC_GetPCLK1Freq>
 8006e6e:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8006e72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e76:	69db      	ldr	r3, [r3, #28]
 8006e78:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006e7c:	f040 810c 	bne.w	8007098 <UART_SetConfig+0x2d8>
 8006e80:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006e84:	2200      	movs	r2, #0
 8006e86:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8006e8a:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8006e8e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8006e92:	4622      	mov	r2, r4
 8006e94:	462b      	mov	r3, r5
 8006e96:	1891      	adds	r1, r2, r2
 8006e98:	65b9      	str	r1, [r7, #88]	; 0x58
 8006e9a:	415b      	adcs	r3, r3
 8006e9c:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006e9e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8006ea2:	4621      	mov	r1, r4
 8006ea4:	eb12 0801 	adds.w	r8, r2, r1
 8006ea8:	4629      	mov	r1, r5
 8006eaa:	eb43 0901 	adc.w	r9, r3, r1
 8006eae:	f04f 0200 	mov.w	r2, #0
 8006eb2:	f04f 0300 	mov.w	r3, #0
 8006eb6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006eba:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006ebe:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006ec2:	4690      	mov	r8, r2
 8006ec4:	4699      	mov	r9, r3
 8006ec6:	4623      	mov	r3, r4
 8006ec8:	eb18 0303 	adds.w	r3, r8, r3
 8006ecc:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8006ed0:	462b      	mov	r3, r5
 8006ed2:	eb49 0303 	adc.w	r3, r9, r3
 8006ed6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8006eda:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ede:	685b      	ldr	r3, [r3, #4]
 8006ee0:	2200      	movs	r2, #0
 8006ee2:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006ee6:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8006eea:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8006eee:	460b      	mov	r3, r1
 8006ef0:	18db      	adds	r3, r3, r3
 8006ef2:	653b      	str	r3, [r7, #80]	; 0x50
 8006ef4:	4613      	mov	r3, r2
 8006ef6:	eb42 0303 	adc.w	r3, r2, r3
 8006efa:	657b      	str	r3, [r7, #84]	; 0x54
 8006efc:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8006f00:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8006f04:	f7f9 ff28 	bl	8000d58 <__aeabi_uldivmod>
 8006f08:	4602      	mov	r2, r0
 8006f0a:	460b      	mov	r3, r1
 8006f0c:	4b61      	ldr	r3, [pc, #388]	; (8007094 <UART_SetConfig+0x2d4>)
 8006f0e:	fba3 2302 	umull	r2, r3, r3, r2
 8006f12:	095b      	lsrs	r3, r3, #5
 8006f14:	011c      	lsls	r4, r3, #4
 8006f16:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006f1a:	2200      	movs	r2, #0
 8006f1c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8006f20:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8006f24:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8006f28:	4642      	mov	r2, r8
 8006f2a:	464b      	mov	r3, r9
 8006f2c:	1891      	adds	r1, r2, r2
 8006f2e:	64b9      	str	r1, [r7, #72]	; 0x48
 8006f30:	415b      	adcs	r3, r3
 8006f32:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006f34:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8006f38:	4641      	mov	r1, r8
 8006f3a:	eb12 0a01 	adds.w	sl, r2, r1
 8006f3e:	4649      	mov	r1, r9
 8006f40:	eb43 0b01 	adc.w	fp, r3, r1
 8006f44:	f04f 0200 	mov.w	r2, #0
 8006f48:	f04f 0300 	mov.w	r3, #0
 8006f4c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006f50:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006f54:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006f58:	4692      	mov	sl, r2
 8006f5a:	469b      	mov	fp, r3
 8006f5c:	4643      	mov	r3, r8
 8006f5e:	eb1a 0303 	adds.w	r3, sl, r3
 8006f62:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8006f66:	464b      	mov	r3, r9
 8006f68:	eb4b 0303 	adc.w	r3, fp, r3
 8006f6c:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8006f70:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006f74:	685b      	ldr	r3, [r3, #4]
 8006f76:	2200      	movs	r2, #0
 8006f78:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8006f7c:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8006f80:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8006f84:	460b      	mov	r3, r1
 8006f86:	18db      	adds	r3, r3, r3
 8006f88:	643b      	str	r3, [r7, #64]	; 0x40
 8006f8a:	4613      	mov	r3, r2
 8006f8c:	eb42 0303 	adc.w	r3, r2, r3
 8006f90:	647b      	str	r3, [r7, #68]	; 0x44
 8006f92:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8006f96:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8006f9a:	f7f9 fedd 	bl	8000d58 <__aeabi_uldivmod>
 8006f9e:	4602      	mov	r2, r0
 8006fa0:	460b      	mov	r3, r1
 8006fa2:	4611      	mov	r1, r2
 8006fa4:	4b3b      	ldr	r3, [pc, #236]	; (8007094 <UART_SetConfig+0x2d4>)
 8006fa6:	fba3 2301 	umull	r2, r3, r3, r1
 8006faa:	095b      	lsrs	r3, r3, #5
 8006fac:	2264      	movs	r2, #100	; 0x64
 8006fae:	fb02 f303 	mul.w	r3, r2, r3
 8006fb2:	1acb      	subs	r3, r1, r3
 8006fb4:	00db      	lsls	r3, r3, #3
 8006fb6:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8006fba:	4b36      	ldr	r3, [pc, #216]	; (8007094 <UART_SetConfig+0x2d4>)
 8006fbc:	fba3 2302 	umull	r2, r3, r3, r2
 8006fc0:	095b      	lsrs	r3, r3, #5
 8006fc2:	005b      	lsls	r3, r3, #1
 8006fc4:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006fc8:	441c      	add	r4, r3
 8006fca:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006fce:	2200      	movs	r2, #0
 8006fd0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8006fd4:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8006fd8:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8006fdc:	4642      	mov	r2, r8
 8006fde:	464b      	mov	r3, r9
 8006fe0:	1891      	adds	r1, r2, r2
 8006fe2:	63b9      	str	r1, [r7, #56]	; 0x38
 8006fe4:	415b      	adcs	r3, r3
 8006fe6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006fe8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8006fec:	4641      	mov	r1, r8
 8006fee:	1851      	adds	r1, r2, r1
 8006ff0:	6339      	str	r1, [r7, #48]	; 0x30
 8006ff2:	4649      	mov	r1, r9
 8006ff4:	414b      	adcs	r3, r1
 8006ff6:	637b      	str	r3, [r7, #52]	; 0x34
 8006ff8:	f04f 0200 	mov.w	r2, #0
 8006ffc:	f04f 0300 	mov.w	r3, #0
 8007000:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8007004:	4659      	mov	r1, fp
 8007006:	00cb      	lsls	r3, r1, #3
 8007008:	4651      	mov	r1, sl
 800700a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800700e:	4651      	mov	r1, sl
 8007010:	00ca      	lsls	r2, r1, #3
 8007012:	4610      	mov	r0, r2
 8007014:	4619      	mov	r1, r3
 8007016:	4603      	mov	r3, r0
 8007018:	4642      	mov	r2, r8
 800701a:	189b      	adds	r3, r3, r2
 800701c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8007020:	464b      	mov	r3, r9
 8007022:	460a      	mov	r2, r1
 8007024:	eb42 0303 	adc.w	r3, r2, r3
 8007028:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800702c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007030:	685b      	ldr	r3, [r3, #4]
 8007032:	2200      	movs	r2, #0
 8007034:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8007038:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800703c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8007040:	460b      	mov	r3, r1
 8007042:	18db      	adds	r3, r3, r3
 8007044:	62bb      	str	r3, [r7, #40]	; 0x28
 8007046:	4613      	mov	r3, r2
 8007048:	eb42 0303 	adc.w	r3, r2, r3
 800704c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800704e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8007052:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8007056:	f7f9 fe7f 	bl	8000d58 <__aeabi_uldivmod>
 800705a:	4602      	mov	r2, r0
 800705c:	460b      	mov	r3, r1
 800705e:	4b0d      	ldr	r3, [pc, #52]	; (8007094 <UART_SetConfig+0x2d4>)
 8007060:	fba3 1302 	umull	r1, r3, r3, r2
 8007064:	095b      	lsrs	r3, r3, #5
 8007066:	2164      	movs	r1, #100	; 0x64
 8007068:	fb01 f303 	mul.w	r3, r1, r3
 800706c:	1ad3      	subs	r3, r2, r3
 800706e:	00db      	lsls	r3, r3, #3
 8007070:	3332      	adds	r3, #50	; 0x32
 8007072:	4a08      	ldr	r2, [pc, #32]	; (8007094 <UART_SetConfig+0x2d4>)
 8007074:	fba2 2303 	umull	r2, r3, r2, r3
 8007078:	095b      	lsrs	r3, r3, #5
 800707a:	f003 0207 	and.w	r2, r3, #7
 800707e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	4422      	add	r2, r4
 8007086:	609a      	str	r2, [r3, #8]
 8007088:	e105      	b.n	8007296 <UART_SetConfig+0x4d6>
 800708a:	bf00      	nop
 800708c:	40011000 	.word	0x40011000
 8007090:	40011400 	.word	0x40011400
 8007094:	51eb851f 	.word	0x51eb851f
 8007098:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800709c:	2200      	movs	r2, #0
 800709e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80070a2:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 80070a6:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 80070aa:	4642      	mov	r2, r8
 80070ac:	464b      	mov	r3, r9
 80070ae:	1891      	adds	r1, r2, r2
 80070b0:	6239      	str	r1, [r7, #32]
 80070b2:	415b      	adcs	r3, r3
 80070b4:	627b      	str	r3, [r7, #36]	; 0x24
 80070b6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80070ba:	4641      	mov	r1, r8
 80070bc:	1854      	adds	r4, r2, r1
 80070be:	4649      	mov	r1, r9
 80070c0:	eb43 0501 	adc.w	r5, r3, r1
 80070c4:	f04f 0200 	mov.w	r2, #0
 80070c8:	f04f 0300 	mov.w	r3, #0
 80070cc:	00eb      	lsls	r3, r5, #3
 80070ce:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80070d2:	00e2      	lsls	r2, r4, #3
 80070d4:	4614      	mov	r4, r2
 80070d6:	461d      	mov	r5, r3
 80070d8:	4643      	mov	r3, r8
 80070da:	18e3      	adds	r3, r4, r3
 80070dc:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80070e0:	464b      	mov	r3, r9
 80070e2:	eb45 0303 	adc.w	r3, r5, r3
 80070e6:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80070ea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80070ee:	685b      	ldr	r3, [r3, #4]
 80070f0:	2200      	movs	r2, #0
 80070f2:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80070f6:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80070fa:	f04f 0200 	mov.w	r2, #0
 80070fe:	f04f 0300 	mov.w	r3, #0
 8007102:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8007106:	4629      	mov	r1, r5
 8007108:	008b      	lsls	r3, r1, #2
 800710a:	4621      	mov	r1, r4
 800710c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007110:	4621      	mov	r1, r4
 8007112:	008a      	lsls	r2, r1, #2
 8007114:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8007118:	f7f9 fe1e 	bl	8000d58 <__aeabi_uldivmod>
 800711c:	4602      	mov	r2, r0
 800711e:	460b      	mov	r3, r1
 8007120:	4b60      	ldr	r3, [pc, #384]	; (80072a4 <UART_SetConfig+0x4e4>)
 8007122:	fba3 2302 	umull	r2, r3, r3, r2
 8007126:	095b      	lsrs	r3, r3, #5
 8007128:	011c      	lsls	r4, r3, #4
 800712a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800712e:	2200      	movs	r2, #0
 8007130:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8007134:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8007138:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800713c:	4642      	mov	r2, r8
 800713e:	464b      	mov	r3, r9
 8007140:	1891      	adds	r1, r2, r2
 8007142:	61b9      	str	r1, [r7, #24]
 8007144:	415b      	adcs	r3, r3
 8007146:	61fb      	str	r3, [r7, #28]
 8007148:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800714c:	4641      	mov	r1, r8
 800714e:	1851      	adds	r1, r2, r1
 8007150:	6139      	str	r1, [r7, #16]
 8007152:	4649      	mov	r1, r9
 8007154:	414b      	adcs	r3, r1
 8007156:	617b      	str	r3, [r7, #20]
 8007158:	f04f 0200 	mov.w	r2, #0
 800715c:	f04f 0300 	mov.w	r3, #0
 8007160:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007164:	4659      	mov	r1, fp
 8007166:	00cb      	lsls	r3, r1, #3
 8007168:	4651      	mov	r1, sl
 800716a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800716e:	4651      	mov	r1, sl
 8007170:	00ca      	lsls	r2, r1, #3
 8007172:	4610      	mov	r0, r2
 8007174:	4619      	mov	r1, r3
 8007176:	4603      	mov	r3, r0
 8007178:	4642      	mov	r2, r8
 800717a:	189b      	adds	r3, r3, r2
 800717c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8007180:	464b      	mov	r3, r9
 8007182:	460a      	mov	r2, r1
 8007184:	eb42 0303 	adc.w	r3, r2, r3
 8007188:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800718c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007190:	685b      	ldr	r3, [r3, #4]
 8007192:	2200      	movs	r2, #0
 8007194:	67bb      	str	r3, [r7, #120]	; 0x78
 8007196:	67fa      	str	r2, [r7, #124]	; 0x7c
 8007198:	f04f 0200 	mov.w	r2, #0
 800719c:	f04f 0300 	mov.w	r3, #0
 80071a0:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 80071a4:	4649      	mov	r1, r9
 80071a6:	008b      	lsls	r3, r1, #2
 80071a8:	4641      	mov	r1, r8
 80071aa:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80071ae:	4641      	mov	r1, r8
 80071b0:	008a      	lsls	r2, r1, #2
 80071b2:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 80071b6:	f7f9 fdcf 	bl	8000d58 <__aeabi_uldivmod>
 80071ba:	4602      	mov	r2, r0
 80071bc:	460b      	mov	r3, r1
 80071be:	4b39      	ldr	r3, [pc, #228]	; (80072a4 <UART_SetConfig+0x4e4>)
 80071c0:	fba3 1302 	umull	r1, r3, r3, r2
 80071c4:	095b      	lsrs	r3, r3, #5
 80071c6:	2164      	movs	r1, #100	; 0x64
 80071c8:	fb01 f303 	mul.w	r3, r1, r3
 80071cc:	1ad3      	subs	r3, r2, r3
 80071ce:	011b      	lsls	r3, r3, #4
 80071d0:	3332      	adds	r3, #50	; 0x32
 80071d2:	4a34      	ldr	r2, [pc, #208]	; (80072a4 <UART_SetConfig+0x4e4>)
 80071d4:	fba2 2303 	umull	r2, r3, r2, r3
 80071d8:	095b      	lsrs	r3, r3, #5
 80071da:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80071de:	441c      	add	r4, r3
 80071e0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80071e4:	2200      	movs	r2, #0
 80071e6:	673b      	str	r3, [r7, #112]	; 0x70
 80071e8:	677a      	str	r2, [r7, #116]	; 0x74
 80071ea:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 80071ee:	4642      	mov	r2, r8
 80071f0:	464b      	mov	r3, r9
 80071f2:	1891      	adds	r1, r2, r2
 80071f4:	60b9      	str	r1, [r7, #8]
 80071f6:	415b      	adcs	r3, r3
 80071f8:	60fb      	str	r3, [r7, #12]
 80071fa:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80071fe:	4641      	mov	r1, r8
 8007200:	1851      	adds	r1, r2, r1
 8007202:	6039      	str	r1, [r7, #0]
 8007204:	4649      	mov	r1, r9
 8007206:	414b      	adcs	r3, r1
 8007208:	607b      	str	r3, [r7, #4]
 800720a:	f04f 0200 	mov.w	r2, #0
 800720e:	f04f 0300 	mov.w	r3, #0
 8007212:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8007216:	4659      	mov	r1, fp
 8007218:	00cb      	lsls	r3, r1, #3
 800721a:	4651      	mov	r1, sl
 800721c:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007220:	4651      	mov	r1, sl
 8007222:	00ca      	lsls	r2, r1, #3
 8007224:	4610      	mov	r0, r2
 8007226:	4619      	mov	r1, r3
 8007228:	4603      	mov	r3, r0
 800722a:	4642      	mov	r2, r8
 800722c:	189b      	adds	r3, r3, r2
 800722e:	66bb      	str	r3, [r7, #104]	; 0x68
 8007230:	464b      	mov	r3, r9
 8007232:	460a      	mov	r2, r1
 8007234:	eb42 0303 	adc.w	r3, r2, r3
 8007238:	66fb      	str	r3, [r7, #108]	; 0x6c
 800723a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800723e:	685b      	ldr	r3, [r3, #4]
 8007240:	2200      	movs	r2, #0
 8007242:	663b      	str	r3, [r7, #96]	; 0x60
 8007244:	667a      	str	r2, [r7, #100]	; 0x64
 8007246:	f04f 0200 	mov.w	r2, #0
 800724a:	f04f 0300 	mov.w	r3, #0
 800724e:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8007252:	4649      	mov	r1, r9
 8007254:	008b      	lsls	r3, r1, #2
 8007256:	4641      	mov	r1, r8
 8007258:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800725c:	4641      	mov	r1, r8
 800725e:	008a      	lsls	r2, r1, #2
 8007260:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8007264:	f7f9 fd78 	bl	8000d58 <__aeabi_uldivmod>
 8007268:	4602      	mov	r2, r0
 800726a:	460b      	mov	r3, r1
 800726c:	4b0d      	ldr	r3, [pc, #52]	; (80072a4 <UART_SetConfig+0x4e4>)
 800726e:	fba3 1302 	umull	r1, r3, r3, r2
 8007272:	095b      	lsrs	r3, r3, #5
 8007274:	2164      	movs	r1, #100	; 0x64
 8007276:	fb01 f303 	mul.w	r3, r1, r3
 800727a:	1ad3      	subs	r3, r2, r3
 800727c:	011b      	lsls	r3, r3, #4
 800727e:	3332      	adds	r3, #50	; 0x32
 8007280:	4a08      	ldr	r2, [pc, #32]	; (80072a4 <UART_SetConfig+0x4e4>)
 8007282:	fba2 2303 	umull	r2, r3, r2, r3
 8007286:	095b      	lsrs	r3, r3, #5
 8007288:	f003 020f 	and.w	r2, r3, #15
 800728c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007290:	681b      	ldr	r3, [r3, #0]
 8007292:	4422      	add	r2, r4
 8007294:	609a      	str	r2, [r3, #8]
 8007296:	bf00      	nop
 8007298:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800729c:	46bd      	mov	sp, r7
 800729e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80072a2:	bf00      	nop
 80072a4:	51eb851f 	.word	0x51eb851f

080072a8 <cos>:
 80072a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80072aa:	ec53 2b10 	vmov	r2, r3, d0
 80072ae:	4826      	ldr	r0, [pc, #152]	; (8007348 <cos+0xa0>)
 80072b0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80072b4:	4281      	cmp	r1, r0
 80072b6:	dc06      	bgt.n	80072c6 <cos+0x1e>
 80072b8:	ed9f 1b21 	vldr	d1, [pc, #132]	; 8007340 <cos+0x98>
 80072bc:	b005      	add	sp, #20
 80072be:	f85d eb04 	ldr.w	lr, [sp], #4
 80072c2:	f000 bdd1 	b.w	8007e68 <__kernel_cos>
 80072c6:	4821      	ldr	r0, [pc, #132]	; (800734c <cos+0xa4>)
 80072c8:	4281      	cmp	r1, r0
 80072ca:	dd09      	ble.n	80072e0 <cos+0x38>
 80072cc:	ee10 0a10 	vmov	r0, s0
 80072d0:	4619      	mov	r1, r3
 80072d2:	f7f8 fff1 	bl	80002b8 <__aeabi_dsub>
 80072d6:	ec41 0b10 	vmov	d0, r0, r1
 80072da:	b005      	add	sp, #20
 80072dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80072e0:	4668      	mov	r0, sp
 80072e2:	f000 fb01 	bl	80078e8 <__ieee754_rem_pio2>
 80072e6:	f000 0003 	and.w	r0, r0, #3
 80072ea:	2801      	cmp	r0, #1
 80072ec:	d00b      	beq.n	8007306 <cos+0x5e>
 80072ee:	2802      	cmp	r0, #2
 80072f0:	d016      	beq.n	8007320 <cos+0x78>
 80072f2:	b9e0      	cbnz	r0, 800732e <cos+0x86>
 80072f4:	ed9d 1b02 	vldr	d1, [sp, #8]
 80072f8:	ed9d 0b00 	vldr	d0, [sp]
 80072fc:	f000 fdb4 	bl	8007e68 <__kernel_cos>
 8007300:	ec51 0b10 	vmov	r0, r1, d0
 8007304:	e7e7      	b.n	80072d6 <cos+0x2e>
 8007306:	ed9d 1b02 	vldr	d1, [sp, #8]
 800730a:	ed9d 0b00 	vldr	d0, [sp]
 800730e:	f001 f9c3 	bl	8008698 <__kernel_sin>
 8007312:	ec53 2b10 	vmov	r2, r3, d0
 8007316:	ee10 0a10 	vmov	r0, s0
 800731a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800731e:	e7da      	b.n	80072d6 <cos+0x2e>
 8007320:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007324:	ed9d 0b00 	vldr	d0, [sp]
 8007328:	f000 fd9e 	bl	8007e68 <__kernel_cos>
 800732c:	e7f1      	b.n	8007312 <cos+0x6a>
 800732e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007332:	ed9d 0b00 	vldr	d0, [sp]
 8007336:	2001      	movs	r0, #1
 8007338:	f001 f9ae 	bl	8008698 <__kernel_sin>
 800733c:	e7e0      	b.n	8007300 <cos+0x58>
 800733e:	bf00      	nop
	...
 8007348:	3fe921fb 	.word	0x3fe921fb
 800734c:	7fefffff 	.word	0x7fefffff

08007350 <sin>:
 8007350:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007352:	ec53 2b10 	vmov	r2, r3, d0
 8007356:	4828      	ldr	r0, [pc, #160]	; (80073f8 <sin+0xa8>)
 8007358:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800735c:	4281      	cmp	r1, r0
 800735e:	dc07      	bgt.n	8007370 <sin+0x20>
 8007360:	ed9f 1b23 	vldr	d1, [pc, #140]	; 80073f0 <sin+0xa0>
 8007364:	2000      	movs	r0, #0
 8007366:	b005      	add	sp, #20
 8007368:	f85d eb04 	ldr.w	lr, [sp], #4
 800736c:	f001 b994 	b.w	8008698 <__kernel_sin>
 8007370:	4822      	ldr	r0, [pc, #136]	; (80073fc <sin+0xac>)
 8007372:	4281      	cmp	r1, r0
 8007374:	dd09      	ble.n	800738a <sin+0x3a>
 8007376:	ee10 0a10 	vmov	r0, s0
 800737a:	4619      	mov	r1, r3
 800737c:	f7f8 ff9c 	bl	80002b8 <__aeabi_dsub>
 8007380:	ec41 0b10 	vmov	d0, r0, r1
 8007384:	b005      	add	sp, #20
 8007386:	f85d fb04 	ldr.w	pc, [sp], #4
 800738a:	4668      	mov	r0, sp
 800738c:	f000 faac 	bl	80078e8 <__ieee754_rem_pio2>
 8007390:	f000 0003 	and.w	r0, r0, #3
 8007394:	2801      	cmp	r0, #1
 8007396:	d00c      	beq.n	80073b2 <sin+0x62>
 8007398:	2802      	cmp	r0, #2
 800739a:	d011      	beq.n	80073c0 <sin+0x70>
 800739c:	b9f0      	cbnz	r0, 80073dc <sin+0x8c>
 800739e:	ed9d 1b02 	vldr	d1, [sp, #8]
 80073a2:	ed9d 0b00 	vldr	d0, [sp]
 80073a6:	2001      	movs	r0, #1
 80073a8:	f001 f976 	bl	8008698 <__kernel_sin>
 80073ac:	ec51 0b10 	vmov	r0, r1, d0
 80073b0:	e7e6      	b.n	8007380 <sin+0x30>
 80073b2:	ed9d 1b02 	vldr	d1, [sp, #8]
 80073b6:	ed9d 0b00 	vldr	d0, [sp]
 80073ba:	f000 fd55 	bl	8007e68 <__kernel_cos>
 80073be:	e7f5      	b.n	80073ac <sin+0x5c>
 80073c0:	ed9d 1b02 	vldr	d1, [sp, #8]
 80073c4:	ed9d 0b00 	vldr	d0, [sp]
 80073c8:	2001      	movs	r0, #1
 80073ca:	f001 f965 	bl	8008698 <__kernel_sin>
 80073ce:	ec53 2b10 	vmov	r2, r3, d0
 80073d2:	ee10 0a10 	vmov	r0, s0
 80073d6:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80073da:	e7d1      	b.n	8007380 <sin+0x30>
 80073dc:	ed9d 1b02 	vldr	d1, [sp, #8]
 80073e0:	ed9d 0b00 	vldr	d0, [sp]
 80073e4:	f000 fd40 	bl	8007e68 <__kernel_cos>
 80073e8:	e7f1      	b.n	80073ce <sin+0x7e>
 80073ea:	bf00      	nop
 80073ec:	f3af 8000 	nop.w
	...
 80073f8:	3fe921fb 	.word	0x3fe921fb
 80073fc:	7fefffff 	.word	0x7fefffff

08007400 <asin>:
 8007400:	b538      	push	{r3, r4, r5, lr}
 8007402:	ed2d 8b02 	vpush	{d8}
 8007406:	ec55 4b10 	vmov	r4, r5, d0
 800740a:	f000 f859 	bl	80074c0 <__ieee754_asin>
 800740e:	4622      	mov	r2, r4
 8007410:	462b      	mov	r3, r5
 8007412:	4620      	mov	r0, r4
 8007414:	4629      	mov	r1, r5
 8007416:	eeb0 8a40 	vmov.f32	s16, s0
 800741a:	eef0 8a60 	vmov.f32	s17, s1
 800741e:	f7f9 fb9d 	bl	8000b5c <__aeabi_dcmpun>
 8007422:	b9a8      	cbnz	r0, 8007450 <asin+0x50>
 8007424:	ec45 4b10 	vmov	d0, r4, r5
 8007428:	f001 f9f4 	bl	8008814 <fabs>
 800742c:	4b0c      	ldr	r3, [pc, #48]	; (8007460 <asin+0x60>)
 800742e:	ec51 0b10 	vmov	r0, r1, d0
 8007432:	2200      	movs	r2, #0
 8007434:	f7f9 fb88 	bl	8000b48 <__aeabi_dcmpgt>
 8007438:	b150      	cbz	r0, 8007450 <asin+0x50>
 800743a:	f001 fb07 	bl	8008a4c <__errno>
 800743e:	ecbd 8b02 	vpop	{d8}
 8007442:	2321      	movs	r3, #33	; 0x21
 8007444:	6003      	str	r3, [r0, #0]
 8007446:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800744a:	4806      	ldr	r0, [pc, #24]	; (8007464 <asin+0x64>)
 800744c:	f001 ba6c 	b.w	8008928 <nan>
 8007450:	eeb0 0a48 	vmov.f32	s0, s16
 8007454:	eef0 0a68 	vmov.f32	s1, s17
 8007458:	ecbd 8b02 	vpop	{d8}
 800745c:	bd38      	pop	{r3, r4, r5, pc}
 800745e:	bf00      	nop
 8007460:	3ff00000 	.word	0x3ff00000
 8007464:	08010157 	.word	0x08010157

08007468 <sqrt>:
 8007468:	b538      	push	{r3, r4, r5, lr}
 800746a:	ed2d 8b02 	vpush	{d8}
 800746e:	ec55 4b10 	vmov	r4, r5, d0
 8007472:	f000 fc45 	bl	8007d00 <__ieee754_sqrt>
 8007476:	4622      	mov	r2, r4
 8007478:	462b      	mov	r3, r5
 800747a:	4620      	mov	r0, r4
 800747c:	4629      	mov	r1, r5
 800747e:	eeb0 8a40 	vmov.f32	s16, s0
 8007482:	eef0 8a60 	vmov.f32	s17, s1
 8007486:	f7f9 fb69 	bl	8000b5c <__aeabi_dcmpun>
 800748a:	b990      	cbnz	r0, 80074b2 <sqrt+0x4a>
 800748c:	2200      	movs	r2, #0
 800748e:	2300      	movs	r3, #0
 8007490:	4620      	mov	r0, r4
 8007492:	4629      	mov	r1, r5
 8007494:	f7f9 fb3a 	bl	8000b0c <__aeabi_dcmplt>
 8007498:	b158      	cbz	r0, 80074b2 <sqrt+0x4a>
 800749a:	f001 fad7 	bl	8008a4c <__errno>
 800749e:	2321      	movs	r3, #33	; 0x21
 80074a0:	6003      	str	r3, [r0, #0]
 80074a2:	2200      	movs	r2, #0
 80074a4:	2300      	movs	r3, #0
 80074a6:	4610      	mov	r0, r2
 80074a8:	4619      	mov	r1, r3
 80074aa:	f7f9 f9e7 	bl	800087c <__aeabi_ddiv>
 80074ae:	ec41 0b18 	vmov	d8, r0, r1
 80074b2:	eeb0 0a48 	vmov.f32	s0, s16
 80074b6:	eef0 0a68 	vmov.f32	s1, s17
 80074ba:	ecbd 8b02 	vpop	{d8}
 80074be:	bd38      	pop	{r3, r4, r5, pc}

080074c0 <__ieee754_asin>:
 80074c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074c4:	ed2d 8b04 	vpush	{d8-d9}
 80074c8:	ec55 4b10 	vmov	r4, r5, d0
 80074cc:	4bcc      	ldr	r3, [pc, #816]	; (8007800 <__ieee754_asin+0x340>)
 80074ce:	b083      	sub	sp, #12
 80074d0:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 80074d4:	4598      	cmp	r8, r3
 80074d6:	9501      	str	r5, [sp, #4]
 80074d8:	dd35      	ble.n	8007546 <__ieee754_asin+0x86>
 80074da:	ee10 3a10 	vmov	r3, s0
 80074de:	f108 4840 	add.w	r8, r8, #3221225472	; 0xc0000000
 80074e2:	f508 1880 	add.w	r8, r8, #1048576	; 0x100000
 80074e6:	ea58 0303 	orrs.w	r3, r8, r3
 80074ea:	d117      	bne.n	800751c <__ieee754_asin+0x5c>
 80074ec:	a3aa      	add	r3, pc, #680	; (adr r3, 8007798 <__ieee754_asin+0x2d8>)
 80074ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074f2:	ee10 0a10 	vmov	r0, s0
 80074f6:	4629      	mov	r1, r5
 80074f8:	f7f9 f896 	bl	8000628 <__aeabi_dmul>
 80074fc:	a3a8      	add	r3, pc, #672	; (adr r3, 80077a0 <__ieee754_asin+0x2e0>)
 80074fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007502:	4606      	mov	r6, r0
 8007504:	460f      	mov	r7, r1
 8007506:	4620      	mov	r0, r4
 8007508:	4629      	mov	r1, r5
 800750a:	f7f9 f88d 	bl	8000628 <__aeabi_dmul>
 800750e:	4602      	mov	r2, r0
 8007510:	460b      	mov	r3, r1
 8007512:	4630      	mov	r0, r6
 8007514:	4639      	mov	r1, r7
 8007516:	f7f8 fed1 	bl	80002bc <__adddf3>
 800751a:	e00b      	b.n	8007534 <__ieee754_asin+0x74>
 800751c:	ee10 2a10 	vmov	r2, s0
 8007520:	462b      	mov	r3, r5
 8007522:	ee10 0a10 	vmov	r0, s0
 8007526:	4629      	mov	r1, r5
 8007528:	f7f8 fec6 	bl	80002b8 <__aeabi_dsub>
 800752c:	4602      	mov	r2, r0
 800752e:	460b      	mov	r3, r1
 8007530:	f7f9 f9a4 	bl	800087c <__aeabi_ddiv>
 8007534:	4604      	mov	r4, r0
 8007536:	460d      	mov	r5, r1
 8007538:	ec45 4b10 	vmov	d0, r4, r5
 800753c:	b003      	add	sp, #12
 800753e:	ecbd 8b04 	vpop	{d8-d9}
 8007542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007546:	4baf      	ldr	r3, [pc, #700]	; (8007804 <__ieee754_asin+0x344>)
 8007548:	4598      	cmp	r8, r3
 800754a:	dc11      	bgt.n	8007570 <__ieee754_asin+0xb0>
 800754c:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8007550:	f280 80ae 	bge.w	80076b0 <__ieee754_asin+0x1f0>
 8007554:	a394      	add	r3, pc, #592	; (adr r3, 80077a8 <__ieee754_asin+0x2e8>)
 8007556:	e9d3 2300 	ldrd	r2, r3, [r3]
 800755a:	ee10 0a10 	vmov	r0, s0
 800755e:	4629      	mov	r1, r5
 8007560:	f7f8 feac 	bl	80002bc <__adddf3>
 8007564:	4ba8      	ldr	r3, [pc, #672]	; (8007808 <__ieee754_asin+0x348>)
 8007566:	2200      	movs	r2, #0
 8007568:	f7f9 faee 	bl	8000b48 <__aeabi_dcmpgt>
 800756c:	2800      	cmp	r0, #0
 800756e:	d1e3      	bne.n	8007538 <__ieee754_asin+0x78>
 8007570:	ec45 4b10 	vmov	d0, r4, r5
 8007574:	f001 f94e 	bl	8008814 <fabs>
 8007578:	49a3      	ldr	r1, [pc, #652]	; (8007808 <__ieee754_asin+0x348>)
 800757a:	ec53 2b10 	vmov	r2, r3, d0
 800757e:	2000      	movs	r0, #0
 8007580:	f7f8 fe9a 	bl	80002b8 <__aeabi_dsub>
 8007584:	4ba1      	ldr	r3, [pc, #644]	; (800780c <__ieee754_asin+0x34c>)
 8007586:	2200      	movs	r2, #0
 8007588:	f7f9 f84e 	bl	8000628 <__aeabi_dmul>
 800758c:	a388      	add	r3, pc, #544	; (adr r3, 80077b0 <__ieee754_asin+0x2f0>)
 800758e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007592:	4604      	mov	r4, r0
 8007594:	460d      	mov	r5, r1
 8007596:	f7f9 f847 	bl	8000628 <__aeabi_dmul>
 800759a:	a387      	add	r3, pc, #540	; (adr r3, 80077b8 <__ieee754_asin+0x2f8>)
 800759c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075a0:	f7f8 fe8c 	bl	80002bc <__adddf3>
 80075a4:	4622      	mov	r2, r4
 80075a6:	462b      	mov	r3, r5
 80075a8:	f7f9 f83e 	bl	8000628 <__aeabi_dmul>
 80075ac:	a384      	add	r3, pc, #528	; (adr r3, 80077c0 <__ieee754_asin+0x300>)
 80075ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075b2:	f7f8 fe81 	bl	80002b8 <__aeabi_dsub>
 80075b6:	4622      	mov	r2, r4
 80075b8:	462b      	mov	r3, r5
 80075ba:	f7f9 f835 	bl	8000628 <__aeabi_dmul>
 80075be:	a382      	add	r3, pc, #520	; (adr r3, 80077c8 <__ieee754_asin+0x308>)
 80075c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075c4:	f7f8 fe7a 	bl	80002bc <__adddf3>
 80075c8:	4622      	mov	r2, r4
 80075ca:	462b      	mov	r3, r5
 80075cc:	f7f9 f82c 	bl	8000628 <__aeabi_dmul>
 80075d0:	a37f      	add	r3, pc, #508	; (adr r3, 80077d0 <__ieee754_asin+0x310>)
 80075d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075d6:	f7f8 fe6f 	bl	80002b8 <__aeabi_dsub>
 80075da:	4622      	mov	r2, r4
 80075dc:	462b      	mov	r3, r5
 80075de:	f7f9 f823 	bl	8000628 <__aeabi_dmul>
 80075e2:	a37d      	add	r3, pc, #500	; (adr r3, 80077d8 <__ieee754_asin+0x318>)
 80075e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075e8:	f7f8 fe68 	bl	80002bc <__adddf3>
 80075ec:	4622      	mov	r2, r4
 80075ee:	462b      	mov	r3, r5
 80075f0:	f7f9 f81a 	bl	8000628 <__aeabi_dmul>
 80075f4:	a37a      	add	r3, pc, #488	; (adr r3, 80077e0 <__ieee754_asin+0x320>)
 80075f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075fa:	ec41 0b18 	vmov	d8, r0, r1
 80075fe:	4620      	mov	r0, r4
 8007600:	4629      	mov	r1, r5
 8007602:	f7f9 f811 	bl	8000628 <__aeabi_dmul>
 8007606:	a378      	add	r3, pc, #480	; (adr r3, 80077e8 <__ieee754_asin+0x328>)
 8007608:	e9d3 2300 	ldrd	r2, r3, [r3]
 800760c:	f7f8 fe54 	bl	80002b8 <__aeabi_dsub>
 8007610:	4622      	mov	r2, r4
 8007612:	462b      	mov	r3, r5
 8007614:	f7f9 f808 	bl	8000628 <__aeabi_dmul>
 8007618:	a375      	add	r3, pc, #468	; (adr r3, 80077f0 <__ieee754_asin+0x330>)
 800761a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800761e:	f7f8 fe4d 	bl	80002bc <__adddf3>
 8007622:	4622      	mov	r2, r4
 8007624:	462b      	mov	r3, r5
 8007626:	f7f8 ffff 	bl	8000628 <__aeabi_dmul>
 800762a:	a373      	add	r3, pc, #460	; (adr r3, 80077f8 <__ieee754_asin+0x338>)
 800762c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007630:	f7f8 fe42 	bl	80002b8 <__aeabi_dsub>
 8007634:	4622      	mov	r2, r4
 8007636:	462b      	mov	r3, r5
 8007638:	f7f8 fff6 	bl	8000628 <__aeabi_dmul>
 800763c:	4b72      	ldr	r3, [pc, #456]	; (8007808 <__ieee754_asin+0x348>)
 800763e:	2200      	movs	r2, #0
 8007640:	f7f8 fe3c 	bl	80002bc <__adddf3>
 8007644:	ec45 4b10 	vmov	d0, r4, r5
 8007648:	4606      	mov	r6, r0
 800764a:	460f      	mov	r7, r1
 800764c:	f000 fb58 	bl	8007d00 <__ieee754_sqrt>
 8007650:	4b6f      	ldr	r3, [pc, #444]	; (8007810 <__ieee754_asin+0x350>)
 8007652:	4598      	cmp	r8, r3
 8007654:	ec5b ab10 	vmov	sl, fp, d0
 8007658:	f340 80dc 	ble.w	8007814 <__ieee754_asin+0x354>
 800765c:	4632      	mov	r2, r6
 800765e:	463b      	mov	r3, r7
 8007660:	ec51 0b18 	vmov	r0, r1, d8
 8007664:	f7f9 f90a 	bl	800087c <__aeabi_ddiv>
 8007668:	4652      	mov	r2, sl
 800766a:	465b      	mov	r3, fp
 800766c:	f7f8 ffdc 	bl	8000628 <__aeabi_dmul>
 8007670:	4652      	mov	r2, sl
 8007672:	465b      	mov	r3, fp
 8007674:	f7f8 fe22 	bl	80002bc <__adddf3>
 8007678:	4602      	mov	r2, r0
 800767a:	460b      	mov	r3, r1
 800767c:	f7f8 fe1e 	bl	80002bc <__adddf3>
 8007680:	a347      	add	r3, pc, #284	; (adr r3, 80077a0 <__ieee754_asin+0x2e0>)
 8007682:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007686:	f7f8 fe17 	bl	80002b8 <__aeabi_dsub>
 800768a:	4602      	mov	r2, r0
 800768c:	460b      	mov	r3, r1
 800768e:	a142      	add	r1, pc, #264	; (adr r1, 8007798 <__ieee754_asin+0x2d8>)
 8007690:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007694:	f7f8 fe10 	bl	80002b8 <__aeabi_dsub>
 8007698:	9b01      	ldr	r3, [sp, #4]
 800769a:	2b00      	cmp	r3, #0
 800769c:	bfdc      	itt	le
 800769e:	4602      	movle	r2, r0
 80076a0:	f101 4300 	addle.w	r3, r1, #2147483648	; 0x80000000
 80076a4:	4604      	mov	r4, r0
 80076a6:	460d      	mov	r5, r1
 80076a8:	bfdc      	itt	le
 80076aa:	4614      	movle	r4, r2
 80076ac:	461d      	movle	r5, r3
 80076ae:	e743      	b.n	8007538 <__ieee754_asin+0x78>
 80076b0:	ee10 2a10 	vmov	r2, s0
 80076b4:	ee10 0a10 	vmov	r0, s0
 80076b8:	462b      	mov	r3, r5
 80076ba:	4629      	mov	r1, r5
 80076bc:	f7f8 ffb4 	bl	8000628 <__aeabi_dmul>
 80076c0:	a33b      	add	r3, pc, #236	; (adr r3, 80077b0 <__ieee754_asin+0x2f0>)
 80076c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076c6:	4606      	mov	r6, r0
 80076c8:	460f      	mov	r7, r1
 80076ca:	f7f8 ffad 	bl	8000628 <__aeabi_dmul>
 80076ce:	a33a      	add	r3, pc, #232	; (adr r3, 80077b8 <__ieee754_asin+0x2f8>)
 80076d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076d4:	f7f8 fdf2 	bl	80002bc <__adddf3>
 80076d8:	4632      	mov	r2, r6
 80076da:	463b      	mov	r3, r7
 80076dc:	f7f8 ffa4 	bl	8000628 <__aeabi_dmul>
 80076e0:	a337      	add	r3, pc, #220	; (adr r3, 80077c0 <__ieee754_asin+0x300>)
 80076e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076e6:	f7f8 fde7 	bl	80002b8 <__aeabi_dsub>
 80076ea:	4632      	mov	r2, r6
 80076ec:	463b      	mov	r3, r7
 80076ee:	f7f8 ff9b 	bl	8000628 <__aeabi_dmul>
 80076f2:	a335      	add	r3, pc, #212	; (adr r3, 80077c8 <__ieee754_asin+0x308>)
 80076f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076f8:	f7f8 fde0 	bl	80002bc <__adddf3>
 80076fc:	4632      	mov	r2, r6
 80076fe:	463b      	mov	r3, r7
 8007700:	f7f8 ff92 	bl	8000628 <__aeabi_dmul>
 8007704:	a332      	add	r3, pc, #200	; (adr r3, 80077d0 <__ieee754_asin+0x310>)
 8007706:	e9d3 2300 	ldrd	r2, r3, [r3]
 800770a:	f7f8 fdd5 	bl	80002b8 <__aeabi_dsub>
 800770e:	4632      	mov	r2, r6
 8007710:	463b      	mov	r3, r7
 8007712:	f7f8 ff89 	bl	8000628 <__aeabi_dmul>
 8007716:	a330      	add	r3, pc, #192	; (adr r3, 80077d8 <__ieee754_asin+0x318>)
 8007718:	e9d3 2300 	ldrd	r2, r3, [r3]
 800771c:	f7f8 fdce 	bl	80002bc <__adddf3>
 8007720:	4632      	mov	r2, r6
 8007722:	463b      	mov	r3, r7
 8007724:	f7f8 ff80 	bl	8000628 <__aeabi_dmul>
 8007728:	a32d      	add	r3, pc, #180	; (adr r3, 80077e0 <__ieee754_asin+0x320>)
 800772a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800772e:	4680      	mov	r8, r0
 8007730:	4689      	mov	r9, r1
 8007732:	4630      	mov	r0, r6
 8007734:	4639      	mov	r1, r7
 8007736:	f7f8 ff77 	bl	8000628 <__aeabi_dmul>
 800773a:	a32b      	add	r3, pc, #172	; (adr r3, 80077e8 <__ieee754_asin+0x328>)
 800773c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007740:	f7f8 fdba 	bl	80002b8 <__aeabi_dsub>
 8007744:	4632      	mov	r2, r6
 8007746:	463b      	mov	r3, r7
 8007748:	f7f8 ff6e 	bl	8000628 <__aeabi_dmul>
 800774c:	a328      	add	r3, pc, #160	; (adr r3, 80077f0 <__ieee754_asin+0x330>)
 800774e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007752:	f7f8 fdb3 	bl	80002bc <__adddf3>
 8007756:	4632      	mov	r2, r6
 8007758:	463b      	mov	r3, r7
 800775a:	f7f8 ff65 	bl	8000628 <__aeabi_dmul>
 800775e:	a326      	add	r3, pc, #152	; (adr r3, 80077f8 <__ieee754_asin+0x338>)
 8007760:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007764:	f7f8 fda8 	bl	80002b8 <__aeabi_dsub>
 8007768:	4632      	mov	r2, r6
 800776a:	463b      	mov	r3, r7
 800776c:	f7f8 ff5c 	bl	8000628 <__aeabi_dmul>
 8007770:	4b25      	ldr	r3, [pc, #148]	; (8007808 <__ieee754_asin+0x348>)
 8007772:	2200      	movs	r2, #0
 8007774:	f7f8 fda2 	bl	80002bc <__adddf3>
 8007778:	4602      	mov	r2, r0
 800777a:	460b      	mov	r3, r1
 800777c:	4640      	mov	r0, r8
 800777e:	4649      	mov	r1, r9
 8007780:	f7f9 f87c 	bl	800087c <__aeabi_ddiv>
 8007784:	4622      	mov	r2, r4
 8007786:	462b      	mov	r3, r5
 8007788:	f7f8 ff4e 	bl	8000628 <__aeabi_dmul>
 800778c:	4602      	mov	r2, r0
 800778e:	460b      	mov	r3, r1
 8007790:	4620      	mov	r0, r4
 8007792:	4629      	mov	r1, r5
 8007794:	e6bf      	b.n	8007516 <__ieee754_asin+0x56>
 8007796:	bf00      	nop
 8007798:	54442d18 	.word	0x54442d18
 800779c:	3ff921fb 	.word	0x3ff921fb
 80077a0:	33145c07 	.word	0x33145c07
 80077a4:	3c91a626 	.word	0x3c91a626
 80077a8:	8800759c 	.word	0x8800759c
 80077ac:	7e37e43c 	.word	0x7e37e43c
 80077b0:	0dfdf709 	.word	0x0dfdf709
 80077b4:	3f023de1 	.word	0x3f023de1
 80077b8:	7501b288 	.word	0x7501b288
 80077bc:	3f49efe0 	.word	0x3f49efe0
 80077c0:	b5688f3b 	.word	0xb5688f3b
 80077c4:	3fa48228 	.word	0x3fa48228
 80077c8:	0e884455 	.word	0x0e884455
 80077cc:	3fc9c155 	.word	0x3fc9c155
 80077d0:	03eb6f7d 	.word	0x03eb6f7d
 80077d4:	3fd4d612 	.word	0x3fd4d612
 80077d8:	55555555 	.word	0x55555555
 80077dc:	3fc55555 	.word	0x3fc55555
 80077e0:	b12e9282 	.word	0xb12e9282
 80077e4:	3fb3b8c5 	.word	0x3fb3b8c5
 80077e8:	1b8d0159 	.word	0x1b8d0159
 80077ec:	3fe6066c 	.word	0x3fe6066c
 80077f0:	9c598ac8 	.word	0x9c598ac8
 80077f4:	40002ae5 	.word	0x40002ae5
 80077f8:	1c8a2d4b 	.word	0x1c8a2d4b
 80077fc:	40033a27 	.word	0x40033a27
 8007800:	3fefffff 	.word	0x3fefffff
 8007804:	3fdfffff 	.word	0x3fdfffff
 8007808:	3ff00000 	.word	0x3ff00000
 800780c:	3fe00000 	.word	0x3fe00000
 8007810:	3fef3332 	.word	0x3fef3332
 8007814:	ee10 2a10 	vmov	r2, s0
 8007818:	ee10 0a10 	vmov	r0, s0
 800781c:	465b      	mov	r3, fp
 800781e:	4659      	mov	r1, fp
 8007820:	f7f8 fd4c 	bl	80002bc <__adddf3>
 8007824:	4632      	mov	r2, r6
 8007826:	463b      	mov	r3, r7
 8007828:	ec41 0b19 	vmov	d9, r0, r1
 800782c:	ec51 0b18 	vmov	r0, r1, d8
 8007830:	f7f9 f824 	bl	800087c <__aeabi_ddiv>
 8007834:	4602      	mov	r2, r0
 8007836:	460b      	mov	r3, r1
 8007838:	ec51 0b19 	vmov	r0, r1, d9
 800783c:	f7f8 fef4 	bl	8000628 <__aeabi_dmul>
 8007840:	f04f 0800 	mov.w	r8, #0
 8007844:	4606      	mov	r6, r0
 8007846:	460f      	mov	r7, r1
 8007848:	4642      	mov	r2, r8
 800784a:	465b      	mov	r3, fp
 800784c:	4640      	mov	r0, r8
 800784e:	4659      	mov	r1, fp
 8007850:	f7f8 feea 	bl	8000628 <__aeabi_dmul>
 8007854:	4602      	mov	r2, r0
 8007856:	460b      	mov	r3, r1
 8007858:	4620      	mov	r0, r4
 800785a:	4629      	mov	r1, r5
 800785c:	f7f8 fd2c 	bl	80002b8 <__aeabi_dsub>
 8007860:	4642      	mov	r2, r8
 8007862:	4604      	mov	r4, r0
 8007864:	460d      	mov	r5, r1
 8007866:	465b      	mov	r3, fp
 8007868:	4650      	mov	r0, sl
 800786a:	4659      	mov	r1, fp
 800786c:	f7f8 fd26 	bl	80002bc <__adddf3>
 8007870:	4602      	mov	r2, r0
 8007872:	460b      	mov	r3, r1
 8007874:	4620      	mov	r0, r4
 8007876:	4629      	mov	r1, r5
 8007878:	f7f9 f800 	bl	800087c <__aeabi_ddiv>
 800787c:	4602      	mov	r2, r0
 800787e:	460b      	mov	r3, r1
 8007880:	f7f8 fd1c 	bl	80002bc <__adddf3>
 8007884:	4602      	mov	r2, r0
 8007886:	460b      	mov	r3, r1
 8007888:	a113      	add	r1, pc, #76	; (adr r1, 80078d8 <__ieee754_asin+0x418>)
 800788a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800788e:	f7f8 fd13 	bl	80002b8 <__aeabi_dsub>
 8007892:	4602      	mov	r2, r0
 8007894:	460b      	mov	r3, r1
 8007896:	4630      	mov	r0, r6
 8007898:	4639      	mov	r1, r7
 800789a:	f7f8 fd0d 	bl	80002b8 <__aeabi_dsub>
 800789e:	4642      	mov	r2, r8
 80078a0:	4604      	mov	r4, r0
 80078a2:	460d      	mov	r5, r1
 80078a4:	465b      	mov	r3, fp
 80078a6:	4640      	mov	r0, r8
 80078a8:	4659      	mov	r1, fp
 80078aa:	f7f8 fd07 	bl	80002bc <__adddf3>
 80078ae:	4602      	mov	r2, r0
 80078b0:	460b      	mov	r3, r1
 80078b2:	a10b      	add	r1, pc, #44	; (adr r1, 80078e0 <__ieee754_asin+0x420>)
 80078b4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80078b8:	f7f8 fcfe 	bl	80002b8 <__aeabi_dsub>
 80078bc:	4602      	mov	r2, r0
 80078be:	460b      	mov	r3, r1
 80078c0:	4620      	mov	r0, r4
 80078c2:	4629      	mov	r1, r5
 80078c4:	f7f8 fcf8 	bl	80002b8 <__aeabi_dsub>
 80078c8:	4602      	mov	r2, r0
 80078ca:	460b      	mov	r3, r1
 80078cc:	a104      	add	r1, pc, #16	; (adr r1, 80078e0 <__ieee754_asin+0x420>)
 80078ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 80078d2:	e6df      	b.n	8007694 <__ieee754_asin+0x1d4>
 80078d4:	f3af 8000 	nop.w
 80078d8:	33145c07 	.word	0x33145c07
 80078dc:	3c91a626 	.word	0x3c91a626
 80078e0:	54442d18 	.word	0x54442d18
 80078e4:	3fe921fb 	.word	0x3fe921fb

080078e8 <__ieee754_rem_pio2>:
 80078e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078ec:	ed2d 8b02 	vpush	{d8}
 80078f0:	ec55 4b10 	vmov	r4, r5, d0
 80078f4:	4bca      	ldr	r3, [pc, #808]	; (8007c20 <__ieee754_rem_pio2+0x338>)
 80078f6:	b08b      	sub	sp, #44	; 0x2c
 80078f8:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 80078fc:	4598      	cmp	r8, r3
 80078fe:	4682      	mov	sl, r0
 8007900:	9502      	str	r5, [sp, #8]
 8007902:	dc08      	bgt.n	8007916 <__ieee754_rem_pio2+0x2e>
 8007904:	2200      	movs	r2, #0
 8007906:	2300      	movs	r3, #0
 8007908:	ed80 0b00 	vstr	d0, [r0]
 800790c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8007910:	f04f 0b00 	mov.w	fp, #0
 8007914:	e028      	b.n	8007968 <__ieee754_rem_pio2+0x80>
 8007916:	4bc3      	ldr	r3, [pc, #780]	; (8007c24 <__ieee754_rem_pio2+0x33c>)
 8007918:	4598      	cmp	r8, r3
 800791a:	dc78      	bgt.n	8007a0e <__ieee754_rem_pio2+0x126>
 800791c:	9b02      	ldr	r3, [sp, #8]
 800791e:	4ec2      	ldr	r6, [pc, #776]	; (8007c28 <__ieee754_rem_pio2+0x340>)
 8007920:	2b00      	cmp	r3, #0
 8007922:	ee10 0a10 	vmov	r0, s0
 8007926:	a3b0      	add	r3, pc, #704	; (adr r3, 8007be8 <__ieee754_rem_pio2+0x300>)
 8007928:	e9d3 2300 	ldrd	r2, r3, [r3]
 800792c:	4629      	mov	r1, r5
 800792e:	dd39      	ble.n	80079a4 <__ieee754_rem_pio2+0xbc>
 8007930:	f7f8 fcc2 	bl	80002b8 <__aeabi_dsub>
 8007934:	45b0      	cmp	r8, r6
 8007936:	4604      	mov	r4, r0
 8007938:	460d      	mov	r5, r1
 800793a:	d01b      	beq.n	8007974 <__ieee754_rem_pio2+0x8c>
 800793c:	a3ac      	add	r3, pc, #688	; (adr r3, 8007bf0 <__ieee754_rem_pio2+0x308>)
 800793e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007942:	f7f8 fcb9 	bl	80002b8 <__aeabi_dsub>
 8007946:	4602      	mov	r2, r0
 8007948:	460b      	mov	r3, r1
 800794a:	e9ca 2300 	strd	r2, r3, [sl]
 800794e:	4620      	mov	r0, r4
 8007950:	4629      	mov	r1, r5
 8007952:	f7f8 fcb1 	bl	80002b8 <__aeabi_dsub>
 8007956:	a3a6      	add	r3, pc, #664	; (adr r3, 8007bf0 <__ieee754_rem_pio2+0x308>)
 8007958:	e9d3 2300 	ldrd	r2, r3, [r3]
 800795c:	f7f8 fcac 	bl	80002b8 <__aeabi_dsub>
 8007960:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007964:	f04f 0b01 	mov.w	fp, #1
 8007968:	4658      	mov	r0, fp
 800796a:	b00b      	add	sp, #44	; 0x2c
 800796c:	ecbd 8b02 	vpop	{d8}
 8007970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007974:	a3a0      	add	r3, pc, #640	; (adr r3, 8007bf8 <__ieee754_rem_pio2+0x310>)
 8007976:	e9d3 2300 	ldrd	r2, r3, [r3]
 800797a:	f7f8 fc9d 	bl	80002b8 <__aeabi_dsub>
 800797e:	a3a0      	add	r3, pc, #640	; (adr r3, 8007c00 <__ieee754_rem_pio2+0x318>)
 8007980:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007984:	4604      	mov	r4, r0
 8007986:	460d      	mov	r5, r1
 8007988:	f7f8 fc96 	bl	80002b8 <__aeabi_dsub>
 800798c:	4602      	mov	r2, r0
 800798e:	460b      	mov	r3, r1
 8007990:	e9ca 2300 	strd	r2, r3, [sl]
 8007994:	4620      	mov	r0, r4
 8007996:	4629      	mov	r1, r5
 8007998:	f7f8 fc8e 	bl	80002b8 <__aeabi_dsub>
 800799c:	a398      	add	r3, pc, #608	; (adr r3, 8007c00 <__ieee754_rem_pio2+0x318>)
 800799e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079a2:	e7db      	b.n	800795c <__ieee754_rem_pio2+0x74>
 80079a4:	f7f8 fc8a 	bl	80002bc <__adddf3>
 80079a8:	45b0      	cmp	r8, r6
 80079aa:	4604      	mov	r4, r0
 80079ac:	460d      	mov	r5, r1
 80079ae:	d016      	beq.n	80079de <__ieee754_rem_pio2+0xf6>
 80079b0:	a38f      	add	r3, pc, #572	; (adr r3, 8007bf0 <__ieee754_rem_pio2+0x308>)
 80079b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079b6:	f7f8 fc81 	bl	80002bc <__adddf3>
 80079ba:	4602      	mov	r2, r0
 80079bc:	460b      	mov	r3, r1
 80079be:	e9ca 2300 	strd	r2, r3, [sl]
 80079c2:	4620      	mov	r0, r4
 80079c4:	4629      	mov	r1, r5
 80079c6:	f7f8 fc77 	bl	80002b8 <__aeabi_dsub>
 80079ca:	a389      	add	r3, pc, #548	; (adr r3, 8007bf0 <__ieee754_rem_pio2+0x308>)
 80079cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079d0:	f7f8 fc74 	bl	80002bc <__adddf3>
 80079d4:	f04f 3bff 	mov.w	fp, #4294967295
 80079d8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80079dc:	e7c4      	b.n	8007968 <__ieee754_rem_pio2+0x80>
 80079de:	a386      	add	r3, pc, #536	; (adr r3, 8007bf8 <__ieee754_rem_pio2+0x310>)
 80079e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079e4:	f7f8 fc6a 	bl	80002bc <__adddf3>
 80079e8:	a385      	add	r3, pc, #532	; (adr r3, 8007c00 <__ieee754_rem_pio2+0x318>)
 80079ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079ee:	4604      	mov	r4, r0
 80079f0:	460d      	mov	r5, r1
 80079f2:	f7f8 fc63 	bl	80002bc <__adddf3>
 80079f6:	4602      	mov	r2, r0
 80079f8:	460b      	mov	r3, r1
 80079fa:	e9ca 2300 	strd	r2, r3, [sl]
 80079fe:	4620      	mov	r0, r4
 8007a00:	4629      	mov	r1, r5
 8007a02:	f7f8 fc59 	bl	80002b8 <__aeabi_dsub>
 8007a06:	a37e      	add	r3, pc, #504	; (adr r3, 8007c00 <__ieee754_rem_pio2+0x318>)
 8007a08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a0c:	e7e0      	b.n	80079d0 <__ieee754_rem_pio2+0xe8>
 8007a0e:	4b87      	ldr	r3, [pc, #540]	; (8007c2c <__ieee754_rem_pio2+0x344>)
 8007a10:	4598      	cmp	r8, r3
 8007a12:	f300 80d9 	bgt.w	8007bc8 <__ieee754_rem_pio2+0x2e0>
 8007a16:	f000 fefd 	bl	8008814 <fabs>
 8007a1a:	ec55 4b10 	vmov	r4, r5, d0
 8007a1e:	ee10 0a10 	vmov	r0, s0
 8007a22:	a379      	add	r3, pc, #484	; (adr r3, 8007c08 <__ieee754_rem_pio2+0x320>)
 8007a24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a28:	4629      	mov	r1, r5
 8007a2a:	f7f8 fdfd 	bl	8000628 <__aeabi_dmul>
 8007a2e:	4b80      	ldr	r3, [pc, #512]	; (8007c30 <__ieee754_rem_pio2+0x348>)
 8007a30:	2200      	movs	r2, #0
 8007a32:	f7f8 fc43 	bl	80002bc <__adddf3>
 8007a36:	f7f9 f8a7 	bl	8000b88 <__aeabi_d2iz>
 8007a3a:	4683      	mov	fp, r0
 8007a3c:	f7f8 fd8a 	bl	8000554 <__aeabi_i2d>
 8007a40:	4602      	mov	r2, r0
 8007a42:	460b      	mov	r3, r1
 8007a44:	ec43 2b18 	vmov	d8, r2, r3
 8007a48:	a367      	add	r3, pc, #412	; (adr r3, 8007be8 <__ieee754_rem_pio2+0x300>)
 8007a4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a4e:	f7f8 fdeb 	bl	8000628 <__aeabi_dmul>
 8007a52:	4602      	mov	r2, r0
 8007a54:	460b      	mov	r3, r1
 8007a56:	4620      	mov	r0, r4
 8007a58:	4629      	mov	r1, r5
 8007a5a:	f7f8 fc2d 	bl	80002b8 <__aeabi_dsub>
 8007a5e:	a364      	add	r3, pc, #400	; (adr r3, 8007bf0 <__ieee754_rem_pio2+0x308>)
 8007a60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a64:	4606      	mov	r6, r0
 8007a66:	460f      	mov	r7, r1
 8007a68:	ec51 0b18 	vmov	r0, r1, d8
 8007a6c:	f7f8 fddc 	bl	8000628 <__aeabi_dmul>
 8007a70:	f1bb 0f1f 	cmp.w	fp, #31
 8007a74:	4604      	mov	r4, r0
 8007a76:	460d      	mov	r5, r1
 8007a78:	dc0d      	bgt.n	8007a96 <__ieee754_rem_pio2+0x1ae>
 8007a7a:	4b6e      	ldr	r3, [pc, #440]	; (8007c34 <__ieee754_rem_pio2+0x34c>)
 8007a7c:	f10b 32ff 	add.w	r2, fp, #4294967295
 8007a80:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007a84:	4543      	cmp	r3, r8
 8007a86:	d006      	beq.n	8007a96 <__ieee754_rem_pio2+0x1ae>
 8007a88:	4622      	mov	r2, r4
 8007a8a:	462b      	mov	r3, r5
 8007a8c:	4630      	mov	r0, r6
 8007a8e:	4639      	mov	r1, r7
 8007a90:	f7f8 fc12 	bl	80002b8 <__aeabi_dsub>
 8007a94:	e00f      	b.n	8007ab6 <__ieee754_rem_pio2+0x1ce>
 8007a96:	462b      	mov	r3, r5
 8007a98:	4622      	mov	r2, r4
 8007a9a:	4630      	mov	r0, r6
 8007a9c:	4639      	mov	r1, r7
 8007a9e:	f7f8 fc0b 	bl	80002b8 <__aeabi_dsub>
 8007aa2:	ea4f 5328 	mov.w	r3, r8, asr #20
 8007aa6:	9303      	str	r3, [sp, #12]
 8007aa8:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8007aac:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8007ab0:	f1b8 0f10 	cmp.w	r8, #16
 8007ab4:	dc02      	bgt.n	8007abc <__ieee754_rem_pio2+0x1d4>
 8007ab6:	e9ca 0100 	strd	r0, r1, [sl]
 8007aba:	e039      	b.n	8007b30 <__ieee754_rem_pio2+0x248>
 8007abc:	a34e      	add	r3, pc, #312	; (adr r3, 8007bf8 <__ieee754_rem_pio2+0x310>)
 8007abe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ac2:	ec51 0b18 	vmov	r0, r1, d8
 8007ac6:	f7f8 fdaf 	bl	8000628 <__aeabi_dmul>
 8007aca:	4604      	mov	r4, r0
 8007acc:	460d      	mov	r5, r1
 8007ace:	4602      	mov	r2, r0
 8007ad0:	460b      	mov	r3, r1
 8007ad2:	4630      	mov	r0, r6
 8007ad4:	4639      	mov	r1, r7
 8007ad6:	f7f8 fbef 	bl	80002b8 <__aeabi_dsub>
 8007ada:	4602      	mov	r2, r0
 8007adc:	460b      	mov	r3, r1
 8007ade:	4680      	mov	r8, r0
 8007ae0:	4689      	mov	r9, r1
 8007ae2:	4630      	mov	r0, r6
 8007ae4:	4639      	mov	r1, r7
 8007ae6:	f7f8 fbe7 	bl	80002b8 <__aeabi_dsub>
 8007aea:	4622      	mov	r2, r4
 8007aec:	462b      	mov	r3, r5
 8007aee:	f7f8 fbe3 	bl	80002b8 <__aeabi_dsub>
 8007af2:	a343      	add	r3, pc, #268	; (adr r3, 8007c00 <__ieee754_rem_pio2+0x318>)
 8007af4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007af8:	4604      	mov	r4, r0
 8007afa:	460d      	mov	r5, r1
 8007afc:	ec51 0b18 	vmov	r0, r1, d8
 8007b00:	f7f8 fd92 	bl	8000628 <__aeabi_dmul>
 8007b04:	4622      	mov	r2, r4
 8007b06:	462b      	mov	r3, r5
 8007b08:	f7f8 fbd6 	bl	80002b8 <__aeabi_dsub>
 8007b0c:	4602      	mov	r2, r0
 8007b0e:	460b      	mov	r3, r1
 8007b10:	4604      	mov	r4, r0
 8007b12:	460d      	mov	r5, r1
 8007b14:	4640      	mov	r0, r8
 8007b16:	4649      	mov	r1, r9
 8007b18:	f7f8 fbce 	bl	80002b8 <__aeabi_dsub>
 8007b1c:	9a03      	ldr	r2, [sp, #12]
 8007b1e:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8007b22:	1ad3      	subs	r3, r2, r3
 8007b24:	2b31      	cmp	r3, #49	; 0x31
 8007b26:	dc24      	bgt.n	8007b72 <__ieee754_rem_pio2+0x28a>
 8007b28:	e9ca 0100 	strd	r0, r1, [sl]
 8007b2c:	4646      	mov	r6, r8
 8007b2e:	464f      	mov	r7, r9
 8007b30:	e9da 8900 	ldrd	r8, r9, [sl]
 8007b34:	4630      	mov	r0, r6
 8007b36:	4642      	mov	r2, r8
 8007b38:	464b      	mov	r3, r9
 8007b3a:	4639      	mov	r1, r7
 8007b3c:	f7f8 fbbc 	bl	80002b8 <__aeabi_dsub>
 8007b40:	462b      	mov	r3, r5
 8007b42:	4622      	mov	r2, r4
 8007b44:	f7f8 fbb8 	bl	80002b8 <__aeabi_dsub>
 8007b48:	9b02      	ldr	r3, [sp, #8]
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007b50:	f6bf af0a 	bge.w	8007968 <__ieee754_rem_pio2+0x80>
 8007b54:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8007b58:	f8ca 3004 	str.w	r3, [sl, #4]
 8007b5c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007b60:	f8ca 8000 	str.w	r8, [sl]
 8007b64:	f8ca 0008 	str.w	r0, [sl, #8]
 8007b68:	f8ca 300c 	str.w	r3, [sl, #12]
 8007b6c:	f1cb 0b00 	rsb	fp, fp, #0
 8007b70:	e6fa      	b.n	8007968 <__ieee754_rem_pio2+0x80>
 8007b72:	a327      	add	r3, pc, #156	; (adr r3, 8007c10 <__ieee754_rem_pio2+0x328>)
 8007b74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b78:	ec51 0b18 	vmov	r0, r1, d8
 8007b7c:	f7f8 fd54 	bl	8000628 <__aeabi_dmul>
 8007b80:	4604      	mov	r4, r0
 8007b82:	460d      	mov	r5, r1
 8007b84:	4602      	mov	r2, r0
 8007b86:	460b      	mov	r3, r1
 8007b88:	4640      	mov	r0, r8
 8007b8a:	4649      	mov	r1, r9
 8007b8c:	f7f8 fb94 	bl	80002b8 <__aeabi_dsub>
 8007b90:	4602      	mov	r2, r0
 8007b92:	460b      	mov	r3, r1
 8007b94:	4606      	mov	r6, r0
 8007b96:	460f      	mov	r7, r1
 8007b98:	4640      	mov	r0, r8
 8007b9a:	4649      	mov	r1, r9
 8007b9c:	f7f8 fb8c 	bl	80002b8 <__aeabi_dsub>
 8007ba0:	4622      	mov	r2, r4
 8007ba2:	462b      	mov	r3, r5
 8007ba4:	f7f8 fb88 	bl	80002b8 <__aeabi_dsub>
 8007ba8:	a31b      	add	r3, pc, #108	; (adr r3, 8007c18 <__ieee754_rem_pio2+0x330>)
 8007baa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bae:	4604      	mov	r4, r0
 8007bb0:	460d      	mov	r5, r1
 8007bb2:	ec51 0b18 	vmov	r0, r1, d8
 8007bb6:	f7f8 fd37 	bl	8000628 <__aeabi_dmul>
 8007bba:	4622      	mov	r2, r4
 8007bbc:	462b      	mov	r3, r5
 8007bbe:	f7f8 fb7b 	bl	80002b8 <__aeabi_dsub>
 8007bc2:	4604      	mov	r4, r0
 8007bc4:	460d      	mov	r5, r1
 8007bc6:	e75f      	b.n	8007a88 <__ieee754_rem_pio2+0x1a0>
 8007bc8:	4b1b      	ldr	r3, [pc, #108]	; (8007c38 <__ieee754_rem_pio2+0x350>)
 8007bca:	4598      	cmp	r8, r3
 8007bcc:	dd36      	ble.n	8007c3c <__ieee754_rem_pio2+0x354>
 8007bce:	ee10 2a10 	vmov	r2, s0
 8007bd2:	462b      	mov	r3, r5
 8007bd4:	4620      	mov	r0, r4
 8007bd6:	4629      	mov	r1, r5
 8007bd8:	f7f8 fb6e 	bl	80002b8 <__aeabi_dsub>
 8007bdc:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007be0:	e9ca 0100 	strd	r0, r1, [sl]
 8007be4:	e694      	b.n	8007910 <__ieee754_rem_pio2+0x28>
 8007be6:	bf00      	nop
 8007be8:	54400000 	.word	0x54400000
 8007bec:	3ff921fb 	.word	0x3ff921fb
 8007bf0:	1a626331 	.word	0x1a626331
 8007bf4:	3dd0b461 	.word	0x3dd0b461
 8007bf8:	1a600000 	.word	0x1a600000
 8007bfc:	3dd0b461 	.word	0x3dd0b461
 8007c00:	2e037073 	.word	0x2e037073
 8007c04:	3ba3198a 	.word	0x3ba3198a
 8007c08:	6dc9c883 	.word	0x6dc9c883
 8007c0c:	3fe45f30 	.word	0x3fe45f30
 8007c10:	2e000000 	.word	0x2e000000
 8007c14:	3ba3198a 	.word	0x3ba3198a
 8007c18:	252049c1 	.word	0x252049c1
 8007c1c:	397b839a 	.word	0x397b839a
 8007c20:	3fe921fb 	.word	0x3fe921fb
 8007c24:	4002d97b 	.word	0x4002d97b
 8007c28:	3ff921fb 	.word	0x3ff921fb
 8007c2c:	413921fb 	.word	0x413921fb
 8007c30:	3fe00000 	.word	0x3fe00000
 8007c34:	0800fac4 	.word	0x0800fac4
 8007c38:	7fefffff 	.word	0x7fefffff
 8007c3c:	ea4f 5428 	mov.w	r4, r8, asr #20
 8007c40:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8007c44:	ee10 0a10 	vmov	r0, s0
 8007c48:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 8007c4c:	ee10 6a10 	vmov	r6, s0
 8007c50:	460f      	mov	r7, r1
 8007c52:	f7f8 ff99 	bl	8000b88 <__aeabi_d2iz>
 8007c56:	f7f8 fc7d 	bl	8000554 <__aeabi_i2d>
 8007c5a:	4602      	mov	r2, r0
 8007c5c:	460b      	mov	r3, r1
 8007c5e:	4630      	mov	r0, r6
 8007c60:	4639      	mov	r1, r7
 8007c62:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8007c66:	f7f8 fb27 	bl	80002b8 <__aeabi_dsub>
 8007c6a:	4b23      	ldr	r3, [pc, #140]	; (8007cf8 <__ieee754_rem_pio2+0x410>)
 8007c6c:	2200      	movs	r2, #0
 8007c6e:	f7f8 fcdb 	bl	8000628 <__aeabi_dmul>
 8007c72:	460f      	mov	r7, r1
 8007c74:	4606      	mov	r6, r0
 8007c76:	f7f8 ff87 	bl	8000b88 <__aeabi_d2iz>
 8007c7a:	f7f8 fc6b 	bl	8000554 <__aeabi_i2d>
 8007c7e:	4602      	mov	r2, r0
 8007c80:	460b      	mov	r3, r1
 8007c82:	4630      	mov	r0, r6
 8007c84:	4639      	mov	r1, r7
 8007c86:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8007c8a:	f7f8 fb15 	bl	80002b8 <__aeabi_dsub>
 8007c8e:	4b1a      	ldr	r3, [pc, #104]	; (8007cf8 <__ieee754_rem_pio2+0x410>)
 8007c90:	2200      	movs	r2, #0
 8007c92:	f7f8 fcc9 	bl	8000628 <__aeabi_dmul>
 8007c96:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8007c9a:	ad04      	add	r5, sp, #16
 8007c9c:	f04f 0803 	mov.w	r8, #3
 8007ca0:	46a9      	mov	r9, r5
 8007ca2:	2600      	movs	r6, #0
 8007ca4:	2700      	movs	r7, #0
 8007ca6:	4632      	mov	r2, r6
 8007ca8:	463b      	mov	r3, r7
 8007caa:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 8007cae:	46c3      	mov	fp, r8
 8007cb0:	3d08      	subs	r5, #8
 8007cb2:	f108 38ff 	add.w	r8, r8, #4294967295
 8007cb6:	f7f8 ff1f 	bl	8000af8 <__aeabi_dcmpeq>
 8007cba:	2800      	cmp	r0, #0
 8007cbc:	d1f3      	bne.n	8007ca6 <__ieee754_rem_pio2+0x3be>
 8007cbe:	4b0f      	ldr	r3, [pc, #60]	; (8007cfc <__ieee754_rem_pio2+0x414>)
 8007cc0:	9301      	str	r3, [sp, #4]
 8007cc2:	2302      	movs	r3, #2
 8007cc4:	9300      	str	r3, [sp, #0]
 8007cc6:	4622      	mov	r2, r4
 8007cc8:	465b      	mov	r3, fp
 8007cca:	4651      	mov	r1, sl
 8007ccc:	4648      	mov	r0, r9
 8007cce:	f000 f993 	bl	8007ff8 <__kernel_rem_pio2>
 8007cd2:	9b02      	ldr	r3, [sp, #8]
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	4683      	mov	fp, r0
 8007cd8:	f6bf ae46 	bge.w	8007968 <__ieee754_rem_pio2+0x80>
 8007cdc:	e9da 2100 	ldrd	r2, r1, [sl]
 8007ce0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007ce4:	e9ca 2300 	strd	r2, r3, [sl]
 8007ce8:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8007cec:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007cf0:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8007cf4:	e73a      	b.n	8007b6c <__ieee754_rem_pio2+0x284>
 8007cf6:	bf00      	nop
 8007cf8:	41700000 	.word	0x41700000
 8007cfc:	0800fb44 	.word	0x0800fb44

08007d00 <__ieee754_sqrt>:
 8007d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d04:	ec55 4b10 	vmov	r4, r5, d0
 8007d08:	4e55      	ldr	r6, [pc, #340]	; (8007e60 <__ieee754_sqrt+0x160>)
 8007d0a:	43ae      	bics	r6, r5
 8007d0c:	ee10 0a10 	vmov	r0, s0
 8007d10:	ee10 3a10 	vmov	r3, s0
 8007d14:	462a      	mov	r2, r5
 8007d16:	4629      	mov	r1, r5
 8007d18:	d110      	bne.n	8007d3c <__ieee754_sqrt+0x3c>
 8007d1a:	ee10 2a10 	vmov	r2, s0
 8007d1e:	462b      	mov	r3, r5
 8007d20:	f7f8 fc82 	bl	8000628 <__aeabi_dmul>
 8007d24:	4602      	mov	r2, r0
 8007d26:	460b      	mov	r3, r1
 8007d28:	4620      	mov	r0, r4
 8007d2a:	4629      	mov	r1, r5
 8007d2c:	f7f8 fac6 	bl	80002bc <__adddf3>
 8007d30:	4604      	mov	r4, r0
 8007d32:	460d      	mov	r5, r1
 8007d34:	ec45 4b10 	vmov	d0, r4, r5
 8007d38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007d3c:	2d00      	cmp	r5, #0
 8007d3e:	dc10      	bgt.n	8007d62 <__ieee754_sqrt+0x62>
 8007d40:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8007d44:	4330      	orrs	r0, r6
 8007d46:	d0f5      	beq.n	8007d34 <__ieee754_sqrt+0x34>
 8007d48:	b15d      	cbz	r5, 8007d62 <__ieee754_sqrt+0x62>
 8007d4a:	ee10 2a10 	vmov	r2, s0
 8007d4e:	462b      	mov	r3, r5
 8007d50:	ee10 0a10 	vmov	r0, s0
 8007d54:	f7f8 fab0 	bl	80002b8 <__aeabi_dsub>
 8007d58:	4602      	mov	r2, r0
 8007d5a:	460b      	mov	r3, r1
 8007d5c:	f7f8 fd8e 	bl	800087c <__aeabi_ddiv>
 8007d60:	e7e6      	b.n	8007d30 <__ieee754_sqrt+0x30>
 8007d62:	1512      	asrs	r2, r2, #20
 8007d64:	d074      	beq.n	8007e50 <__ieee754_sqrt+0x150>
 8007d66:	07d4      	lsls	r4, r2, #31
 8007d68:	f3c1 0113 	ubfx	r1, r1, #0, #20
 8007d6c:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 8007d70:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007d74:	bf5e      	ittt	pl
 8007d76:	0fda      	lsrpl	r2, r3, #31
 8007d78:	005b      	lslpl	r3, r3, #1
 8007d7a:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 8007d7e:	2400      	movs	r4, #0
 8007d80:	0fda      	lsrs	r2, r3, #31
 8007d82:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8007d86:	107f      	asrs	r7, r7, #1
 8007d88:	005b      	lsls	r3, r3, #1
 8007d8a:	2516      	movs	r5, #22
 8007d8c:	4620      	mov	r0, r4
 8007d8e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8007d92:	1886      	adds	r6, r0, r2
 8007d94:	428e      	cmp	r6, r1
 8007d96:	bfde      	ittt	le
 8007d98:	1b89      	suble	r1, r1, r6
 8007d9a:	18b0      	addle	r0, r6, r2
 8007d9c:	18a4      	addle	r4, r4, r2
 8007d9e:	0049      	lsls	r1, r1, #1
 8007da0:	3d01      	subs	r5, #1
 8007da2:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 8007da6:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8007daa:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007dae:	d1f0      	bne.n	8007d92 <__ieee754_sqrt+0x92>
 8007db0:	462a      	mov	r2, r5
 8007db2:	f04f 0e20 	mov.w	lr, #32
 8007db6:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8007dba:	4281      	cmp	r1, r0
 8007dbc:	eb06 0c05 	add.w	ip, r6, r5
 8007dc0:	dc02      	bgt.n	8007dc8 <__ieee754_sqrt+0xc8>
 8007dc2:	d113      	bne.n	8007dec <__ieee754_sqrt+0xec>
 8007dc4:	459c      	cmp	ip, r3
 8007dc6:	d811      	bhi.n	8007dec <__ieee754_sqrt+0xec>
 8007dc8:	f1bc 0f00 	cmp.w	ip, #0
 8007dcc:	eb0c 0506 	add.w	r5, ip, r6
 8007dd0:	da43      	bge.n	8007e5a <__ieee754_sqrt+0x15a>
 8007dd2:	2d00      	cmp	r5, #0
 8007dd4:	db41      	blt.n	8007e5a <__ieee754_sqrt+0x15a>
 8007dd6:	f100 0801 	add.w	r8, r0, #1
 8007dda:	1a09      	subs	r1, r1, r0
 8007ddc:	459c      	cmp	ip, r3
 8007dde:	bf88      	it	hi
 8007de0:	f101 31ff 	addhi.w	r1, r1, #4294967295
 8007de4:	eba3 030c 	sub.w	r3, r3, ip
 8007de8:	4432      	add	r2, r6
 8007dea:	4640      	mov	r0, r8
 8007dec:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 8007df0:	f1be 0e01 	subs.w	lr, lr, #1
 8007df4:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 8007df8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007dfc:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8007e00:	d1db      	bne.n	8007dba <__ieee754_sqrt+0xba>
 8007e02:	430b      	orrs	r3, r1
 8007e04:	d006      	beq.n	8007e14 <__ieee754_sqrt+0x114>
 8007e06:	1c50      	adds	r0, r2, #1
 8007e08:	bf13      	iteet	ne
 8007e0a:	3201      	addne	r2, #1
 8007e0c:	3401      	addeq	r4, #1
 8007e0e:	4672      	moveq	r2, lr
 8007e10:	f022 0201 	bicne.w	r2, r2, #1
 8007e14:	1063      	asrs	r3, r4, #1
 8007e16:	0852      	lsrs	r2, r2, #1
 8007e18:	07e1      	lsls	r1, r4, #31
 8007e1a:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8007e1e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8007e22:	bf48      	it	mi
 8007e24:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 8007e28:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 8007e2c:	4614      	mov	r4, r2
 8007e2e:	e781      	b.n	8007d34 <__ieee754_sqrt+0x34>
 8007e30:	0ad9      	lsrs	r1, r3, #11
 8007e32:	3815      	subs	r0, #21
 8007e34:	055b      	lsls	r3, r3, #21
 8007e36:	2900      	cmp	r1, #0
 8007e38:	d0fa      	beq.n	8007e30 <__ieee754_sqrt+0x130>
 8007e3a:	02cd      	lsls	r5, r1, #11
 8007e3c:	d50a      	bpl.n	8007e54 <__ieee754_sqrt+0x154>
 8007e3e:	f1c2 0420 	rsb	r4, r2, #32
 8007e42:	fa23 f404 	lsr.w	r4, r3, r4
 8007e46:	1e55      	subs	r5, r2, #1
 8007e48:	4093      	lsls	r3, r2
 8007e4a:	4321      	orrs	r1, r4
 8007e4c:	1b42      	subs	r2, r0, r5
 8007e4e:	e78a      	b.n	8007d66 <__ieee754_sqrt+0x66>
 8007e50:	4610      	mov	r0, r2
 8007e52:	e7f0      	b.n	8007e36 <__ieee754_sqrt+0x136>
 8007e54:	0049      	lsls	r1, r1, #1
 8007e56:	3201      	adds	r2, #1
 8007e58:	e7ef      	b.n	8007e3a <__ieee754_sqrt+0x13a>
 8007e5a:	4680      	mov	r8, r0
 8007e5c:	e7bd      	b.n	8007dda <__ieee754_sqrt+0xda>
 8007e5e:	bf00      	nop
 8007e60:	7ff00000 	.word	0x7ff00000
 8007e64:	00000000 	.word	0x00000000

08007e68 <__kernel_cos>:
 8007e68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e6c:	ec57 6b10 	vmov	r6, r7, d0
 8007e70:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8007e74:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8007e78:	ed8d 1b00 	vstr	d1, [sp]
 8007e7c:	da07      	bge.n	8007e8e <__kernel_cos+0x26>
 8007e7e:	ee10 0a10 	vmov	r0, s0
 8007e82:	4639      	mov	r1, r7
 8007e84:	f7f8 fe80 	bl	8000b88 <__aeabi_d2iz>
 8007e88:	2800      	cmp	r0, #0
 8007e8a:	f000 8088 	beq.w	8007f9e <__kernel_cos+0x136>
 8007e8e:	4632      	mov	r2, r6
 8007e90:	463b      	mov	r3, r7
 8007e92:	4630      	mov	r0, r6
 8007e94:	4639      	mov	r1, r7
 8007e96:	f7f8 fbc7 	bl	8000628 <__aeabi_dmul>
 8007e9a:	4b51      	ldr	r3, [pc, #324]	; (8007fe0 <__kernel_cos+0x178>)
 8007e9c:	2200      	movs	r2, #0
 8007e9e:	4604      	mov	r4, r0
 8007ea0:	460d      	mov	r5, r1
 8007ea2:	f7f8 fbc1 	bl	8000628 <__aeabi_dmul>
 8007ea6:	a340      	add	r3, pc, #256	; (adr r3, 8007fa8 <__kernel_cos+0x140>)
 8007ea8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007eac:	4682      	mov	sl, r0
 8007eae:	468b      	mov	fp, r1
 8007eb0:	4620      	mov	r0, r4
 8007eb2:	4629      	mov	r1, r5
 8007eb4:	f7f8 fbb8 	bl	8000628 <__aeabi_dmul>
 8007eb8:	a33d      	add	r3, pc, #244	; (adr r3, 8007fb0 <__kernel_cos+0x148>)
 8007eba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ebe:	f7f8 f9fd 	bl	80002bc <__adddf3>
 8007ec2:	4622      	mov	r2, r4
 8007ec4:	462b      	mov	r3, r5
 8007ec6:	f7f8 fbaf 	bl	8000628 <__aeabi_dmul>
 8007eca:	a33b      	add	r3, pc, #236	; (adr r3, 8007fb8 <__kernel_cos+0x150>)
 8007ecc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ed0:	f7f8 f9f2 	bl	80002b8 <__aeabi_dsub>
 8007ed4:	4622      	mov	r2, r4
 8007ed6:	462b      	mov	r3, r5
 8007ed8:	f7f8 fba6 	bl	8000628 <__aeabi_dmul>
 8007edc:	a338      	add	r3, pc, #224	; (adr r3, 8007fc0 <__kernel_cos+0x158>)
 8007ede:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ee2:	f7f8 f9eb 	bl	80002bc <__adddf3>
 8007ee6:	4622      	mov	r2, r4
 8007ee8:	462b      	mov	r3, r5
 8007eea:	f7f8 fb9d 	bl	8000628 <__aeabi_dmul>
 8007eee:	a336      	add	r3, pc, #216	; (adr r3, 8007fc8 <__kernel_cos+0x160>)
 8007ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ef4:	f7f8 f9e0 	bl	80002b8 <__aeabi_dsub>
 8007ef8:	4622      	mov	r2, r4
 8007efa:	462b      	mov	r3, r5
 8007efc:	f7f8 fb94 	bl	8000628 <__aeabi_dmul>
 8007f00:	a333      	add	r3, pc, #204	; (adr r3, 8007fd0 <__kernel_cos+0x168>)
 8007f02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f06:	f7f8 f9d9 	bl	80002bc <__adddf3>
 8007f0a:	4622      	mov	r2, r4
 8007f0c:	462b      	mov	r3, r5
 8007f0e:	f7f8 fb8b 	bl	8000628 <__aeabi_dmul>
 8007f12:	4622      	mov	r2, r4
 8007f14:	462b      	mov	r3, r5
 8007f16:	f7f8 fb87 	bl	8000628 <__aeabi_dmul>
 8007f1a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007f1e:	4604      	mov	r4, r0
 8007f20:	460d      	mov	r5, r1
 8007f22:	4630      	mov	r0, r6
 8007f24:	4639      	mov	r1, r7
 8007f26:	f7f8 fb7f 	bl	8000628 <__aeabi_dmul>
 8007f2a:	460b      	mov	r3, r1
 8007f2c:	4602      	mov	r2, r0
 8007f2e:	4629      	mov	r1, r5
 8007f30:	4620      	mov	r0, r4
 8007f32:	f7f8 f9c1 	bl	80002b8 <__aeabi_dsub>
 8007f36:	4b2b      	ldr	r3, [pc, #172]	; (8007fe4 <__kernel_cos+0x17c>)
 8007f38:	4598      	cmp	r8, r3
 8007f3a:	4606      	mov	r6, r0
 8007f3c:	460f      	mov	r7, r1
 8007f3e:	dc10      	bgt.n	8007f62 <__kernel_cos+0xfa>
 8007f40:	4602      	mov	r2, r0
 8007f42:	460b      	mov	r3, r1
 8007f44:	4650      	mov	r0, sl
 8007f46:	4659      	mov	r1, fp
 8007f48:	f7f8 f9b6 	bl	80002b8 <__aeabi_dsub>
 8007f4c:	460b      	mov	r3, r1
 8007f4e:	4926      	ldr	r1, [pc, #152]	; (8007fe8 <__kernel_cos+0x180>)
 8007f50:	4602      	mov	r2, r0
 8007f52:	2000      	movs	r0, #0
 8007f54:	f7f8 f9b0 	bl	80002b8 <__aeabi_dsub>
 8007f58:	ec41 0b10 	vmov	d0, r0, r1
 8007f5c:	b003      	add	sp, #12
 8007f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f62:	4b22      	ldr	r3, [pc, #136]	; (8007fec <__kernel_cos+0x184>)
 8007f64:	4920      	ldr	r1, [pc, #128]	; (8007fe8 <__kernel_cos+0x180>)
 8007f66:	4598      	cmp	r8, r3
 8007f68:	bfcc      	ite	gt
 8007f6a:	4d21      	ldrgt	r5, [pc, #132]	; (8007ff0 <__kernel_cos+0x188>)
 8007f6c:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8007f70:	2400      	movs	r4, #0
 8007f72:	4622      	mov	r2, r4
 8007f74:	462b      	mov	r3, r5
 8007f76:	2000      	movs	r0, #0
 8007f78:	f7f8 f99e 	bl	80002b8 <__aeabi_dsub>
 8007f7c:	4622      	mov	r2, r4
 8007f7e:	4680      	mov	r8, r0
 8007f80:	4689      	mov	r9, r1
 8007f82:	462b      	mov	r3, r5
 8007f84:	4650      	mov	r0, sl
 8007f86:	4659      	mov	r1, fp
 8007f88:	f7f8 f996 	bl	80002b8 <__aeabi_dsub>
 8007f8c:	4632      	mov	r2, r6
 8007f8e:	463b      	mov	r3, r7
 8007f90:	f7f8 f992 	bl	80002b8 <__aeabi_dsub>
 8007f94:	4602      	mov	r2, r0
 8007f96:	460b      	mov	r3, r1
 8007f98:	4640      	mov	r0, r8
 8007f9a:	4649      	mov	r1, r9
 8007f9c:	e7da      	b.n	8007f54 <__kernel_cos+0xec>
 8007f9e:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8007fd8 <__kernel_cos+0x170>
 8007fa2:	e7db      	b.n	8007f5c <__kernel_cos+0xf4>
 8007fa4:	f3af 8000 	nop.w
 8007fa8:	be8838d4 	.word	0xbe8838d4
 8007fac:	bda8fae9 	.word	0xbda8fae9
 8007fb0:	bdb4b1c4 	.word	0xbdb4b1c4
 8007fb4:	3e21ee9e 	.word	0x3e21ee9e
 8007fb8:	809c52ad 	.word	0x809c52ad
 8007fbc:	3e927e4f 	.word	0x3e927e4f
 8007fc0:	19cb1590 	.word	0x19cb1590
 8007fc4:	3efa01a0 	.word	0x3efa01a0
 8007fc8:	16c15177 	.word	0x16c15177
 8007fcc:	3f56c16c 	.word	0x3f56c16c
 8007fd0:	5555554c 	.word	0x5555554c
 8007fd4:	3fa55555 	.word	0x3fa55555
 8007fd8:	00000000 	.word	0x00000000
 8007fdc:	3ff00000 	.word	0x3ff00000
 8007fe0:	3fe00000 	.word	0x3fe00000
 8007fe4:	3fd33332 	.word	0x3fd33332
 8007fe8:	3ff00000 	.word	0x3ff00000
 8007fec:	3fe90000 	.word	0x3fe90000
 8007ff0:	3fd20000 	.word	0x3fd20000
 8007ff4:	00000000 	.word	0x00000000

08007ff8 <__kernel_rem_pio2>:
 8007ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ffc:	ed2d 8b02 	vpush	{d8}
 8008000:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 8008004:	f112 0f14 	cmn.w	r2, #20
 8008008:	9308      	str	r3, [sp, #32]
 800800a:	9101      	str	r1, [sp, #4]
 800800c:	4bc4      	ldr	r3, [pc, #784]	; (8008320 <__kernel_rem_pio2+0x328>)
 800800e:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8008010:	900b      	str	r0, [sp, #44]	; 0x2c
 8008012:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8008016:	9302      	str	r3, [sp, #8]
 8008018:	9b08      	ldr	r3, [sp, #32]
 800801a:	f103 33ff 	add.w	r3, r3, #4294967295
 800801e:	bfa8      	it	ge
 8008020:	1ed4      	subge	r4, r2, #3
 8008022:	9306      	str	r3, [sp, #24]
 8008024:	bfb2      	itee	lt
 8008026:	2400      	movlt	r4, #0
 8008028:	2318      	movge	r3, #24
 800802a:	fb94 f4f3 	sdivge	r4, r4, r3
 800802e:	f06f 0317 	mvn.w	r3, #23
 8008032:	fb04 3303 	mla	r3, r4, r3, r3
 8008036:	eb03 0a02 	add.w	sl, r3, r2
 800803a:	9b02      	ldr	r3, [sp, #8]
 800803c:	9a06      	ldr	r2, [sp, #24]
 800803e:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8008310 <__kernel_rem_pio2+0x318>
 8008042:	eb03 0802 	add.w	r8, r3, r2
 8008046:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8008048:	1aa7      	subs	r7, r4, r2
 800804a:	ae22      	add	r6, sp, #136	; 0x88
 800804c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8008050:	2500      	movs	r5, #0
 8008052:	4545      	cmp	r5, r8
 8008054:	dd13      	ble.n	800807e <__kernel_rem_pio2+0x86>
 8008056:	9b08      	ldr	r3, [sp, #32]
 8008058:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8008310 <__kernel_rem_pio2+0x318>
 800805c:	aa22      	add	r2, sp, #136	; 0x88
 800805e:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8008062:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 8008066:	f04f 0800 	mov.w	r8, #0
 800806a:	9b02      	ldr	r3, [sp, #8]
 800806c:	4598      	cmp	r8, r3
 800806e:	dc2f      	bgt.n	80080d0 <__kernel_rem_pio2+0xd8>
 8008070:	ed8d 8b04 	vstr	d8, [sp, #16]
 8008074:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8008078:	462f      	mov	r7, r5
 800807a:	2600      	movs	r6, #0
 800807c:	e01b      	b.n	80080b6 <__kernel_rem_pio2+0xbe>
 800807e:	42ef      	cmn	r7, r5
 8008080:	d407      	bmi.n	8008092 <__kernel_rem_pio2+0x9a>
 8008082:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8008086:	f7f8 fa65 	bl	8000554 <__aeabi_i2d>
 800808a:	e8e6 0102 	strd	r0, r1, [r6], #8
 800808e:	3501      	adds	r5, #1
 8008090:	e7df      	b.n	8008052 <__kernel_rem_pio2+0x5a>
 8008092:	ec51 0b18 	vmov	r0, r1, d8
 8008096:	e7f8      	b.n	800808a <__kernel_rem_pio2+0x92>
 8008098:	e9d7 2300 	ldrd	r2, r3, [r7]
 800809c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 80080a0:	f7f8 fac2 	bl	8000628 <__aeabi_dmul>
 80080a4:	4602      	mov	r2, r0
 80080a6:	460b      	mov	r3, r1
 80080a8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80080ac:	f7f8 f906 	bl	80002bc <__adddf3>
 80080b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80080b4:	3601      	adds	r6, #1
 80080b6:	9b06      	ldr	r3, [sp, #24]
 80080b8:	429e      	cmp	r6, r3
 80080ba:	f1a7 0708 	sub.w	r7, r7, #8
 80080be:	ddeb      	ble.n	8008098 <__kernel_rem_pio2+0xa0>
 80080c0:	ed9d 7b04 	vldr	d7, [sp, #16]
 80080c4:	f108 0801 	add.w	r8, r8, #1
 80080c8:	ecab 7b02 	vstmia	fp!, {d7}
 80080cc:	3508      	adds	r5, #8
 80080ce:	e7cc      	b.n	800806a <__kernel_rem_pio2+0x72>
 80080d0:	9b02      	ldr	r3, [sp, #8]
 80080d2:	aa0e      	add	r2, sp, #56	; 0x38
 80080d4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80080d8:	930d      	str	r3, [sp, #52]	; 0x34
 80080da:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 80080dc:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80080e0:	9c02      	ldr	r4, [sp, #8]
 80080e2:	930c      	str	r3, [sp, #48]	; 0x30
 80080e4:	00e3      	lsls	r3, r4, #3
 80080e6:	930a      	str	r3, [sp, #40]	; 0x28
 80080e8:	ab9a      	add	r3, sp, #616	; 0x268
 80080ea:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80080ee:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 80080f2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80080f6:	ab72      	add	r3, sp, #456	; 0x1c8
 80080f8:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 80080fc:	46c3      	mov	fp, r8
 80080fe:	46a1      	mov	r9, r4
 8008100:	f1b9 0f00 	cmp.w	r9, #0
 8008104:	f1a5 0508 	sub.w	r5, r5, #8
 8008108:	dc77      	bgt.n	80081fa <__kernel_rem_pio2+0x202>
 800810a:	ec47 6b10 	vmov	d0, r6, r7
 800810e:	4650      	mov	r0, sl
 8008110:	f000 fc12 	bl	8008938 <scalbn>
 8008114:	ec57 6b10 	vmov	r6, r7, d0
 8008118:	2200      	movs	r2, #0
 800811a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800811e:	ee10 0a10 	vmov	r0, s0
 8008122:	4639      	mov	r1, r7
 8008124:	f7f8 fa80 	bl	8000628 <__aeabi_dmul>
 8008128:	ec41 0b10 	vmov	d0, r0, r1
 800812c:	f000 fb7c 	bl	8008828 <floor>
 8008130:	4b7c      	ldr	r3, [pc, #496]	; (8008324 <__kernel_rem_pio2+0x32c>)
 8008132:	ec51 0b10 	vmov	r0, r1, d0
 8008136:	2200      	movs	r2, #0
 8008138:	f7f8 fa76 	bl	8000628 <__aeabi_dmul>
 800813c:	4602      	mov	r2, r0
 800813e:	460b      	mov	r3, r1
 8008140:	4630      	mov	r0, r6
 8008142:	4639      	mov	r1, r7
 8008144:	f7f8 f8b8 	bl	80002b8 <__aeabi_dsub>
 8008148:	460f      	mov	r7, r1
 800814a:	4606      	mov	r6, r0
 800814c:	f7f8 fd1c 	bl	8000b88 <__aeabi_d2iz>
 8008150:	9004      	str	r0, [sp, #16]
 8008152:	f7f8 f9ff 	bl	8000554 <__aeabi_i2d>
 8008156:	4602      	mov	r2, r0
 8008158:	460b      	mov	r3, r1
 800815a:	4630      	mov	r0, r6
 800815c:	4639      	mov	r1, r7
 800815e:	f7f8 f8ab 	bl	80002b8 <__aeabi_dsub>
 8008162:	f1ba 0f00 	cmp.w	sl, #0
 8008166:	4606      	mov	r6, r0
 8008168:	460f      	mov	r7, r1
 800816a:	dd6d      	ble.n	8008248 <__kernel_rem_pio2+0x250>
 800816c:	1e62      	subs	r2, r4, #1
 800816e:	ab0e      	add	r3, sp, #56	; 0x38
 8008170:	9d04      	ldr	r5, [sp, #16]
 8008172:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008176:	f1ca 0118 	rsb	r1, sl, #24
 800817a:	fa40 f301 	asr.w	r3, r0, r1
 800817e:	441d      	add	r5, r3
 8008180:	408b      	lsls	r3, r1
 8008182:	1ac0      	subs	r0, r0, r3
 8008184:	ab0e      	add	r3, sp, #56	; 0x38
 8008186:	9504      	str	r5, [sp, #16]
 8008188:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800818c:	f1ca 0317 	rsb	r3, sl, #23
 8008190:	fa40 fb03 	asr.w	fp, r0, r3
 8008194:	f1bb 0f00 	cmp.w	fp, #0
 8008198:	dd65      	ble.n	8008266 <__kernel_rem_pio2+0x26e>
 800819a:	9b04      	ldr	r3, [sp, #16]
 800819c:	2200      	movs	r2, #0
 800819e:	3301      	adds	r3, #1
 80081a0:	9304      	str	r3, [sp, #16]
 80081a2:	4615      	mov	r5, r2
 80081a4:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 80081a8:	4294      	cmp	r4, r2
 80081aa:	f300 809c 	bgt.w	80082e6 <__kernel_rem_pio2+0x2ee>
 80081ae:	f1ba 0f00 	cmp.w	sl, #0
 80081b2:	dd07      	ble.n	80081c4 <__kernel_rem_pio2+0x1cc>
 80081b4:	f1ba 0f01 	cmp.w	sl, #1
 80081b8:	f000 80c0 	beq.w	800833c <__kernel_rem_pio2+0x344>
 80081bc:	f1ba 0f02 	cmp.w	sl, #2
 80081c0:	f000 80c6 	beq.w	8008350 <__kernel_rem_pio2+0x358>
 80081c4:	f1bb 0f02 	cmp.w	fp, #2
 80081c8:	d14d      	bne.n	8008266 <__kernel_rem_pio2+0x26e>
 80081ca:	4632      	mov	r2, r6
 80081cc:	463b      	mov	r3, r7
 80081ce:	4956      	ldr	r1, [pc, #344]	; (8008328 <__kernel_rem_pio2+0x330>)
 80081d0:	2000      	movs	r0, #0
 80081d2:	f7f8 f871 	bl	80002b8 <__aeabi_dsub>
 80081d6:	4606      	mov	r6, r0
 80081d8:	460f      	mov	r7, r1
 80081da:	2d00      	cmp	r5, #0
 80081dc:	d043      	beq.n	8008266 <__kernel_rem_pio2+0x26e>
 80081de:	4650      	mov	r0, sl
 80081e0:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8008318 <__kernel_rem_pio2+0x320>
 80081e4:	f000 fba8 	bl	8008938 <scalbn>
 80081e8:	4630      	mov	r0, r6
 80081ea:	4639      	mov	r1, r7
 80081ec:	ec53 2b10 	vmov	r2, r3, d0
 80081f0:	f7f8 f862 	bl	80002b8 <__aeabi_dsub>
 80081f4:	4606      	mov	r6, r0
 80081f6:	460f      	mov	r7, r1
 80081f8:	e035      	b.n	8008266 <__kernel_rem_pio2+0x26e>
 80081fa:	4b4c      	ldr	r3, [pc, #304]	; (800832c <__kernel_rem_pio2+0x334>)
 80081fc:	2200      	movs	r2, #0
 80081fe:	4630      	mov	r0, r6
 8008200:	4639      	mov	r1, r7
 8008202:	f7f8 fa11 	bl	8000628 <__aeabi_dmul>
 8008206:	f7f8 fcbf 	bl	8000b88 <__aeabi_d2iz>
 800820a:	f7f8 f9a3 	bl	8000554 <__aeabi_i2d>
 800820e:	4602      	mov	r2, r0
 8008210:	460b      	mov	r3, r1
 8008212:	ec43 2b18 	vmov	d8, r2, r3
 8008216:	4b46      	ldr	r3, [pc, #280]	; (8008330 <__kernel_rem_pio2+0x338>)
 8008218:	2200      	movs	r2, #0
 800821a:	f7f8 fa05 	bl	8000628 <__aeabi_dmul>
 800821e:	4602      	mov	r2, r0
 8008220:	460b      	mov	r3, r1
 8008222:	4630      	mov	r0, r6
 8008224:	4639      	mov	r1, r7
 8008226:	f7f8 f847 	bl	80002b8 <__aeabi_dsub>
 800822a:	f7f8 fcad 	bl	8000b88 <__aeabi_d2iz>
 800822e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008232:	f84b 0b04 	str.w	r0, [fp], #4
 8008236:	ec51 0b18 	vmov	r0, r1, d8
 800823a:	f7f8 f83f 	bl	80002bc <__adddf3>
 800823e:	f109 39ff 	add.w	r9, r9, #4294967295
 8008242:	4606      	mov	r6, r0
 8008244:	460f      	mov	r7, r1
 8008246:	e75b      	b.n	8008100 <__kernel_rem_pio2+0x108>
 8008248:	d106      	bne.n	8008258 <__kernel_rem_pio2+0x260>
 800824a:	1e63      	subs	r3, r4, #1
 800824c:	aa0e      	add	r2, sp, #56	; 0x38
 800824e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008252:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8008256:	e79d      	b.n	8008194 <__kernel_rem_pio2+0x19c>
 8008258:	4b36      	ldr	r3, [pc, #216]	; (8008334 <__kernel_rem_pio2+0x33c>)
 800825a:	2200      	movs	r2, #0
 800825c:	f7f8 fc6a 	bl	8000b34 <__aeabi_dcmpge>
 8008260:	2800      	cmp	r0, #0
 8008262:	d13d      	bne.n	80082e0 <__kernel_rem_pio2+0x2e8>
 8008264:	4683      	mov	fp, r0
 8008266:	2200      	movs	r2, #0
 8008268:	2300      	movs	r3, #0
 800826a:	4630      	mov	r0, r6
 800826c:	4639      	mov	r1, r7
 800826e:	f7f8 fc43 	bl	8000af8 <__aeabi_dcmpeq>
 8008272:	2800      	cmp	r0, #0
 8008274:	f000 80c0 	beq.w	80083f8 <__kernel_rem_pio2+0x400>
 8008278:	1e65      	subs	r5, r4, #1
 800827a:	462b      	mov	r3, r5
 800827c:	2200      	movs	r2, #0
 800827e:	9902      	ldr	r1, [sp, #8]
 8008280:	428b      	cmp	r3, r1
 8008282:	da6c      	bge.n	800835e <__kernel_rem_pio2+0x366>
 8008284:	2a00      	cmp	r2, #0
 8008286:	f000 8089 	beq.w	800839c <__kernel_rem_pio2+0x3a4>
 800828a:	ab0e      	add	r3, sp, #56	; 0x38
 800828c:	f1aa 0a18 	sub.w	sl, sl, #24
 8008290:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8008294:	2b00      	cmp	r3, #0
 8008296:	f000 80ad 	beq.w	80083f4 <__kernel_rem_pio2+0x3fc>
 800829a:	4650      	mov	r0, sl
 800829c:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8008318 <__kernel_rem_pio2+0x320>
 80082a0:	f000 fb4a 	bl	8008938 <scalbn>
 80082a4:	ab9a      	add	r3, sp, #616	; 0x268
 80082a6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80082aa:	ec57 6b10 	vmov	r6, r7, d0
 80082ae:	00ec      	lsls	r4, r5, #3
 80082b0:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 80082b4:	46aa      	mov	sl, r5
 80082b6:	f1ba 0f00 	cmp.w	sl, #0
 80082ba:	f280 80d6 	bge.w	800846a <__kernel_rem_pio2+0x472>
 80082be:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8008310 <__kernel_rem_pio2+0x318>
 80082c2:	462e      	mov	r6, r5
 80082c4:	2e00      	cmp	r6, #0
 80082c6:	f2c0 8104 	blt.w	80084d2 <__kernel_rem_pio2+0x4da>
 80082ca:	ab72      	add	r3, sp, #456	; 0x1c8
 80082cc:	ed8d 8b06 	vstr	d8, [sp, #24]
 80082d0:	f8df a064 	ldr.w	sl, [pc, #100]	; 8008338 <__kernel_rem_pio2+0x340>
 80082d4:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 80082d8:	f04f 0800 	mov.w	r8, #0
 80082dc:	1baf      	subs	r7, r5, r6
 80082de:	e0ea      	b.n	80084b6 <__kernel_rem_pio2+0x4be>
 80082e0:	f04f 0b02 	mov.w	fp, #2
 80082e4:	e759      	b.n	800819a <__kernel_rem_pio2+0x1a2>
 80082e6:	f8d8 3000 	ldr.w	r3, [r8]
 80082ea:	b955      	cbnz	r5, 8008302 <__kernel_rem_pio2+0x30a>
 80082ec:	b123      	cbz	r3, 80082f8 <__kernel_rem_pio2+0x300>
 80082ee:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80082f2:	f8c8 3000 	str.w	r3, [r8]
 80082f6:	2301      	movs	r3, #1
 80082f8:	3201      	adds	r2, #1
 80082fa:	f108 0804 	add.w	r8, r8, #4
 80082fe:	461d      	mov	r5, r3
 8008300:	e752      	b.n	80081a8 <__kernel_rem_pio2+0x1b0>
 8008302:	1acb      	subs	r3, r1, r3
 8008304:	f8c8 3000 	str.w	r3, [r8]
 8008308:	462b      	mov	r3, r5
 800830a:	e7f5      	b.n	80082f8 <__kernel_rem_pio2+0x300>
 800830c:	f3af 8000 	nop.w
	...
 800831c:	3ff00000 	.word	0x3ff00000
 8008320:	0800fc90 	.word	0x0800fc90
 8008324:	40200000 	.word	0x40200000
 8008328:	3ff00000 	.word	0x3ff00000
 800832c:	3e700000 	.word	0x3e700000
 8008330:	41700000 	.word	0x41700000
 8008334:	3fe00000 	.word	0x3fe00000
 8008338:	0800fc50 	.word	0x0800fc50
 800833c:	1e62      	subs	r2, r4, #1
 800833e:	ab0e      	add	r3, sp, #56	; 0x38
 8008340:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008344:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8008348:	a90e      	add	r1, sp, #56	; 0x38
 800834a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800834e:	e739      	b.n	80081c4 <__kernel_rem_pio2+0x1cc>
 8008350:	1e62      	subs	r2, r4, #1
 8008352:	ab0e      	add	r3, sp, #56	; 0x38
 8008354:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008358:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800835c:	e7f4      	b.n	8008348 <__kernel_rem_pio2+0x350>
 800835e:	a90e      	add	r1, sp, #56	; 0x38
 8008360:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8008364:	3b01      	subs	r3, #1
 8008366:	430a      	orrs	r2, r1
 8008368:	e789      	b.n	800827e <__kernel_rem_pio2+0x286>
 800836a:	3301      	adds	r3, #1
 800836c:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8008370:	2900      	cmp	r1, #0
 8008372:	d0fa      	beq.n	800836a <__kernel_rem_pio2+0x372>
 8008374:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008376:	f502 721a 	add.w	r2, r2, #616	; 0x268
 800837a:	446a      	add	r2, sp
 800837c:	3a98      	subs	r2, #152	; 0x98
 800837e:	920a      	str	r2, [sp, #40]	; 0x28
 8008380:	9a08      	ldr	r2, [sp, #32]
 8008382:	18e3      	adds	r3, r4, r3
 8008384:	18a5      	adds	r5, r4, r2
 8008386:	aa22      	add	r2, sp, #136	; 0x88
 8008388:	f104 0801 	add.w	r8, r4, #1
 800838c:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8008390:	9304      	str	r3, [sp, #16]
 8008392:	9b04      	ldr	r3, [sp, #16]
 8008394:	4543      	cmp	r3, r8
 8008396:	da04      	bge.n	80083a2 <__kernel_rem_pio2+0x3aa>
 8008398:	461c      	mov	r4, r3
 800839a:	e6a3      	b.n	80080e4 <__kernel_rem_pio2+0xec>
 800839c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800839e:	2301      	movs	r3, #1
 80083a0:	e7e4      	b.n	800836c <__kernel_rem_pio2+0x374>
 80083a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80083a4:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 80083a8:	f7f8 f8d4 	bl	8000554 <__aeabi_i2d>
 80083ac:	e8e5 0102 	strd	r0, r1, [r5], #8
 80083b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80083b2:	46ab      	mov	fp, r5
 80083b4:	461c      	mov	r4, r3
 80083b6:	f04f 0900 	mov.w	r9, #0
 80083ba:	2600      	movs	r6, #0
 80083bc:	2700      	movs	r7, #0
 80083be:	9b06      	ldr	r3, [sp, #24]
 80083c0:	4599      	cmp	r9, r3
 80083c2:	dd06      	ble.n	80083d2 <__kernel_rem_pio2+0x3da>
 80083c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80083c6:	e8e3 6702 	strd	r6, r7, [r3], #8
 80083ca:	f108 0801 	add.w	r8, r8, #1
 80083ce:	930a      	str	r3, [sp, #40]	; 0x28
 80083d0:	e7df      	b.n	8008392 <__kernel_rem_pio2+0x39a>
 80083d2:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 80083d6:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80083da:	f7f8 f925 	bl	8000628 <__aeabi_dmul>
 80083de:	4602      	mov	r2, r0
 80083e0:	460b      	mov	r3, r1
 80083e2:	4630      	mov	r0, r6
 80083e4:	4639      	mov	r1, r7
 80083e6:	f7f7 ff69 	bl	80002bc <__adddf3>
 80083ea:	f109 0901 	add.w	r9, r9, #1
 80083ee:	4606      	mov	r6, r0
 80083f0:	460f      	mov	r7, r1
 80083f2:	e7e4      	b.n	80083be <__kernel_rem_pio2+0x3c6>
 80083f4:	3d01      	subs	r5, #1
 80083f6:	e748      	b.n	800828a <__kernel_rem_pio2+0x292>
 80083f8:	ec47 6b10 	vmov	d0, r6, r7
 80083fc:	f1ca 0000 	rsb	r0, sl, #0
 8008400:	f000 fa9a 	bl	8008938 <scalbn>
 8008404:	ec57 6b10 	vmov	r6, r7, d0
 8008408:	4ba0      	ldr	r3, [pc, #640]	; (800868c <__kernel_rem_pio2+0x694>)
 800840a:	ee10 0a10 	vmov	r0, s0
 800840e:	2200      	movs	r2, #0
 8008410:	4639      	mov	r1, r7
 8008412:	f7f8 fb8f 	bl	8000b34 <__aeabi_dcmpge>
 8008416:	b1f8      	cbz	r0, 8008458 <__kernel_rem_pio2+0x460>
 8008418:	4b9d      	ldr	r3, [pc, #628]	; (8008690 <__kernel_rem_pio2+0x698>)
 800841a:	2200      	movs	r2, #0
 800841c:	4630      	mov	r0, r6
 800841e:	4639      	mov	r1, r7
 8008420:	f7f8 f902 	bl	8000628 <__aeabi_dmul>
 8008424:	f7f8 fbb0 	bl	8000b88 <__aeabi_d2iz>
 8008428:	4680      	mov	r8, r0
 800842a:	f7f8 f893 	bl	8000554 <__aeabi_i2d>
 800842e:	4b97      	ldr	r3, [pc, #604]	; (800868c <__kernel_rem_pio2+0x694>)
 8008430:	2200      	movs	r2, #0
 8008432:	f7f8 f8f9 	bl	8000628 <__aeabi_dmul>
 8008436:	460b      	mov	r3, r1
 8008438:	4602      	mov	r2, r0
 800843a:	4639      	mov	r1, r7
 800843c:	4630      	mov	r0, r6
 800843e:	f7f7 ff3b 	bl	80002b8 <__aeabi_dsub>
 8008442:	f7f8 fba1 	bl	8000b88 <__aeabi_d2iz>
 8008446:	1c65      	adds	r5, r4, #1
 8008448:	ab0e      	add	r3, sp, #56	; 0x38
 800844a:	f10a 0a18 	add.w	sl, sl, #24
 800844e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8008452:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8008456:	e720      	b.n	800829a <__kernel_rem_pio2+0x2a2>
 8008458:	4630      	mov	r0, r6
 800845a:	4639      	mov	r1, r7
 800845c:	f7f8 fb94 	bl	8000b88 <__aeabi_d2iz>
 8008460:	ab0e      	add	r3, sp, #56	; 0x38
 8008462:	4625      	mov	r5, r4
 8008464:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8008468:	e717      	b.n	800829a <__kernel_rem_pio2+0x2a2>
 800846a:	ab0e      	add	r3, sp, #56	; 0x38
 800846c:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8008470:	f7f8 f870 	bl	8000554 <__aeabi_i2d>
 8008474:	4632      	mov	r2, r6
 8008476:	463b      	mov	r3, r7
 8008478:	f7f8 f8d6 	bl	8000628 <__aeabi_dmul>
 800847c:	4b84      	ldr	r3, [pc, #528]	; (8008690 <__kernel_rem_pio2+0x698>)
 800847e:	e968 0102 	strd	r0, r1, [r8, #-8]!
 8008482:	2200      	movs	r2, #0
 8008484:	4630      	mov	r0, r6
 8008486:	4639      	mov	r1, r7
 8008488:	f7f8 f8ce 	bl	8000628 <__aeabi_dmul>
 800848c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8008490:	4606      	mov	r6, r0
 8008492:	460f      	mov	r7, r1
 8008494:	e70f      	b.n	80082b6 <__kernel_rem_pio2+0x2be>
 8008496:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 800849a:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 800849e:	f7f8 f8c3 	bl	8000628 <__aeabi_dmul>
 80084a2:	4602      	mov	r2, r0
 80084a4:	460b      	mov	r3, r1
 80084a6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80084aa:	f7f7 ff07 	bl	80002bc <__adddf3>
 80084ae:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80084b2:	f108 0801 	add.w	r8, r8, #1
 80084b6:	9b02      	ldr	r3, [sp, #8]
 80084b8:	4598      	cmp	r8, r3
 80084ba:	dc01      	bgt.n	80084c0 <__kernel_rem_pio2+0x4c8>
 80084bc:	45b8      	cmp	r8, r7
 80084be:	ddea      	ble.n	8008496 <__kernel_rem_pio2+0x49e>
 80084c0:	ed9d 7b06 	vldr	d7, [sp, #24]
 80084c4:	ab4a      	add	r3, sp, #296	; 0x128
 80084c6:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80084ca:	ed87 7b00 	vstr	d7, [r7]
 80084ce:	3e01      	subs	r6, #1
 80084d0:	e6f8      	b.n	80082c4 <__kernel_rem_pio2+0x2cc>
 80084d2:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 80084d4:	2b02      	cmp	r3, #2
 80084d6:	dc0b      	bgt.n	80084f0 <__kernel_rem_pio2+0x4f8>
 80084d8:	2b00      	cmp	r3, #0
 80084da:	dc35      	bgt.n	8008548 <__kernel_rem_pio2+0x550>
 80084dc:	d059      	beq.n	8008592 <__kernel_rem_pio2+0x59a>
 80084de:	9b04      	ldr	r3, [sp, #16]
 80084e0:	f003 0007 	and.w	r0, r3, #7
 80084e4:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 80084e8:	ecbd 8b02 	vpop	{d8}
 80084ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084f0:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 80084f2:	2b03      	cmp	r3, #3
 80084f4:	d1f3      	bne.n	80084de <__kernel_rem_pio2+0x4e6>
 80084f6:	ab4a      	add	r3, sp, #296	; 0x128
 80084f8:	4423      	add	r3, r4
 80084fa:	9306      	str	r3, [sp, #24]
 80084fc:	461c      	mov	r4, r3
 80084fe:	469a      	mov	sl, r3
 8008500:	9502      	str	r5, [sp, #8]
 8008502:	9b02      	ldr	r3, [sp, #8]
 8008504:	2b00      	cmp	r3, #0
 8008506:	f1aa 0a08 	sub.w	sl, sl, #8
 800850a:	dc6b      	bgt.n	80085e4 <__kernel_rem_pio2+0x5ec>
 800850c:	46aa      	mov	sl, r5
 800850e:	f1ba 0f01 	cmp.w	sl, #1
 8008512:	f1a4 0408 	sub.w	r4, r4, #8
 8008516:	f300 8085 	bgt.w	8008624 <__kernel_rem_pio2+0x62c>
 800851a:	9c06      	ldr	r4, [sp, #24]
 800851c:	2000      	movs	r0, #0
 800851e:	3408      	adds	r4, #8
 8008520:	2100      	movs	r1, #0
 8008522:	2d01      	cmp	r5, #1
 8008524:	f300 809d 	bgt.w	8008662 <__kernel_rem_pio2+0x66a>
 8008528:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 800852c:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8008530:	f1bb 0f00 	cmp.w	fp, #0
 8008534:	f040 809b 	bne.w	800866e <__kernel_rem_pio2+0x676>
 8008538:	9b01      	ldr	r3, [sp, #4]
 800853a:	e9c3 5600 	strd	r5, r6, [r3]
 800853e:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8008542:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8008546:	e7ca      	b.n	80084de <__kernel_rem_pio2+0x4e6>
 8008548:	3408      	adds	r4, #8
 800854a:	ab4a      	add	r3, sp, #296	; 0x128
 800854c:	441c      	add	r4, r3
 800854e:	462e      	mov	r6, r5
 8008550:	2000      	movs	r0, #0
 8008552:	2100      	movs	r1, #0
 8008554:	2e00      	cmp	r6, #0
 8008556:	da36      	bge.n	80085c6 <__kernel_rem_pio2+0x5ce>
 8008558:	f1bb 0f00 	cmp.w	fp, #0
 800855c:	d039      	beq.n	80085d2 <__kernel_rem_pio2+0x5da>
 800855e:	4602      	mov	r2, r0
 8008560:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008564:	9c01      	ldr	r4, [sp, #4]
 8008566:	e9c4 2300 	strd	r2, r3, [r4]
 800856a:	4602      	mov	r2, r0
 800856c:	460b      	mov	r3, r1
 800856e:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8008572:	f7f7 fea1 	bl	80002b8 <__aeabi_dsub>
 8008576:	ae4c      	add	r6, sp, #304	; 0x130
 8008578:	2401      	movs	r4, #1
 800857a:	42a5      	cmp	r5, r4
 800857c:	da2c      	bge.n	80085d8 <__kernel_rem_pio2+0x5e0>
 800857e:	f1bb 0f00 	cmp.w	fp, #0
 8008582:	d002      	beq.n	800858a <__kernel_rem_pio2+0x592>
 8008584:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008588:	4619      	mov	r1, r3
 800858a:	9b01      	ldr	r3, [sp, #4]
 800858c:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8008590:	e7a5      	b.n	80084de <__kernel_rem_pio2+0x4e6>
 8008592:	f504 731a 	add.w	r3, r4, #616	; 0x268
 8008596:	eb0d 0403 	add.w	r4, sp, r3
 800859a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800859e:	2000      	movs	r0, #0
 80085a0:	2100      	movs	r1, #0
 80085a2:	2d00      	cmp	r5, #0
 80085a4:	da09      	bge.n	80085ba <__kernel_rem_pio2+0x5c2>
 80085a6:	f1bb 0f00 	cmp.w	fp, #0
 80085aa:	d002      	beq.n	80085b2 <__kernel_rem_pio2+0x5ba>
 80085ac:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80085b0:	4619      	mov	r1, r3
 80085b2:	9b01      	ldr	r3, [sp, #4]
 80085b4:	e9c3 0100 	strd	r0, r1, [r3]
 80085b8:	e791      	b.n	80084de <__kernel_rem_pio2+0x4e6>
 80085ba:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80085be:	f7f7 fe7d 	bl	80002bc <__adddf3>
 80085c2:	3d01      	subs	r5, #1
 80085c4:	e7ed      	b.n	80085a2 <__kernel_rem_pio2+0x5aa>
 80085c6:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80085ca:	f7f7 fe77 	bl	80002bc <__adddf3>
 80085ce:	3e01      	subs	r6, #1
 80085d0:	e7c0      	b.n	8008554 <__kernel_rem_pio2+0x55c>
 80085d2:	4602      	mov	r2, r0
 80085d4:	460b      	mov	r3, r1
 80085d6:	e7c5      	b.n	8008564 <__kernel_rem_pio2+0x56c>
 80085d8:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 80085dc:	f7f7 fe6e 	bl	80002bc <__adddf3>
 80085e0:	3401      	adds	r4, #1
 80085e2:	e7ca      	b.n	800857a <__kernel_rem_pio2+0x582>
 80085e4:	e9da 8900 	ldrd	r8, r9, [sl]
 80085e8:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 80085ec:	9b02      	ldr	r3, [sp, #8]
 80085ee:	3b01      	subs	r3, #1
 80085f0:	9302      	str	r3, [sp, #8]
 80085f2:	4632      	mov	r2, r6
 80085f4:	463b      	mov	r3, r7
 80085f6:	4640      	mov	r0, r8
 80085f8:	4649      	mov	r1, r9
 80085fa:	f7f7 fe5f 	bl	80002bc <__adddf3>
 80085fe:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8008602:	4602      	mov	r2, r0
 8008604:	460b      	mov	r3, r1
 8008606:	4640      	mov	r0, r8
 8008608:	4649      	mov	r1, r9
 800860a:	f7f7 fe55 	bl	80002b8 <__aeabi_dsub>
 800860e:	4632      	mov	r2, r6
 8008610:	463b      	mov	r3, r7
 8008612:	f7f7 fe53 	bl	80002bc <__adddf3>
 8008616:	ed9d 7b08 	vldr	d7, [sp, #32]
 800861a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800861e:	ed8a 7b00 	vstr	d7, [sl]
 8008622:	e76e      	b.n	8008502 <__kernel_rem_pio2+0x50a>
 8008624:	e9d4 8900 	ldrd	r8, r9, [r4]
 8008628:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800862c:	4640      	mov	r0, r8
 800862e:	4632      	mov	r2, r6
 8008630:	463b      	mov	r3, r7
 8008632:	4649      	mov	r1, r9
 8008634:	f7f7 fe42 	bl	80002bc <__adddf3>
 8008638:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800863c:	4602      	mov	r2, r0
 800863e:	460b      	mov	r3, r1
 8008640:	4640      	mov	r0, r8
 8008642:	4649      	mov	r1, r9
 8008644:	f7f7 fe38 	bl	80002b8 <__aeabi_dsub>
 8008648:	4632      	mov	r2, r6
 800864a:	463b      	mov	r3, r7
 800864c:	f7f7 fe36 	bl	80002bc <__adddf3>
 8008650:	ed9d 7b02 	vldr	d7, [sp, #8]
 8008654:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8008658:	ed84 7b00 	vstr	d7, [r4]
 800865c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8008660:	e755      	b.n	800850e <__kernel_rem_pio2+0x516>
 8008662:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8008666:	f7f7 fe29 	bl	80002bc <__adddf3>
 800866a:	3d01      	subs	r5, #1
 800866c:	e759      	b.n	8008522 <__kernel_rem_pio2+0x52a>
 800866e:	9b01      	ldr	r3, [sp, #4]
 8008670:	9a01      	ldr	r2, [sp, #4]
 8008672:	601d      	str	r5, [r3, #0]
 8008674:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8008678:	605c      	str	r4, [r3, #4]
 800867a:	609f      	str	r7, [r3, #8]
 800867c:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8008680:	60d3      	str	r3, [r2, #12]
 8008682:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008686:	6110      	str	r0, [r2, #16]
 8008688:	6153      	str	r3, [r2, #20]
 800868a:	e728      	b.n	80084de <__kernel_rem_pio2+0x4e6>
 800868c:	41700000 	.word	0x41700000
 8008690:	3e700000 	.word	0x3e700000
 8008694:	00000000 	.word	0x00000000

08008698 <__kernel_sin>:
 8008698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800869c:	ed2d 8b04 	vpush	{d8-d9}
 80086a0:	eeb0 8a41 	vmov.f32	s16, s2
 80086a4:	eef0 8a61 	vmov.f32	s17, s3
 80086a8:	ec55 4b10 	vmov	r4, r5, d0
 80086ac:	b083      	sub	sp, #12
 80086ae:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80086b2:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 80086b6:	9001      	str	r0, [sp, #4]
 80086b8:	da06      	bge.n	80086c8 <__kernel_sin+0x30>
 80086ba:	ee10 0a10 	vmov	r0, s0
 80086be:	4629      	mov	r1, r5
 80086c0:	f7f8 fa62 	bl	8000b88 <__aeabi_d2iz>
 80086c4:	2800      	cmp	r0, #0
 80086c6:	d051      	beq.n	800876c <__kernel_sin+0xd4>
 80086c8:	4622      	mov	r2, r4
 80086ca:	462b      	mov	r3, r5
 80086cc:	4620      	mov	r0, r4
 80086ce:	4629      	mov	r1, r5
 80086d0:	f7f7 ffaa 	bl	8000628 <__aeabi_dmul>
 80086d4:	4682      	mov	sl, r0
 80086d6:	468b      	mov	fp, r1
 80086d8:	4602      	mov	r2, r0
 80086da:	460b      	mov	r3, r1
 80086dc:	4620      	mov	r0, r4
 80086de:	4629      	mov	r1, r5
 80086e0:	f7f7 ffa2 	bl	8000628 <__aeabi_dmul>
 80086e4:	a341      	add	r3, pc, #260	; (adr r3, 80087ec <__kernel_sin+0x154>)
 80086e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086ea:	4680      	mov	r8, r0
 80086ec:	4689      	mov	r9, r1
 80086ee:	4650      	mov	r0, sl
 80086f0:	4659      	mov	r1, fp
 80086f2:	f7f7 ff99 	bl	8000628 <__aeabi_dmul>
 80086f6:	a33f      	add	r3, pc, #252	; (adr r3, 80087f4 <__kernel_sin+0x15c>)
 80086f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086fc:	f7f7 fddc 	bl	80002b8 <__aeabi_dsub>
 8008700:	4652      	mov	r2, sl
 8008702:	465b      	mov	r3, fp
 8008704:	f7f7 ff90 	bl	8000628 <__aeabi_dmul>
 8008708:	a33c      	add	r3, pc, #240	; (adr r3, 80087fc <__kernel_sin+0x164>)
 800870a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800870e:	f7f7 fdd5 	bl	80002bc <__adddf3>
 8008712:	4652      	mov	r2, sl
 8008714:	465b      	mov	r3, fp
 8008716:	f7f7 ff87 	bl	8000628 <__aeabi_dmul>
 800871a:	a33a      	add	r3, pc, #232	; (adr r3, 8008804 <__kernel_sin+0x16c>)
 800871c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008720:	f7f7 fdca 	bl	80002b8 <__aeabi_dsub>
 8008724:	4652      	mov	r2, sl
 8008726:	465b      	mov	r3, fp
 8008728:	f7f7 ff7e 	bl	8000628 <__aeabi_dmul>
 800872c:	a337      	add	r3, pc, #220	; (adr r3, 800880c <__kernel_sin+0x174>)
 800872e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008732:	f7f7 fdc3 	bl	80002bc <__adddf3>
 8008736:	9b01      	ldr	r3, [sp, #4]
 8008738:	4606      	mov	r6, r0
 800873a:	460f      	mov	r7, r1
 800873c:	b9eb      	cbnz	r3, 800877a <__kernel_sin+0xe2>
 800873e:	4602      	mov	r2, r0
 8008740:	460b      	mov	r3, r1
 8008742:	4650      	mov	r0, sl
 8008744:	4659      	mov	r1, fp
 8008746:	f7f7 ff6f 	bl	8000628 <__aeabi_dmul>
 800874a:	a325      	add	r3, pc, #148	; (adr r3, 80087e0 <__kernel_sin+0x148>)
 800874c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008750:	f7f7 fdb2 	bl	80002b8 <__aeabi_dsub>
 8008754:	4642      	mov	r2, r8
 8008756:	464b      	mov	r3, r9
 8008758:	f7f7 ff66 	bl	8000628 <__aeabi_dmul>
 800875c:	4602      	mov	r2, r0
 800875e:	460b      	mov	r3, r1
 8008760:	4620      	mov	r0, r4
 8008762:	4629      	mov	r1, r5
 8008764:	f7f7 fdaa 	bl	80002bc <__adddf3>
 8008768:	4604      	mov	r4, r0
 800876a:	460d      	mov	r5, r1
 800876c:	ec45 4b10 	vmov	d0, r4, r5
 8008770:	b003      	add	sp, #12
 8008772:	ecbd 8b04 	vpop	{d8-d9}
 8008776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800877a:	4b1b      	ldr	r3, [pc, #108]	; (80087e8 <__kernel_sin+0x150>)
 800877c:	ec51 0b18 	vmov	r0, r1, d8
 8008780:	2200      	movs	r2, #0
 8008782:	f7f7 ff51 	bl	8000628 <__aeabi_dmul>
 8008786:	4632      	mov	r2, r6
 8008788:	ec41 0b19 	vmov	d9, r0, r1
 800878c:	463b      	mov	r3, r7
 800878e:	4640      	mov	r0, r8
 8008790:	4649      	mov	r1, r9
 8008792:	f7f7 ff49 	bl	8000628 <__aeabi_dmul>
 8008796:	4602      	mov	r2, r0
 8008798:	460b      	mov	r3, r1
 800879a:	ec51 0b19 	vmov	r0, r1, d9
 800879e:	f7f7 fd8b 	bl	80002b8 <__aeabi_dsub>
 80087a2:	4652      	mov	r2, sl
 80087a4:	465b      	mov	r3, fp
 80087a6:	f7f7 ff3f 	bl	8000628 <__aeabi_dmul>
 80087aa:	ec53 2b18 	vmov	r2, r3, d8
 80087ae:	f7f7 fd83 	bl	80002b8 <__aeabi_dsub>
 80087b2:	a30b      	add	r3, pc, #44	; (adr r3, 80087e0 <__kernel_sin+0x148>)
 80087b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087b8:	4606      	mov	r6, r0
 80087ba:	460f      	mov	r7, r1
 80087bc:	4640      	mov	r0, r8
 80087be:	4649      	mov	r1, r9
 80087c0:	f7f7 ff32 	bl	8000628 <__aeabi_dmul>
 80087c4:	4602      	mov	r2, r0
 80087c6:	460b      	mov	r3, r1
 80087c8:	4630      	mov	r0, r6
 80087ca:	4639      	mov	r1, r7
 80087cc:	f7f7 fd76 	bl	80002bc <__adddf3>
 80087d0:	4602      	mov	r2, r0
 80087d2:	460b      	mov	r3, r1
 80087d4:	4620      	mov	r0, r4
 80087d6:	4629      	mov	r1, r5
 80087d8:	f7f7 fd6e 	bl	80002b8 <__aeabi_dsub>
 80087dc:	e7c4      	b.n	8008768 <__kernel_sin+0xd0>
 80087de:	bf00      	nop
 80087e0:	55555549 	.word	0x55555549
 80087e4:	3fc55555 	.word	0x3fc55555
 80087e8:	3fe00000 	.word	0x3fe00000
 80087ec:	5acfd57c 	.word	0x5acfd57c
 80087f0:	3de5d93a 	.word	0x3de5d93a
 80087f4:	8a2b9ceb 	.word	0x8a2b9ceb
 80087f8:	3e5ae5e6 	.word	0x3e5ae5e6
 80087fc:	57b1fe7d 	.word	0x57b1fe7d
 8008800:	3ec71de3 	.word	0x3ec71de3
 8008804:	19c161d5 	.word	0x19c161d5
 8008808:	3f2a01a0 	.word	0x3f2a01a0
 800880c:	1110f8a6 	.word	0x1110f8a6
 8008810:	3f811111 	.word	0x3f811111

08008814 <fabs>:
 8008814:	ec51 0b10 	vmov	r0, r1, d0
 8008818:	ee10 2a10 	vmov	r2, s0
 800881c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8008820:	ec43 2b10 	vmov	d0, r2, r3
 8008824:	4770      	bx	lr
	...

08008828 <floor>:
 8008828:	ec51 0b10 	vmov	r0, r1, d0
 800882c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008830:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8008834:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8008838:	2e13      	cmp	r6, #19
 800883a:	ee10 5a10 	vmov	r5, s0
 800883e:	ee10 8a10 	vmov	r8, s0
 8008842:	460c      	mov	r4, r1
 8008844:	dc32      	bgt.n	80088ac <floor+0x84>
 8008846:	2e00      	cmp	r6, #0
 8008848:	da14      	bge.n	8008874 <floor+0x4c>
 800884a:	a333      	add	r3, pc, #204	; (adr r3, 8008918 <floor+0xf0>)
 800884c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008850:	f7f7 fd34 	bl	80002bc <__adddf3>
 8008854:	2200      	movs	r2, #0
 8008856:	2300      	movs	r3, #0
 8008858:	f7f8 f976 	bl	8000b48 <__aeabi_dcmpgt>
 800885c:	b138      	cbz	r0, 800886e <floor+0x46>
 800885e:	2c00      	cmp	r4, #0
 8008860:	da57      	bge.n	8008912 <floor+0xea>
 8008862:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8008866:	431d      	orrs	r5, r3
 8008868:	d001      	beq.n	800886e <floor+0x46>
 800886a:	4c2d      	ldr	r4, [pc, #180]	; (8008920 <floor+0xf8>)
 800886c:	2500      	movs	r5, #0
 800886e:	4621      	mov	r1, r4
 8008870:	4628      	mov	r0, r5
 8008872:	e025      	b.n	80088c0 <floor+0x98>
 8008874:	4f2b      	ldr	r7, [pc, #172]	; (8008924 <floor+0xfc>)
 8008876:	4137      	asrs	r7, r6
 8008878:	ea01 0307 	and.w	r3, r1, r7
 800887c:	4303      	orrs	r3, r0
 800887e:	d01f      	beq.n	80088c0 <floor+0x98>
 8008880:	a325      	add	r3, pc, #148	; (adr r3, 8008918 <floor+0xf0>)
 8008882:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008886:	f7f7 fd19 	bl	80002bc <__adddf3>
 800888a:	2200      	movs	r2, #0
 800888c:	2300      	movs	r3, #0
 800888e:	f7f8 f95b 	bl	8000b48 <__aeabi_dcmpgt>
 8008892:	2800      	cmp	r0, #0
 8008894:	d0eb      	beq.n	800886e <floor+0x46>
 8008896:	2c00      	cmp	r4, #0
 8008898:	bfbe      	ittt	lt
 800889a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800889e:	fa43 f606 	asrlt.w	r6, r3, r6
 80088a2:	19a4      	addlt	r4, r4, r6
 80088a4:	ea24 0407 	bic.w	r4, r4, r7
 80088a8:	2500      	movs	r5, #0
 80088aa:	e7e0      	b.n	800886e <floor+0x46>
 80088ac:	2e33      	cmp	r6, #51	; 0x33
 80088ae:	dd0b      	ble.n	80088c8 <floor+0xa0>
 80088b0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80088b4:	d104      	bne.n	80088c0 <floor+0x98>
 80088b6:	ee10 2a10 	vmov	r2, s0
 80088ba:	460b      	mov	r3, r1
 80088bc:	f7f7 fcfe 	bl	80002bc <__adddf3>
 80088c0:	ec41 0b10 	vmov	d0, r0, r1
 80088c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80088c8:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 80088cc:	f04f 33ff 	mov.w	r3, #4294967295
 80088d0:	fa23 f707 	lsr.w	r7, r3, r7
 80088d4:	4207      	tst	r7, r0
 80088d6:	d0f3      	beq.n	80088c0 <floor+0x98>
 80088d8:	a30f      	add	r3, pc, #60	; (adr r3, 8008918 <floor+0xf0>)
 80088da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088de:	f7f7 fced 	bl	80002bc <__adddf3>
 80088e2:	2200      	movs	r2, #0
 80088e4:	2300      	movs	r3, #0
 80088e6:	f7f8 f92f 	bl	8000b48 <__aeabi_dcmpgt>
 80088ea:	2800      	cmp	r0, #0
 80088ec:	d0bf      	beq.n	800886e <floor+0x46>
 80088ee:	2c00      	cmp	r4, #0
 80088f0:	da02      	bge.n	80088f8 <floor+0xd0>
 80088f2:	2e14      	cmp	r6, #20
 80088f4:	d103      	bne.n	80088fe <floor+0xd6>
 80088f6:	3401      	adds	r4, #1
 80088f8:	ea25 0507 	bic.w	r5, r5, r7
 80088fc:	e7b7      	b.n	800886e <floor+0x46>
 80088fe:	2301      	movs	r3, #1
 8008900:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8008904:	fa03 f606 	lsl.w	r6, r3, r6
 8008908:	4435      	add	r5, r6
 800890a:	4545      	cmp	r5, r8
 800890c:	bf38      	it	cc
 800890e:	18e4      	addcc	r4, r4, r3
 8008910:	e7f2      	b.n	80088f8 <floor+0xd0>
 8008912:	2500      	movs	r5, #0
 8008914:	462c      	mov	r4, r5
 8008916:	e7aa      	b.n	800886e <floor+0x46>
 8008918:	8800759c 	.word	0x8800759c
 800891c:	7e37e43c 	.word	0x7e37e43c
 8008920:	bff00000 	.word	0xbff00000
 8008924:	000fffff 	.word	0x000fffff

08008928 <nan>:
 8008928:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8008930 <nan+0x8>
 800892c:	4770      	bx	lr
 800892e:	bf00      	nop
 8008930:	00000000 	.word	0x00000000
 8008934:	7ff80000 	.word	0x7ff80000

08008938 <scalbn>:
 8008938:	b570      	push	{r4, r5, r6, lr}
 800893a:	ec55 4b10 	vmov	r4, r5, d0
 800893e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8008942:	4606      	mov	r6, r0
 8008944:	462b      	mov	r3, r5
 8008946:	b99a      	cbnz	r2, 8008970 <scalbn+0x38>
 8008948:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800894c:	4323      	orrs	r3, r4
 800894e:	d036      	beq.n	80089be <scalbn+0x86>
 8008950:	4b39      	ldr	r3, [pc, #228]	; (8008a38 <scalbn+0x100>)
 8008952:	4629      	mov	r1, r5
 8008954:	ee10 0a10 	vmov	r0, s0
 8008958:	2200      	movs	r2, #0
 800895a:	f7f7 fe65 	bl	8000628 <__aeabi_dmul>
 800895e:	4b37      	ldr	r3, [pc, #220]	; (8008a3c <scalbn+0x104>)
 8008960:	429e      	cmp	r6, r3
 8008962:	4604      	mov	r4, r0
 8008964:	460d      	mov	r5, r1
 8008966:	da10      	bge.n	800898a <scalbn+0x52>
 8008968:	a32b      	add	r3, pc, #172	; (adr r3, 8008a18 <scalbn+0xe0>)
 800896a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800896e:	e03a      	b.n	80089e6 <scalbn+0xae>
 8008970:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8008974:	428a      	cmp	r2, r1
 8008976:	d10c      	bne.n	8008992 <scalbn+0x5a>
 8008978:	ee10 2a10 	vmov	r2, s0
 800897c:	4620      	mov	r0, r4
 800897e:	4629      	mov	r1, r5
 8008980:	f7f7 fc9c 	bl	80002bc <__adddf3>
 8008984:	4604      	mov	r4, r0
 8008986:	460d      	mov	r5, r1
 8008988:	e019      	b.n	80089be <scalbn+0x86>
 800898a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800898e:	460b      	mov	r3, r1
 8008990:	3a36      	subs	r2, #54	; 0x36
 8008992:	4432      	add	r2, r6
 8008994:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8008998:	428a      	cmp	r2, r1
 800899a:	dd08      	ble.n	80089ae <scalbn+0x76>
 800899c:	2d00      	cmp	r5, #0
 800899e:	a120      	add	r1, pc, #128	; (adr r1, 8008a20 <scalbn+0xe8>)
 80089a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80089a4:	da1c      	bge.n	80089e0 <scalbn+0xa8>
 80089a6:	a120      	add	r1, pc, #128	; (adr r1, 8008a28 <scalbn+0xf0>)
 80089a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80089ac:	e018      	b.n	80089e0 <scalbn+0xa8>
 80089ae:	2a00      	cmp	r2, #0
 80089b0:	dd08      	ble.n	80089c4 <scalbn+0x8c>
 80089b2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80089b6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80089ba:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80089be:	ec45 4b10 	vmov	d0, r4, r5
 80089c2:	bd70      	pop	{r4, r5, r6, pc}
 80089c4:	f112 0f35 	cmn.w	r2, #53	; 0x35
 80089c8:	da19      	bge.n	80089fe <scalbn+0xc6>
 80089ca:	f24c 3350 	movw	r3, #50000	; 0xc350
 80089ce:	429e      	cmp	r6, r3
 80089d0:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 80089d4:	dd0a      	ble.n	80089ec <scalbn+0xb4>
 80089d6:	a112      	add	r1, pc, #72	; (adr r1, 8008a20 <scalbn+0xe8>)
 80089d8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80089dc:	2b00      	cmp	r3, #0
 80089de:	d1e2      	bne.n	80089a6 <scalbn+0x6e>
 80089e0:	a30f      	add	r3, pc, #60	; (adr r3, 8008a20 <scalbn+0xe8>)
 80089e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089e6:	f7f7 fe1f 	bl	8000628 <__aeabi_dmul>
 80089ea:	e7cb      	b.n	8008984 <scalbn+0x4c>
 80089ec:	a10a      	add	r1, pc, #40	; (adr r1, 8008a18 <scalbn+0xe0>)
 80089ee:	e9d1 0100 	ldrd	r0, r1, [r1]
 80089f2:	2b00      	cmp	r3, #0
 80089f4:	d0b8      	beq.n	8008968 <scalbn+0x30>
 80089f6:	a10e      	add	r1, pc, #56	; (adr r1, 8008a30 <scalbn+0xf8>)
 80089f8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80089fc:	e7b4      	b.n	8008968 <scalbn+0x30>
 80089fe:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008a02:	3236      	adds	r2, #54	; 0x36
 8008a04:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008a08:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8008a0c:	4620      	mov	r0, r4
 8008a0e:	4b0c      	ldr	r3, [pc, #48]	; (8008a40 <scalbn+0x108>)
 8008a10:	2200      	movs	r2, #0
 8008a12:	e7e8      	b.n	80089e6 <scalbn+0xae>
 8008a14:	f3af 8000 	nop.w
 8008a18:	c2f8f359 	.word	0xc2f8f359
 8008a1c:	01a56e1f 	.word	0x01a56e1f
 8008a20:	8800759c 	.word	0x8800759c
 8008a24:	7e37e43c 	.word	0x7e37e43c
 8008a28:	8800759c 	.word	0x8800759c
 8008a2c:	fe37e43c 	.word	0xfe37e43c
 8008a30:	c2f8f359 	.word	0xc2f8f359
 8008a34:	81a56e1f 	.word	0x81a56e1f
 8008a38:	43500000 	.word	0x43500000
 8008a3c:	ffff3cb0 	.word	0xffff3cb0
 8008a40:	3c900000 	.word	0x3c900000

08008a44 <atoi>:
 8008a44:	220a      	movs	r2, #10
 8008a46:	2100      	movs	r1, #0
 8008a48:	f003 b846 	b.w	800bad8 <strtol>

08008a4c <__errno>:
 8008a4c:	4b01      	ldr	r3, [pc, #4]	; (8008a54 <__errno+0x8>)
 8008a4e:	6818      	ldr	r0, [r3, #0]
 8008a50:	4770      	bx	lr
 8008a52:	bf00      	nop
 8008a54:	2000000c 	.word	0x2000000c

08008a58 <__libc_init_array>:
 8008a58:	b570      	push	{r4, r5, r6, lr}
 8008a5a:	4d0d      	ldr	r5, [pc, #52]	; (8008a90 <__libc_init_array+0x38>)
 8008a5c:	4c0d      	ldr	r4, [pc, #52]	; (8008a94 <__libc_init_array+0x3c>)
 8008a5e:	1b64      	subs	r4, r4, r5
 8008a60:	10a4      	asrs	r4, r4, #2
 8008a62:	2600      	movs	r6, #0
 8008a64:	42a6      	cmp	r6, r4
 8008a66:	d109      	bne.n	8008a7c <__libc_init_array+0x24>
 8008a68:	4d0b      	ldr	r5, [pc, #44]	; (8008a98 <__libc_init_array+0x40>)
 8008a6a:	4c0c      	ldr	r4, [pc, #48]	; (8008a9c <__libc_init_array+0x44>)
 8008a6c:	f006 fdb8 	bl	800f5e0 <_init>
 8008a70:	1b64      	subs	r4, r4, r5
 8008a72:	10a4      	asrs	r4, r4, #2
 8008a74:	2600      	movs	r6, #0
 8008a76:	42a6      	cmp	r6, r4
 8008a78:	d105      	bne.n	8008a86 <__libc_init_array+0x2e>
 8008a7a:	bd70      	pop	{r4, r5, r6, pc}
 8008a7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8008a80:	4798      	blx	r3
 8008a82:	3601      	adds	r6, #1
 8008a84:	e7ee      	b.n	8008a64 <__libc_init_array+0xc>
 8008a86:	f855 3b04 	ldr.w	r3, [r5], #4
 8008a8a:	4798      	blx	r3
 8008a8c:	3601      	adds	r6, #1
 8008a8e:	e7f2      	b.n	8008a76 <__libc_init_array+0x1e>
 8008a90:	08010538 	.word	0x08010538
 8008a94:	08010538 	.word	0x08010538
 8008a98:	08010538 	.word	0x08010538
 8008a9c:	0801053c 	.word	0x0801053c

08008aa0 <localtime>:
 8008aa0:	b538      	push	{r3, r4, r5, lr}
 8008aa2:	4b0b      	ldr	r3, [pc, #44]	; (8008ad0 <localtime+0x30>)
 8008aa4:	681d      	ldr	r5, [r3, #0]
 8008aa6:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8008aa8:	4604      	mov	r4, r0
 8008aaa:	b953      	cbnz	r3, 8008ac2 <localtime+0x22>
 8008aac:	2024      	movs	r0, #36	; 0x24
 8008aae:	f000 f909 	bl	8008cc4 <malloc>
 8008ab2:	4602      	mov	r2, r0
 8008ab4:	63e8      	str	r0, [r5, #60]	; 0x3c
 8008ab6:	b920      	cbnz	r0, 8008ac2 <localtime+0x22>
 8008ab8:	4b06      	ldr	r3, [pc, #24]	; (8008ad4 <localtime+0x34>)
 8008aba:	4807      	ldr	r0, [pc, #28]	; (8008ad8 <localtime+0x38>)
 8008abc:	2132      	movs	r1, #50	; 0x32
 8008abe:	f003 fae5 	bl	800c08c <__assert_func>
 8008ac2:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8008ac4:	4620      	mov	r0, r4
 8008ac6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008aca:	f000 b807 	b.w	8008adc <localtime_r>
 8008ace:	bf00      	nop
 8008ad0:	2000000c 	.word	0x2000000c
 8008ad4:	0800fca4 	.word	0x0800fca4
 8008ad8:	0800fcbb 	.word	0x0800fcbb

08008adc <localtime_r>:
 8008adc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008ae0:	4680      	mov	r8, r0
 8008ae2:	9101      	str	r1, [sp, #4]
 8008ae4:	f004 fd54 	bl	800d590 <__gettzinfo>
 8008ae8:	9901      	ldr	r1, [sp, #4]
 8008aea:	4605      	mov	r5, r0
 8008aec:	4640      	mov	r0, r8
 8008aee:	f004 fd53 	bl	800d598 <gmtime_r>
 8008af2:	6943      	ldr	r3, [r0, #20]
 8008af4:	0799      	lsls	r1, r3, #30
 8008af6:	4604      	mov	r4, r0
 8008af8:	f203 776c 	addw	r7, r3, #1900	; 0x76c
 8008afc:	d105      	bne.n	8008b0a <localtime_r+0x2e>
 8008afe:	2264      	movs	r2, #100	; 0x64
 8008b00:	fb97 f3f2 	sdiv	r3, r7, r2
 8008b04:	fb02 7313 	mls	r3, r2, r3, r7
 8008b08:	bb73      	cbnz	r3, 8008b68 <localtime_r+0x8c>
 8008b0a:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8008b0e:	fb97 f6f3 	sdiv	r6, r7, r3
 8008b12:	fb03 7616 	mls	r6, r3, r6, r7
 8008b16:	fab6 f386 	clz	r3, r6
 8008b1a:	095b      	lsrs	r3, r3, #5
 8008b1c:	4e67      	ldr	r6, [pc, #412]	; (8008cbc <localtime_r+0x1e0>)
 8008b1e:	2230      	movs	r2, #48	; 0x30
 8008b20:	fb02 6603 	mla	r6, r2, r3, r6
 8008b24:	f003 f90a 	bl	800bd3c <__tz_lock>
 8008b28:	f003 f914 	bl	800bd54 <_tzset_unlocked>
 8008b2c:	4b64      	ldr	r3, [pc, #400]	; (8008cc0 <localtime_r+0x1e4>)
 8008b2e:	681b      	ldr	r3, [r3, #0]
 8008b30:	b34b      	cbz	r3, 8008b86 <localtime_r+0xaa>
 8008b32:	686b      	ldr	r3, [r5, #4]
 8008b34:	42bb      	cmp	r3, r7
 8008b36:	d119      	bne.n	8008b6c <localtime_r+0x90>
 8008b38:	682f      	ldr	r7, [r5, #0]
 8008b3a:	e9d8 2300 	ldrd	r2, r3, [r8]
 8008b3e:	e9d5 0108 	ldrd	r0, r1, [r5, #32]
 8008b42:	b9df      	cbnz	r7, 8008b7c <localtime_r+0xa0>
 8008b44:	4282      	cmp	r2, r0
 8008b46:	eb73 0101 	sbcs.w	r1, r3, r1
 8008b4a:	da23      	bge.n	8008b94 <localtime_r+0xb8>
 8008b4c:	e9d5 0112 	ldrd	r0, r1, [r5, #72]	; 0x48
 8008b50:	4282      	cmp	r2, r0
 8008b52:	eb73 0701 	sbcs.w	r7, r3, r1
 8008b56:	bfb4      	ite	lt
 8008b58:	2701      	movlt	r7, #1
 8008b5a:	2700      	movge	r7, #0
 8008b5c:	4282      	cmp	r2, r0
 8008b5e:	418b      	sbcs	r3, r1
 8008b60:	6227      	str	r7, [r4, #32]
 8008b62:	db19      	blt.n	8008b98 <localtime_r+0xbc>
 8008b64:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008b66:	e018      	b.n	8008b9a <localtime_r+0xbe>
 8008b68:	2301      	movs	r3, #1
 8008b6a:	e7d7      	b.n	8008b1c <localtime_r+0x40>
 8008b6c:	4638      	mov	r0, r7
 8008b6e:	f003 f83b 	bl	800bbe8 <__tzcalc_limits>
 8008b72:	2800      	cmp	r0, #0
 8008b74:	d1e0      	bne.n	8008b38 <localtime_r+0x5c>
 8008b76:	f04f 33ff 	mov.w	r3, #4294967295
 8008b7a:	e004      	b.n	8008b86 <localtime_r+0xaa>
 8008b7c:	4282      	cmp	r2, r0
 8008b7e:	eb73 0101 	sbcs.w	r1, r3, r1
 8008b82:	da02      	bge.n	8008b8a <localtime_r+0xae>
 8008b84:	2300      	movs	r3, #0
 8008b86:	6223      	str	r3, [r4, #32]
 8008b88:	e7ec      	b.n	8008b64 <localtime_r+0x88>
 8008b8a:	e9d5 0112 	ldrd	r0, r1, [r5, #72]	; 0x48
 8008b8e:	4282      	cmp	r2, r0
 8008b90:	418b      	sbcs	r3, r1
 8008b92:	daf7      	bge.n	8008b84 <localtime_r+0xa8>
 8008b94:	2301      	movs	r3, #1
 8008b96:	6223      	str	r3, [r4, #32]
 8008b98:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8008b9a:	6861      	ldr	r1, [r4, #4]
 8008b9c:	f44f 6261 	mov.w	r2, #3600	; 0xe10
 8008ba0:	203c      	movs	r0, #60	; 0x3c
 8008ba2:	fb93 f5f2 	sdiv	r5, r3, r2
 8008ba6:	fb02 3315 	mls	r3, r2, r5, r3
 8008baa:	fb93 f2f0 	sdiv	r2, r3, r0
 8008bae:	fb00 3012 	mls	r0, r0, r2, r3
 8008bb2:	6823      	ldr	r3, [r4, #0]
 8008bb4:	1a89      	subs	r1, r1, r2
 8008bb6:	68a2      	ldr	r2, [r4, #8]
 8008bb8:	6061      	str	r1, [r4, #4]
 8008bba:	1a1b      	subs	r3, r3, r0
 8008bbc:	1b52      	subs	r2, r2, r5
 8008bbe:	2b3b      	cmp	r3, #59	; 0x3b
 8008bc0:	6023      	str	r3, [r4, #0]
 8008bc2:	60a2      	str	r2, [r4, #8]
 8008bc4:	dd35      	ble.n	8008c32 <localtime_r+0x156>
 8008bc6:	3101      	adds	r1, #1
 8008bc8:	6061      	str	r1, [r4, #4]
 8008bca:	3b3c      	subs	r3, #60	; 0x3c
 8008bcc:	6023      	str	r3, [r4, #0]
 8008bce:	6863      	ldr	r3, [r4, #4]
 8008bd0:	2b3b      	cmp	r3, #59	; 0x3b
 8008bd2:	dd34      	ble.n	8008c3e <localtime_r+0x162>
 8008bd4:	3201      	adds	r2, #1
 8008bd6:	60a2      	str	r2, [r4, #8]
 8008bd8:	3b3c      	subs	r3, #60	; 0x3c
 8008bda:	6063      	str	r3, [r4, #4]
 8008bdc:	68a3      	ldr	r3, [r4, #8]
 8008bde:	2b17      	cmp	r3, #23
 8008be0:	dd33      	ble.n	8008c4a <localtime_r+0x16e>
 8008be2:	69e2      	ldr	r2, [r4, #28]
 8008be4:	3201      	adds	r2, #1
 8008be6:	61e2      	str	r2, [r4, #28]
 8008be8:	69a2      	ldr	r2, [r4, #24]
 8008bea:	3201      	adds	r2, #1
 8008bec:	2a06      	cmp	r2, #6
 8008bee:	bfc8      	it	gt
 8008bf0:	2200      	movgt	r2, #0
 8008bf2:	61a2      	str	r2, [r4, #24]
 8008bf4:	68e2      	ldr	r2, [r4, #12]
 8008bf6:	3b18      	subs	r3, #24
 8008bf8:	3201      	adds	r2, #1
 8008bfa:	60a3      	str	r3, [r4, #8]
 8008bfc:	6923      	ldr	r3, [r4, #16]
 8008bfe:	60e2      	str	r2, [r4, #12]
 8008c00:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8008c04:	428a      	cmp	r2, r1
 8008c06:	dd0e      	ble.n	8008c26 <localtime_r+0x14a>
 8008c08:	2b0b      	cmp	r3, #11
 8008c0a:	eba2 0201 	sub.w	r2, r2, r1
 8008c0e:	60e2      	str	r2, [r4, #12]
 8008c10:	f103 0201 	add.w	r2, r3, #1
 8008c14:	bf09      	itett	eq
 8008c16:	6963      	ldreq	r3, [r4, #20]
 8008c18:	6122      	strne	r2, [r4, #16]
 8008c1a:	2200      	moveq	r2, #0
 8008c1c:	3301      	addeq	r3, #1
 8008c1e:	bf02      	ittt	eq
 8008c20:	6122      	streq	r2, [r4, #16]
 8008c22:	6163      	streq	r3, [r4, #20]
 8008c24:	61e2      	streq	r2, [r4, #28]
 8008c26:	f003 f88f 	bl	800bd48 <__tz_unlock>
 8008c2a:	4620      	mov	r0, r4
 8008c2c:	b002      	add	sp, #8
 8008c2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008c32:	2b00      	cmp	r3, #0
 8008c34:	dacb      	bge.n	8008bce <localtime_r+0xf2>
 8008c36:	3901      	subs	r1, #1
 8008c38:	6061      	str	r1, [r4, #4]
 8008c3a:	333c      	adds	r3, #60	; 0x3c
 8008c3c:	e7c6      	b.n	8008bcc <localtime_r+0xf0>
 8008c3e:	2b00      	cmp	r3, #0
 8008c40:	dacc      	bge.n	8008bdc <localtime_r+0x100>
 8008c42:	3a01      	subs	r2, #1
 8008c44:	60a2      	str	r2, [r4, #8]
 8008c46:	333c      	adds	r3, #60	; 0x3c
 8008c48:	e7c7      	b.n	8008bda <localtime_r+0xfe>
 8008c4a:	2b00      	cmp	r3, #0
 8008c4c:	daeb      	bge.n	8008c26 <localtime_r+0x14a>
 8008c4e:	69e2      	ldr	r2, [r4, #28]
 8008c50:	3a01      	subs	r2, #1
 8008c52:	61e2      	str	r2, [r4, #28]
 8008c54:	69a2      	ldr	r2, [r4, #24]
 8008c56:	3a01      	subs	r2, #1
 8008c58:	bf48      	it	mi
 8008c5a:	2206      	movmi	r2, #6
 8008c5c:	61a2      	str	r2, [r4, #24]
 8008c5e:	68e2      	ldr	r2, [r4, #12]
 8008c60:	3318      	adds	r3, #24
 8008c62:	3a01      	subs	r2, #1
 8008c64:	60e2      	str	r2, [r4, #12]
 8008c66:	60a3      	str	r3, [r4, #8]
 8008c68:	2a00      	cmp	r2, #0
 8008c6a:	d1dc      	bne.n	8008c26 <localtime_r+0x14a>
 8008c6c:	6923      	ldr	r3, [r4, #16]
 8008c6e:	3b01      	subs	r3, #1
 8008c70:	d405      	bmi.n	8008c7e <localtime_r+0x1a2>
 8008c72:	6123      	str	r3, [r4, #16]
 8008c74:	6923      	ldr	r3, [r4, #16]
 8008c76:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8008c7a:	60e3      	str	r3, [r4, #12]
 8008c7c:	e7d3      	b.n	8008c26 <localtime_r+0x14a>
 8008c7e:	230b      	movs	r3, #11
 8008c80:	6123      	str	r3, [r4, #16]
 8008c82:	6963      	ldr	r3, [r4, #20]
 8008c84:	1e5a      	subs	r2, r3, #1
 8008c86:	f203 736b 	addw	r3, r3, #1899	; 0x76b
 8008c8a:	6162      	str	r2, [r4, #20]
 8008c8c:	079a      	lsls	r2, r3, #30
 8008c8e:	d105      	bne.n	8008c9c <localtime_r+0x1c0>
 8008c90:	2164      	movs	r1, #100	; 0x64
 8008c92:	fb93 f2f1 	sdiv	r2, r3, r1
 8008c96:	fb01 3212 	mls	r2, r1, r2, r3
 8008c9a:	b962      	cbnz	r2, 8008cb6 <localtime_r+0x1da>
 8008c9c:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008ca0:	fb93 f1f2 	sdiv	r1, r3, r2
 8008ca4:	fb02 3311 	mls	r3, r2, r1, r3
 8008ca8:	fab3 f383 	clz	r3, r3
 8008cac:	095b      	lsrs	r3, r3, #5
 8008cae:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 8008cb2:	61e3      	str	r3, [r4, #28]
 8008cb4:	e7de      	b.n	8008c74 <localtime_r+0x198>
 8008cb6:	2301      	movs	r3, #1
 8008cb8:	e7f9      	b.n	8008cae <localtime_r+0x1d2>
 8008cba:	bf00      	nop
 8008cbc:	0800fd78 	.word	0x0800fd78
 8008cc0:	20000350 	.word	0x20000350

08008cc4 <malloc>:
 8008cc4:	4b02      	ldr	r3, [pc, #8]	; (8008cd0 <malloc+0xc>)
 8008cc6:	4601      	mov	r1, r0
 8008cc8:	6818      	ldr	r0, [r3, #0]
 8008cca:	f000 baff 	b.w	80092cc <_malloc_r>
 8008cce:	bf00      	nop
 8008cd0:	2000000c 	.word	0x2000000c

08008cd4 <free>:
 8008cd4:	4b02      	ldr	r3, [pc, #8]	; (8008ce0 <free+0xc>)
 8008cd6:	4601      	mov	r1, r0
 8008cd8:	6818      	ldr	r0, [r3, #0]
 8008cda:	f000 ba8b 	b.w	80091f4 <_free_r>
 8008cde:	bf00      	nop
 8008ce0:	2000000c 	.word	0x2000000c

08008ce4 <memcpy>:
 8008ce4:	440a      	add	r2, r1
 8008ce6:	4291      	cmp	r1, r2
 8008ce8:	f100 33ff 	add.w	r3, r0, #4294967295
 8008cec:	d100      	bne.n	8008cf0 <memcpy+0xc>
 8008cee:	4770      	bx	lr
 8008cf0:	b510      	push	{r4, lr}
 8008cf2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008cf6:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008cfa:	4291      	cmp	r1, r2
 8008cfc:	d1f9      	bne.n	8008cf2 <memcpy+0xe>
 8008cfe:	bd10      	pop	{r4, pc}

08008d00 <memset>:
 8008d00:	4402      	add	r2, r0
 8008d02:	4603      	mov	r3, r0
 8008d04:	4293      	cmp	r3, r2
 8008d06:	d100      	bne.n	8008d0a <memset+0xa>
 8008d08:	4770      	bx	lr
 8008d0a:	f803 1b01 	strb.w	r1, [r3], #1
 8008d0e:	e7f9      	b.n	8008d04 <memset+0x4>

08008d10 <validate_structure>:
 8008d10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008d12:	6801      	ldr	r1, [r0, #0]
 8008d14:	293b      	cmp	r1, #59	; 0x3b
 8008d16:	4604      	mov	r4, r0
 8008d18:	d911      	bls.n	8008d3e <validate_structure+0x2e>
 8008d1a:	223c      	movs	r2, #60	; 0x3c
 8008d1c:	4668      	mov	r0, sp
 8008d1e:	f003 f9e3 	bl	800c0e8 <div>
 8008d22:	9a01      	ldr	r2, [sp, #4]
 8008d24:	6863      	ldr	r3, [r4, #4]
 8008d26:	9900      	ldr	r1, [sp, #0]
 8008d28:	2a00      	cmp	r2, #0
 8008d2a:	440b      	add	r3, r1
 8008d2c:	6063      	str	r3, [r4, #4]
 8008d2e:	bfbb      	ittet	lt
 8008d30:	323c      	addlt	r2, #60	; 0x3c
 8008d32:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008d36:	6022      	strge	r2, [r4, #0]
 8008d38:	6022      	strlt	r2, [r4, #0]
 8008d3a:	bfb8      	it	lt
 8008d3c:	6063      	strlt	r3, [r4, #4]
 8008d3e:	6861      	ldr	r1, [r4, #4]
 8008d40:	293b      	cmp	r1, #59	; 0x3b
 8008d42:	d911      	bls.n	8008d68 <validate_structure+0x58>
 8008d44:	223c      	movs	r2, #60	; 0x3c
 8008d46:	4668      	mov	r0, sp
 8008d48:	f003 f9ce 	bl	800c0e8 <div>
 8008d4c:	9a01      	ldr	r2, [sp, #4]
 8008d4e:	68a3      	ldr	r3, [r4, #8]
 8008d50:	9900      	ldr	r1, [sp, #0]
 8008d52:	2a00      	cmp	r2, #0
 8008d54:	440b      	add	r3, r1
 8008d56:	60a3      	str	r3, [r4, #8]
 8008d58:	bfbb      	ittet	lt
 8008d5a:	323c      	addlt	r2, #60	; 0x3c
 8008d5c:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008d60:	6062      	strge	r2, [r4, #4]
 8008d62:	6062      	strlt	r2, [r4, #4]
 8008d64:	bfb8      	it	lt
 8008d66:	60a3      	strlt	r3, [r4, #8]
 8008d68:	68a1      	ldr	r1, [r4, #8]
 8008d6a:	2917      	cmp	r1, #23
 8008d6c:	d911      	bls.n	8008d92 <validate_structure+0x82>
 8008d6e:	2218      	movs	r2, #24
 8008d70:	4668      	mov	r0, sp
 8008d72:	f003 f9b9 	bl	800c0e8 <div>
 8008d76:	9a01      	ldr	r2, [sp, #4]
 8008d78:	68e3      	ldr	r3, [r4, #12]
 8008d7a:	9900      	ldr	r1, [sp, #0]
 8008d7c:	2a00      	cmp	r2, #0
 8008d7e:	440b      	add	r3, r1
 8008d80:	60e3      	str	r3, [r4, #12]
 8008d82:	bfbb      	ittet	lt
 8008d84:	3218      	addlt	r2, #24
 8008d86:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008d8a:	60a2      	strge	r2, [r4, #8]
 8008d8c:	60a2      	strlt	r2, [r4, #8]
 8008d8e:	bfb8      	it	lt
 8008d90:	60e3      	strlt	r3, [r4, #12]
 8008d92:	6921      	ldr	r1, [r4, #16]
 8008d94:	290b      	cmp	r1, #11
 8008d96:	d911      	bls.n	8008dbc <validate_structure+0xac>
 8008d98:	220c      	movs	r2, #12
 8008d9a:	4668      	mov	r0, sp
 8008d9c:	f003 f9a4 	bl	800c0e8 <div>
 8008da0:	9a01      	ldr	r2, [sp, #4]
 8008da2:	6963      	ldr	r3, [r4, #20]
 8008da4:	9900      	ldr	r1, [sp, #0]
 8008da6:	2a00      	cmp	r2, #0
 8008da8:	440b      	add	r3, r1
 8008daa:	6163      	str	r3, [r4, #20]
 8008dac:	bfbb      	ittet	lt
 8008dae:	320c      	addlt	r2, #12
 8008db0:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8008db4:	6122      	strge	r2, [r4, #16]
 8008db6:	6122      	strlt	r2, [r4, #16]
 8008db8:	bfb8      	it	lt
 8008dba:	6163      	strlt	r3, [r4, #20]
 8008dbc:	6963      	ldr	r3, [r4, #20]
 8008dbe:	0798      	lsls	r0, r3, #30
 8008dc0:	d120      	bne.n	8008e04 <validate_structure+0xf4>
 8008dc2:	2164      	movs	r1, #100	; 0x64
 8008dc4:	fb93 f2f1 	sdiv	r2, r3, r1
 8008dc8:	fb01 3212 	mls	r2, r1, r2, r3
 8008dcc:	b9e2      	cbnz	r2, 8008e08 <validate_structure+0xf8>
 8008dce:	f203 736c 	addw	r3, r3, #1900	; 0x76c
 8008dd2:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008dd6:	fb93 f1f2 	sdiv	r1, r3, r2
 8008dda:	fb02 3311 	mls	r3, r2, r1, r3
 8008dde:	2b00      	cmp	r3, #0
 8008de0:	bf14      	ite	ne
 8008de2:	231c      	movne	r3, #28
 8008de4:	231d      	moveq	r3, #29
 8008de6:	68e2      	ldr	r2, [r4, #12]
 8008de8:	2a00      	cmp	r2, #0
 8008dea:	dc0f      	bgt.n	8008e0c <validate_structure+0xfc>
 8008dec:	4f33      	ldr	r7, [pc, #204]	; (8008ebc <validate_structure+0x1ac>)
 8008dee:	260b      	movs	r6, #11
 8008df0:	2064      	movs	r0, #100	; 0x64
 8008df2:	f44f 75c8 	mov.w	r5, #400	; 0x190
 8008df6:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 8008dfa:	f1bc 0f00 	cmp.w	ip, #0
 8008dfe:	dd31      	ble.n	8008e64 <validate_structure+0x154>
 8008e00:	b003      	add	sp, #12
 8008e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e04:	231c      	movs	r3, #28
 8008e06:	e7ee      	b.n	8008de6 <validate_structure+0xd6>
 8008e08:	231d      	movs	r3, #29
 8008e0a:	e7ec      	b.n	8008de6 <validate_structure+0xd6>
 8008e0c:	4e2b      	ldr	r6, [pc, #172]	; (8008ebc <validate_structure+0x1ac>)
 8008e0e:	2700      	movs	r7, #0
 8008e10:	2064      	movs	r0, #100	; 0x64
 8008e12:	f44f 75c8 	mov.w	r5, #400	; 0x190
 8008e16:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 8008e1a:	2a01      	cmp	r2, #1
 8008e1c:	bf14      	ite	ne
 8008e1e:	f856 c022 	ldrne.w	ip, [r6, r2, lsl #2]
 8008e22:	469c      	moveq	ip, r3
 8008e24:	4561      	cmp	r1, ip
 8008e26:	ddeb      	ble.n	8008e00 <validate_structure+0xf0>
 8008e28:	3201      	adds	r2, #1
 8008e2a:	eba1 010c 	sub.w	r1, r1, ip
 8008e2e:	2a0c      	cmp	r2, #12
 8008e30:	60e1      	str	r1, [r4, #12]
 8008e32:	6122      	str	r2, [r4, #16]
 8008e34:	d1ef      	bne.n	8008e16 <validate_structure+0x106>
 8008e36:	6963      	ldr	r3, [r4, #20]
 8008e38:	1c5a      	adds	r2, r3, #1
 8008e3a:	0791      	lsls	r1, r2, #30
 8008e3c:	e9c4 7204 	strd	r7, r2, [r4, #16]
 8008e40:	d137      	bne.n	8008eb2 <validate_structure+0x1a2>
 8008e42:	fb92 f1f0 	sdiv	r1, r2, r0
 8008e46:	fb00 2211 	mls	r2, r0, r1, r2
 8008e4a:	2a00      	cmp	r2, #0
 8008e4c:	d133      	bne.n	8008eb6 <validate_structure+0x1a6>
 8008e4e:	f203 736d 	addw	r3, r3, #1901	; 0x76d
 8008e52:	fb93 f2f5 	sdiv	r2, r3, r5
 8008e56:	fb05 3312 	mls	r3, r5, r2, r3
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	bf14      	ite	ne
 8008e5e:	231c      	movne	r3, #28
 8008e60:	231d      	moveq	r3, #29
 8008e62:	e7d8      	b.n	8008e16 <validate_structure+0x106>
 8008e64:	6921      	ldr	r1, [r4, #16]
 8008e66:	3901      	subs	r1, #1
 8008e68:	6121      	str	r1, [r4, #16]
 8008e6a:	3101      	adds	r1, #1
 8008e6c:	d114      	bne.n	8008e98 <validate_structure+0x188>
 8008e6e:	6963      	ldr	r3, [r4, #20]
 8008e70:	1e5a      	subs	r2, r3, #1
 8008e72:	0791      	lsls	r1, r2, #30
 8008e74:	e9c4 6204 	strd	r6, r2, [r4, #16]
 8008e78:	d117      	bne.n	8008eaa <validate_structure+0x19a>
 8008e7a:	fb92 f1f0 	sdiv	r1, r2, r0
 8008e7e:	fb00 2211 	mls	r2, r0, r1, r2
 8008e82:	b9a2      	cbnz	r2, 8008eae <validate_structure+0x19e>
 8008e84:	f203 736b 	addw	r3, r3, #1899	; 0x76b
 8008e88:	fb93 f2f5 	sdiv	r2, r3, r5
 8008e8c:	fb05 3312 	mls	r3, r5, r2, r3
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	bf14      	ite	ne
 8008e94:	231c      	movne	r3, #28
 8008e96:	231d      	moveq	r3, #29
 8008e98:	6922      	ldr	r2, [r4, #16]
 8008e9a:	2a01      	cmp	r2, #1
 8008e9c:	bf14      	ite	ne
 8008e9e:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
 8008ea2:	461a      	moveq	r2, r3
 8008ea4:	4462      	add	r2, ip
 8008ea6:	60e2      	str	r2, [r4, #12]
 8008ea8:	e7a5      	b.n	8008df6 <validate_structure+0xe6>
 8008eaa:	231c      	movs	r3, #28
 8008eac:	e7f4      	b.n	8008e98 <validate_structure+0x188>
 8008eae:	231d      	movs	r3, #29
 8008eb0:	e7f2      	b.n	8008e98 <validate_structure+0x188>
 8008eb2:	231c      	movs	r3, #28
 8008eb4:	e7af      	b.n	8008e16 <validate_structure+0x106>
 8008eb6:	231d      	movs	r3, #29
 8008eb8:	e7ad      	b.n	8008e16 <validate_structure+0x106>
 8008eba:	bf00      	nop
 8008ebc:	0800fd18 	.word	0x0800fd18

08008ec0 <mktime>:
 8008ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ec4:	b085      	sub	sp, #20
 8008ec6:	4607      	mov	r7, r0
 8008ec8:	f004 fb62 	bl	800d590 <__gettzinfo>
 8008ecc:	4681      	mov	r9, r0
 8008ece:	4638      	mov	r0, r7
 8008ed0:	f7ff ff1e 	bl	8008d10 <validate_structure>
 8008ed4:	e9d7 4000 	ldrd	r4, r0, [r7]
 8008ed8:	233c      	movs	r3, #60	; 0x3c
 8008eda:	fb03 4400 	mla	r4, r3, r0, r4
 8008ede:	68b8      	ldr	r0, [r7, #8]
 8008ee0:	4abc      	ldr	r2, [pc, #752]	; (80091d4 <mktime+0x314>)
 8008ee2:	697e      	ldr	r6, [r7, #20]
 8008ee4:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 8008ee8:	fb03 4400 	mla	r4, r3, r0, r4
 8008eec:	e9d7 5303 	ldrd	r5, r3, [r7, #12]
 8008ef0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008ef4:	3d01      	subs	r5, #1
 8008ef6:	2b01      	cmp	r3, #1
 8008ef8:	4415      	add	r5, r2
 8008efa:	dd11      	ble.n	8008f20 <mktime+0x60>
 8008efc:	07b1      	lsls	r1, r6, #30
 8008efe:	d10f      	bne.n	8008f20 <mktime+0x60>
 8008f00:	2264      	movs	r2, #100	; 0x64
 8008f02:	fb96 f3f2 	sdiv	r3, r6, r2
 8008f06:	fb02 6313 	mls	r3, r2, r3, r6
 8008f0a:	b943      	cbnz	r3, 8008f1e <mktime+0x5e>
 8008f0c:	f206 736c 	addw	r3, r6, #1900	; 0x76c
 8008f10:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008f14:	fb93 f1f2 	sdiv	r1, r3, r2
 8008f18:	fb02 3311 	mls	r3, r2, r1, r3
 8008f1c:	b903      	cbnz	r3, 8008f20 <mktime+0x60>
 8008f1e:	3501      	adds	r5, #1
 8008f20:	f506 531c 	add.w	r3, r6, #9984	; 0x2700
 8008f24:	3310      	adds	r3, #16
 8008f26:	f644 6220 	movw	r2, #20000	; 0x4e20
 8008f2a:	4293      	cmp	r3, r2
 8008f2c:	61fd      	str	r5, [r7, #28]
 8008f2e:	f200 815d 	bhi.w	80091ec <mktime+0x32c>
 8008f32:	2e46      	cmp	r6, #70	; 0x46
 8008f34:	dd71      	ble.n	800901a <mktime+0x15a>
 8008f36:	2346      	movs	r3, #70	; 0x46
 8008f38:	f240 1c6d 	movw	ip, #365	; 0x16d
 8008f3c:	2164      	movs	r1, #100	; 0x64
 8008f3e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8008f42:	079a      	lsls	r2, r3, #30
 8008f44:	d163      	bne.n	800900e <mktime+0x14e>
 8008f46:	fb93 f2f1 	sdiv	r2, r3, r1
 8008f4a:	fb01 3212 	mls	r2, r1, r2, r3
 8008f4e:	2a00      	cmp	r2, #0
 8008f50:	d160      	bne.n	8009014 <mktime+0x154>
 8008f52:	f203 726c 	addw	r2, r3, #1900	; 0x76c
 8008f56:	fb92 fef0 	sdiv	lr, r2, r0
 8008f5a:	fb00 221e 	mls	r2, r0, lr, r2
 8008f5e:	2a00      	cmp	r2, #0
 8008f60:	bf14      	ite	ne
 8008f62:	4662      	movne	r2, ip
 8008f64:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
 8008f68:	3301      	adds	r3, #1
 8008f6a:	429e      	cmp	r6, r3
 8008f6c:	4415      	add	r5, r2
 8008f6e:	d1e8      	bne.n	8008f42 <mktime+0x82>
 8008f70:	4b99      	ldr	r3, [pc, #612]	; (80091d8 <mktime+0x318>)
 8008f72:	ea4f 78e4 	mov.w	r8, r4, asr #31
 8008f76:	fbc5 4803 	smlal	r4, r8, r5, r3
 8008f7a:	f002 fedf 	bl	800bd3c <__tz_lock>
 8008f7e:	f002 fee9 	bl	800bd54 <_tzset_unlocked>
 8008f82:	4b96      	ldr	r3, [pc, #600]	; (80091dc <mktime+0x31c>)
 8008f84:	f8d3 b000 	ldr.w	fp, [r3]
 8008f88:	f1bb 0f00 	cmp.w	fp, #0
 8008f8c:	d039      	beq.n	8009002 <mktime+0x142>
 8008f8e:	f8d7 b020 	ldr.w	fp, [r7, #32]
 8008f92:	6978      	ldr	r0, [r7, #20]
 8008f94:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8008f98:	f1bb 0f01 	cmp.w	fp, #1
 8008f9c:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8008fa0:	46da      	mov	sl, fp
 8008fa2:	bfa8      	it	ge
 8008fa4:	f04f 0a01 	movge.w	sl, #1
 8008fa8:	4283      	cmp	r3, r0
 8008faa:	d178      	bne.n	800909e <mktime+0x1de>
 8008fac:	e9d9 3208 	ldrd	r3, r2, [r9, #32]
 8008fb0:	f8d9 1050 	ldr.w	r1, [r9, #80]	; 0x50
 8008fb4:	f8d9 e04c 	ldr.w	lr, [r9, #76]	; 0x4c
 8008fb8:	1a5b      	subs	r3, r3, r1
 8008fba:	9302      	str	r3, [sp, #8]
 8008fbc:	eb62 73e1 	sbc.w	r3, r2, r1, asr #31
 8008fc0:	9303      	str	r3, [sp, #12]
 8008fc2:	f8d9 2028 	ldr.w	r2, [r9, #40]	; 0x28
 8008fc6:	f8d9 3048 	ldr.w	r3, [r9, #72]	; 0x48
 8008fca:	9301      	str	r3, [sp, #4]
 8008fcc:	ebb3 0c02 	subs.w	ip, r3, r2
 8008fd0:	eb6e 70e2 	sbc.w	r0, lr, r2, asr #31
 8008fd4:	4564      	cmp	r4, ip
 8008fd6:	eb78 0300 	sbcs.w	r3, r8, r0
 8008fda:	da66      	bge.n	80090aa <mktime+0x1ea>
 8008fdc:	f8d9 3000 	ldr.w	r3, [r9]
 8008fe0:	2b00      	cmp	r3, #0
 8008fe2:	d06f      	beq.n	80090c4 <mktime+0x204>
 8008fe4:	9b02      	ldr	r3, [sp, #8]
 8008fe6:	429c      	cmp	r4, r3
 8008fe8:	9b03      	ldr	r3, [sp, #12]
 8008fea:	eb78 0303 	sbcs.w	r3, r8, r3
 8008fee:	db03      	blt.n	8008ff8 <mktime+0x138>
 8008ff0:	4564      	cmp	r4, ip
 8008ff2:	eb78 0300 	sbcs.w	r3, r8, r0
 8008ff6:	db6b      	blt.n	80090d0 <mktime+0x210>
 8008ff8:	f1bb 0f00 	cmp.w	fp, #0
 8008ffc:	f04f 0b00 	mov.w	fp, #0
 8009000:	da6b      	bge.n	80090da <mktime+0x21a>
 8009002:	f8d9 1028 	ldr.w	r1, [r9, #40]	; 0x28
 8009006:	190c      	adds	r4, r1, r4
 8009008:	eb48 78e1 	adc.w	r8, r8, r1, asr #31
 800900c:	e0a9      	b.n	8009162 <mktime+0x2a2>
 800900e:	f240 126d 	movw	r2, #365	; 0x16d
 8009012:	e7a9      	b.n	8008f68 <mktime+0xa8>
 8009014:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8009018:	e7a6      	b.n	8008f68 <mktime+0xa8>
 800901a:	d0a9      	beq.n	8008f70 <mktime+0xb0>
 800901c:	2345      	movs	r3, #69	; 0x45
 800901e:	f240 1c6d 	movw	ip, #365	; 0x16d
 8009022:	2164      	movs	r1, #100	; 0x64
 8009024:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009028:	e012      	b.n	8009050 <mktime+0x190>
 800902a:	bb62      	cbnz	r2, 8009086 <mktime+0x1c6>
 800902c:	fb93 f2f1 	sdiv	r2, r3, r1
 8009030:	fb01 3212 	mls	r2, r1, r2, r3
 8009034:	bb52      	cbnz	r2, 800908c <mktime+0x1cc>
 8009036:	f203 726c 	addw	r2, r3, #1900	; 0x76c
 800903a:	fb92 fef0 	sdiv	lr, r2, r0
 800903e:	fb00 221e 	mls	r2, r0, lr, r2
 8009042:	2a00      	cmp	r2, #0
 8009044:	bf14      	ite	ne
 8009046:	4662      	movne	r2, ip
 8009048:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
 800904c:	1aad      	subs	r5, r5, r2
 800904e:	3b01      	subs	r3, #1
 8009050:	429e      	cmp	r6, r3
 8009052:	f003 0203 	and.w	r2, r3, #3
 8009056:	dbe8      	blt.n	800902a <mktime+0x16a>
 8009058:	b9da      	cbnz	r2, 8009092 <mktime+0x1d2>
 800905a:	2264      	movs	r2, #100	; 0x64
 800905c:	fb96 f3f2 	sdiv	r3, r6, r2
 8009060:	fb02 6313 	mls	r3, r2, r3, r6
 8009064:	b9c3      	cbnz	r3, 8009098 <mktime+0x1d8>
 8009066:	f206 736c 	addw	r3, r6, #1900	; 0x76c
 800906a:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800906e:	fb93 f1f2 	sdiv	r1, r3, r2
 8009072:	fb02 3311 	mls	r3, r2, r1, r3
 8009076:	2b00      	cmp	r3, #0
 8009078:	f240 136d 	movw	r3, #365	; 0x16d
 800907c:	bf08      	it	eq
 800907e:	f44f 73b7 	moveq.w	r3, #366	; 0x16e
 8009082:	1aed      	subs	r5, r5, r3
 8009084:	e774      	b.n	8008f70 <mktime+0xb0>
 8009086:	f240 126d 	movw	r2, #365	; 0x16d
 800908a:	e7df      	b.n	800904c <mktime+0x18c>
 800908c:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8009090:	e7dc      	b.n	800904c <mktime+0x18c>
 8009092:	f240 136d 	movw	r3, #365	; 0x16d
 8009096:	e7f4      	b.n	8009082 <mktime+0x1c2>
 8009098:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800909c:	e7f1      	b.n	8009082 <mktime+0x1c2>
 800909e:	f002 fda3 	bl	800bbe8 <__tzcalc_limits>
 80090a2:	2800      	cmp	r0, #0
 80090a4:	d182      	bne.n	8008fac <mktime+0xec>
 80090a6:	46d3      	mov	fp, sl
 80090a8:	e050      	b.n	800914c <mktime+0x28c>
 80090aa:	9b01      	ldr	r3, [sp, #4]
 80090ac:	1a5b      	subs	r3, r3, r1
 80090ae:	9301      	str	r3, [sp, #4]
 80090b0:	ea4f 73e1 	mov.w	r3, r1, asr #31
 80090b4:	eb6e 0e03 	sbc.w	lr, lr, r3
 80090b8:	9b01      	ldr	r3, [sp, #4]
 80090ba:	429c      	cmp	r4, r3
 80090bc:	eb78 030e 	sbcs.w	r3, r8, lr
 80090c0:	dbf1      	blt.n	80090a6 <mktime+0x1e6>
 80090c2:	e78b      	b.n	8008fdc <mktime+0x11c>
 80090c4:	9b02      	ldr	r3, [sp, #8]
 80090c6:	429c      	cmp	r4, r3
 80090c8:	9b03      	ldr	r3, [sp, #12]
 80090ca:	eb78 0303 	sbcs.w	r3, r8, r3
 80090ce:	db8f      	blt.n	8008ff0 <mktime+0x130>
 80090d0:	f1bb 0f00 	cmp.w	fp, #0
 80090d4:	db3e      	blt.n	8009154 <mktime+0x294>
 80090d6:	f04f 0b01 	mov.w	fp, #1
 80090da:	ea8a 0a0b 	eor.w	sl, sl, fp
 80090de:	f1ba 0f01 	cmp.w	sl, #1
 80090e2:	d133      	bne.n	800914c <mktime+0x28c>
 80090e4:	f1bb 0f00 	cmp.w	fp, #0
 80090e8:	d04e      	beq.n	8009188 <mktime+0x2c8>
 80090ea:	1a52      	subs	r2, r2, r1
 80090ec:	683b      	ldr	r3, [r7, #0]
 80090ee:	f8d7 a00c 	ldr.w	sl, [r7, #12]
 80090f2:	4413      	add	r3, r2
 80090f4:	1914      	adds	r4, r2, r4
 80090f6:	603b      	str	r3, [r7, #0]
 80090f8:	4638      	mov	r0, r7
 80090fa:	eb48 78e2 	adc.w	r8, r8, r2, asr #31
 80090fe:	f7ff fe07 	bl	8008d10 <validate_structure>
 8009102:	68fa      	ldr	r2, [r7, #12]
 8009104:	ebb2 020a 	subs.w	r2, r2, sl
 8009108:	d020      	beq.n	800914c <mktime+0x28c>
 800910a:	2a01      	cmp	r2, #1
 800910c:	dc3e      	bgt.n	800918c <mktime+0x2cc>
 800910e:	1c90      	adds	r0, r2, #2
 8009110:	bfd8      	it	le
 8009112:	2201      	movle	r2, #1
 8009114:	69fb      	ldr	r3, [r7, #28]
 8009116:	18d3      	adds	r3, r2, r3
 8009118:	4415      	add	r5, r2
 800911a:	d540      	bpl.n	800919e <mktime+0x2de>
 800911c:	1e73      	subs	r3, r6, #1
 800911e:	0799      	lsls	r1, r3, #30
 8009120:	d137      	bne.n	8009192 <mktime+0x2d2>
 8009122:	2264      	movs	r2, #100	; 0x64
 8009124:	fb93 f1f2 	sdiv	r1, r3, r2
 8009128:	fb02 3311 	mls	r3, r2, r1, r3
 800912c:	bba3      	cbnz	r3, 8009198 <mktime+0x2d8>
 800912e:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8009132:	f206 766b 	addw	r6, r6, #1899	; 0x76b
 8009136:	fb96 f2f3 	sdiv	r2, r6, r3
 800913a:	fb03 6612 	mls	r6, r3, r2, r6
 800913e:	2e00      	cmp	r6, #0
 8009140:	f240 136d 	movw	r3, #365	; 0x16d
 8009144:	bf18      	it	ne
 8009146:	f44f 73b6 	movne.w	r3, #364	; 0x16c
 800914a:	61fb      	str	r3, [r7, #28]
 800914c:	f1bb 0f01 	cmp.w	fp, #1
 8009150:	f47f af57 	bne.w	8009002 <mktime+0x142>
 8009154:	f8d9 1050 	ldr.w	r1, [r9, #80]	; 0x50
 8009158:	190c      	adds	r4, r1, r4
 800915a:	eb48 78e1 	adc.w	r8, r8, r1, asr #31
 800915e:	f04f 0b01 	mov.w	fp, #1
 8009162:	f002 fdf1 	bl	800bd48 <__tz_unlock>
 8009166:	3504      	adds	r5, #4
 8009168:	2307      	movs	r3, #7
 800916a:	fb95 f3f3 	sdiv	r3, r5, r3
 800916e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8009172:	1aed      	subs	r5, r5, r3
 8009174:	bf48      	it	mi
 8009176:	3507      	addmi	r5, #7
 8009178:	f8c7 b020 	str.w	fp, [r7, #32]
 800917c:	61bd      	str	r5, [r7, #24]
 800917e:	4620      	mov	r0, r4
 8009180:	4641      	mov	r1, r8
 8009182:	b005      	add	sp, #20
 8009184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009188:	1a8a      	subs	r2, r1, r2
 800918a:	e7af      	b.n	80090ec <mktime+0x22c>
 800918c:	f04f 32ff 	mov.w	r2, #4294967295
 8009190:	e7c0      	b.n	8009114 <mktime+0x254>
 8009192:	f44f 73b6 	mov.w	r3, #364	; 0x16c
 8009196:	e7d8      	b.n	800914a <mktime+0x28a>
 8009198:	f240 136d 	movw	r3, #365	; 0x16d
 800919c:	e7d5      	b.n	800914a <mktime+0x28a>
 800919e:	07b2      	lsls	r2, r6, #30
 80091a0:	d11e      	bne.n	80091e0 <mktime+0x320>
 80091a2:	2164      	movs	r1, #100	; 0x64
 80091a4:	fb96 f2f1 	sdiv	r2, r6, r1
 80091a8:	fb01 6212 	mls	r2, r1, r2, r6
 80091ac:	b9da      	cbnz	r2, 80091e6 <mktime+0x326>
 80091ae:	f44f 72c8 	mov.w	r2, #400	; 0x190
 80091b2:	f206 766c 	addw	r6, r6, #1900	; 0x76c
 80091b6:	fb96 f1f2 	sdiv	r1, r6, r2
 80091ba:	fb02 6611 	mls	r6, r2, r1, r6
 80091be:	2e00      	cmp	r6, #0
 80091c0:	f240 126d 	movw	r2, #365	; 0x16d
 80091c4:	bf08      	it	eq
 80091c6:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
 80091ca:	4293      	cmp	r3, r2
 80091cc:	bfa8      	it	ge
 80091ce:	1a9b      	subge	r3, r3, r2
 80091d0:	e7bb      	b.n	800914a <mktime+0x28a>
 80091d2:	bf00      	nop
 80091d4:	0800fd48 	.word	0x0800fd48
 80091d8:	00015180 	.word	0x00015180
 80091dc:	20000350 	.word	0x20000350
 80091e0:	f240 126d 	movw	r2, #365	; 0x16d
 80091e4:	e7f1      	b.n	80091ca <mktime+0x30a>
 80091e6:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 80091ea:	e7ee      	b.n	80091ca <mktime+0x30a>
 80091ec:	f04f 34ff 	mov.w	r4, #4294967295
 80091f0:	46a0      	mov	r8, r4
 80091f2:	e7c4      	b.n	800917e <mktime+0x2be>

080091f4 <_free_r>:
 80091f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80091f6:	2900      	cmp	r1, #0
 80091f8:	d044      	beq.n	8009284 <_free_r+0x90>
 80091fa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80091fe:	9001      	str	r0, [sp, #4]
 8009200:	2b00      	cmp	r3, #0
 8009202:	f1a1 0404 	sub.w	r4, r1, #4
 8009206:	bfb8      	it	lt
 8009208:	18e4      	addlt	r4, r4, r3
 800920a:	f004 faa3 	bl	800d754 <__malloc_lock>
 800920e:	4a1e      	ldr	r2, [pc, #120]	; (8009288 <_free_r+0x94>)
 8009210:	9801      	ldr	r0, [sp, #4]
 8009212:	6813      	ldr	r3, [r2, #0]
 8009214:	b933      	cbnz	r3, 8009224 <_free_r+0x30>
 8009216:	6063      	str	r3, [r4, #4]
 8009218:	6014      	str	r4, [r2, #0]
 800921a:	b003      	add	sp, #12
 800921c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009220:	f004 ba9e 	b.w	800d760 <__malloc_unlock>
 8009224:	42a3      	cmp	r3, r4
 8009226:	d908      	bls.n	800923a <_free_r+0x46>
 8009228:	6825      	ldr	r5, [r4, #0]
 800922a:	1961      	adds	r1, r4, r5
 800922c:	428b      	cmp	r3, r1
 800922e:	bf01      	itttt	eq
 8009230:	6819      	ldreq	r1, [r3, #0]
 8009232:	685b      	ldreq	r3, [r3, #4]
 8009234:	1949      	addeq	r1, r1, r5
 8009236:	6021      	streq	r1, [r4, #0]
 8009238:	e7ed      	b.n	8009216 <_free_r+0x22>
 800923a:	461a      	mov	r2, r3
 800923c:	685b      	ldr	r3, [r3, #4]
 800923e:	b10b      	cbz	r3, 8009244 <_free_r+0x50>
 8009240:	42a3      	cmp	r3, r4
 8009242:	d9fa      	bls.n	800923a <_free_r+0x46>
 8009244:	6811      	ldr	r1, [r2, #0]
 8009246:	1855      	adds	r5, r2, r1
 8009248:	42a5      	cmp	r5, r4
 800924a:	d10b      	bne.n	8009264 <_free_r+0x70>
 800924c:	6824      	ldr	r4, [r4, #0]
 800924e:	4421      	add	r1, r4
 8009250:	1854      	adds	r4, r2, r1
 8009252:	42a3      	cmp	r3, r4
 8009254:	6011      	str	r1, [r2, #0]
 8009256:	d1e0      	bne.n	800921a <_free_r+0x26>
 8009258:	681c      	ldr	r4, [r3, #0]
 800925a:	685b      	ldr	r3, [r3, #4]
 800925c:	6053      	str	r3, [r2, #4]
 800925e:	4421      	add	r1, r4
 8009260:	6011      	str	r1, [r2, #0]
 8009262:	e7da      	b.n	800921a <_free_r+0x26>
 8009264:	d902      	bls.n	800926c <_free_r+0x78>
 8009266:	230c      	movs	r3, #12
 8009268:	6003      	str	r3, [r0, #0]
 800926a:	e7d6      	b.n	800921a <_free_r+0x26>
 800926c:	6825      	ldr	r5, [r4, #0]
 800926e:	1961      	adds	r1, r4, r5
 8009270:	428b      	cmp	r3, r1
 8009272:	bf04      	itt	eq
 8009274:	6819      	ldreq	r1, [r3, #0]
 8009276:	685b      	ldreq	r3, [r3, #4]
 8009278:	6063      	str	r3, [r4, #4]
 800927a:	bf04      	itt	eq
 800927c:	1949      	addeq	r1, r1, r5
 800927e:	6021      	streq	r1, [r4, #0]
 8009280:	6054      	str	r4, [r2, #4]
 8009282:	e7ca      	b.n	800921a <_free_r+0x26>
 8009284:	b003      	add	sp, #12
 8009286:	bd30      	pop	{r4, r5, pc}
 8009288:	2000032c 	.word	0x2000032c

0800928c <sbrk_aligned>:
 800928c:	b570      	push	{r4, r5, r6, lr}
 800928e:	4e0e      	ldr	r6, [pc, #56]	; (80092c8 <sbrk_aligned+0x3c>)
 8009290:	460c      	mov	r4, r1
 8009292:	6831      	ldr	r1, [r6, #0]
 8009294:	4605      	mov	r5, r0
 8009296:	b911      	cbnz	r1, 800929e <sbrk_aligned+0x12>
 8009298:	f000 ff06 	bl	800a0a8 <_sbrk_r>
 800929c:	6030      	str	r0, [r6, #0]
 800929e:	4621      	mov	r1, r4
 80092a0:	4628      	mov	r0, r5
 80092a2:	f000 ff01 	bl	800a0a8 <_sbrk_r>
 80092a6:	1c43      	adds	r3, r0, #1
 80092a8:	d00a      	beq.n	80092c0 <sbrk_aligned+0x34>
 80092aa:	1cc4      	adds	r4, r0, #3
 80092ac:	f024 0403 	bic.w	r4, r4, #3
 80092b0:	42a0      	cmp	r0, r4
 80092b2:	d007      	beq.n	80092c4 <sbrk_aligned+0x38>
 80092b4:	1a21      	subs	r1, r4, r0
 80092b6:	4628      	mov	r0, r5
 80092b8:	f000 fef6 	bl	800a0a8 <_sbrk_r>
 80092bc:	3001      	adds	r0, #1
 80092be:	d101      	bne.n	80092c4 <sbrk_aligned+0x38>
 80092c0:	f04f 34ff 	mov.w	r4, #4294967295
 80092c4:	4620      	mov	r0, r4
 80092c6:	bd70      	pop	{r4, r5, r6, pc}
 80092c8:	20000330 	.word	0x20000330

080092cc <_malloc_r>:
 80092cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092d0:	1ccd      	adds	r5, r1, #3
 80092d2:	f025 0503 	bic.w	r5, r5, #3
 80092d6:	3508      	adds	r5, #8
 80092d8:	2d0c      	cmp	r5, #12
 80092da:	bf38      	it	cc
 80092dc:	250c      	movcc	r5, #12
 80092de:	2d00      	cmp	r5, #0
 80092e0:	4607      	mov	r7, r0
 80092e2:	db01      	blt.n	80092e8 <_malloc_r+0x1c>
 80092e4:	42a9      	cmp	r1, r5
 80092e6:	d905      	bls.n	80092f4 <_malloc_r+0x28>
 80092e8:	230c      	movs	r3, #12
 80092ea:	603b      	str	r3, [r7, #0]
 80092ec:	2600      	movs	r6, #0
 80092ee:	4630      	mov	r0, r6
 80092f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80092f4:	4e2e      	ldr	r6, [pc, #184]	; (80093b0 <_malloc_r+0xe4>)
 80092f6:	f004 fa2d 	bl	800d754 <__malloc_lock>
 80092fa:	6833      	ldr	r3, [r6, #0]
 80092fc:	461c      	mov	r4, r3
 80092fe:	bb34      	cbnz	r4, 800934e <_malloc_r+0x82>
 8009300:	4629      	mov	r1, r5
 8009302:	4638      	mov	r0, r7
 8009304:	f7ff ffc2 	bl	800928c <sbrk_aligned>
 8009308:	1c43      	adds	r3, r0, #1
 800930a:	4604      	mov	r4, r0
 800930c:	d14d      	bne.n	80093aa <_malloc_r+0xde>
 800930e:	6834      	ldr	r4, [r6, #0]
 8009310:	4626      	mov	r6, r4
 8009312:	2e00      	cmp	r6, #0
 8009314:	d140      	bne.n	8009398 <_malloc_r+0xcc>
 8009316:	6823      	ldr	r3, [r4, #0]
 8009318:	4631      	mov	r1, r6
 800931a:	4638      	mov	r0, r7
 800931c:	eb04 0803 	add.w	r8, r4, r3
 8009320:	f000 fec2 	bl	800a0a8 <_sbrk_r>
 8009324:	4580      	cmp	r8, r0
 8009326:	d13a      	bne.n	800939e <_malloc_r+0xd2>
 8009328:	6821      	ldr	r1, [r4, #0]
 800932a:	3503      	adds	r5, #3
 800932c:	1a6d      	subs	r5, r5, r1
 800932e:	f025 0503 	bic.w	r5, r5, #3
 8009332:	3508      	adds	r5, #8
 8009334:	2d0c      	cmp	r5, #12
 8009336:	bf38      	it	cc
 8009338:	250c      	movcc	r5, #12
 800933a:	4629      	mov	r1, r5
 800933c:	4638      	mov	r0, r7
 800933e:	f7ff ffa5 	bl	800928c <sbrk_aligned>
 8009342:	3001      	adds	r0, #1
 8009344:	d02b      	beq.n	800939e <_malloc_r+0xd2>
 8009346:	6823      	ldr	r3, [r4, #0]
 8009348:	442b      	add	r3, r5
 800934a:	6023      	str	r3, [r4, #0]
 800934c:	e00e      	b.n	800936c <_malloc_r+0xa0>
 800934e:	6822      	ldr	r2, [r4, #0]
 8009350:	1b52      	subs	r2, r2, r5
 8009352:	d41e      	bmi.n	8009392 <_malloc_r+0xc6>
 8009354:	2a0b      	cmp	r2, #11
 8009356:	d916      	bls.n	8009386 <_malloc_r+0xba>
 8009358:	1961      	adds	r1, r4, r5
 800935a:	42a3      	cmp	r3, r4
 800935c:	6025      	str	r5, [r4, #0]
 800935e:	bf18      	it	ne
 8009360:	6059      	strne	r1, [r3, #4]
 8009362:	6863      	ldr	r3, [r4, #4]
 8009364:	bf08      	it	eq
 8009366:	6031      	streq	r1, [r6, #0]
 8009368:	5162      	str	r2, [r4, r5]
 800936a:	604b      	str	r3, [r1, #4]
 800936c:	4638      	mov	r0, r7
 800936e:	f104 060b 	add.w	r6, r4, #11
 8009372:	f004 f9f5 	bl	800d760 <__malloc_unlock>
 8009376:	f026 0607 	bic.w	r6, r6, #7
 800937a:	1d23      	adds	r3, r4, #4
 800937c:	1af2      	subs	r2, r6, r3
 800937e:	d0b6      	beq.n	80092ee <_malloc_r+0x22>
 8009380:	1b9b      	subs	r3, r3, r6
 8009382:	50a3      	str	r3, [r4, r2]
 8009384:	e7b3      	b.n	80092ee <_malloc_r+0x22>
 8009386:	6862      	ldr	r2, [r4, #4]
 8009388:	42a3      	cmp	r3, r4
 800938a:	bf0c      	ite	eq
 800938c:	6032      	streq	r2, [r6, #0]
 800938e:	605a      	strne	r2, [r3, #4]
 8009390:	e7ec      	b.n	800936c <_malloc_r+0xa0>
 8009392:	4623      	mov	r3, r4
 8009394:	6864      	ldr	r4, [r4, #4]
 8009396:	e7b2      	b.n	80092fe <_malloc_r+0x32>
 8009398:	4634      	mov	r4, r6
 800939a:	6876      	ldr	r6, [r6, #4]
 800939c:	e7b9      	b.n	8009312 <_malloc_r+0x46>
 800939e:	230c      	movs	r3, #12
 80093a0:	603b      	str	r3, [r7, #0]
 80093a2:	4638      	mov	r0, r7
 80093a4:	f004 f9dc 	bl	800d760 <__malloc_unlock>
 80093a8:	e7a1      	b.n	80092ee <_malloc_r+0x22>
 80093aa:	6025      	str	r5, [r4, #0]
 80093ac:	e7de      	b.n	800936c <_malloc_r+0xa0>
 80093ae:	bf00      	nop
 80093b0:	2000032c 	.word	0x2000032c

080093b4 <__cvt>:
 80093b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80093b8:	ec55 4b10 	vmov	r4, r5, d0
 80093bc:	2d00      	cmp	r5, #0
 80093be:	460e      	mov	r6, r1
 80093c0:	4619      	mov	r1, r3
 80093c2:	462b      	mov	r3, r5
 80093c4:	bfbb      	ittet	lt
 80093c6:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80093ca:	461d      	movlt	r5, r3
 80093cc:	2300      	movge	r3, #0
 80093ce:	232d      	movlt	r3, #45	; 0x2d
 80093d0:	700b      	strb	r3, [r1, #0]
 80093d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80093d4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80093d8:	4691      	mov	r9, r2
 80093da:	f023 0820 	bic.w	r8, r3, #32
 80093de:	bfbc      	itt	lt
 80093e0:	4622      	movlt	r2, r4
 80093e2:	4614      	movlt	r4, r2
 80093e4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80093e8:	d005      	beq.n	80093f6 <__cvt+0x42>
 80093ea:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80093ee:	d100      	bne.n	80093f2 <__cvt+0x3e>
 80093f0:	3601      	adds	r6, #1
 80093f2:	2102      	movs	r1, #2
 80093f4:	e000      	b.n	80093f8 <__cvt+0x44>
 80093f6:	2103      	movs	r1, #3
 80093f8:	ab03      	add	r3, sp, #12
 80093fa:	9301      	str	r3, [sp, #4]
 80093fc:	ab02      	add	r3, sp, #8
 80093fe:	9300      	str	r3, [sp, #0]
 8009400:	ec45 4b10 	vmov	d0, r4, r5
 8009404:	4653      	mov	r3, sl
 8009406:	4632      	mov	r2, r6
 8009408:	f002 ff0e 	bl	800c228 <_dtoa_r>
 800940c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8009410:	4607      	mov	r7, r0
 8009412:	d102      	bne.n	800941a <__cvt+0x66>
 8009414:	f019 0f01 	tst.w	r9, #1
 8009418:	d022      	beq.n	8009460 <__cvt+0xac>
 800941a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800941e:	eb07 0906 	add.w	r9, r7, r6
 8009422:	d110      	bne.n	8009446 <__cvt+0x92>
 8009424:	783b      	ldrb	r3, [r7, #0]
 8009426:	2b30      	cmp	r3, #48	; 0x30
 8009428:	d10a      	bne.n	8009440 <__cvt+0x8c>
 800942a:	2200      	movs	r2, #0
 800942c:	2300      	movs	r3, #0
 800942e:	4620      	mov	r0, r4
 8009430:	4629      	mov	r1, r5
 8009432:	f7f7 fb61 	bl	8000af8 <__aeabi_dcmpeq>
 8009436:	b918      	cbnz	r0, 8009440 <__cvt+0x8c>
 8009438:	f1c6 0601 	rsb	r6, r6, #1
 800943c:	f8ca 6000 	str.w	r6, [sl]
 8009440:	f8da 3000 	ldr.w	r3, [sl]
 8009444:	4499      	add	r9, r3
 8009446:	2200      	movs	r2, #0
 8009448:	2300      	movs	r3, #0
 800944a:	4620      	mov	r0, r4
 800944c:	4629      	mov	r1, r5
 800944e:	f7f7 fb53 	bl	8000af8 <__aeabi_dcmpeq>
 8009452:	b108      	cbz	r0, 8009458 <__cvt+0xa4>
 8009454:	f8cd 900c 	str.w	r9, [sp, #12]
 8009458:	2230      	movs	r2, #48	; 0x30
 800945a:	9b03      	ldr	r3, [sp, #12]
 800945c:	454b      	cmp	r3, r9
 800945e:	d307      	bcc.n	8009470 <__cvt+0xbc>
 8009460:	9b03      	ldr	r3, [sp, #12]
 8009462:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009464:	1bdb      	subs	r3, r3, r7
 8009466:	4638      	mov	r0, r7
 8009468:	6013      	str	r3, [r2, #0]
 800946a:	b004      	add	sp, #16
 800946c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009470:	1c59      	adds	r1, r3, #1
 8009472:	9103      	str	r1, [sp, #12]
 8009474:	701a      	strb	r2, [r3, #0]
 8009476:	e7f0      	b.n	800945a <__cvt+0xa6>

08009478 <__exponent>:
 8009478:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800947a:	4603      	mov	r3, r0
 800947c:	2900      	cmp	r1, #0
 800947e:	bfb8      	it	lt
 8009480:	4249      	neglt	r1, r1
 8009482:	f803 2b02 	strb.w	r2, [r3], #2
 8009486:	bfb4      	ite	lt
 8009488:	222d      	movlt	r2, #45	; 0x2d
 800948a:	222b      	movge	r2, #43	; 0x2b
 800948c:	2909      	cmp	r1, #9
 800948e:	7042      	strb	r2, [r0, #1]
 8009490:	dd2a      	ble.n	80094e8 <__exponent+0x70>
 8009492:	f10d 0407 	add.w	r4, sp, #7
 8009496:	46a4      	mov	ip, r4
 8009498:	270a      	movs	r7, #10
 800949a:	46a6      	mov	lr, r4
 800949c:	460a      	mov	r2, r1
 800949e:	fb91 f6f7 	sdiv	r6, r1, r7
 80094a2:	fb07 1516 	mls	r5, r7, r6, r1
 80094a6:	3530      	adds	r5, #48	; 0x30
 80094a8:	2a63      	cmp	r2, #99	; 0x63
 80094aa:	f104 34ff 	add.w	r4, r4, #4294967295
 80094ae:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80094b2:	4631      	mov	r1, r6
 80094b4:	dcf1      	bgt.n	800949a <__exponent+0x22>
 80094b6:	3130      	adds	r1, #48	; 0x30
 80094b8:	f1ae 0502 	sub.w	r5, lr, #2
 80094bc:	f804 1c01 	strb.w	r1, [r4, #-1]
 80094c0:	1c44      	adds	r4, r0, #1
 80094c2:	4629      	mov	r1, r5
 80094c4:	4561      	cmp	r1, ip
 80094c6:	d30a      	bcc.n	80094de <__exponent+0x66>
 80094c8:	f10d 0209 	add.w	r2, sp, #9
 80094cc:	eba2 020e 	sub.w	r2, r2, lr
 80094d0:	4565      	cmp	r5, ip
 80094d2:	bf88      	it	hi
 80094d4:	2200      	movhi	r2, #0
 80094d6:	4413      	add	r3, r2
 80094d8:	1a18      	subs	r0, r3, r0
 80094da:	b003      	add	sp, #12
 80094dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80094de:	f811 2b01 	ldrb.w	r2, [r1], #1
 80094e2:	f804 2f01 	strb.w	r2, [r4, #1]!
 80094e6:	e7ed      	b.n	80094c4 <__exponent+0x4c>
 80094e8:	2330      	movs	r3, #48	; 0x30
 80094ea:	3130      	adds	r1, #48	; 0x30
 80094ec:	7083      	strb	r3, [r0, #2]
 80094ee:	70c1      	strb	r1, [r0, #3]
 80094f0:	1d03      	adds	r3, r0, #4
 80094f2:	e7f1      	b.n	80094d8 <__exponent+0x60>

080094f4 <_printf_float>:
 80094f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094f8:	ed2d 8b02 	vpush	{d8}
 80094fc:	b08d      	sub	sp, #52	; 0x34
 80094fe:	460c      	mov	r4, r1
 8009500:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8009504:	4616      	mov	r6, r2
 8009506:	461f      	mov	r7, r3
 8009508:	4605      	mov	r5, r0
 800950a:	f004 f8f5 	bl	800d6f8 <_localeconv_r>
 800950e:	f8d0 a000 	ldr.w	sl, [r0]
 8009512:	4650      	mov	r0, sl
 8009514:	f7f6 fe6e 	bl	80001f4 <strlen>
 8009518:	2300      	movs	r3, #0
 800951a:	930a      	str	r3, [sp, #40]	; 0x28
 800951c:	6823      	ldr	r3, [r4, #0]
 800951e:	9305      	str	r3, [sp, #20]
 8009520:	f8d8 3000 	ldr.w	r3, [r8]
 8009524:	f894 b018 	ldrb.w	fp, [r4, #24]
 8009528:	3307      	adds	r3, #7
 800952a:	f023 0307 	bic.w	r3, r3, #7
 800952e:	f103 0208 	add.w	r2, r3, #8
 8009532:	f8c8 2000 	str.w	r2, [r8]
 8009536:	e9d3 2300 	ldrd	r2, r3, [r3]
 800953a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800953e:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8009542:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8009546:	9307      	str	r3, [sp, #28]
 8009548:	f8cd 8018 	str.w	r8, [sp, #24]
 800954c:	ee08 0a10 	vmov	s16, r0
 8009550:	4b9f      	ldr	r3, [pc, #636]	; (80097d0 <_printf_float+0x2dc>)
 8009552:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009556:	f04f 32ff 	mov.w	r2, #4294967295
 800955a:	f7f7 faff 	bl	8000b5c <__aeabi_dcmpun>
 800955e:	bb88      	cbnz	r0, 80095c4 <_printf_float+0xd0>
 8009560:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009564:	4b9a      	ldr	r3, [pc, #616]	; (80097d0 <_printf_float+0x2dc>)
 8009566:	f04f 32ff 	mov.w	r2, #4294967295
 800956a:	f7f7 fad9 	bl	8000b20 <__aeabi_dcmple>
 800956e:	bb48      	cbnz	r0, 80095c4 <_printf_float+0xd0>
 8009570:	2200      	movs	r2, #0
 8009572:	2300      	movs	r3, #0
 8009574:	4640      	mov	r0, r8
 8009576:	4649      	mov	r1, r9
 8009578:	f7f7 fac8 	bl	8000b0c <__aeabi_dcmplt>
 800957c:	b110      	cbz	r0, 8009584 <_printf_float+0x90>
 800957e:	232d      	movs	r3, #45	; 0x2d
 8009580:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009584:	4b93      	ldr	r3, [pc, #588]	; (80097d4 <_printf_float+0x2e0>)
 8009586:	4894      	ldr	r0, [pc, #592]	; (80097d8 <_printf_float+0x2e4>)
 8009588:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800958c:	bf94      	ite	ls
 800958e:	4698      	movls	r8, r3
 8009590:	4680      	movhi	r8, r0
 8009592:	2303      	movs	r3, #3
 8009594:	6123      	str	r3, [r4, #16]
 8009596:	9b05      	ldr	r3, [sp, #20]
 8009598:	f023 0204 	bic.w	r2, r3, #4
 800959c:	6022      	str	r2, [r4, #0]
 800959e:	f04f 0900 	mov.w	r9, #0
 80095a2:	9700      	str	r7, [sp, #0]
 80095a4:	4633      	mov	r3, r6
 80095a6:	aa0b      	add	r2, sp, #44	; 0x2c
 80095a8:	4621      	mov	r1, r4
 80095aa:	4628      	mov	r0, r5
 80095ac:	f000 f9d8 	bl	8009960 <_printf_common>
 80095b0:	3001      	adds	r0, #1
 80095b2:	f040 8090 	bne.w	80096d6 <_printf_float+0x1e2>
 80095b6:	f04f 30ff 	mov.w	r0, #4294967295
 80095ba:	b00d      	add	sp, #52	; 0x34
 80095bc:	ecbd 8b02 	vpop	{d8}
 80095c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80095c4:	4642      	mov	r2, r8
 80095c6:	464b      	mov	r3, r9
 80095c8:	4640      	mov	r0, r8
 80095ca:	4649      	mov	r1, r9
 80095cc:	f7f7 fac6 	bl	8000b5c <__aeabi_dcmpun>
 80095d0:	b140      	cbz	r0, 80095e4 <_printf_float+0xf0>
 80095d2:	464b      	mov	r3, r9
 80095d4:	2b00      	cmp	r3, #0
 80095d6:	bfbc      	itt	lt
 80095d8:	232d      	movlt	r3, #45	; 0x2d
 80095da:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80095de:	487f      	ldr	r0, [pc, #508]	; (80097dc <_printf_float+0x2e8>)
 80095e0:	4b7f      	ldr	r3, [pc, #508]	; (80097e0 <_printf_float+0x2ec>)
 80095e2:	e7d1      	b.n	8009588 <_printf_float+0x94>
 80095e4:	6863      	ldr	r3, [r4, #4]
 80095e6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80095ea:	9206      	str	r2, [sp, #24]
 80095ec:	1c5a      	adds	r2, r3, #1
 80095ee:	d13f      	bne.n	8009670 <_printf_float+0x17c>
 80095f0:	2306      	movs	r3, #6
 80095f2:	6063      	str	r3, [r4, #4]
 80095f4:	9b05      	ldr	r3, [sp, #20]
 80095f6:	6861      	ldr	r1, [r4, #4]
 80095f8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80095fc:	2300      	movs	r3, #0
 80095fe:	9303      	str	r3, [sp, #12]
 8009600:	ab0a      	add	r3, sp, #40	; 0x28
 8009602:	e9cd b301 	strd	fp, r3, [sp, #4]
 8009606:	ab09      	add	r3, sp, #36	; 0x24
 8009608:	ec49 8b10 	vmov	d0, r8, r9
 800960c:	9300      	str	r3, [sp, #0]
 800960e:	6022      	str	r2, [r4, #0]
 8009610:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8009614:	4628      	mov	r0, r5
 8009616:	f7ff fecd 	bl	80093b4 <__cvt>
 800961a:	9b06      	ldr	r3, [sp, #24]
 800961c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800961e:	2b47      	cmp	r3, #71	; 0x47
 8009620:	4680      	mov	r8, r0
 8009622:	d108      	bne.n	8009636 <_printf_float+0x142>
 8009624:	1cc8      	adds	r0, r1, #3
 8009626:	db02      	blt.n	800962e <_printf_float+0x13a>
 8009628:	6863      	ldr	r3, [r4, #4]
 800962a:	4299      	cmp	r1, r3
 800962c:	dd41      	ble.n	80096b2 <_printf_float+0x1be>
 800962e:	f1ab 0b02 	sub.w	fp, fp, #2
 8009632:	fa5f fb8b 	uxtb.w	fp, fp
 8009636:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800963a:	d820      	bhi.n	800967e <_printf_float+0x18a>
 800963c:	3901      	subs	r1, #1
 800963e:	465a      	mov	r2, fp
 8009640:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8009644:	9109      	str	r1, [sp, #36]	; 0x24
 8009646:	f7ff ff17 	bl	8009478 <__exponent>
 800964a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800964c:	1813      	adds	r3, r2, r0
 800964e:	2a01      	cmp	r2, #1
 8009650:	4681      	mov	r9, r0
 8009652:	6123      	str	r3, [r4, #16]
 8009654:	dc02      	bgt.n	800965c <_printf_float+0x168>
 8009656:	6822      	ldr	r2, [r4, #0]
 8009658:	07d2      	lsls	r2, r2, #31
 800965a:	d501      	bpl.n	8009660 <_printf_float+0x16c>
 800965c:	3301      	adds	r3, #1
 800965e:	6123      	str	r3, [r4, #16]
 8009660:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8009664:	2b00      	cmp	r3, #0
 8009666:	d09c      	beq.n	80095a2 <_printf_float+0xae>
 8009668:	232d      	movs	r3, #45	; 0x2d
 800966a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800966e:	e798      	b.n	80095a2 <_printf_float+0xae>
 8009670:	9a06      	ldr	r2, [sp, #24]
 8009672:	2a47      	cmp	r2, #71	; 0x47
 8009674:	d1be      	bne.n	80095f4 <_printf_float+0x100>
 8009676:	2b00      	cmp	r3, #0
 8009678:	d1bc      	bne.n	80095f4 <_printf_float+0x100>
 800967a:	2301      	movs	r3, #1
 800967c:	e7b9      	b.n	80095f2 <_printf_float+0xfe>
 800967e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8009682:	d118      	bne.n	80096b6 <_printf_float+0x1c2>
 8009684:	2900      	cmp	r1, #0
 8009686:	6863      	ldr	r3, [r4, #4]
 8009688:	dd0b      	ble.n	80096a2 <_printf_float+0x1ae>
 800968a:	6121      	str	r1, [r4, #16]
 800968c:	b913      	cbnz	r3, 8009694 <_printf_float+0x1a0>
 800968e:	6822      	ldr	r2, [r4, #0]
 8009690:	07d0      	lsls	r0, r2, #31
 8009692:	d502      	bpl.n	800969a <_printf_float+0x1a6>
 8009694:	3301      	adds	r3, #1
 8009696:	440b      	add	r3, r1
 8009698:	6123      	str	r3, [r4, #16]
 800969a:	65a1      	str	r1, [r4, #88]	; 0x58
 800969c:	f04f 0900 	mov.w	r9, #0
 80096a0:	e7de      	b.n	8009660 <_printf_float+0x16c>
 80096a2:	b913      	cbnz	r3, 80096aa <_printf_float+0x1b6>
 80096a4:	6822      	ldr	r2, [r4, #0]
 80096a6:	07d2      	lsls	r2, r2, #31
 80096a8:	d501      	bpl.n	80096ae <_printf_float+0x1ba>
 80096aa:	3302      	adds	r3, #2
 80096ac:	e7f4      	b.n	8009698 <_printf_float+0x1a4>
 80096ae:	2301      	movs	r3, #1
 80096b0:	e7f2      	b.n	8009698 <_printf_float+0x1a4>
 80096b2:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80096b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80096b8:	4299      	cmp	r1, r3
 80096ba:	db05      	blt.n	80096c8 <_printf_float+0x1d4>
 80096bc:	6823      	ldr	r3, [r4, #0]
 80096be:	6121      	str	r1, [r4, #16]
 80096c0:	07d8      	lsls	r0, r3, #31
 80096c2:	d5ea      	bpl.n	800969a <_printf_float+0x1a6>
 80096c4:	1c4b      	adds	r3, r1, #1
 80096c6:	e7e7      	b.n	8009698 <_printf_float+0x1a4>
 80096c8:	2900      	cmp	r1, #0
 80096ca:	bfd4      	ite	le
 80096cc:	f1c1 0202 	rsble	r2, r1, #2
 80096d0:	2201      	movgt	r2, #1
 80096d2:	4413      	add	r3, r2
 80096d4:	e7e0      	b.n	8009698 <_printf_float+0x1a4>
 80096d6:	6823      	ldr	r3, [r4, #0]
 80096d8:	055a      	lsls	r2, r3, #21
 80096da:	d407      	bmi.n	80096ec <_printf_float+0x1f8>
 80096dc:	6923      	ldr	r3, [r4, #16]
 80096de:	4642      	mov	r2, r8
 80096e0:	4631      	mov	r1, r6
 80096e2:	4628      	mov	r0, r5
 80096e4:	47b8      	blx	r7
 80096e6:	3001      	adds	r0, #1
 80096e8:	d12c      	bne.n	8009744 <_printf_float+0x250>
 80096ea:	e764      	b.n	80095b6 <_printf_float+0xc2>
 80096ec:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80096f0:	f240 80e0 	bls.w	80098b4 <_printf_float+0x3c0>
 80096f4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80096f8:	2200      	movs	r2, #0
 80096fa:	2300      	movs	r3, #0
 80096fc:	f7f7 f9fc 	bl	8000af8 <__aeabi_dcmpeq>
 8009700:	2800      	cmp	r0, #0
 8009702:	d034      	beq.n	800976e <_printf_float+0x27a>
 8009704:	4a37      	ldr	r2, [pc, #220]	; (80097e4 <_printf_float+0x2f0>)
 8009706:	2301      	movs	r3, #1
 8009708:	4631      	mov	r1, r6
 800970a:	4628      	mov	r0, r5
 800970c:	47b8      	blx	r7
 800970e:	3001      	adds	r0, #1
 8009710:	f43f af51 	beq.w	80095b6 <_printf_float+0xc2>
 8009714:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009718:	429a      	cmp	r2, r3
 800971a:	db02      	blt.n	8009722 <_printf_float+0x22e>
 800971c:	6823      	ldr	r3, [r4, #0]
 800971e:	07d8      	lsls	r0, r3, #31
 8009720:	d510      	bpl.n	8009744 <_printf_float+0x250>
 8009722:	ee18 3a10 	vmov	r3, s16
 8009726:	4652      	mov	r2, sl
 8009728:	4631      	mov	r1, r6
 800972a:	4628      	mov	r0, r5
 800972c:	47b8      	blx	r7
 800972e:	3001      	adds	r0, #1
 8009730:	f43f af41 	beq.w	80095b6 <_printf_float+0xc2>
 8009734:	f04f 0800 	mov.w	r8, #0
 8009738:	f104 091a 	add.w	r9, r4, #26
 800973c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800973e:	3b01      	subs	r3, #1
 8009740:	4543      	cmp	r3, r8
 8009742:	dc09      	bgt.n	8009758 <_printf_float+0x264>
 8009744:	6823      	ldr	r3, [r4, #0]
 8009746:	079b      	lsls	r3, r3, #30
 8009748:	f100 8105 	bmi.w	8009956 <_printf_float+0x462>
 800974c:	68e0      	ldr	r0, [r4, #12]
 800974e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009750:	4298      	cmp	r0, r3
 8009752:	bfb8      	it	lt
 8009754:	4618      	movlt	r0, r3
 8009756:	e730      	b.n	80095ba <_printf_float+0xc6>
 8009758:	2301      	movs	r3, #1
 800975a:	464a      	mov	r2, r9
 800975c:	4631      	mov	r1, r6
 800975e:	4628      	mov	r0, r5
 8009760:	47b8      	blx	r7
 8009762:	3001      	adds	r0, #1
 8009764:	f43f af27 	beq.w	80095b6 <_printf_float+0xc2>
 8009768:	f108 0801 	add.w	r8, r8, #1
 800976c:	e7e6      	b.n	800973c <_printf_float+0x248>
 800976e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009770:	2b00      	cmp	r3, #0
 8009772:	dc39      	bgt.n	80097e8 <_printf_float+0x2f4>
 8009774:	4a1b      	ldr	r2, [pc, #108]	; (80097e4 <_printf_float+0x2f0>)
 8009776:	2301      	movs	r3, #1
 8009778:	4631      	mov	r1, r6
 800977a:	4628      	mov	r0, r5
 800977c:	47b8      	blx	r7
 800977e:	3001      	adds	r0, #1
 8009780:	f43f af19 	beq.w	80095b6 <_printf_float+0xc2>
 8009784:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009788:	4313      	orrs	r3, r2
 800978a:	d102      	bne.n	8009792 <_printf_float+0x29e>
 800978c:	6823      	ldr	r3, [r4, #0]
 800978e:	07d9      	lsls	r1, r3, #31
 8009790:	d5d8      	bpl.n	8009744 <_printf_float+0x250>
 8009792:	ee18 3a10 	vmov	r3, s16
 8009796:	4652      	mov	r2, sl
 8009798:	4631      	mov	r1, r6
 800979a:	4628      	mov	r0, r5
 800979c:	47b8      	blx	r7
 800979e:	3001      	adds	r0, #1
 80097a0:	f43f af09 	beq.w	80095b6 <_printf_float+0xc2>
 80097a4:	f04f 0900 	mov.w	r9, #0
 80097a8:	f104 0a1a 	add.w	sl, r4, #26
 80097ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097ae:	425b      	negs	r3, r3
 80097b0:	454b      	cmp	r3, r9
 80097b2:	dc01      	bgt.n	80097b8 <_printf_float+0x2c4>
 80097b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80097b6:	e792      	b.n	80096de <_printf_float+0x1ea>
 80097b8:	2301      	movs	r3, #1
 80097ba:	4652      	mov	r2, sl
 80097bc:	4631      	mov	r1, r6
 80097be:	4628      	mov	r0, r5
 80097c0:	47b8      	blx	r7
 80097c2:	3001      	adds	r0, #1
 80097c4:	f43f aef7 	beq.w	80095b6 <_printf_float+0xc2>
 80097c8:	f109 0901 	add.w	r9, r9, #1
 80097cc:	e7ee      	b.n	80097ac <_printf_float+0x2b8>
 80097ce:	bf00      	nop
 80097d0:	7fefffff 	.word	0x7fefffff
 80097d4:	0800fdd8 	.word	0x0800fdd8
 80097d8:	0800fddc 	.word	0x0800fddc
 80097dc:	0800fde4 	.word	0x0800fde4
 80097e0:	0800fde0 	.word	0x0800fde0
 80097e4:	080104b9 	.word	0x080104b9
 80097e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80097ea:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80097ec:	429a      	cmp	r2, r3
 80097ee:	bfa8      	it	ge
 80097f0:	461a      	movge	r2, r3
 80097f2:	2a00      	cmp	r2, #0
 80097f4:	4691      	mov	r9, r2
 80097f6:	dc37      	bgt.n	8009868 <_printf_float+0x374>
 80097f8:	f04f 0b00 	mov.w	fp, #0
 80097fc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009800:	f104 021a 	add.w	r2, r4, #26
 8009804:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8009806:	9305      	str	r3, [sp, #20]
 8009808:	eba3 0309 	sub.w	r3, r3, r9
 800980c:	455b      	cmp	r3, fp
 800980e:	dc33      	bgt.n	8009878 <_printf_float+0x384>
 8009810:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009814:	429a      	cmp	r2, r3
 8009816:	db3b      	blt.n	8009890 <_printf_float+0x39c>
 8009818:	6823      	ldr	r3, [r4, #0]
 800981a:	07da      	lsls	r2, r3, #31
 800981c:	d438      	bmi.n	8009890 <_printf_float+0x39c>
 800981e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009820:	9a05      	ldr	r2, [sp, #20]
 8009822:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009824:	1a9a      	subs	r2, r3, r2
 8009826:	eba3 0901 	sub.w	r9, r3, r1
 800982a:	4591      	cmp	r9, r2
 800982c:	bfa8      	it	ge
 800982e:	4691      	movge	r9, r2
 8009830:	f1b9 0f00 	cmp.w	r9, #0
 8009834:	dc35      	bgt.n	80098a2 <_printf_float+0x3ae>
 8009836:	f04f 0800 	mov.w	r8, #0
 800983a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800983e:	f104 0a1a 	add.w	sl, r4, #26
 8009842:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009846:	1a9b      	subs	r3, r3, r2
 8009848:	eba3 0309 	sub.w	r3, r3, r9
 800984c:	4543      	cmp	r3, r8
 800984e:	f77f af79 	ble.w	8009744 <_printf_float+0x250>
 8009852:	2301      	movs	r3, #1
 8009854:	4652      	mov	r2, sl
 8009856:	4631      	mov	r1, r6
 8009858:	4628      	mov	r0, r5
 800985a:	47b8      	blx	r7
 800985c:	3001      	adds	r0, #1
 800985e:	f43f aeaa 	beq.w	80095b6 <_printf_float+0xc2>
 8009862:	f108 0801 	add.w	r8, r8, #1
 8009866:	e7ec      	b.n	8009842 <_printf_float+0x34e>
 8009868:	4613      	mov	r3, r2
 800986a:	4631      	mov	r1, r6
 800986c:	4642      	mov	r2, r8
 800986e:	4628      	mov	r0, r5
 8009870:	47b8      	blx	r7
 8009872:	3001      	adds	r0, #1
 8009874:	d1c0      	bne.n	80097f8 <_printf_float+0x304>
 8009876:	e69e      	b.n	80095b6 <_printf_float+0xc2>
 8009878:	2301      	movs	r3, #1
 800987a:	4631      	mov	r1, r6
 800987c:	4628      	mov	r0, r5
 800987e:	9205      	str	r2, [sp, #20]
 8009880:	47b8      	blx	r7
 8009882:	3001      	adds	r0, #1
 8009884:	f43f ae97 	beq.w	80095b6 <_printf_float+0xc2>
 8009888:	9a05      	ldr	r2, [sp, #20]
 800988a:	f10b 0b01 	add.w	fp, fp, #1
 800988e:	e7b9      	b.n	8009804 <_printf_float+0x310>
 8009890:	ee18 3a10 	vmov	r3, s16
 8009894:	4652      	mov	r2, sl
 8009896:	4631      	mov	r1, r6
 8009898:	4628      	mov	r0, r5
 800989a:	47b8      	blx	r7
 800989c:	3001      	adds	r0, #1
 800989e:	d1be      	bne.n	800981e <_printf_float+0x32a>
 80098a0:	e689      	b.n	80095b6 <_printf_float+0xc2>
 80098a2:	9a05      	ldr	r2, [sp, #20]
 80098a4:	464b      	mov	r3, r9
 80098a6:	4442      	add	r2, r8
 80098a8:	4631      	mov	r1, r6
 80098aa:	4628      	mov	r0, r5
 80098ac:	47b8      	blx	r7
 80098ae:	3001      	adds	r0, #1
 80098b0:	d1c1      	bne.n	8009836 <_printf_float+0x342>
 80098b2:	e680      	b.n	80095b6 <_printf_float+0xc2>
 80098b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80098b6:	2a01      	cmp	r2, #1
 80098b8:	dc01      	bgt.n	80098be <_printf_float+0x3ca>
 80098ba:	07db      	lsls	r3, r3, #31
 80098bc:	d538      	bpl.n	8009930 <_printf_float+0x43c>
 80098be:	2301      	movs	r3, #1
 80098c0:	4642      	mov	r2, r8
 80098c2:	4631      	mov	r1, r6
 80098c4:	4628      	mov	r0, r5
 80098c6:	47b8      	blx	r7
 80098c8:	3001      	adds	r0, #1
 80098ca:	f43f ae74 	beq.w	80095b6 <_printf_float+0xc2>
 80098ce:	ee18 3a10 	vmov	r3, s16
 80098d2:	4652      	mov	r2, sl
 80098d4:	4631      	mov	r1, r6
 80098d6:	4628      	mov	r0, r5
 80098d8:	47b8      	blx	r7
 80098da:	3001      	adds	r0, #1
 80098dc:	f43f ae6b 	beq.w	80095b6 <_printf_float+0xc2>
 80098e0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80098e4:	2200      	movs	r2, #0
 80098e6:	2300      	movs	r3, #0
 80098e8:	f7f7 f906 	bl	8000af8 <__aeabi_dcmpeq>
 80098ec:	b9d8      	cbnz	r0, 8009926 <_printf_float+0x432>
 80098ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80098f0:	f108 0201 	add.w	r2, r8, #1
 80098f4:	3b01      	subs	r3, #1
 80098f6:	4631      	mov	r1, r6
 80098f8:	4628      	mov	r0, r5
 80098fa:	47b8      	blx	r7
 80098fc:	3001      	adds	r0, #1
 80098fe:	d10e      	bne.n	800991e <_printf_float+0x42a>
 8009900:	e659      	b.n	80095b6 <_printf_float+0xc2>
 8009902:	2301      	movs	r3, #1
 8009904:	4652      	mov	r2, sl
 8009906:	4631      	mov	r1, r6
 8009908:	4628      	mov	r0, r5
 800990a:	47b8      	blx	r7
 800990c:	3001      	adds	r0, #1
 800990e:	f43f ae52 	beq.w	80095b6 <_printf_float+0xc2>
 8009912:	f108 0801 	add.w	r8, r8, #1
 8009916:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009918:	3b01      	subs	r3, #1
 800991a:	4543      	cmp	r3, r8
 800991c:	dcf1      	bgt.n	8009902 <_printf_float+0x40e>
 800991e:	464b      	mov	r3, r9
 8009920:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8009924:	e6dc      	b.n	80096e0 <_printf_float+0x1ec>
 8009926:	f04f 0800 	mov.w	r8, #0
 800992a:	f104 0a1a 	add.w	sl, r4, #26
 800992e:	e7f2      	b.n	8009916 <_printf_float+0x422>
 8009930:	2301      	movs	r3, #1
 8009932:	4642      	mov	r2, r8
 8009934:	e7df      	b.n	80098f6 <_printf_float+0x402>
 8009936:	2301      	movs	r3, #1
 8009938:	464a      	mov	r2, r9
 800993a:	4631      	mov	r1, r6
 800993c:	4628      	mov	r0, r5
 800993e:	47b8      	blx	r7
 8009940:	3001      	adds	r0, #1
 8009942:	f43f ae38 	beq.w	80095b6 <_printf_float+0xc2>
 8009946:	f108 0801 	add.w	r8, r8, #1
 800994a:	68e3      	ldr	r3, [r4, #12]
 800994c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800994e:	1a5b      	subs	r3, r3, r1
 8009950:	4543      	cmp	r3, r8
 8009952:	dcf0      	bgt.n	8009936 <_printf_float+0x442>
 8009954:	e6fa      	b.n	800974c <_printf_float+0x258>
 8009956:	f04f 0800 	mov.w	r8, #0
 800995a:	f104 0919 	add.w	r9, r4, #25
 800995e:	e7f4      	b.n	800994a <_printf_float+0x456>

08009960 <_printf_common>:
 8009960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009964:	4616      	mov	r6, r2
 8009966:	4699      	mov	r9, r3
 8009968:	688a      	ldr	r2, [r1, #8]
 800996a:	690b      	ldr	r3, [r1, #16]
 800996c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8009970:	4293      	cmp	r3, r2
 8009972:	bfb8      	it	lt
 8009974:	4613      	movlt	r3, r2
 8009976:	6033      	str	r3, [r6, #0]
 8009978:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800997c:	4607      	mov	r7, r0
 800997e:	460c      	mov	r4, r1
 8009980:	b10a      	cbz	r2, 8009986 <_printf_common+0x26>
 8009982:	3301      	adds	r3, #1
 8009984:	6033      	str	r3, [r6, #0]
 8009986:	6823      	ldr	r3, [r4, #0]
 8009988:	0699      	lsls	r1, r3, #26
 800998a:	bf42      	ittt	mi
 800998c:	6833      	ldrmi	r3, [r6, #0]
 800998e:	3302      	addmi	r3, #2
 8009990:	6033      	strmi	r3, [r6, #0]
 8009992:	6825      	ldr	r5, [r4, #0]
 8009994:	f015 0506 	ands.w	r5, r5, #6
 8009998:	d106      	bne.n	80099a8 <_printf_common+0x48>
 800999a:	f104 0a19 	add.w	sl, r4, #25
 800999e:	68e3      	ldr	r3, [r4, #12]
 80099a0:	6832      	ldr	r2, [r6, #0]
 80099a2:	1a9b      	subs	r3, r3, r2
 80099a4:	42ab      	cmp	r3, r5
 80099a6:	dc26      	bgt.n	80099f6 <_printf_common+0x96>
 80099a8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80099ac:	1e13      	subs	r3, r2, #0
 80099ae:	6822      	ldr	r2, [r4, #0]
 80099b0:	bf18      	it	ne
 80099b2:	2301      	movne	r3, #1
 80099b4:	0692      	lsls	r2, r2, #26
 80099b6:	d42b      	bmi.n	8009a10 <_printf_common+0xb0>
 80099b8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80099bc:	4649      	mov	r1, r9
 80099be:	4638      	mov	r0, r7
 80099c0:	47c0      	blx	r8
 80099c2:	3001      	adds	r0, #1
 80099c4:	d01e      	beq.n	8009a04 <_printf_common+0xa4>
 80099c6:	6823      	ldr	r3, [r4, #0]
 80099c8:	68e5      	ldr	r5, [r4, #12]
 80099ca:	6832      	ldr	r2, [r6, #0]
 80099cc:	f003 0306 	and.w	r3, r3, #6
 80099d0:	2b04      	cmp	r3, #4
 80099d2:	bf08      	it	eq
 80099d4:	1aad      	subeq	r5, r5, r2
 80099d6:	68a3      	ldr	r3, [r4, #8]
 80099d8:	6922      	ldr	r2, [r4, #16]
 80099da:	bf0c      	ite	eq
 80099dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80099e0:	2500      	movne	r5, #0
 80099e2:	4293      	cmp	r3, r2
 80099e4:	bfc4      	itt	gt
 80099e6:	1a9b      	subgt	r3, r3, r2
 80099e8:	18ed      	addgt	r5, r5, r3
 80099ea:	2600      	movs	r6, #0
 80099ec:	341a      	adds	r4, #26
 80099ee:	42b5      	cmp	r5, r6
 80099f0:	d11a      	bne.n	8009a28 <_printf_common+0xc8>
 80099f2:	2000      	movs	r0, #0
 80099f4:	e008      	b.n	8009a08 <_printf_common+0xa8>
 80099f6:	2301      	movs	r3, #1
 80099f8:	4652      	mov	r2, sl
 80099fa:	4649      	mov	r1, r9
 80099fc:	4638      	mov	r0, r7
 80099fe:	47c0      	blx	r8
 8009a00:	3001      	adds	r0, #1
 8009a02:	d103      	bne.n	8009a0c <_printf_common+0xac>
 8009a04:	f04f 30ff 	mov.w	r0, #4294967295
 8009a08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009a0c:	3501      	adds	r5, #1
 8009a0e:	e7c6      	b.n	800999e <_printf_common+0x3e>
 8009a10:	18e1      	adds	r1, r4, r3
 8009a12:	1c5a      	adds	r2, r3, #1
 8009a14:	2030      	movs	r0, #48	; 0x30
 8009a16:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8009a1a:	4422      	add	r2, r4
 8009a1c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8009a20:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8009a24:	3302      	adds	r3, #2
 8009a26:	e7c7      	b.n	80099b8 <_printf_common+0x58>
 8009a28:	2301      	movs	r3, #1
 8009a2a:	4622      	mov	r2, r4
 8009a2c:	4649      	mov	r1, r9
 8009a2e:	4638      	mov	r0, r7
 8009a30:	47c0      	blx	r8
 8009a32:	3001      	adds	r0, #1
 8009a34:	d0e6      	beq.n	8009a04 <_printf_common+0xa4>
 8009a36:	3601      	adds	r6, #1
 8009a38:	e7d9      	b.n	80099ee <_printf_common+0x8e>
	...

08009a3c <_printf_i>:
 8009a3c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009a40:	7e0f      	ldrb	r7, [r1, #24]
 8009a42:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8009a44:	2f78      	cmp	r7, #120	; 0x78
 8009a46:	4691      	mov	r9, r2
 8009a48:	4680      	mov	r8, r0
 8009a4a:	460c      	mov	r4, r1
 8009a4c:	469a      	mov	sl, r3
 8009a4e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8009a52:	d807      	bhi.n	8009a64 <_printf_i+0x28>
 8009a54:	2f62      	cmp	r7, #98	; 0x62
 8009a56:	d80a      	bhi.n	8009a6e <_printf_i+0x32>
 8009a58:	2f00      	cmp	r7, #0
 8009a5a:	f000 80d8 	beq.w	8009c0e <_printf_i+0x1d2>
 8009a5e:	2f58      	cmp	r7, #88	; 0x58
 8009a60:	f000 80a3 	beq.w	8009baa <_printf_i+0x16e>
 8009a64:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009a68:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8009a6c:	e03a      	b.n	8009ae4 <_printf_i+0xa8>
 8009a6e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8009a72:	2b15      	cmp	r3, #21
 8009a74:	d8f6      	bhi.n	8009a64 <_printf_i+0x28>
 8009a76:	a101      	add	r1, pc, #4	; (adr r1, 8009a7c <_printf_i+0x40>)
 8009a78:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009a7c:	08009ad5 	.word	0x08009ad5
 8009a80:	08009ae9 	.word	0x08009ae9
 8009a84:	08009a65 	.word	0x08009a65
 8009a88:	08009a65 	.word	0x08009a65
 8009a8c:	08009a65 	.word	0x08009a65
 8009a90:	08009a65 	.word	0x08009a65
 8009a94:	08009ae9 	.word	0x08009ae9
 8009a98:	08009a65 	.word	0x08009a65
 8009a9c:	08009a65 	.word	0x08009a65
 8009aa0:	08009a65 	.word	0x08009a65
 8009aa4:	08009a65 	.word	0x08009a65
 8009aa8:	08009bf5 	.word	0x08009bf5
 8009aac:	08009b19 	.word	0x08009b19
 8009ab0:	08009bd7 	.word	0x08009bd7
 8009ab4:	08009a65 	.word	0x08009a65
 8009ab8:	08009a65 	.word	0x08009a65
 8009abc:	08009c17 	.word	0x08009c17
 8009ac0:	08009a65 	.word	0x08009a65
 8009ac4:	08009b19 	.word	0x08009b19
 8009ac8:	08009a65 	.word	0x08009a65
 8009acc:	08009a65 	.word	0x08009a65
 8009ad0:	08009bdf 	.word	0x08009bdf
 8009ad4:	682b      	ldr	r3, [r5, #0]
 8009ad6:	1d1a      	adds	r2, r3, #4
 8009ad8:	681b      	ldr	r3, [r3, #0]
 8009ada:	602a      	str	r2, [r5, #0]
 8009adc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009ae0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009ae4:	2301      	movs	r3, #1
 8009ae6:	e0a3      	b.n	8009c30 <_printf_i+0x1f4>
 8009ae8:	6820      	ldr	r0, [r4, #0]
 8009aea:	6829      	ldr	r1, [r5, #0]
 8009aec:	0606      	lsls	r6, r0, #24
 8009aee:	f101 0304 	add.w	r3, r1, #4
 8009af2:	d50a      	bpl.n	8009b0a <_printf_i+0xce>
 8009af4:	680e      	ldr	r6, [r1, #0]
 8009af6:	602b      	str	r3, [r5, #0]
 8009af8:	2e00      	cmp	r6, #0
 8009afa:	da03      	bge.n	8009b04 <_printf_i+0xc8>
 8009afc:	232d      	movs	r3, #45	; 0x2d
 8009afe:	4276      	negs	r6, r6
 8009b00:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009b04:	485e      	ldr	r0, [pc, #376]	; (8009c80 <_printf_i+0x244>)
 8009b06:	230a      	movs	r3, #10
 8009b08:	e019      	b.n	8009b3e <_printf_i+0x102>
 8009b0a:	680e      	ldr	r6, [r1, #0]
 8009b0c:	602b      	str	r3, [r5, #0]
 8009b0e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8009b12:	bf18      	it	ne
 8009b14:	b236      	sxthne	r6, r6
 8009b16:	e7ef      	b.n	8009af8 <_printf_i+0xbc>
 8009b18:	682b      	ldr	r3, [r5, #0]
 8009b1a:	6820      	ldr	r0, [r4, #0]
 8009b1c:	1d19      	adds	r1, r3, #4
 8009b1e:	6029      	str	r1, [r5, #0]
 8009b20:	0601      	lsls	r1, r0, #24
 8009b22:	d501      	bpl.n	8009b28 <_printf_i+0xec>
 8009b24:	681e      	ldr	r6, [r3, #0]
 8009b26:	e002      	b.n	8009b2e <_printf_i+0xf2>
 8009b28:	0646      	lsls	r6, r0, #25
 8009b2a:	d5fb      	bpl.n	8009b24 <_printf_i+0xe8>
 8009b2c:	881e      	ldrh	r6, [r3, #0]
 8009b2e:	4854      	ldr	r0, [pc, #336]	; (8009c80 <_printf_i+0x244>)
 8009b30:	2f6f      	cmp	r7, #111	; 0x6f
 8009b32:	bf0c      	ite	eq
 8009b34:	2308      	moveq	r3, #8
 8009b36:	230a      	movne	r3, #10
 8009b38:	2100      	movs	r1, #0
 8009b3a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8009b3e:	6865      	ldr	r5, [r4, #4]
 8009b40:	60a5      	str	r5, [r4, #8]
 8009b42:	2d00      	cmp	r5, #0
 8009b44:	bfa2      	ittt	ge
 8009b46:	6821      	ldrge	r1, [r4, #0]
 8009b48:	f021 0104 	bicge.w	r1, r1, #4
 8009b4c:	6021      	strge	r1, [r4, #0]
 8009b4e:	b90e      	cbnz	r6, 8009b54 <_printf_i+0x118>
 8009b50:	2d00      	cmp	r5, #0
 8009b52:	d04d      	beq.n	8009bf0 <_printf_i+0x1b4>
 8009b54:	4615      	mov	r5, r2
 8009b56:	fbb6 f1f3 	udiv	r1, r6, r3
 8009b5a:	fb03 6711 	mls	r7, r3, r1, r6
 8009b5e:	5dc7      	ldrb	r7, [r0, r7]
 8009b60:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8009b64:	4637      	mov	r7, r6
 8009b66:	42bb      	cmp	r3, r7
 8009b68:	460e      	mov	r6, r1
 8009b6a:	d9f4      	bls.n	8009b56 <_printf_i+0x11a>
 8009b6c:	2b08      	cmp	r3, #8
 8009b6e:	d10b      	bne.n	8009b88 <_printf_i+0x14c>
 8009b70:	6823      	ldr	r3, [r4, #0]
 8009b72:	07de      	lsls	r6, r3, #31
 8009b74:	d508      	bpl.n	8009b88 <_printf_i+0x14c>
 8009b76:	6923      	ldr	r3, [r4, #16]
 8009b78:	6861      	ldr	r1, [r4, #4]
 8009b7a:	4299      	cmp	r1, r3
 8009b7c:	bfde      	ittt	le
 8009b7e:	2330      	movle	r3, #48	; 0x30
 8009b80:	f805 3c01 	strble.w	r3, [r5, #-1]
 8009b84:	f105 35ff 	addle.w	r5, r5, #4294967295
 8009b88:	1b52      	subs	r2, r2, r5
 8009b8a:	6122      	str	r2, [r4, #16]
 8009b8c:	f8cd a000 	str.w	sl, [sp]
 8009b90:	464b      	mov	r3, r9
 8009b92:	aa03      	add	r2, sp, #12
 8009b94:	4621      	mov	r1, r4
 8009b96:	4640      	mov	r0, r8
 8009b98:	f7ff fee2 	bl	8009960 <_printf_common>
 8009b9c:	3001      	adds	r0, #1
 8009b9e:	d14c      	bne.n	8009c3a <_printf_i+0x1fe>
 8009ba0:	f04f 30ff 	mov.w	r0, #4294967295
 8009ba4:	b004      	add	sp, #16
 8009ba6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009baa:	4835      	ldr	r0, [pc, #212]	; (8009c80 <_printf_i+0x244>)
 8009bac:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8009bb0:	6829      	ldr	r1, [r5, #0]
 8009bb2:	6823      	ldr	r3, [r4, #0]
 8009bb4:	f851 6b04 	ldr.w	r6, [r1], #4
 8009bb8:	6029      	str	r1, [r5, #0]
 8009bba:	061d      	lsls	r5, r3, #24
 8009bbc:	d514      	bpl.n	8009be8 <_printf_i+0x1ac>
 8009bbe:	07df      	lsls	r7, r3, #31
 8009bc0:	bf44      	itt	mi
 8009bc2:	f043 0320 	orrmi.w	r3, r3, #32
 8009bc6:	6023      	strmi	r3, [r4, #0]
 8009bc8:	b91e      	cbnz	r6, 8009bd2 <_printf_i+0x196>
 8009bca:	6823      	ldr	r3, [r4, #0]
 8009bcc:	f023 0320 	bic.w	r3, r3, #32
 8009bd0:	6023      	str	r3, [r4, #0]
 8009bd2:	2310      	movs	r3, #16
 8009bd4:	e7b0      	b.n	8009b38 <_printf_i+0xfc>
 8009bd6:	6823      	ldr	r3, [r4, #0]
 8009bd8:	f043 0320 	orr.w	r3, r3, #32
 8009bdc:	6023      	str	r3, [r4, #0]
 8009bde:	2378      	movs	r3, #120	; 0x78
 8009be0:	4828      	ldr	r0, [pc, #160]	; (8009c84 <_printf_i+0x248>)
 8009be2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009be6:	e7e3      	b.n	8009bb0 <_printf_i+0x174>
 8009be8:	0659      	lsls	r1, r3, #25
 8009bea:	bf48      	it	mi
 8009bec:	b2b6      	uxthmi	r6, r6
 8009bee:	e7e6      	b.n	8009bbe <_printf_i+0x182>
 8009bf0:	4615      	mov	r5, r2
 8009bf2:	e7bb      	b.n	8009b6c <_printf_i+0x130>
 8009bf4:	682b      	ldr	r3, [r5, #0]
 8009bf6:	6826      	ldr	r6, [r4, #0]
 8009bf8:	6961      	ldr	r1, [r4, #20]
 8009bfa:	1d18      	adds	r0, r3, #4
 8009bfc:	6028      	str	r0, [r5, #0]
 8009bfe:	0635      	lsls	r5, r6, #24
 8009c00:	681b      	ldr	r3, [r3, #0]
 8009c02:	d501      	bpl.n	8009c08 <_printf_i+0x1cc>
 8009c04:	6019      	str	r1, [r3, #0]
 8009c06:	e002      	b.n	8009c0e <_printf_i+0x1d2>
 8009c08:	0670      	lsls	r0, r6, #25
 8009c0a:	d5fb      	bpl.n	8009c04 <_printf_i+0x1c8>
 8009c0c:	8019      	strh	r1, [r3, #0]
 8009c0e:	2300      	movs	r3, #0
 8009c10:	6123      	str	r3, [r4, #16]
 8009c12:	4615      	mov	r5, r2
 8009c14:	e7ba      	b.n	8009b8c <_printf_i+0x150>
 8009c16:	682b      	ldr	r3, [r5, #0]
 8009c18:	1d1a      	adds	r2, r3, #4
 8009c1a:	602a      	str	r2, [r5, #0]
 8009c1c:	681d      	ldr	r5, [r3, #0]
 8009c1e:	6862      	ldr	r2, [r4, #4]
 8009c20:	2100      	movs	r1, #0
 8009c22:	4628      	mov	r0, r5
 8009c24:	f7f6 faf4 	bl	8000210 <memchr>
 8009c28:	b108      	cbz	r0, 8009c2e <_printf_i+0x1f2>
 8009c2a:	1b40      	subs	r0, r0, r5
 8009c2c:	6060      	str	r0, [r4, #4]
 8009c2e:	6863      	ldr	r3, [r4, #4]
 8009c30:	6123      	str	r3, [r4, #16]
 8009c32:	2300      	movs	r3, #0
 8009c34:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009c38:	e7a8      	b.n	8009b8c <_printf_i+0x150>
 8009c3a:	6923      	ldr	r3, [r4, #16]
 8009c3c:	462a      	mov	r2, r5
 8009c3e:	4649      	mov	r1, r9
 8009c40:	4640      	mov	r0, r8
 8009c42:	47d0      	blx	sl
 8009c44:	3001      	adds	r0, #1
 8009c46:	d0ab      	beq.n	8009ba0 <_printf_i+0x164>
 8009c48:	6823      	ldr	r3, [r4, #0]
 8009c4a:	079b      	lsls	r3, r3, #30
 8009c4c:	d413      	bmi.n	8009c76 <_printf_i+0x23a>
 8009c4e:	68e0      	ldr	r0, [r4, #12]
 8009c50:	9b03      	ldr	r3, [sp, #12]
 8009c52:	4298      	cmp	r0, r3
 8009c54:	bfb8      	it	lt
 8009c56:	4618      	movlt	r0, r3
 8009c58:	e7a4      	b.n	8009ba4 <_printf_i+0x168>
 8009c5a:	2301      	movs	r3, #1
 8009c5c:	4632      	mov	r2, r6
 8009c5e:	4649      	mov	r1, r9
 8009c60:	4640      	mov	r0, r8
 8009c62:	47d0      	blx	sl
 8009c64:	3001      	adds	r0, #1
 8009c66:	d09b      	beq.n	8009ba0 <_printf_i+0x164>
 8009c68:	3501      	adds	r5, #1
 8009c6a:	68e3      	ldr	r3, [r4, #12]
 8009c6c:	9903      	ldr	r1, [sp, #12]
 8009c6e:	1a5b      	subs	r3, r3, r1
 8009c70:	42ab      	cmp	r3, r5
 8009c72:	dcf2      	bgt.n	8009c5a <_printf_i+0x21e>
 8009c74:	e7eb      	b.n	8009c4e <_printf_i+0x212>
 8009c76:	2500      	movs	r5, #0
 8009c78:	f104 0619 	add.w	r6, r4, #25
 8009c7c:	e7f5      	b.n	8009c6a <_printf_i+0x22e>
 8009c7e:	bf00      	nop
 8009c80:	0800fde8 	.word	0x0800fde8
 8009c84:	0800fdf9 	.word	0x0800fdf9

08009c88 <_scanf_float>:
 8009c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c8c:	b087      	sub	sp, #28
 8009c8e:	4617      	mov	r7, r2
 8009c90:	9303      	str	r3, [sp, #12]
 8009c92:	688b      	ldr	r3, [r1, #8]
 8009c94:	1e5a      	subs	r2, r3, #1
 8009c96:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8009c9a:	bf83      	ittte	hi
 8009c9c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8009ca0:	195b      	addhi	r3, r3, r5
 8009ca2:	9302      	strhi	r3, [sp, #8]
 8009ca4:	2300      	movls	r3, #0
 8009ca6:	bf86      	itte	hi
 8009ca8:	f240 135d 	movwhi	r3, #349	; 0x15d
 8009cac:	608b      	strhi	r3, [r1, #8]
 8009cae:	9302      	strls	r3, [sp, #8]
 8009cb0:	680b      	ldr	r3, [r1, #0]
 8009cb2:	468b      	mov	fp, r1
 8009cb4:	2500      	movs	r5, #0
 8009cb6:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8009cba:	f84b 3b1c 	str.w	r3, [fp], #28
 8009cbe:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8009cc2:	4680      	mov	r8, r0
 8009cc4:	460c      	mov	r4, r1
 8009cc6:	465e      	mov	r6, fp
 8009cc8:	46aa      	mov	sl, r5
 8009cca:	46a9      	mov	r9, r5
 8009ccc:	9501      	str	r5, [sp, #4]
 8009cce:	68a2      	ldr	r2, [r4, #8]
 8009cd0:	b152      	cbz	r2, 8009ce8 <_scanf_float+0x60>
 8009cd2:	683b      	ldr	r3, [r7, #0]
 8009cd4:	781b      	ldrb	r3, [r3, #0]
 8009cd6:	2b4e      	cmp	r3, #78	; 0x4e
 8009cd8:	d864      	bhi.n	8009da4 <_scanf_float+0x11c>
 8009cda:	2b40      	cmp	r3, #64	; 0x40
 8009cdc:	d83c      	bhi.n	8009d58 <_scanf_float+0xd0>
 8009cde:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8009ce2:	b2c8      	uxtb	r0, r1
 8009ce4:	280e      	cmp	r0, #14
 8009ce6:	d93a      	bls.n	8009d5e <_scanf_float+0xd6>
 8009ce8:	f1b9 0f00 	cmp.w	r9, #0
 8009cec:	d003      	beq.n	8009cf6 <_scanf_float+0x6e>
 8009cee:	6823      	ldr	r3, [r4, #0]
 8009cf0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009cf4:	6023      	str	r3, [r4, #0]
 8009cf6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009cfa:	f1ba 0f01 	cmp.w	sl, #1
 8009cfe:	f200 8113 	bhi.w	8009f28 <_scanf_float+0x2a0>
 8009d02:	455e      	cmp	r6, fp
 8009d04:	f200 8105 	bhi.w	8009f12 <_scanf_float+0x28a>
 8009d08:	2501      	movs	r5, #1
 8009d0a:	4628      	mov	r0, r5
 8009d0c:	b007      	add	sp, #28
 8009d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d12:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8009d16:	2a0d      	cmp	r2, #13
 8009d18:	d8e6      	bhi.n	8009ce8 <_scanf_float+0x60>
 8009d1a:	a101      	add	r1, pc, #4	; (adr r1, 8009d20 <_scanf_float+0x98>)
 8009d1c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009d20:	08009e5f 	.word	0x08009e5f
 8009d24:	08009ce9 	.word	0x08009ce9
 8009d28:	08009ce9 	.word	0x08009ce9
 8009d2c:	08009ce9 	.word	0x08009ce9
 8009d30:	08009ebf 	.word	0x08009ebf
 8009d34:	08009e97 	.word	0x08009e97
 8009d38:	08009ce9 	.word	0x08009ce9
 8009d3c:	08009ce9 	.word	0x08009ce9
 8009d40:	08009e6d 	.word	0x08009e6d
 8009d44:	08009ce9 	.word	0x08009ce9
 8009d48:	08009ce9 	.word	0x08009ce9
 8009d4c:	08009ce9 	.word	0x08009ce9
 8009d50:	08009ce9 	.word	0x08009ce9
 8009d54:	08009e25 	.word	0x08009e25
 8009d58:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8009d5c:	e7db      	b.n	8009d16 <_scanf_float+0x8e>
 8009d5e:	290e      	cmp	r1, #14
 8009d60:	d8c2      	bhi.n	8009ce8 <_scanf_float+0x60>
 8009d62:	a001      	add	r0, pc, #4	; (adr r0, 8009d68 <_scanf_float+0xe0>)
 8009d64:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8009d68:	08009e17 	.word	0x08009e17
 8009d6c:	08009ce9 	.word	0x08009ce9
 8009d70:	08009e17 	.word	0x08009e17
 8009d74:	08009eab 	.word	0x08009eab
 8009d78:	08009ce9 	.word	0x08009ce9
 8009d7c:	08009dc5 	.word	0x08009dc5
 8009d80:	08009e01 	.word	0x08009e01
 8009d84:	08009e01 	.word	0x08009e01
 8009d88:	08009e01 	.word	0x08009e01
 8009d8c:	08009e01 	.word	0x08009e01
 8009d90:	08009e01 	.word	0x08009e01
 8009d94:	08009e01 	.word	0x08009e01
 8009d98:	08009e01 	.word	0x08009e01
 8009d9c:	08009e01 	.word	0x08009e01
 8009da0:	08009e01 	.word	0x08009e01
 8009da4:	2b6e      	cmp	r3, #110	; 0x6e
 8009da6:	d809      	bhi.n	8009dbc <_scanf_float+0x134>
 8009da8:	2b60      	cmp	r3, #96	; 0x60
 8009daa:	d8b2      	bhi.n	8009d12 <_scanf_float+0x8a>
 8009dac:	2b54      	cmp	r3, #84	; 0x54
 8009dae:	d077      	beq.n	8009ea0 <_scanf_float+0x218>
 8009db0:	2b59      	cmp	r3, #89	; 0x59
 8009db2:	d199      	bne.n	8009ce8 <_scanf_float+0x60>
 8009db4:	2d07      	cmp	r5, #7
 8009db6:	d197      	bne.n	8009ce8 <_scanf_float+0x60>
 8009db8:	2508      	movs	r5, #8
 8009dba:	e029      	b.n	8009e10 <_scanf_float+0x188>
 8009dbc:	2b74      	cmp	r3, #116	; 0x74
 8009dbe:	d06f      	beq.n	8009ea0 <_scanf_float+0x218>
 8009dc0:	2b79      	cmp	r3, #121	; 0x79
 8009dc2:	e7f6      	b.n	8009db2 <_scanf_float+0x12a>
 8009dc4:	6821      	ldr	r1, [r4, #0]
 8009dc6:	05c8      	lsls	r0, r1, #23
 8009dc8:	d51a      	bpl.n	8009e00 <_scanf_float+0x178>
 8009dca:	9b02      	ldr	r3, [sp, #8]
 8009dcc:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8009dd0:	6021      	str	r1, [r4, #0]
 8009dd2:	f109 0901 	add.w	r9, r9, #1
 8009dd6:	b11b      	cbz	r3, 8009de0 <_scanf_float+0x158>
 8009dd8:	3b01      	subs	r3, #1
 8009dda:	3201      	adds	r2, #1
 8009ddc:	9302      	str	r3, [sp, #8]
 8009dde:	60a2      	str	r2, [r4, #8]
 8009de0:	68a3      	ldr	r3, [r4, #8]
 8009de2:	3b01      	subs	r3, #1
 8009de4:	60a3      	str	r3, [r4, #8]
 8009de6:	6923      	ldr	r3, [r4, #16]
 8009de8:	3301      	adds	r3, #1
 8009dea:	6123      	str	r3, [r4, #16]
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	3b01      	subs	r3, #1
 8009df0:	2b00      	cmp	r3, #0
 8009df2:	607b      	str	r3, [r7, #4]
 8009df4:	f340 8084 	ble.w	8009f00 <_scanf_float+0x278>
 8009df8:	683b      	ldr	r3, [r7, #0]
 8009dfa:	3301      	adds	r3, #1
 8009dfc:	603b      	str	r3, [r7, #0]
 8009dfe:	e766      	b.n	8009cce <_scanf_float+0x46>
 8009e00:	eb1a 0f05 	cmn.w	sl, r5
 8009e04:	f47f af70 	bne.w	8009ce8 <_scanf_float+0x60>
 8009e08:	6822      	ldr	r2, [r4, #0]
 8009e0a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8009e0e:	6022      	str	r2, [r4, #0]
 8009e10:	f806 3b01 	strb.w	r3, [r6], #1
 8009e14:	e7e4      	b.n	8009de0 <_scanf_float+0x158>
 8009e16:	6822      	ldr	r2, [r4, #0]
 8009e18:	0610      	lsls	r0, r2, #24
 8009e1a:	f57f af65 	bpl.w	8009ce8 <_scanf_float+0x60>
 8009e1e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009e22:	e7f4      	b.n	8009e0e <_scanf_float+0x186>
 8009e24:	f1ba 0f00 	cmp.w	sl, #0
 8009e28:	d10e      	bne.n	8009e48 <_scanf_float+0x1c0>
 8009e2a:	f1b9 0f00 	cmp.w	r9, #0
 8009e2e:	d10e      	bne.n	8009e4e <_scanf_float+0x1c6>
 8009e30:	6822      	ldr	r2, [r4, #0]
 8009e32:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8009e36:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8009e3a:	d108      	bne.n	8009e4e <_scanf_float+0x1c6>
 8009e3c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009e40:	6022      	str	r2, [r4, #0]
 8009e42:	f04f 0a01 	mov.w	sl, #1
 8009e46:	e7e3      	b.n	8009e10 <_scanf_float+0x188>
 8009e48:	f1ba 0f02 	cmp.w	sl, #2
 8009e4c:	d055      	beq.n	8009efa <_scanf_float+0x272>
 8009e4e:	2d01      	cmp	r5, #1
 8009e50:	d002      	beq.n	8009e58 <_scanf_float+0x1d0>
 8009e52:	2d04      	cmp	r5, #4
 8009e54:	f47f af48 	bne.w	8009ce8 <_scanf_float+0x60>
 8009e58:	3501      	adds	r5, #1
 8009e5a:	b2ed      	uxtb	r5, r5
 8009e5c:	e7d8      	b.n	8009e10 <_scanf_float+0x188>
 8009e5e:	f1ba 0f01 	cmp.w	sl, #1
 8009e62:	f47f af41 	bne.w	8009ce8 <_scanf_float+0x60>
 8009e66:	f04f 0a02 	mov.w	sl, #2
 8009e6a:	e7d1      	b.n	8009e10 <_scanf_float+0x188>
 8009e6c:	b97d      	cbnz	r5, 8009e8e <_scanf_float+0x206>
 8009e6e:	f1b9 0f00 	cmp.w	r9, #0
 8009e72:	f47f af3c 	bne.w	8009cee <_scanf_float+0x66>
 8009e76:	6822      	ldr	r2, [r4, #0]
 8009e78:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8009e7c:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8009e80:	f47f af39 	bne.w	8009cf6 <_scanf_float+0x6e>
 8009e84:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009e88:	6022      	str	r2, [r4, #0]
 8009e8a:	2501      	movs	r5, #1
 8009e8c:	e7c0      	b.n	8009e10 <_scanf_float+0x188>
 8009e8e:	2d03      	cmp	r5, #3
 8009e90:	d0e2      	beq.n	8009e58 <_scanf_float+0x1d0>
 8009e92:	2d05      	cmp	r5, #5
 8009e94:	e7de      	b.n	8009e54 <_scanf_float+0x1cc>
 8009e96:	2d02      	cmp	r5, #2
 8009e98:	f47f af26 	bne.w	8009ce8 <_scanf_float+0x60>
 8009e9c:	2503      	movs	r5, #3
 8009e9e:	e7b7      	b.n	8009e10 <_scanf_float+0x188>
 8009ea0:	2d06      	cmp	r5, #6
 8009ea2:	f47f af21 	bne.w	8009ce8 <_scanf_float+0x60>
 8009ea6:	2507      	movs	r5, #7
 8009ea8:	e7b2      	b.n	8009e10 <_scanf_float+0x188>
 8009eaa:	6822      	ldr	r2, [r4, #0]
 8009eac:	0591      	lsls	r1, r2, #22
 8009eae:	f57f af1b 	bpl.w	8009ce8 <_scanf_float+0x60>
 8009eb2:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8009eb6:	6022      	str	r2, [r4, #0]
 8009eb8:	f8cd 9004 	str.w	r9, [sp, #4]
 8009ebc:	e7a8      	b.n	8009e10 <_scanf_float+0x188>
 8009ebe:	6822      	ldr	r2, [r4, #0]
 8009ec0:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8009ec4:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8009ec8:	d006      	beq.n	8009ed8 <_scanf_float+0x250>
 8009eca:	0550      	lsls	r0, r2, #21
 8009ecc:	f57f af0c 	bpl.w	8009ce8 <_scanf_float+0x60>
 8009ed0:	f1b9 0f00 	cmp.w	r9, #0
 8009ed4:	f43f af0f 	beq.w	8009cf6 <_scanf_float+0x6e>
 8009ed8:	0591      	lsls	r1, r2, #22
 8009eda:	bf58      	it	pl
 8009edc:	9901      	ldrpl	r1, [sp, #4]
 8009ede:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009ee2:	bf58      	it	pl
 8009ee4:	eba9 0101 	subpl.w	r1, r9, r1
 8009ee8:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8009eec:	bf58      	it	pl
 8009eee:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8009ef2:	6022      	str	r2, [r4, #0]
 8009ef4:	f04f 0900 	mov.w	r9, #0
 8009ef8:	e78a      	b.n	8009e10 <_scanf_float+0x188>
 8009efa:	f04f 0a03 	mov.w	sl, #3
 8009efe:	e787      	b.n	8009e10 <_scanf_float+0x188>
 8009f00:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8009f04:	4639      	mov	r1, r7
 8009f06:	4640      	mov	r0, r8
 8009f08:	4798      	blx	r3
 8009f0a:	2800      	cmp	r0, #0
 8009f0c:	f43f aedf 	beq.w	8009cce <_scanf_float+0x46>
 8009f10:	e6ea      	b.n	8009ce8 <_scanf_float+0x60>
 8009f12:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009f16:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009f1a:	463a      	mov	r2, r7
 8009f1c:	4640      	mov	r0, r8
 8009f1e:	4798      	blx	r3
 8009f20:	6923      	ldr	r3, [r4, #16]
 8009f22:	3b01      	subs	r3, #1
 8009f24:	6123      	str	r3, [r4, #16]
 8009f26:	e6ec      	b.n	8009d02 <_scanf_float+0x7a>
 8009f28:	1e6b      	subs	r3, r5, #1
 8009f2a:	2b06      	cmp	r3, #6
 8009f2c:	d825      	bhi.n	8009f7a <_scanf_float+0x2f2>
 8009f2e:	2d02      	cmp	r5, #2
 8009f30:	d836      	bhi.n	8009fa0 <_scanf_float+0x318>
 8009f32:	455e      	cmp	r6, fp
 8009f34:	f67f aee8 	bls.w	8009d08 <_scanf_float+0x80>
 8009f38:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009f3c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009f40:	463a      	mov	r2, r7
 8009f42:	4640      	mov	r0, r8
 8009f44:	4798      	blx	r3
 8009f46:	6923      	ldr	r3, [r4, #16]
 8009f48:	3b01      	subs	r3, #1
 8009f4a:	6123      	str	r3, [r4, #16]
 8009f4c:	e7f1      	b.n	8009f32 <_scanf_float+0x2aa>
 8009f4e:	9802      	ldr	r0, [sp, #8]
 8009f50:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009f54:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8009f58:	9002      	str	r0, [sp, #8]
 8009f5a:	463a      	mov	r2, r7
 8009f5c:	4640      	mov	r0, r8
 8009f5e:	4798      	blx	r3
 8009f60:	6923      	ldr	r3, [r4, #16]
 8009f62:	3b01      	subs	r3, #1
 8009f64:	6123      	str	r3, [r4, #16]
 8009f66:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009f6a:	fa5f fa8a 	uxtb.w	sl, sl
 8009f6e:	f1ba 0f02 	cmp.w	sl, #2
 8009f72:	d1ec      	bne.n	8009f4e <_scanf_float+0x2c6>
 8009f74:	3d03      	subs	r5, #3
 8009f76:	b2ed      	uxtb	r5, r5
 8009f78:	1b76      	subs	r6, r6, r5
 8009f7a:	6823      	ldr	r3, [r4, #0]
 8009f7c:	05da      	lsls	r2, r3, #23
 8009f7e:	d52f      	bpl.n	8009fe0 <_scanf_float+0x358>
 8009f80:	055b      	lsls	r3, r3, #21
 8009f82:	d510      	bpl.n	8009fa6 <_scanf_float+0x31e>
 8009f84:	455e      	cmp	r6, fp
 8009f86:	f67f aebf 	bls.w	8009d08 <_scanf_float+0x80>
 8009f8a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009f8e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009f92:	463a      	mov	r2, r7
 8009f94:	4640      	mov	r0, r8
 8009f96:	4798      	blx	r3
 8009f98:	6923      	ldr	r3, [r4, #16]
 8009f9a:	3b01      	subs	r3, #1
 8009f9c:	6123      	str	r3, [r4, #16]
 8009f9e:	e7f1      	b.n	8009f84 <_scanf_float+0x2fc>
 8009fa0:	46aa      	mov	sl, r5
 8009fa2:	9602      	str	r6, [sp, #8]
 8009fa4:	e7df      	b.n	8009f66 <_scanf_float+0x2de>
 8009fa6:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8009faa:	6923      	ldr	r3, [r4, #16]
 8009fac:	2965      	cmp	r1, #101	; 0x65
 8009fae:	f103 33ff 	add.w	r3, r3, #4294967295
 8009fb2:	f106 35ff 	add.w	r5, r6, #4294967295
 8009fb6:	6123      	str	r3, [r4, #16]
 8009fb8:	d00c      	beq.n	8009fd4 <_scanf_float+0x34c>
 8009fba:	2945      	cmp	r1, #69	; 0x45
 8009fbc:	d00a      	beq.n	8009fd4 <_scanf_float+0x34c>
 8009fbe:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009fc2:	463a      	mov	r2, r7
 8009fc4:	4640      	mov	r0, r8
 8009fc6:	4798      	blx	r3
 8009fc8:	6923      	ldr	r3, [r4, #16]
 8009fca:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8009fce:	3b01      	subs	r3, #1
 8009fd0:	1eb5      	subs	r5, r6, #2
 8009fd2:	6123      	str	r3, [r4, #16]
 8009fd4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009fd8:	463a      	mov	r2, r7
 8009fda:	4640      	mov	r0, r8
 8009fdc:	4798      	blx	r3
 8009fde:	462e      	mov	r6, r5
 8009fe0:	6825      	ldr	r5, [r4, #0]
 8009fe2:	f015 0510 	ands.w	r5, r5, #16
 8009fe6:	d159      	bne.n	800a09c <_scanf_float+0x414>
 8009fe8:	7035      	strb	r5, [r6, #0]
 8009fea:	6823      	ldr	r3, [r4, #0]
 8009fec:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8009ff0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009ff4:	d11b      	bne.n	800a02e <_scanf_float+0x3a6>
 8009ff6:	9b01      	ldr	r3, [sp, #4]
 8009ff8:	454b      	cmp	r3, r9
 8009ffa:	eba3 0209 	sub.w	r2, r3, r9
 8009ffe:	d123      	bne.n	800a048 <_scanf_float+0x3c0>
 800a000:	2200      	movs	r2, #0
 800a002:	4659      	mov	r1, fp
 800a004:	4640      	mov	r0, r8
 800a006:	f001 fcdd 	bl	800b9c4 <_strtod_r>
 800a00a:	6822      	ldr	r2, [r4, #0]
 800a00c:	9b03      	ldr	r3, [sp, #12]
 800a00e:	f012 0f02 	tst.w	r2, #2
 800a012:	ec57 6b10 	vmov	r6, r7, d0
 800a016:	681b      	ldr	r3, [r3, #0]
 800a018:	d021      	beq.n	800a05e <_scanf_float+0x3d6>
 800a01a:	9903      	ldr	r1, [sp, #12]
 800a01c:	1d1a      	adds	r2, r3, #4
 800a01e:	600a      	str	r2, [r1, #0]
 800a020:	681b      	ldr	r3, [r3, #0]
 800a022:	e9c3 6700 	strd	r6, r7, [r3]
 800a026:	68e3      	ldr	r3, [r4, #12]
 800a028:	3301      	adds	r3, #1
 800a02a:	60e3      	str	r3, [r4, #12]
 800a02c:	e66d      	b.n	8009d0a <_scanf_float+0x82>
 800a02e:	9b04      	ldr	r3, [sp, #16]
 800a030:	2b00      	cmp	r3, #0
 800a032:	d0e5      	beq.n	800a000 <_scanf_float+0x378>
 800a034:	9905      	ldr	r1, [sp, #20]
 800a036:	230a      	movs	r3, #10
 800a038:	462a      	mov	r2, r5
 800a03a:	3101      	adds	r1, #1
 800a03c:	4640      	mov	r0, r8
 800a03e:	f001 fd49 	bl	800bad4 <_strtol_r>
 800a042:	9b04      	ldr	r3, [sp, #16]
 800a044:	9e05      	ldr	r6, [sp, #20]
 800a046:	1ac2      	subs	r2, r0, r3
 800a048:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800a04c:	429e      	cmp	r6, r3
 800a04e:	bf28      	it	cs
 800a050:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800a054:	4912      	ldr	r1, [pc, #72]	; (800a0a0 <_scanf_float+0x418>)
 800a056:	4630      	mov	r0, r6
 800a058:	f000 f870 	bl	800a13c <siprintf>
 800a05c:	e7d0      	b.n	800a000 <_scanf_float+0x378>
 800a05e:	9903      	ldr	r1, [sp, #12]
 800a060:	f012 0f04 	tst.w	r2, #4
 800a064:	f103 0204 	add.w	r2, r3, #4
 800a068:	600a      	str	r2, [r1, #0]
 800a06a:	d1d9      	bne.n	800a020 <_scanf_float+0x398>
 800a06c:	f8d3 8000 	ldr.w	r8, [r3]
 800a070:	ee10 2a10 	vmov	r2, s0
 800a074:	ee10 0a10 	vmov	r0, s0
 800a078:	463b      	mov	r3, r7
 800a07a:	4639      	mov	r1, r7
 800a07c:	f7f6 fd6e 	bl	8000b5c <__aeabi_dcmpun>
 800a080:	b128      	cbz	r0, 800a08e <_scanf_float+0x406>
 800a082:	4808      	ldr	r0, [pc, #32]	; (800a0a4 <_scanf_float+0x41c>)
 800a084:	f000 f820 	bl	800a0c8 <nanf>
 800a088:	ed88 0a00 	vstr	s0, [r8]
 800a08c:	e7cb      	b.n	800a026 <_scanf_float+0x39e>
 800a08e:	4630      	mov	r0, r6
 800a090:	4639      	mov	r1, r7
 800a092:	f7f6 fdc1 	bl	8000c18 <__aeabi_d2f>
 800a096:	f8c8 0000 	str.w	r0, [r8]
 800a09a:	e7c4      	b.n	800a026 <_scanf_float+0x39e>
 800a09c:	2500      	movs	r5, #0
 800a09e:	e634      	b.n	8009d0a <_scanf_float+0x82>
 800a0a0:	0800fe0a 	.word	0x0800fe0a
 800a0a4:	08010157 	.word	0x08010157

0800a0a8 <_sbrk_r>:
 800a0a8:	b538      	push	{r3, r4, r5, lr}
 800a0aa:	4d06      	ldr	r5, [pc, #24]	; (800a0c4 <_sbrk_r+0x1c>)
 800a0ac:	2300      	movs	r3, #0
 800a0ae:	4604      	mov	r4, r0
 800a0b0:	4608      	mov	r0, r1
 800a0b2:	602b      	str	r3, [r5, #0]
 800a0b4:	f005 fa7c 	bl	800f5b0 <_sbrk>
 800a0b8:	1c43      	adds	r3, r0, #1
 800a0ba:	d102      	bne.n	800a0c2 <_sbrk_r+0x1a>
 800a0bc:	682b      	ldr	r3, [r5, #0]
 800a0be:	b103      	cbz	r3, 800a0c2 <_sbrk_r+0x1a>
 800a0c0:	6023      	str	r3, [r4, #0]
 800a0c2:	bd38      	pop	{r3, r4, r5, pc}
 800a0c4:	20000360 	.word	0x20000360

0800a0c8 <nanf>:
 800a0c8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800a0d0 <nanf+0x8>
 800a0cc:	4770      	bx	lr
 800a0ce:	bf00      	nop
 800a0d0:	7fc00000 	.word	0x7fc00000

0800a0d4 <sniprintf>:
 800a0d4:	b40c      	push	{r2, r3}
 800a0d6:	b530      	push	{r4, r5, lr}
 800a0d8:	4b17      	ldr	r3, [pc, #92]	; (800a138 <sniprintf+0x64>)
 800a0da:	1e0c      	subs	r4, r1, #0
 800a0dc:	681d      	ldr	r5, [r3, #0]
 800a0de:	b09d      	sub	sp, #116	; 0x74
 800a0e0:	da08      	bge.n	800a0f4 <sniprintf+0x20>
 800a0e2:	238b      	movs	r3, #139	; 0x8b
 800a0e4:	602b      	str	r3, [r5, #0]
 800a0e6:	f04f 30ff 	mov.w	r0, #4294967295
 800a0ea:	b01d      	add	sp, #116	; 0x74
 800a0ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a0f0:	b002      	add	sp, #8
 800a0f2:	4770      	bx	lr
 800a0f4:	f44f 7302 	mov.w	r3, #520	; 0x208
 800a0f8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a0fc:	bf14      	ite	ne
 800a0fe:	f104 33ff 	addne.w	r3, r4, #4294967295
 800a102:	4623      	moveq	r3, r4
 800a104:	9304      	str	r3, [sp, #16]
 800a106:	9307      	str	r3, [sp, #28]
 800a108:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a10c:	9002      	str	r0, [sp, #8]
 800a10e:	9006      	str	r0, [sp, #24]
 800a110:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a114:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a116:	ab21      	add	r3, sp, #132	; 0x84
 800a118:	a902      	add	r1, sp, #8
 800a11a:	4628      	mov	r0, r5
 800a11c:	9301      	str	r3, [sp, #4]
 800a11e:	f004 f857 	bl	800e1d0 <_svfiprintf_r>
 800a122:	1c43      	adds	r3, r0, #1
 800a124:	bfbc      	itt	lt
 800a126:	238b      	movlt	r3, #139	; 0x8b
 800a128:	602b      	strlt	r3, [r5, #0]
 800a12a:	2c00      	cmp	r4, #0
 800a12c:	d0dd      	beq.n	800a0ea <sniprintf+0x16>
 800a12e:	9b02      	ldr	r3, [sp, #8]
 800a130:	2200      	movs	r2, #0
 800a132:	701a      	strb	r2, [r3, #0]
 800a134:	e7d9      	b.n	800a0ea <sniprintf+0x16>
 800a136:	bf00      	nop
 800a138:	2000000c 	.word	0x2000000c

0800a13c <siprintf>:
 800a13c:	b40e      	push	{r1, r2, r3}
 800a13e:	b500      	push	{lr}
 800a140:	b09c      	sub	sp, #112	; 0x70
 800a142:	ab1d      	add	r3, sp, #116	; 0x74
 800a144:	9002      	str	r0, [sp, #8]
 800a146:	9006      	str	r0, [sp, #24]
 800a148:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800a14c:	4809      	ldr	r0, [pc, #36]	; (800a174 <siprintf+0x38>)
 800a14e:	9107      	str	r1, [sp, #28]
 800a150:	9104      	str	r1, [sp, #16]
 800a152:	4909      	ldr	r1, [pc, #36]	; (800a178 <siprintf+0x3c>)
 800a154:	f853 2b04 	ldr.w	r2, [r3], #4
 800a158:	9105      	str	r1, [sp, #20]
 800a15a:	6800      	ldr	r0, [r0, #0]
 800a15c:	9301      	str	r3, [sp, #4]
 800a15e:	a902      	add	r1, sp, #8
 800a160:	f004 f836 	bl	800e1d0 <_svfiprintf_r>
 800a164:	9b02      	ldr	r3, [sp, #8]
 800a166:	2200      	movs	r2, #0
 800a168:	701a      	strb	r2, [r3, #0]
 800a16a:	b01c      	add	sp, #112	; 0x70
 800a16c:	f85d eb04 	ldr.w	lr, [sp], #4
 800a170:	b003      	add	sp, #12
 800a172:	4770      	bx	lr
 800a174:	2000000c 	.word	0x2000000c
 800a178:	ffff0208 	.word	0xffff0208

0800a17c <siscanf>:
 800a17c:	b40e      	push	{r1, r2, r3}
 800a17e:	b510      	push	{r4, lr}
 800a180:	b09f      	sub	sp, #124	; 0x7c
 800a182:	ac21      	add	r4, sp, #132	; 0x84
 800a184:	f44f 7101 	mov.w	r1, #516	; 0x204
 800a188:	f854 2b04 	ldr.w	r2, [r4], #4
 800a18c:	9201      	str	r2, [sp, #4]
 800a18e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800a192:	9004      	str	r0, [sp, #16]
 800a194:	9008      	str	r0, [sp, #32]
 800a196:	f7f6 f82d 	bl	80001f4 <strlen>
 800a19a:	4b0c      	ldr	r3, [pc, #48]	; (800a1cc <siscanf+0x50>)
 800a19c:	9005      	str	r0, [sp, #20]
 800a19e:	9009      	str	r0, [sp, #36]	; 0x24
 800a1a0:	930d      	str	r3, [sp, #52]	; 0x34
 800a1a2:	480b      	ldr	r0, [pc, #44]	; (800a1d0 <siscanf+0x54>)
 800a1a4:	9a01      	ldr	r2, [sp, #4]
 800a1a6:	6800      	ldr	r0, [r0, #0]
 800a1a8:	9403      	str	r4, [sp, #12]
 800a1aa:	2300      	movs	r3, #0
 800a1ac:	9311      	str	r3, [sp, #68]	; 0x44
 800a1ae:	9316      	str	r3, [sp, #88]	; 0x58
 800a1b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a1b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a1b8:	a904      	add	r1, sp, #16
 800a1ba:	4623      	mov	r3, r4
 800a1bc:	f004 f962 	bl	800e484 <__ssvfiscanf_r>
 800a1c0:	b01f      	add	sp, #124	; 0x7c
 800a1c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a1c6:	b003      	add	sp, #12
 800a1c8:	4770      	bx	lr
 800a1ca:	bf00      	nop
 800a1cc:	0800a1f7 	.word	0x0800a1f7
 800a1d0:	2000000c 	.word	0x2000000c

0800a1d4 <__sread>:
 800a1d4:	b510      	push	{r4, lr}
 800a1d6:	460c      	mov	r4, r1
 800a1d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a1dc:	f004 fd76 	bl	800eccc <_read_r>
 800a1e0:	2800      	cmp	r0, #0
 800a1e2:	bfab      	itete	ge
 800a1e4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800a1e6:	89a3      	ldrhlt	r3, [r4, #12]
 800a1e8:	181b      	addge	r3, r3, r0
 800a1ea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800a1ee:	bfac      	ite	ge
 800a1f0:	6563      	strge	r3, [r4, #84]	; 0x54
 800a1f2:	81a3      	strhlt	r3, [r4, #12]
 800a1f4:	bd10      	pop	{r4, pc}

0800a1f6 <__seofread>:
 800a1f6:	2000      	movs	r0, #0
 800a1f8:	4770      	bx	lr

0800a1fa <__swrite>:
 800a1fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a1fe:	461f      	mov	r7, r3
 800a200:	898b      	ldrh	r3, [r1, #12]
 800a202:	05db      	lsls	r3, r3, #23
 800a204:	4605      	mov	r5, r0
 800a206:	460c      	mov	r4, r1
 800a208:	4616      	mov	r6, r2
 800a20a:	d505      	bpl.n	800a218 <__swrite+0x1e>
 800a20c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a210:	2302      	movs	r3, #2
 800a212:	2200      	movs	r2, #0
 800a214:	f003 fa7a 	bl	800d70c <_lseek_r>
 800a218:	89a3      	ldrh	r3, [r4, #12]
 800a21a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a21e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a222:	81a3      	strh	r3, [r4, #12]
 800a224:	4632      	mov	r2, r6
 800a226:	463b      	mov	r3, r7
 800a228:	4628      	mov	r0, r5
 800a22a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a22e:	f001 bf17 	b.w	800c060 <_write_r>

0800a232 <__sseek>:
 800a232:	b510      	push	{r4, lr}
 800a234:	460c      	mov	r4, r1
 800a236:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a23a:	f003 fa67 	bl	800d70c <_lseek_r>
 800a23e:	1c43      	adds	r3, r0, #1
 800a240:	89a3      	ldrh	r3, [r4, #12]
 800a242:	bf15      	itete	ne
 800a244:	6560      	strne	r0, [r4, #84]	; 0x54
 800a246:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800a24a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800a24e:	81a3      	strheq	r3, [r4, #12]
 800a250:	bf18      	it	ne
 800a252:	81a3      	strhne	r3, [r4, #12]
 800a254:	bd10      	pop	{r4, pc}

0800a256 <__sclose>:
 800a256:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a25a:	f001 bf35 	b.w	800c0c8 <_close_r>

0800a25e <strcat>:
 800a25e:	b510      	push	{r4, lr}
 800a260:	4602      	mov	r2, r0
 800a262:	7814      	ldrb	r4, [r2, #0]
 800a264:	4613      	mov	r3, r2
 800a266:	3201      	adds	r2, #1
 800a268:	2c00      	cmp	r4, #0
 800a26a:	d1fa      	bne.n	800a262 <strcat+0x4>
 800a26c:	3b01      	subs	r3, #1
 800a26e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a272:	f803 2f01 	strb.w	r2, [r3, #1]!
 800a276:	2a00      	cmp	r2, #0
 800a278:	d1f9      	bne.n	800a26e <strcat+0x10>
 800a27a:	bd10      	pop	{r4, pc}

0800a27c <strcpy>:
 800a27c:	4603      	mov	r3, r0
 800a27e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a282:	f803 2b01 	strb.w	r2, [r3], #1
 800a286:	2a00      	cmp	r2, #0
 800a288:	d1f9      	bne.n	800a27e <strcpy+0x2>
 800a28a:	4770      	bx	lr

0800a28c <iso_year_adjust>:
 800a28c:	6942      	ldr	r2, [r0, #20]
 800a28e:	2a00      	cmp	r2, #0
 800a290:	f240 736c 	movw	r3, #1900	; 0x76c
 800a294:	bfa8      	it	ge
 800a296:	f06f 0363 	mvnge.w	r3, #99	; 0x63
 800a29a:	4413      	add	r3, r2
 800a29c:	0792      	lsls	r2, r2, #30
 800a29e:	d105      	bne.n	800a2ac <iso_year_adjust+0x20>
 800a2a0:	2164      	movs	r1, #100	; 0x64
 800a2a2:	fb93 f2f1 	sdiv	r2, r3, r1
 800a2a6:	fb01 3212 	mls	r2, r1, r2, r3
 800a2aa:	b9da      	cbnz	r2, 800a2e4 <iso_year_adjust+0x58>
 800a2ac:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800a2b0:	fb93 f1f2 	sdiv	r1, r3, r2
 800a2b4:	fb02 3311 	mls	r3, r2, r1, r3
 800a2b8:	fab3 f383 	clz	r3, r3
 800a2bc:	095b      	lsrs	r3, r3, #5
 800a2be:	e9d0 0206 	ldrd	r0, r2, [r0, #24]
 800a2c2:	0040      	lsls	r0, r0, #1
 800a2c4:	eb00 1002 	add.w	r0, r0, r2, lsl #4
 800a2c8:	4418      	add	r0, r3
 800a2ca:	f241 63a2 	movw	r3, #5794	; 0x16a2
 800a2ce:	4298      	cmp	r0, r3
 800a2d0:	d03a      	beq.n	800a348 <iso_year_adjust+0xbc>
 800a2d2:	dc21      	bgt.n	800a318 <iso_year_adjust+0x8c>
 800a2d4:	2801      	cmp	r0, #1
 800a2d6:	dc1a      	bgt.n	800a30e <iso_year_adjust+0x82>
 800a2d8:	2800      	cmp	r0, #0
 800a2da:	bfb4      	ite	lt
 800a2dc:	2000      	movlt	r0, #0
 800a2de:	f04f 30ff 	movge.w	r0, #4294967295
 800a2e2:	4770      	bx	lr
 800a2e4:	2301      	movs	r3, #1
 800a2e6:	e7ea      	b.n	800a2be <iso_year_adjust+0x32>
 800a2e8:	2817      	cmp	r0, #23
 800a2ea:	d813      	bhi.n	800a314 <iso_year_adjust+0x88>
 800a2ec:	e8df f000 	tbb	[pc, r0]
 800a2f0:	0c0c0c0c 	.word	0x0c0c0c0c
 800a2f4:	0c0c1212 	.word	0x0c0c1212
 800a2f8:	12121212 	.word	0x12121212
 800a2fc:	12121212 	.word	0x12121212
 800a300:	0c0c1212 	.word	0x0c0c1212
 800a304:	0c0c1212 	.word	0x0c0c1212
 800a308:	f04f 30ff 	mov.w	r0, #4294967295
 800a30c:	4770      	bx	lr
 800a30e:	380a      	subs	r0, #10
 800a310:	2817      	cmp	r0, #23
 800a312:	d9e9      	bls.n	800a2e8 <iso_year_adjust+0x5c>
 800a314:	2000      	movs	r0, #0
 800a316:	4770      	bx	lr
 800a318:	f241 63b4 	movw	r3, #5812	; 0x16b4
 800a31c:	4298      	cmp	r0, r3
 800a31e:	dc06      	bgt.n	800a32e <iso_year_adjust+0xa2>
 800a320:	f241 63b1 	movw	r3, #5809	; 0x16b1
 800a324:	4298      	cmp	r0, r3
 800a326:	bfd4      	ite	le
 800a328:	2000      	movle	r0, #0
 800a32a:	2001      	movgt	r0, #1
 800a32c:	4770      	bx	lr
 800a32e:	f5a0 50b6 	sub.w	r0, r0, #5824	; 0x16c0
 800a332:	3802      	subs	r0, #2
 800a334:	2815      	cmp	r0, #21
 800a336:	d8ed      	bhi.n	800a314 <iso_year_adjust+0x88>
 800a338:	2301      	movs	r3, #1
 800a33a:	4083      	lsls	r3, r0
 800a33c:	4803      	ldr	r0, [pc, #12]	; (800a34c <iso_year_adjust+0xc0>)
 800a33e:	4018      	ands	r0, r3
 800a340:	3800      	subs	r0, #0
 800a342:	bf18      	it	ne
 800a344:	2001      	movne	r0, #1
 800a346:	4770      	bx	lr
 800a348:	2001      	movs	r0, #1
 800a34a:	4770      	bx	lr
 800a34c:	002a001f 	.word	0x002a001f

0800a350 <__strftime.isra.0>:
 800a350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a354:	b08f      	sub	sp, #60	; 0x3c
 800a356:	461e      	mov	r6, r3
 800a358:	2300      	movs	r3, #0
 800a35a:	4607      	mov	r7, r0
 800a35c:	460d      	mov	r5, r1
 800a35e:	9302      	str	r3, [sp, #8]
 800a360:	461c      	mov	r4, r3
 800a362:	7813      	ldrb	r3, [r2, #0]
 800a364:	2b00      	cmp	r3, #0
 800a366:	f000 84ba 	beq.w	800acde <__strftime.isra.0+0x98e>
 800a36a:	2b25      	cmp	r3, #37	; 0x25
 800a36c:	d11f      	bne.n	800a3ae <__strftime.isra.0+0x5e>
 800a36e:	f892 b001 	ldrb.w	fp, [r2, #1]
 800a372:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
 800a376:	d024      	beq.n	800a3c2 <__strftime.isra.0+0x72>
 800a378:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 800a37c:	d021      	beq.n	800a3c2 <__strftime.isra.0+0x72>
 800a37e:	f102 0801 	add.w	r8, r2, #1
 800a382:	f04f 0b00 	mov.w	fp, #0
 800a386:	f898 2000 	ldrb.w	r2, [r8]
 800a38a:	3a31      	subs	r2, #49	; 0x31
 800a38c:	2a08      	cmp	r2, #8
 800a38e:	d81b      	bhi.n	800a3c8 <__strftime.isra.0+0x78>
 800a390:	4640      	mov	r0, r8
 800a392:	220a      	movs	r2, #10
 800a394:	a906      	add	r1, sp, #24
 800a396:	f001 fc1d 	bl	800bbd4 <strtoul>
 800a39a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800a39e:	4681      	mov	r9, r0
 800a3a0:	f898 2000 	ldrb.w	r2, [r8]
 800a3a4:	2a45      	cmp	r2, #69	; 0x45
 800a3a6:	d112      	bne.n	800a3ce <__strftime.isra.0+0x7e>
 800a3a8:	f108 0801 	add.w	r8, r8, #1
 800a3ac:	e011      	b.n	800a3d2 <__strftime.isra.0+0x82>
 800a3ae:	1e69      	subs	r1, r5, #1
 800a3b0:	42a1      	cmp	r1, r4
 800a3b2:	d802      	bhi.n	800a3ba <__strftime.isra.0+0x6a>
 800a3b4:	2400      	movs	r4, #0
 800a3b6:	f000 bc95 	b.w	800ace4 <__strftime.isra.0+0x994>
 800a3ba:	553b      	strb	r3, [r7, r4]
 800a3bc:	3201      	adds	r2, #1
 800a3be:	3401      	adds	r4, #1
 800a3c0:	e7cf      	b.n	800a362 <__strftime.isra.0+0x12>
 800a3c2:	f102 0802 	add.w	r8, r2, #2
 800a3c6:	e7de      	b.n	800a386 <__strftime.isra.0+0x36>
 800a3c8:	f04f 0900 	mov.w	r9, #0
 800a3cc:	e7e8      	b.n	800a3a0 <__strftime.isra.0+0x50>
 800a3ce:	2a4f      	cmp	r2, #79	; 0x4f
 800a3d0:	d0ea      	beq.n	800a3a8 <__strftime.isra.0+0x58>
 800a3d2:	f898 0000 	ldrb.w	r0, [r8]
 800a3d6:	f1a0 0225 	sub.w	r2, r0, #37	; 0x25
 800a3da:	2a55      	cmp	r2, #85	; 0x55
 800a3dc:	d8ea      	bhi.n	800a3b4 <__strftime.isra.0+0x64>
 800a3de:	a301      	add	r3, pc, #4	; (adr r3, 800a3e4 <__strftime.isra.0+0x94>)
 800a3e0:	f853 f022 	ldr.w	pc, [r3, r2, lsl #2]
 800a3e4:	0800acd3 	.word	0x0800acd3
 800a3e8:	0800a3b5 	.word	0x0800a3b5
 800a3ec:	0800a3b5 	.word	0x0800a3b5
 800a3f0:	0800a3b5 	.word	0x0800a3b5
 800a3f4:	0800a3b5 	.word	0x0800a3b5
 800a3f8:	0800a3b5 	.word	0x0800a3b5
 800a3fc:	0800a3b5 	.word	0x0800a3b5
 800a400:	0800a3b5 	.word	0x0800a3b5
 800a404:	0800a3b5 	.word	0x0800a3b5
 800a408:	0800a3b5 	.word	0x0800a3b5
 800a40c:	0800a3b5 	.word	0x0800a3b5
 800a410:	0800a3b5 	.word	0x0800a3b5
 800a414:	0800a3b5 	.word	0x0800a3b5
 800a418:	0800a3b5 	.word	0x0800a3b5
 800a41c:	0800a3b5 	.word	0x0800a3b5
 800a420:	0800a3b5 	.word	0x0800a3b5
 800a424:	0800a3b5 	.word	0x0800a3b5
 800a428:	0800a3b5 	.word	0x0800a3b5
 800a42c:	0800a3b5 	.word	0x0800a3b5
 800a430:	0800a3b5 	.word	0x0800a3b5
 800a434:	0800a3b5 	.word	0x0800a3b5
 800a438:	0800a3b5 	.word	0x0800a3b5
 800a43c:	0800a3b5 	.word	0x0800a3b5
 800a440:	0800a3b5 	.word	0x0800a3b5
 800a444:	0800a3b5 	.word	0x0800a3b5
 800a448:	0800a3b5 	.word	0x0800a3b5
 800a44c:	0800a3b5 	.word	0x0800a3b5
 800a450:	0800a3b5 	.word	0x0800a3b5
 800a454:	0800a579 	.word	0x0800a579
 800a458:	0800a5d1 	.word	0x0800a5d1
 800a45c:	0800a63f 	.word	0x0800a63f
 800a460:	0800a6dd 	.word	0x0800a6dd
 800a464:	0800a3b5 	.word	0x0800a3b5
 800a468:	0800a729 	.word	0x0800a729
 800a46c:	0800a815 	.word	0x0800a815
 800a470:	0800a8ef 	.word	0x0800a8ef
 800a474:	0800a8fd 	.word	0x0800a8fd
 800a478:	0800a3b5 	.word	0x0800a3b5
 800a47c:	0800a3b5 	.word	0x0800a3b5
 800a480:	0800a3b5 	.word	0x0800a3b5
 800a484:	0800a92d 	.word	0x0800a92d
 800a488:	0800a3b5 	.word	0x0800a3b5
 800a48c:	0800a3b5 	.word	0x0800a3b5
 800a490:	0800a941 	.word	0x0800a941
 800a494:	0800a3b5 	.word	0x0800a3b5
 800a498:	0800a993 	.word	0x0800a993
 800a49c:	0800aaa7 	.word	0x0800aaa7
 800a4a0:	0800aab7 	.word	0x0800aab7
 800a4a4:	0800aadf 	.word	0x0800aadf
 800a4a8:	0800ab19 	.word	0x0800ab19
 800a4ac:	0800ab8d 	.word	0x0800ab8d
 800a4b0:	0800a637 	.word	0x0800a637
 800a4b4:	0800abb9 	.word	0x0800abb9
 800a4b8:	0800ac81 	.word	0x0800ac81
 800a4bc:	0800a3b5 	.word	0x0800a3b5
 800a4c0:	0800a3b5 	.word	0x0800a3b5
 800a4c4:	0800a3b5 	.word	0x0800a3b5
 800a4c8:	0800a3b5 	.word	0x0800a3b5
 800a4cc:	0800a3b5 	.word	0x0800a3b5
 800a4d0:	0800a3b5 	.word	0x0800a3b5
 800a4d4:	0800a53d 	.word	0x0800a53d
 800a4d8:	0800a5a7 	.word	0x0800a5a7
 800a4dc:	0800a5fd 	.word	0x0800a5fd
 800a4e0:	0800a6b9 	.word	0x0800a6b9
 800a4e4:	0800a6b9 	.word	0x0800a6b9
 800a4e8:	0800a3b5 	.word	0x0800a3b5
 800a4ec:	0800a77b 	.word	0x0800a77b
 800a4f0:	0800a5a7 	.word	0x0800a5a7
 800a4f4:	0800a3b5 	.word	0x0800a3b5
 800a4f8:	0800a91f 	.word	0x0800a91f
 800a4fc:	0800a8ef 	.word	0x0800a8ef
 800a500:	0800a8fd 	.word	0x0800a8fd
 800a504:	0800a927 	.word	0x0800a927
 800a508:	0800a931 	.word	0x0800a931
 800a50c:	0800a3b5 	.word	0x0800a3b5
 800a510:	0800a941 	.word	0x0800a941
 800a514:	0800a3b5 	.word	0x0800a3b5
 800a518:	0800a627 	.word	0x0800a627
 800a51c:	0800a9a5 	.word	0x0800a9a5
 800a520:	0800aaab 	.word	0x0800aaab
 800a524:	0800aac5 	.word	0x0800aac5
 800a528:	0800a3b5 	.word	0x0800a3b5
 800a52c:	0800ab7f 	.word	0x0800ab7f
 800a530:	0800a62f 	.word	0x0800a62f
 800a534:	0800ab9d 	.word	0x0800ab9d
 800a538:	0800ac0b 	.word	0x0800ac0b
 800a53c:	69b3      	ldr	r3, [r6, #24]
 800a53e:	4aa9      	ldr	r2, [pc, #676]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a540:	3318      	adds	r3, #24
 800a542:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 800a546:	4648      	mov	r0, r9
 800a548:	f7f5 fe54 	bl	80001f4 <strlen>
 800a54c:	f109 39ff 	add.w	r9, r9, #4294967295
 800a550:	4420      	add	r0, r4
 800a552:	1e6b      	subs	r3, r5, #1
 800a554:	42a0      	cmp	r0, r4
 800a556:	d107      	bne.n	800a568 <__strftime.isra.0+0x218>
 800a558:	f898 3000 	ldrb.w	r3, [r8]
 800a55c:	2b00      	cmp	r3, #0
 800a55e:	f000 83be 	beq.w	800acde <__strftime.isra.0+0x98e>
 800a562:	f108 0201 	add.w	r2, r8, #1
 800a566:	e6fc      	b.n	800a362 <__strftime.isra.0+0x12>
 800a568:	42a3      	cmp	r3, r4
 800a56a:	f67f af23 	bls.w	800a3b4 <__strftime.isra.0+0x64>
 800a56e:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a572:	553a      	strb	r2, [r7, r4]
 800a574:	3401      	adds	r4, #1
 800a576:	e7ed      	b.n	800a554 <__strftime.isra.0+0x204>
 800a578:	69b2      	ldr	r2, [r6, #24]
 800a57a:	4b9a      	ldr	r3, [pc, #616]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a57c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800a580:	f8d3 907c 	ldr.w	r9, [r3, #124]	; 0x7c
 800a584:	4648      	mov	r0, r9
 800a586:	f7f5 fe35 	bl	80001f4 <strlen>
 800a58a:	f109 39ff 	add.w	r9, r9, #4294967295
 800a58e:	4420      	add	r0, r4
 800a590:	1e6b      	subs	r3, r5, #1
 800a592:	42a0      	cmp	r0, r4
 800a594:	d0e0      	beq.n	800a558 <__strftime.isra.0+0x208>
 800a596:	42a3      	cmp	r3, r4
 800a598:	f67f af0c 	bls.w	800a3b4 <__strftime.isra.0+0x64>
 800a59c:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a5a0:	553a      	strb	r2, [r7, r4]
 800a5a2:	3401      	adds	r4, #1
 800a5a4:	e7f5      	b.n	800a592 <__strftime.isra.0+0x242>
 800a5a6:	4b8f      	ldr	r3, [pc, #572]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a5a8:	6932      	ldr	r2, [r6, #16]
 800a5aa:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 800a5ae:	4648      	mov	r0, r9
 800a5b0:	f7f5 fe20 	bl	80001f4 <strlen>
 800a5b4:	f109 39ff 	add.w	r9, r9, #4294967295
 800a5b8:	4420      	add	r0, r4
 800a5ba:	1e6b      	subs	r3, r5, #1
 800a5bc:	42a0      	cmp	r0, r4
 800a5be:	d0cb      	beq.n	800a558 <__strftime.isra.0+0x208>
 800a5c0:	42a3      	cmp	r3, r4
 800a5c2:	f67f aef7 	bls.w	800a3b4 <__strftime.isra.0+0x64>
 800a5c6:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a5ca:	553a      	strb	r2, [r7, r4]
 800a5cc:	3401      	adds	r4, #1
 800a5ce:	e7f5      	b.n	800a5bc <__strftime.isra.0+0x26c>
 800a5d0:	6933      	ldr	r3, [r6, #16]
 800a5d2:	4a84      	ldr	r2, [pc, #528]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a5d4:	330c      	adds	r3, #12
 800a5d6:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 800a5da:	4648      	mov	r0, r9
 800a5dc:	f7f5 fe0a 	bl	80001f4 <strlen>
 800a5e0:	f109 39ff 	add.w	r9, r9, #4294967295
 800a5e4:	4420      	add	r0, r4
 800a5e6:	1e6b      	subs	r3, r5, #1
 800a5e8:	42a0      	cmp	r0, r4
 800a5ea:	d0b5      	beq.n	800a558 <__strftime.isra.0+0x208>
 800a5ec:	42a3      	cmp	r3, r4
 800a5ee:	f67f aee1 	bls.w	800a3b4 <__strftime.isra.0+0x64>
 800a5f2:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800a5f6:	553a      	strb	r2, [r7, r4]
 800a5f8:	3401      	adds	r4, #1
 800a5fa:	e7f5      	b.n	800a5e8 <__strftime.isra.0+0x298>
 800a5fc:	4b79      	ldr	r3, [pc, #484]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a5fe:	f8d3 90a0 	ldr.w	r9, [r3, #160]	; 0xa0
 800a602:	4648      	mov	r0, r9
 800a604:	f7f5 fdf6 	bl	80001f4 <strlen>
 800a608:	f899 3000 	ldrb.w	r3, [r9]
 800a60c:	2b00      	cmp	r3, #0
 800a60e:	d0a3      	beq.n	800a558 <__strftime.isra.0+0x208>
 800a610:	4633      	mov	r3, r6
 800a612:	464a      	mov	r2, r9
 800a614:	1b29      	subs	r1, r5, r4
 800a616:	1938      	adds	r0, r7, r4
 800a618:	f7ff fe9a 	bl	800a350 <__strftime.isra.0>
 800a61c:	2800      	cmp	r0, #0
 800a61e:	f77f aec9 	ble.w	800a3b4 <__strftime.isra.0+0x64>
 800a622:	4404      	add	r4, r0
 800a624:	e798      	b.n	800a558 <__strftime.isra.0+0x208>
 800a626:	4b6f      	ldr	r3, [pc, #444]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a628:	f8d3 90e4 	ldr.w	r9, [r3, #228]	; 0xe4
 800a62c:	e7e9      	b.n	800a602 <__strftime.isra.0+0x2b2>
 800a62e:	4b6d      	ldr	r3, [pc, #436]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a630:	f8d3 909c 	ldr.w	r9, [r3, #156]	; 0x9c
 800a634:	e7e5      	b.n	800a602 <__strftime.isra.0+0x2b2>
 800a636:	4b6b      	ldr	r3, [pc, #428]	; (800a7e4 <__strftime.isra.0+0x494>)
 800a638:	f8d3 9098 	ldr.w	r9, [r3, #152]	; 0x98
 800a63c:	e7e1      	b.n	800a602 <__strftime.isra.0+0x2b2>
 800a63e:	496a      	ldr	r1, [pc, #424]	; (800a7e8 <__strftime.isra.0+0x498>)
 800a640:	f8d6 a014 	ldr.w	sl, [r6, #20]
 800a644:	458a      	cmp	sl, r1
 800a646:	bfac      	ite	ge
 800a648:	2100      	movge	r1, #0
 800a64a:	2101      	movlt	r1, #1
 800a64c:	f1ba 0f00 	cmp.w	sl, #0
 800a650:	db11      	blt.n	800a676 <__strftime.isra.0+0x326>
 800a652:	2064      	movs	r0, #100	; 0x64
 800a654:	fb9a f0f0 	sdiv	r0, sl, r0
 800a658:	3013      	adds	r0, #19
 800a65a:	f1bb 0f00 	cmp.w	fp, #0
 800a65e:	d014      	beq.n	800a68a <__strftime.isra.0+0x33a>
 800a660:	2863      	cmp	r0, #99	; 0x63
 800a662:	dd27      	ble.n	800a6b4 <__strftime.isra.0+0x364>
 800a664:	4b61      	ldr	r3, [pc, #388]	; (800a7ec <__strftime.isra.0+0x49c>)
 800a666:	4a62      	ldr	r2, [pc, #392]	; (800a7f0 <__strftime.isra.0+0x4a0>)
 800a668:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 800a66c:	bf18      	it	ne
 800a66e:	461a      	movne	r2, r3
 800a670:	f8df c198 	ldr.w	ip, [pc, #408]	; 800a80c <__strftime.isra.0+0x4bc>
 800a674:	e00c      	b.n	800a690 <__strftime.isra.0+0x340>
 800a676:	f20a 706c 	addw	r0, sl, #1900	; 0x76c
 800a67a:	9103      	str	r1, [sp, #12]
 800a67c:	f001 fd02 	bl	800c084 <abs>
 800a680:	2264      	movs	r2, #100	; 0x64
 800a682:	9903      	ldr	r1, [sp, #12]
 800a684:	fb90 f0f2 	sdiv	r0, r0, r2
 800a688:	e7e7      	b.n	800a65a <__strftime.isra.0+0x30a>
 800a68a:	4a58      	ldr	r2, [pc, #352]	; (800a7ec <__strftime.isra.0+0x49c>)
 800a68c:	f8df c180 	ldr.w	ip, [pc, #384]	; 800a810 <__strftime.isra.0+0x4c0>
 800a690:	4b58      	ldr	r3, [pc, #352]	; (800a7f4 <__strftime.isra.0+0x4a4>)
 800a692:	9001      	str	r0, [sp, #4]
 800a694:	f1b9 0f02 	cmp.w	r9, #2
 800a698:	bf2c      	ite	cs
 800a69a:	ebc1 0109 	rsbcs	r1, r1, r9
 800a69e:	f1c1 0102 	rsbcc	r1, r1, #2
 800a6a2:	9100      	str	r1, [sp, #0]
 800a6a4:	4950      	ldr	r1, [pc, #320]	; (800a7e8 <__strftime.isra.0+0x498>)
 800a6a6:	458a      	cmp	sl, r1
 800a6a8:	bfa8      	it	ge
 800a6aa:	4613      	movge	r3, r2
 800a6ac:	4662      	mov	r2, ip
 800a6ae:	1b29      	subs	r1, r5, r4
 800a6b0:	1938      	adds	r0, r7, r4
 800a6b2:	e028      	b.n	800a706 <__strftime.isra.0+0x3b6>
 800a6b4:	4a4d      	ldr	r2, [pc, #308]	; (800a7ec <__strftime.isra.0+0x49c>)
 800a6b6:	e7db      	b.n	800a670 <__strftime.isra.0+0x320>
 800a6b8:	494f      	ldr	r1, [pc, #316]	; (800a7f8 <__strftime.isra.0+0x4a8>)
 800a6ba:	4a50      	ldr	r2, [pc, #320]	; (800a7fc <__strftime.isra.0+0x4ac>)
 800a6bc:	68f3      	ldr	r3, [r6, #12]
 800a6be:	2864      	cmp	r0, #100	; 0x64
 800a6c0:	bf08      	it	eq
 800a6c2:	460a      	moveq	r2, r1
 800a6c4:	1b29      	subs	r1, r5, r4
 800a6c6:	1938      	adds	r0, r7, r4
 800a6c8:	f7ff fd04 	bl	800a0d4 <sniprintf>
 800a6cc:	2800      	cmp	r0, #0
 800a6ce:	f6ff ae71 	blt.w	800a3b4 <__strftime.isra.0+0x64>
 800a6d2:	4404      	add	r4, r0
 800a6d4:	42a5      	cmp	r5, r4
 800a6d6:	f63f af3f 	bhi.w	800a558 <__strftime.isra.0+0x208>
 800a6da:	e66b      	b.n	800a3b4 <__strftime.isra.0+0x64>
 800a6dc:	6970      	ldr	r0, [r6, #20]
 800a6de:	6933      	ldr	r3, [r6, #16]
 800a6e0:	f8d6 a00c 	ldr.w	sl, [r6, #12]
 800a6e4:	2800      	cmp	r0, #0
 800a6e6:	eb07 0904 	add.w	r9, r7, r4
 800a6ea:	eba5 0104 	sub.w	r1, r5, r4
 800a6ee:	f103 0301 	add.w	r3, r3, #1
 800a6f2:	db0b      	blt.n	800a70c <__strftime.isra.0+0x3bc>
 800a6f4:	2264      	movs	r2, #100	; 0x64
 800a6f6:	fb90 fcf2 	sdiv	ip, r0, r2
 800a6fa:	fb02 001c 	mls	r0, r2, ip, r0
 800a6fe:	4a40      	ldr	r2, [pc, #256]	; (800a800 <__strftime.isra.0+0x4b0>)
 800a700:	e9cd a000 	strd	sl, r0, [sp]
 800a704:	4648      	mov	r0, r9
 800a706:	f7ff fce5 	bl	800a0d4 <sniprintf>
 800a70a:	e7df      	b.n	800a6cc <__strftime.isra.0+0x37c>
 800a70c:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800a710:	e9cd 1303 	strd	r1, r3, [sp, #12]
 800a714:	f001 fcb6 	bl	800c084 <abs>
 800a718:	2264      	movs	r2, #100	; 0x64
 800a71a:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
 800a71e:	fb90 fcf2 	sdiv	ip, r0, r2
 800a722:	fb0c 0012 	mls	r0, ip, r2, r0
 800a726:	e7ea      	b.n	800a6fe <__strftime.isra.0+0x3ae>
 800a728:	2225      	movs	r2, #37	; 0x25
 800a72a:	f88d 2018 	strb.w	r2, [sp, #24]
 800a72e:	f1bb 0f00 	cmp.w	fp, #0
 800a732:	d011      	beq.n	800a758 <__strftime.isra.0+0x408>
 800a734:	f1b9 0f06 	cmp.w	r9, #6
 800a738:	bf38      	it	cc
 800a73a:	f04f 0906 	movcc.w	r9, #6
 800a73e:	f1b9 0306 	subs.w	r3, r9, #6
 800a742:	f88d b019 	strb.w	fp, [sp, #25]
 800a746:	d10c      	bne.n	800a762 <__strftime.isra.0+0x412>
 800a748:	f10d 001a 	add.w	r0, sp, #26
 800a74c:	492d      	ldr	r1, [pc, #180]	; (800a804 <__strftime.isra.0+0x4b4>)
 800a74e:	f7ff fd95 	bl	800a27c <strcpy>
 800a752:	4633      	mov	r3, r6
 800a754:	aa06      	add	r2, sp, #24
 800a756:	e75d      	b.n	800a614 <__strftime.isra.0+0x2c4>
 800a758:	f04f 0b2b 	mov.w	fp, #43	; 0x2b
 800a75c:	f04f 090a 	mov.w	r9, #10
 800a760:	e7ed      	b.n	800a73e <__strftime.isra.0+0x3ee>
 800a762:	4a29      	ldr	r2, [pc, #164]	; (800a808 <__strftime.isra.0+0x4b8>)
 800a764:	211e      	movs	r1, #30
 800a766:	f10d 001a 	add.w	r0, sp, #26
 800a76a:	f7ff fcb3 	bl	800a0d4 <sniprintf>
 800a76e:	2800      	cmp	r0, #0
 800a770:	ddea      	ble.n	800a748 <__strftime.isra.0+0x3f8>
 800a772:	f10d 031a 	add.w	r3, sp, #26
 800a776:	4418      	add	r0, r3
 800a778:	e7e8      	b.n	800a74c <__strftime.isra.0+0x3fc>
 800a77a:	4630      	mov	r0, r6
 800a77c:	f7ff fd86 	bl	800a28c <iso_year_adjust>
 800a780:	4681      	mov	r9, r0
 800a782:	6970      	ldr	r0, [r6, #20]
 800a784:	2800      	cmp	r0, #0
 800a786:	db11      	blt.n	800a7ac <__strftime.isra.0+0x45c>
 800a788:	2364      	movs	r3, #100	; 0x64
 800a78a:	fb90 f2f3 	sdiv	r2, r0, r3
 800a78e:	fb03 0012 	mls	r0, r3, r2, r0
 800a792:	2264      	movs	r2, #100	; 0x64
 800a794:	4481      	add	r9, r0
 800a796:	fb99 f3f2 	sdiv	r3, r9, r2
 800a79a:	fb02 9913 	mls	r9, r2, r3, r9
 800a79e:	4491      	add	r9, r2
 800a7a0:	fbb9 f3f2 	udiv	r3, r9, r2
 800a7a4:	fb02 9313 	mls	r3, r2, r3, r9
 800a7a8:	4a13      	ldr	r2, [pc, #76]	; (800a7f8 <__strftime.isra.0+0x4a8>)
 800a7aa:	e78b      	b.n	800a6c4 <__strftime.isra.0+0x374>
 800a7ac:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800a7b0:	f001 fc68 	bl	800c084 <abs>
 800a7b4:	2364      	movs	r3, #100	; 0x64
 800a7b6:	f1b9 0f00 	cmp.w	r9, #0
 800a7ba:	fb90 f2f3 	sdiv	r2, r0, r3
 800a7be:	fb02 0013 	mls	r0, r2, r3, r0
 800a7c2:	da07      	bge.n	800a7d4 <__strftime.isra.0+0x484>
 800a7c4:	6972      	ldr	r2, [r6, #20]
 800a7c6:	f2a3 73cf 	subw	r3, r3, #1999	; 0x7cf
 800a7ca:	429a      	cmp	r2, r3
 800a7cc:	bfb8      	it	lt
 800a7ce:	f04f 0901 	movlt.w	r9, #1
 800a7d2:	e7de      	b.n	800a792 <__strftime.isra.0+0x442>
 800a7d4:	d0dd      	beq.n	800a792 <__strftime.isra.0+0x442>
 800a7d6:	6972      	ldr	r2, [r6, #20]
 800a7d8:	4b03      	ldr	r3, [pc, #12]	; (800a7e8 <__strftime.isra.0+0x498>)
 800a7da:	429a      	cmp	r2, r3
 800a7dc:	bfb8      	it	lt
 800a7de:	f04f 39ff 	movlt.w	r9, #4294967295
 800a7e2:	e7d6      	b.n	800a792 <__strftime.isra.0+0x442>
 800a7e4:	0800ffe4 	.word	0x0800ffe4
 800a7e8:	fffff894 	.word	0xfffff894
 800a7ec:	08010157 	.word	0x08010157
 800a7f0:	0800fe1e 	.word	0x0800fe1e
 800a7f4:	080104b6 	.word	0x080104b6
 800a7f8:	0800fe2e 	.word	0x0800fe2e
 800a7fc:	0800fe20 	.word	0x0800fe20
 800a800:	0800fe24 	.word	0x0800fe24
 800a804:	0800fe37 	.word	0x0800fe37
 800a808:	0800fe33 	.word	0x0800fe33
 800a80c:	0800fe16 	.word	0x0800fe16
 800a810:	0800fe0f 	.word	0x0800fe0f
 800a814:	6971      	ldr	r1, [r6, #20]
 800a816:	4ab6      	ldr	r2, [pc, #728]	; (800aaf0 <__strftime.isra.0+0x7a0>)
 800a818:	4291      	cmp	r1, r2
 800a81a:	bfac      	ite	ge
 800a81c:	2300      	movge	r3, #0
 800a81e:	2301      	movlt	r3, #1
 800a820:	4630      	mov	r0, r6
 800a822:	e9cd 3103 	strd	r3, r1, [sp, #12]
 800a826:	f7ff fd31 	bl	800a28c <iso_year_adjust>
 800a82a:	9904      	ldr	r1, [sp, #16]
 800a82c:	2900      	cmp	r1, #0
 800a82e:	4682      	mov	sl, r0
 800a830:	db2c      	blt.n	800a88c <__strftime.isra.0+0x53c>
 800a832:	2264      	movs	r2, #100	; 0x64
 800a834:	fb91 f2f2 	sdiv	r2, r1, r2
 800a838:	3213      	adds	r2, #19
 800a83a:	6970      	ldr	r0, [r6, #20]
 800a83c:	2800      	cmp	r0, #0
 800a83e:	db30      	blt.n	800a8a2 <__strftime.isra.0+0x552>
 800a840:	f04f 0c64 	mov.w	ip, #100	; 0x64
 800a844:	fb90 fefc 	sdiv	lr, r0, ip
 800a848:	fb0c 001e 	mls	r0, ip, lr, r0
 800a84c:	f1ba 0f00 	cmp.w	sl, #0
 800a850:	da36      	bge.n	800a8c0 <__strftime.isra.0+0x570>
 800a852:	6971      	ldr	r1, [r6, #20]
 800a854:	4ba7      	ldr	r3, [pc, #668]	; (800aaf4 <__strftime.isra.0+0x7a4>)
 800a856:	4299      	cmp	r1, r3
 800a858:	db3d      	blt.n	800a8d6 <__strftime.isra.0+0x586>
 800a85a:	4482      	add	sl, r0
 800a85c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a860:	d13e      	bne.n	800a8e0 <__strftime.isra.0+0x590>
 800a862:	3a01      	subs	r2, #1
 800a864:	f04f 0a63 	mov.w	sl, #99	; 0x63
 800a868:	9b03      	ldr	r3, [sp, #12]
 800a86a:	2064      	movs	r0, #100	; 0x64
 800a86c:	fb00 aa02 	mla	sl, r0, r2, sl
 800a870:	2b00      	cmp	r3, #0
 800a872:	f000 81ad 	beq.w	800abd0 <__strftime.isra.0+0x880>
 800a876:	222d      	movs	r2, #45	; 0x2d
 800a878:	f88d 2018 	strb.w	r2, [sp, #24]
 800a87c:	f1b9 0f00 	cmp.w	r9, #0
 800a880:	d001      	beq.n	800a886 <__strftime.isra.0+0x536>
 800a882:	f109 39ff 	add.w	r9, r9, #4294967295
 800a886:	f10d 0219 	add.w	r2, sp, #25
 800a88a:	e1ac      	b.n	800abe6 <__strftime.isra.0+0x896>
 800a88c:	f201 706c 	addw	r0, r1, #1900	; 0x76c
 800a890:	9104      	str	r1, [sp, #16]
 800a892:	f001 fbf7 	bl	800c084 <abs>
 800a896:	f04f 0c64 	mov.w	ip, #100	; 0x64
 800a89a:	9904      	ldr	r1, [sp, #16]
 800a89c:	fb90 f2fc 	sdiv	r2, r0, ip
 800a8a0:	e7cb      	b.n	800a83a <__strftime.isra.0+0x4ea>
 800a8a2:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800a8a6:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a8aa:	f001 fbeb 	bl	800c084 <abs>
 800a8ae:	f04f 0c64 	mov.w	ip, #100	; 0x64
 800a8b2:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
 800a8b6:	fb90 fefc 	sdiv	lr, r0, ip
 800a8ba:	fb0e 001c 	mls	r0, lr, ip, r0
 800a8be:	e7c5      	b.n	800a84c <__strftime.isra.0+0x4fc>
 800a8c0:	d0cb      	beq.n	800a85a <__strftime.isra.0+0x50a>
 800a8c2:	4b8b      	ldr	r3, [pc, #556]	; (800aaf0 <__strftime.isra.0+0x7a0>)
 800a8c4:	4299      	cmp	r1, r3
 800a8c6:	bfb4      	ite	lt
 800a8c8:	2301      	movlt	r3, #1
 800a8ca:	2300      	movge	r3, #0
 800a8cc:	9303      	str	r3, [sp, #12]
 800a8ce:	bfb8      	it	lt
 800a8d0:	f04f 3aff 	movlt.w	sl, #4294967295
 800a8d4:	e7c1      	b.n	800a85a <__strftime.isra.0+0x50a>
 800a8d6:	f04f 0a01 	mov.w	sl, #1
 800a8da:	f8cd a00c 	str.w	sl, [sp, #12]
 800a8de:	e7bc      	b.n	800a85a <__strftime.isra.0+0x50a>
 800a8e0:	f1ba 0f64 	cmp.w	sl, #100	; 0x64
 800a8e4:	bf04      	itt	eq
 800a8e6:	3201      	addeq	r2, #1
 800a8e8:	f04f 0a00 	moveq.w	sl, #0
 800a8ec:	e7bc      	b.n	800a868 <__strftime.isra.0+0x518>
 800a8ee:	4982      	ldr	r1, [pc, #520]	; (800aaf8 <__strftime.isra.0+0x7a8>)
 800a8f0:	4a82      	ldr	r2, [pc, #520]	; (800aafc <__strftime.isra.0+0x7ac>)
 800a8f2:	68b3      	ldr	r3, [r6, #8]
 800a8f4:	286b      	cmp	r0, #107	; 0x6b
 800a8f6:	bf08      	it	eq
 800a8f8:	460a      	moveq	r2, r1
 800a8fa:	e6e3      	b.n	800a6c4 <__strftime.isra.0+0x374>
 800a8fc:	68b3      	ldr	r3, [r6, #8]
 800a8fe:	b163      	cbz	r3, 800a91a <__strftime.isra.0+0x5ca>
 800a900:	2b0c      	cmp	r3, #12
 800a902:	d004      	beq.n	800a90e <__strftime.isra.0+0x5be>
 800a904:	210c      	movs	r1, #12
 800a906:	fb93 f2f1 	sdiv	r2, r3, r1
 800a90a:	fb01 3312 	mls	r3, r1, r2, r3
 800a90e:	497b      	ldr	r1, [pc, #492]	; (800aafc <__strftime.isra.0+0x7ac>)
 800a910:	4a79      	ldr	r2, [pc, #484]	; (800aaf8 <__strftime.isra.0+0x7a8>)
 800a912:	2849      	cmp	r0, #73	; 0x49
 800a914:	bf08      	it	eq
 800a916:	460a      	moveq	r2, r1
 800a918:	e6d4      	b.n	800a6c4 <__strftime.isra.0+0x374>
 800a91a:	230c      	movs	r3, #12
 800a91c:	e7f7      	b.n	800a90e <__strftime.isra.0+0x5be>
 800a91e:	69f3      	ldr	r3, [r6, #28]
 800a920:	4a77      	ldr	r2, [pc, #476]	; (800ab00 <__strftime.isra.0+0x7b0>)
 800a922:	3301      	adds	r3, #1
 800a924:	e6ce      	b.n	800a6c4 <__strftime.isra.0+0x374>
 800a926:	6933      	ldr	r3, [r6, #16]
 800a928:	3301      	adds	r3, #1
 800a92a:	e73d      	b.n	800a7a8 <__strftime.isra.0+0x458>
 800a92c:	6873      	ldr	r3, [r6, #4]
 800a92e:	e73b      	b.n	800a7a8 <__strftime.isra.0+0x458>
 800a930:	1e6b      	subs	r3, r5, #1
 800a932:	429c      	cmp	r4, r3
 800a934:	f4bf ad3e 	bcs.w	800a3b4 <__strftime.isra.0+0x64>
 800a938:	230a      	movs	r3, #10
 800a93a:	553b      	strb	r3, [r7, r4]
 800a93c:	3401      	adds	r4, #1
 800a93e:	e60b      	b.n	800a558 <__strftime.isra.0+0x208>
 800a940:	68b3      	ldr	r3, [r6, #8]
 800a942:	2b0b      	cmp	r3, #11
 800a944:	4b6f      	ldr	r3, [pc, #444]	; (800ab04 <__strftime.isra.0+0x7b4>)
 800a946:	bfd4      	ite	le
 800a948:	2200      	movle	r2, #0
 800a94a:	2201      	movgt	r2, #1
 800a94c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800a950:	f8d3 90a4 	ldr.w	r9, [r3, #164]	; 0xa4
 800a954:	4648      	mov	r0, r9
 800a956:	f7f5 fc4d 	bl	80001f4 <strlen>
 800a95a:	f109 32ff 	add.w	r2, r9, #4294967295
 800a95e:	4420      	add	r0, r4
 800a960:	f105 3cff 	add.w	ip, r5, #4294967295
 800a964:	42a0      	cmp	r0, r4
 800a966:	f43f adf7 	beq.w	800a558 <__strftime.isra.0+0x208>
 800a96a:	45a4      	cmp	ip, r4
 800a96c:	f67f ad22 	bls.w	800a3b4 <__strftime.isra.0+0x64>
 800a970:	f898 1000 	ldrb.w	r1, [r8]
 800a974:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a978:	2950      	cmp	r1, #80	; 0x50
 800a97a:	d107      	bne.n	800a98c <__strftime.isra.0+0x63c>
 800a97c:	4962      	ldr	r1, [pc, #392]	; (800ab08 <__strftime.isra.0+0x7b8>)
 800a97e:	5cc9      	ldrb	r1, [r1, r3]
 800a980:	f001 0103 	and.w	r1, r1, #3
 800a984:	2901      	cmp	r1, #1
 800a986:	bf08      	it	eq
 800a988:	3320      	addeq	r3, #32
 800a98a:	b2db      	uxtb	r3, r3
 800a98c:	553b      	strb	r3, [r7, r4]
 800a98e:	3401      	adds	r4, #1
 800a990:	e7e8      	b.n	800a964 <__strftime.isra.0+0x614>
 800a992:	6873      	ldr	r3, [r6, #4]
 800a994:	9300      	str	r3, [sp, #0]
 800a996:	4a5d      	ldr	r2, [pc, #372]	; (800ab0c <__strftime.isra.0+0x7bc>)
 800a998:	68b3      	ldr	r3, [r6, #8]
 800a99a:	1b29      	subs	r1, r5, r4
 800a99c:	1938      	adds	r0, r7, r4
 800a99e:	f7ff fb99 	bl	800a0d4 <sniprintf>
 800a9a2:	e693      	b.n	800a6cc <__strftime.isra.0+0x37c>
 800a9a4:	6a33      	ldr	r3, [r6, #32]
 800a9a6:	2b00      	cmp	r3, #0
 800a9a8:	db7a      	blt.n	800aaa0 <__strftime.isra.0+0x750>
 800a9aa:	f001 f9c7 	bl	800bd3c <__tz_lock>
 800a9ae:	9b02      	ldr	r3, [sp, #8]
 800a9b0:	b90b      	cbnz	r3, 800a9b6 <__strftime.isra.0+0x666>
 800a9b2:	f001 f9cf 	bl	800bd54 <_tzset_unlocked>
 800a9b6:	f002 fdeb 	bl	800d590 <__gettzinfo>
 800a9ba:	6a33      	ldr	r3, [r6, #32]
 800a9bc:	2b00      	cmp	r3, #0
 800a9be:	bfd4      	ite	le
 800a9c0:	2200      	movle	r2, #0
 800a9c2:	2201      	movgt	r2, #1
 800a9c4:	2328      	movs	r3, #40	; 0x28
 800a9c6:	fb02 3303 	mla	r3, r2, r3, r3
 800a9ca:	58c3      	ldr	r3, [r0, r3]
 800a9cc:	f1c3 0900 	rsb	r9, r3, #0
 800a9d0:	f001 f9ba 	bl	800bd48 <__tz_unlock>
 800a9d4:	2301      	movs	r3, #1
 800a9d6:	9302      	str	r3, [sp, #8]
 800a9d8:	6972      	ldr	r2, [r6, #20]
 800a9da:	f1b2 0345 	subs.w	r3, r2, #69	; 0x45
 800a9de:	ea4f 7ce2 	mov.w	ip, r2, asr #31
 800a9e2:	f16c 0c00 	sbc.w	ip, ip, #0
 800a9e6:	f1bc 0f00 	cmp.w	ip, #0
 800a9ea:	eba5 0104 	sub.w	r1, r5, r4
 800a9ee:	eb07 0004 	add.w	r0, r7, r4
 800a9f2:	da02      	bge.n	800a9fa <__strftime.isra.0+0x6aa>
 800a9f4:	3303      	adds	r3, #3
 800a9f6:	f14c 0c00 	adc.w	ip, ip, #0
 800a9fa:	089b      	lsrs	r3, r3, #2
 800a9fc:	ea43 738c 	orr.w	r3, r3, ip, lsl #30
 800aa00:	f102 3aff 	add.w	sl, r2, #4294967295
 800aa04:	ea4f 0cac 	mov.w	ip, ip, asr #2
 800aa08:	f04f 0e64 	mov.w	lr, #100	; 0x64
 800aa0c:	fb9a fefe 	sdiv	lr, sl, lr
 800aa10:	ebb3 030e 	subs.w	r3, r3, lr
 800aa14:	eb6c 7cee 	sbc.w	ip, ip, lr, asr #31
 800aa18:	f202 1a2b 	addw	sl, r2, #299	; 0x12b
 800aa1c:	f44f 7ec8 	mov.w	lr, #400	; 0x190
 800aa20:	fb9a fefe 	sdiv	lr, sl, lr
 800aa24:	eb13 030e 	adds.w	r3, r3, lr
 800aa28:	eb4c 7eee 	adc.w	lr, ip, lr, asr #31
 800aa2c:	3a46      	subs	r2, #70	; 0x46
 800aa2e:	f240 1c6d 	movw	ip, #365	; 0x16d
 800aa32:	fb0c f202 	mul.w	r2, ip, r2
 800aa36:	189b      	adds	r3, r3, r2
 800aa38:	eb4e 72e2 	adc.w	r2, lr, r2, asr #31
 800aa3c:	f8d6 e01c 	ldr.w	lr, [r6, #28]
 800aa40:	f04f 0c18 	mov.w	ip, #24
 800aa44:	eb13 030e 	adds.w	r3, r3, lr
 800aa48:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 800aa4c:	fba3 3e0c 	umull	r3, lr, r3, ip
 800aa50:	fb0c e202 	mla	r2, ip, r2, lr
 800aa54:	f8d6 e008 	ldr.w	lr, [r6, #8]
 800aa58:	f04f 0c3c 	mov.w	ip, #60	; 0x3c
 800aa5c:	eb13 030e 	adds.w	r3, r3, lr
 800aa60:	eb42 7eee 	adc.w	lr, r2, lr, asr #31
 800aa64:	fba3 320c 	umull	r3, r2, r3, ip
 800aa68:	fb0c 220e 	mla	r2, ip, lr, r2
 800aa6c:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800aa70:	eb13 030e 	adds.w	r3, r3, lr
 800aa74:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 800aa78:	fba3 3e0c 	umull	r3, lr, r3, ip
 800aa7c:	fb0c e202 	mla	r2, ip, r2, lr
 800aa80:	f8d6 e000 	ldr.w	lr, [r6]
 800aa84:	eb13 030e 	adds.w	r3, r3, lr
 800aa88:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 800aa8c:	ebb3 0309 	subs.w	r3, r3, r9
 800aa90:	eb62 72e9 	sbc.w	r2, r2, r9, asr #31
 800aa94:	e9cd 3200 	strd	r3, r2, [sp]
 800aa98:	4a1d      	ldr	r2, [pc, #116]	; (800ab10 <__strftime.isra.0+0x7c0>)
 800aa9a:	f7ff fb1b 	bl	800a0d4 <sniprintf>
 800aa9e:	e615      	b.n	800a6cc <__strftime.isra.0+0x37c>
 800aaa0:	f04f 0900 	mov.w	r9, #0
 800aaa4:	e798      	b.n	800a9d8 <__strftime.isra.0+0x688>
 800aaa6:	6833      	ldr	r3, [r6, #0]
 800aaa8:	e67e      	b.n	800a7a8 <__strftime.isra.0+0x458>
 800aaaa:	1e6b      	subs	r3, r5, #1
 800aaac:	429c      	cmp	r4, r3
 800aaae:	f4bf ac81 	bcs.w	800a3b4 <__strftime.isra.0+0x64>
 800aab2:	2309      	movs	r3, #9
 800aab4:	e741      	b.n	800a93a <__strftime.isra.0+0x5ea>
 800aab6:	6833      	ldr	r3, [r6, #0]
 800aab8:	9301      	str	r3, [sp, #4]
 800aaba:	6873      	ldr	r3, [r6, #4]
 800aabc:	9300      	str	r3, [sp, #0]
 800aabe:	4a15      	ldr	r2, [pc, #84]	; (800ab14 <__strftime.isra.0+0x7c4>)
 800aac0:	68b3      	ldr	r3, [r6, #8]
 800aac2:	e5f4      	b.n	800a6ae <__strftime.isra.0+0x35e>
 800aac4:	1e6b      	subs	r3, r5, #1
 800aac6:	429c      	cmp	r4, r3
 800aac8:	f4bf ac74 	bcs.w	800a3b4 <__strftime.isra.0+0x64>
 800aacc:	69b3      	ldr	r3, [r6, #24]
 800aace:	1c62      	adds	r2, r4, #1
 800aad0:	b91b      	cbnz	r3, 800aada <__strftime.isra.0+0x78a>
 800aad2:	2337      	movs	r3, #55	; 0x37
 800aad4:	553b      	strb	r3, [r7, r4]
 800aad6:	4614      	mov	r4, r2
 800aad8:	e53e      	b.n	800a558 <__strftime.isra.0+0x208>
 800aada:	3330      	adds	r3, #48	; 0x30
 800aadc:	e7fa      	b.n	800aad4 <__strftime.isra.0+0x784>
 800aade:	69f3      	ldr	r3, [r6, #28]
 800aae0:	69b2      	ldr	r2, [r6, #24]
 800aae2:	3307      	adds	r3, #7
 800aae4:	1a9b      	subs	r3, r3, r2
 800aae6:	2207      	movs	r2, #7
 800aae8:	fb93 f3f2 	sdiv	r3, r3, r2
 800aaec:	e65c      	b.n	800a7a8 <__strftime.isra.0+0x458>
 800aaee:	bf00      	nop
 800aaf0:	fffff894 	.word	0xfffff894
 800aaf4:	fffff895 	.word	0xfffff895
 800aaf8:	0800fe20 	.word	0x0800fe20
 800aafc:	0800fe2e 	.word	0x0800fe2e
 800ab00:	0800fe43 	.word	0x0800fe43
 800ab04:	0800ffe4 	.word	0x0800ffe4
 800ab08:	08010159 	.word	0x08010159
 800ab0c:	0800fe52 	.word	0x0800fe52
 800ab10:	0800fe48 	.word	0x0800fe48
 800ab14:	0800fe4d 	.word	0x0800fe4d
 800ab18:	4630      	mov	r0, r6
 800ab1a:	f7ff fbb7 	bl	800a28c <iso_year_adjust>
 800ab1e:	69b2      	ldr	r2, [r6, #24]
 800ab20:	b132      	cbz	r2, 800ab30 <__strftime.isra.0+0x7e0>
 800ab22:	3a01      	subs	r2, #1
 800ab24:	2800      	cmp	r0, #0
 800ab26:	dc28      	bgt.n	800ab7a <__strftime.isra.0+0x82a>
 800ab28:	69f3      	ldr	r3, [r6, #28]
 800ab2a:	d103      	bne.n	800ab34 <__strftime.isra.0+0x7e4>
 800ab2c:	330a      	adds	r3, #10
 800ab2e:	e7d9      	b.n	800aae4 <__strftime.isra.0+0x794>
 800ab30:	2206      	movs	r2, #6
 800ab32:	e7f7      	b.n	800ab24 <__strftime.isra.0+0x7d4>
 800ab34:	6971      	ldr	r1, [r6, #20]
 800ab36:	2900      	cmp	r1, #0
 800ab38:	eba2 0203 	sub.w	r2, r2, r3
 800ab3c:	f240 736b 	movw	r3, #1899	; 0x76b
 800ab40:	bfa8      	it	ge
 800ab42:	f06f 0364 	mvnge.w	r3, #100	; 0x64
 800ab46:	440b      	add	r3, r1
 800ab48:	0799      	lsls	r1, r3, #30
 800ab4a:	d105      	bne.n	800ab58 <__strftime.isra.0+0x808>
 800ab4c:	2064      	movs	r0, #100	; 0x64
 800ab4e:	fb93 f1f0 	sdiv	r1, r3, r0
 800ab52:	fb00 3111 	mls	r1, r0, r1, r3
 800ab56:	b971      	cbnz	r1, 800ab76 <__strftime.isra.0+0x826>
 800ab58:	f44f 71c8 	mov.w	r1, #400	; 0x190
 800ab5c:	fb93 f0f1 	sdiv	r0, r3, r1
 800ab60:	fb01 3310 	mls	r3, r1, r0, r3
 800ab64:	fab3 f383 	clz	r3, r3
 800ab68:	095b      	lsrs	r3, r3, #5
 800ab6a:	1ad3      	subs	r3, r2, r3
 800ab6c:	2b05      	cmp	r3, #5
 800ab6e:	bfb4      	ite	lt
 800ab70:	2335      	movlt	r3, #53	; 0x35
 800ab72:	2334      	movge	r3, #52	; 0x34
 800ab74:	e618      	b.n	800a7a8 <__strftime.isra.0+0x458>
 800ab76:	2301      	movs	r3, #1
 800ab78:	e7f7      	b.n	800ab6a <__strftime.isra.0+0x81a>
 800ab7a:	2301      	movs	r3, #1
 800ab7c:	e614      	b.n	800a7a8 <__strftime.isra.0+0x458>
 800ab7e:	1e6b      	subs	r3, r5, #1
 800ab80:	429c      	cmp	r4, r3
 800ab82:	f4bf ac17 	bcs.w	800a3b4 <__strftime.isra.0+0x64>
 800ab86:	69b3      	ldr	r3, [r6, #24]
 800ab88:	3330      	adds	r3, #48	; 0x30
 800ab8a:	e6d6      	b.n	800a93a <__strftime.isra.0+0x5ea>
 800ab8c:	69b2      	ldr	r2, [r6, #24]
 800ab8e:	b11a      	cbz	r2, 800ab98 <__strftime.isra.0+0x848>
 800ab90:	3a01      	subs	r2, #1
 800ab92:	69f3      	ldr	r3, [r6, #28]
 800ab94:	3307      	adds	r3, #7
 800ab96:	e7a5      	b.n	800aae4 <__strftime.isra.0+0x794>
 800ab98:	2206      	movs	r2, #6
 800ab9a:	e7fa      	b.n	800ab92 <__strftime.isra.0+0x842>
 800ab9c:	6970      	ldr	r0, [r6, #20]
 800ab9e:	2800      	cmp	r0, #0
 800aba0:	db05      	blt.n	800abae <__strftime.isra.0+0x85e>
 800aba2:	2364      	movs	r3, #100	; 0x64
 800aba4:	fb90 f2f3 	sdiv	r2, r0, r3
 800aba8:	fb02 0313 	mls	r3, r2, r3, r0
 800abac:	e5fc      	b.n	800a7a8 <__strftime.isra.0+0x458>
 800abae:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 800abb2:	f001 fa67 	bl	800c084 <abs>
 800abb6:	e7f4      	b.n	800aba2 <__strftime.isra.0+0x852>
 800abb8:	6972      	ldr	r2, [r6, #20]
 800abba:	494c      	ldr	r1, [pc, #304]	; (800acec <__strftime.isra.0+0x99c>)
 800abbc:	428a      	cmp	r2, r1
 800abbe:	da05      	bge.n	800abcc <__strftime.isra.0+0x87c>
 800abc0:	202d      	movs	r0, #45	; 0x2d
 800abc2:	f88d 0018 	strb.w	r0, [sp, #24]
 800abc6:	eba1 0a02 	sub.w	sl, r1, r2
 800abca:	e657      	b.n	800a87c <__strftime.isra.0+0x52c>
 800abcc:	f202 7a6c 	addw	sl, r2, #1900	; 0x76c
 800abd0:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 800abd4:	d106      	bne.n	800abe4 <__strftime.isra.0+0x894>
 800abd6:	f242 720f 	movw	r2, #9999	; 0x270f
 800abda:	4592      	cmp	sl, r2
 800abdc:	d902      	bls.n	800abe4 <__strftime.isra.0+0x894>
 800abde:	f88d b018 	strb.w	fp, [sp, #24]
 800abe2:	e64b      	b.n	800a87c <__strftime.isra.0+0x52c>
 800abe4:	aa06      	add	r2, sp, #24
 800abe6:	2125      	movs	r1, #37	; 0x25
 800abe8:	7011      	strb	r1, [r2, #0]
 800abea:	f1bb 0f00 	cmp.w	fp, #0
 800abee:	d108      	bne.n	800ac02 <__strftime.isra.0+0x8b2>
 800abf0:	1c50      	adds	r0, r2, #1
 800abf2:	493f      	ldr	r1, [pc, #252]	; (800acf0 <__strftime.isra.0+0x9a0>)
 800abf4:	f7ff fb42 	bl	800a27c <strcpy>
 800abf8:	f8cd a000 	str.w	sl, [sp]
 800abfc:	464b      	mov	r3, r9
 800abfe:	aa06      	add	r2, sp, #24
 800ac00:	e6cb      	b.n	800a99a <__strftime.isra.0+0x64a>
 800ac02:	2330      	movs	r3, #48	; 0x30
 800ac04:	1c90      	adds	r0, r2, #2
 800ac06:	7053      	strb	r3, [r2, #1]
 800ac08:	e7f3      	b.n	800abf2 <__strftime.isra.0+0x8a2>
 800ac0a:	6a33      	ldr	r3, [r6, #32]
 800ac0c:	2b00      	cmp	r3, #0
 800ac0e:	f6ff aca3 	blt.w	800a558 <__strftime.isra.0+0x208>
 800ac12:	f001 f893 	bl	800bd3c <__tz_lock>
 800ac16:	9b02      	ldr	r3, [sp, #8]
 800ac18:	b90b      	cbnz	r3, 800ac1e <__strftime.isra.0+0x8ce>
 800ac1a:	f001 f89b 	bl	800bd54 <_tzset_unlocked>
 800ac1e:	f002 fcb7 	bl	800d590 <__gettzinfo>
 800ac22:	6a33      	ldr	r3, [r6, #32]
 800ac24:	2b00      	cmp	r3, #0
 800ac26:	bfd4      	ite	le
 800ac28:	2200      	movle	r2, #0
 800ac2a:	2201      	movgt	r2, #1
 800ac2c:	2328      	movs	r3, #40	; 0x28
 800ac2e:	fb02 3303 	mla	r3, r2, r3, r3
 800ac32:	eb07 0a04 	add.w	sl, r7, r4
 800ac36:	58c3      	ldr	r3, [r0, r3]
 800ac38:	f1c3 0900 	rsb	r9, r3, #0
 800ac3c:	f001 f884 	bl	800bd48 <__tz_unlock>
 800ac40:	233c      	movs	r3, #60	; 0x3c
 800ac42:	fb99 f0f3 	sdiv	r0, r9, r3
 800ac46:	f002 fd53 	bl	800d6f0 <labs>
 800ac4a:	233c      	movs	r3, #60	; 0x3c
 800ac4c:	eba5 0b04 	sub.w	fp, r5, r4
 800ac50:	fb90 f2f3 	sdiv	r2, r0, r3
 800ac54:	fb02 0013 	mls	r0, r2, r3, r0
 800ac58:	9000      	str	r0, [sp, #0]
 800ac5a:	4a26      	ldr	r2, [pc, #152]	; (800acf4 <__strftime.isra.0+0x9a4>)
 800ac5c:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 800ac60:	4659      	mov	r1, fp
 800ac62:	4650      	mov	r0, sl
 800ac64:	fb99 f3f3 	sdiv	r3, r9, r3
 800ac68:	f7ff fa34 	bl	800a0d4 <sniprintf>
 800ac6c:	2800      	cmp	r0, #0
 800ac6e:	f6ff aba1 	blt.w	800a3b4 <__strftime.isra.0+0x64>
 800ac72:	4404      	add	r4, r0
 800ac74:	42a5      	cmp	r5, r4
 800ac76:	f67f ab9d 	bls.w	800a3b4 <__strftime.isra.0+0x64>
 800ac7a:	2301      	movs	r3, #1
 800ac7c:	9302      	str	r3, [sp, #8]
 800ac7e:	e46b      	b.n	800a558 <__strftime.isra.0+0x208>
 800ac80:	6a33      	ldr	r3, [r6, #32]
 800ac82:	2b00      	cmp	r3, #0
 800ac84:	f6ff ac68 	blt.w	800a558 <__strftime.isra.0+0x208>
 800ac88:	f001 f858 	bl	800bd3c <__tz_lock>
 800ac8c:	9b02      	ldr	r3, [sp, #8]
 800ac8e:	b90b      	cbnz	r3, 800ac94 <__strftime.isra.0+0x944>
 800ac90:	f001 f860 	bl	800bd54 <_tzset_unlocked>
 800ac94:	6a33      	ldr	r3, [r6, #32]
 800ac96:	4a18      	ldr	r2, [pc, #96]	; (800acf8 <__strftime.isra.0+0x9a8>)
 800ac98:	2b00      	cmp	r3, #0
 800ac9a:	bfd4      	ite	le
 800ac9c:	2300      	movle	r3, #0
 800ac9e:	2301      	movgt	r3, #1
 800aca0:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 800aca4:	4648      	mov	r0, r9
 800aca6:	f7f5 faa5 	bl	80001f4 <strlen>
 800acaa:	f109 39ff 	add.w	r9, r9, #4294967295
 800acae:	4420      	add	r0, r4
 800acb0:	1e6b      	subs	r3, r5, #1
 800acb2:	42a0      	cmp	r0, r4
 800acb4:	d102      	bne.n	800acbc <__strftime.isra.0+0x96c>
 800acb6:	f001 f847 	bl	800bd48 <__tz_unlock>
 800acba:	e7de      	b.n	800ac7a <__strftime.isra.0+0x92a>
 800acbc:	42a3      	cmp	r3, r4
 800acbe:	d904      	bls.n	800acca <__strftime.isra.0+0x97a>
 800acc0:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 800acc4:	553a      	strb	r2, [r7, r4]
 800acc6:	3401      	adds	r4, #1
 800acc8:	e7f3      	b.n	800acb2 <__strftime.isra.0+0x962>
 800acca:	f001 f83d 	bl	800bd48 <__tz_unlock>
 800acce:	f7ff bb71 	b.w	800a3b4 <__strftime.isra.0+0x64>
 800acd2:	1e6b      	subs	r3, r5, #1
 800acd4:	429c      	cmp	r4, r3
 800acd6:	f4bf ab6d 	bcs.w	800a3b4 <__strftime.isra.0+0x64>
 800acda:	2325      	movs	r3, #37	; 0x25
 800acdc:	e62d      	b.n	800a93a <__strftime.isra.0+0x5ea>
 800acde:	b10d      	cbz	r5, 800ace4 <__strftime.isra.0+0x994>
 800ace0:	2300      	movs	r3, #0
 800ace2:	553b      	strb	r3, [r7, r4]
 800ace4:	4620      	mov	r0, r4
 800ace6:	b00f      	add	sp, #60	; 0x3c
 800ace8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acec:	fffff894 	.word	0xfffff894
 800acf0:	0800fe3f 	.word	0x0800fe3f
 800acf4:	0800fe5c 	.word	0x0800fe5c
 800acf8:	20000070 	.word	0x20000070

0800acfc <strftime>:
 800acfc:	f7ff bb28 	b.w	800a350 <__strftime.isra.0>

0800ad00 <strncmp>:
 800ad00:	b510      	push	{r4, lr}
 800ad02:	b17a      	cbz	r2, 800ad24 <strncmp+0x24>
 800ad04:	4603      	mov	r3, r0
 800ad06:	3901      	subs	r1, #1
 800ad08:	1884      	adds	r4, r0, r2
 800ad0a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ad0e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ad12:	4290      	cmp	r0, r2
 800ad14:	d101      	bne.n	800ad1a <strncmp+0x1a>
 800ad16:	42a3      	cmp	r3, r4
 800ad18:	d101      	bne.n	800ad1e <strncmp+0x1e>
 800ad1a:	1a80      	subs	r0, r0, r2
 800ad1c:	bd10      	pop	{r4, pc}
 800ad1e:	2800      	cmp	r0, #0
 800ad20:	d1f3      	bne.n	800ad0a <strncmp+0xa>
 800ad22:	e7fa      	b.n	800ad1a <strncmp+0x1a>
 800ad24:	4610      	mov	r0, r2
 800ad26:	e7f9      	b.n	800ad1c <strncmp+0x1c>

0800ad28 <strncpy>:
 800ad28:	b510      	push	{r4, lr}
 800ad2a:	3901      	subs	r1, #1
 800ad2c:	4603      	mov	r3, r0
 800ad2e:	b132      	cbz	r2, 800ad3e <strncpy+0x16>
 800ad30:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ad34:	f803 4b01 	strb.w	r4, [r3], #1
 800ad38:	3a01      	subs	r2, #1
 800ad3a:	2c00      	cmp	r4, #0
 800ad3c:	d1f7      	bne.n	800ad2e <strncpy+0x6>
 800ad3e:	441a      	add	r2, r3
 800ad40:	2100      	movs	r1, #0
 800ad42:	4293      	cmp	r3, r2
 800ad44:	d100      	bne.n	800ad48 <strncpy+0x20>
 800ad46:	bd10      	pop	{r4, pc}
 800ad48:	f803 1b01 	strb.w	r1, [r3], #1
 800ad4c:	e7f9      	b.n	800ad42 <strncpy+0x1a>

0800ad4e <strstr>:
 800ad4e:	780a      	ldrb	r2, [r1, #0]
 800ad50:	b570      	push	{r4, r5, r6, lr}
 800ad52:	b96a      	cbnz	r2, 800ad70 <strstr+0x22>
 800ad54:	bd70      	pop	{r4, r5, r6, pc}
 800ad56:	429a      	cmp	r2, r3
 800ad58:	d109      	bne.n	800ad6e <strstr+0x20>
 800ad5a:	460c      	mov	r4, r1
 800ad5c:	4605      	mov	r5, r0
 800ad5e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ad62:	2b00      	cmp	r3, #0
 800ad64:	d0f6      	beq.n	800ad54 <strstr+0x6>
 800ad66:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800ad6a:	429e      	cmp	r6, r3
 800ad6c:	d0f7      	beq.n	800ad5e <strstr+0x10>
 800ad6e:	3001      	adds	r0, #1
 800ad70:	7803      	ldrb	r3, [r0, #0]
 800ad72:	2b00      	cmp	r3, #0
 800ad74:	d1ef      	bne.n	800ad56 <strstr+0x8>
 800ad76:	4618      	mov	r0, r3
 800ad78:	e7ec      	b.n	800ad54 <strstr+0x6>

0800ad7a <sulp>:
 800ad7a:	b570      	push	{r4, r5, r6, lr}
 800ad7c:	4604      	mov	r4, r0
 800ad7e:	460d      	mov	r5, r1
 800ad80:	ec45 4b10 	vmov	d0, r4, r5
 800ad84:	4616      	mov	r6, r2
 800ad86:	f003 f863 	bl	800de50 <__ulp>
 800ad8a:	ec51 0b10 	vmov	r0, r1, d0
 800ad8e:	b17e      	cbz	r6, 800adb0 <sulp+0x36>
 800ad90:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800ad94:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800ad98:	2b00      	cmp	r3, #0
 800ad9a:	dd09      	ble.n	800adb0 <sulp+0x36>
 800ad9c:	051b      	lsls	r3, r3, #20
 800ad9e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800ada2:	2400      	movs	r4, #0
 800ada4:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800ada8:	4622      	mov	r2, r4
 800adaa:	462b      	mov	r3, r5
 800adac:	f7f5 fc3c 	bl	8000628 <__aeabi_dmul>
 800adb0:	bd70      	pop	{r4, r5, r6, pc}
 800adb2:	0000      	movs	r0, r0
 800adb4:	0000      	movs	r0, r0
	...

0800adb8 <_strtod_l>:
 800adb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adbc:	ed2d 8b02 	vpush	{d8}
 800adc0:	b09d      	sub	sp, #116	; 0x74
 800adc2:	461f      	mov	r7, r3
 800adc4:	2300      	movs	r3, #0
 800adc6:	9318      	str	r3, [sp, #96]	; 0x60
 800adc8:	4ba2      	ldr	r3, [pc, #648]	; (800b054 <_strtod_l+0x29c>)
 800adca:	9213      	str	r2, [sp, #76]	; 0x4c
 800adcc:	681b      	ldr	r3, [r3, #0]
 800adce:	9305      	str	r3, [sp, #20]
 800add0:	4604      	mov	r4, r0
 800add2:	4618      	mov	r0, r3
 800add4:	4688      	mov	r8, r1
 800add6:	f7f5 fa0d 	bl	80001f4 <strlen>
 800adda:	f04f 0a00 	mov.w	sl, #0
 800adde:	4605      	mov	r5, r0
 800ade0:	f04f 0b00 	mov.w	fp, #0
 800ade4:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800ade8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800adea:	781a      	ldrb	r2, [r3, #0]
 800adec:	2a2b      	cmp	r2, #43	; 0x2b
 800adee:	d04e      	beq.n	800ae8e <_strtod_l+0xd6>
 800adf0:	d83b      	bhi.n	800ae6a <_strtod_l+0xb2>
 800adf2:	2a0d      	cmp	r2, #13
 800adf4:	d834      	bhi.n	800ae60 <_strtod_l+0xa8>
 800adf6:	2a08      	cmp	r2, #8
 800adf8:	d834      	bhi.n	800ae64 <_strtod_l+0xac>
 800adfa:	2a00      	cmp	r2, #0
 800adfc:	d03e      	beq.n	800ae7c <_strtod_l+0xc4>
 800adfe:	2300      	movs	r3, #0
 800ae00:	930a      	str	r3, [sp, #40]	; 0x28
 800ae02:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800ae04:	7833      	ldrb	r3, [r6, #0]
 800ae06:	2b30      	cmp	r3, #48	; 0x30
 800ae08:	f040 80b0 	bne.w	800af6c <_strtod_l+0x1b4>
 800ae0c:	7873      	ldrb	r3, [r6, #1]
 800ae0e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800ae12:	2b58      	cmp	r3, #88	; 0x58
 800ae14:	d168      	bne.n	800aee8 <_strtod_l+0x130>
 800ae16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ae18:	9301      	str	r3, [sp, #4]
 800ae1a:	ab18      	add	r3, sp, #96	; 0x60
 800ae1c:	9702      	str	r7, [sp, #8]
 800ae1e:	9300      	str	r3, [sp, #0]
 800ae20:	4a8d      	ldr	r2, [pc, #564]	; (800b058 <_strtod_l+0x2a0>)
 800ae22:	ab19      	add	r3, sp, #100	; 0x64
 800ae24:	a917      	add	r1, sp, #92	; 0x5c
 800ae26:	4620      	mov	r0, r4
 800ae28:	f002 f866 	bl	800cef8 <__gethex>
 800ae2c:	f010 0707 	ands.w	r7, r0, #7
 800ae30:	4605      	mov	r5, r0
 800ae32:	d005      	beq.n	800ae40 <_strtod_l+0x88>
 800ae34:	2f06      	cmp	r7, #6
 800ae36:	d12c      	bne.n	800ae92 <_strtod_l+0xda>
 800ae38:	3601      	adds	r6, #1
 800ae3a:	2300      	movs	r3, #0
 800ae3c:	9617      	str	r6, [sp, #92]	; 0x5c
 800ae3e:	930a      	str	r3, [sp, #40]	; 0x28
 800ae40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ae42:	2b00      	cmp	r3, #0
 800ae44:	f040 8590 	bne.w	800b968 <_strtod_l+0xbb0>
 800ae48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ae4a:	b1eb      	cbz	r3, 800ae88 <_strtod_l+0xd0>
 800ae4c:	4652      	mov	r2, sl
 800ae4e:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800ae52:	ec43 2b10 	vmov	d0, r2, r3
 800ae56:	b01d      	add	sp, #116	; 0x74
 800ae58:	ecbd 8b02 	vpop	{d8}
 800ae5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae60:	2a20      	cmp	r2, #32
 800ae62:	d1cc      	bne.n	800adfe <_strtod_l+0x46>
 800ae64:	3301      	adds	r3, #1
 800ae66:	9317      	str	r3, [sp, #92]	; 0x5c
 800ae68:	e7be      	b.n	800ade8 <_strtod_l+0x30>
 800ae6a:	2a2d      	cmp	r2, #45	; 0x2d
 800ae6c:	d1c7      	bne.n	800adfe <_strtod_l+0x46>
 800ae6e:	2201      	movs	r2, #1
 800ae70:	920a      	str	r2, [sp, #40]	; 0x28
 800ae72:	1c5a      	adds	r2, r3, #1
 800ae74:	9217      	str	r2, [sp, #92]	; 0x5c
 800ae76:	785b      	ldrb	r3, [r3, #1]
 800ae78:	2b00      	cmp	r3, #0
 800ae7a:	d1c2      	bne.n	800ae02 <_strtod_l+0x4a>
 800ae7c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ae7e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800ae82:	2b00      	cmp	r3, #0
 800ae84:	f040 856e 	bne.w	800b964 <_strtod_l+0xbac>
 800ae88:	4652      	mov	r2, sl
 800ae8a:	465b      	mov	r3, fp
 800ae8c:	e7e1      	b.n	800ae52 <_strtod_l+0x9a>
 800ae8e:	2200      	movs	r2, #0
 800ae90:	e7ee      	b.n	800ae70 <_strtod_l+0xb8>
 800ae92:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ae94:	b13a      	cbz	r2, 800aea6 <_strtod_l+0xee>
 800ae96:	2135      	movs	r1, #53	; 0x35
 800ae98:	a81a      	add	r0, sp, #104	; 0x68
 800ae9a:	f003 f8e4 	bl	800e066 <__copybits>
 800ae9e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800aea0:	4620      	mov	r0, r4
 800aea2:	f002 fca3 	bl	800d7ec <_Bfree>
 800aea6:	3f01      	subs	r7, #1
 800aea8:	2f04      	cmp	r7, #4
 800aeaa:	d806      	bhi.n	800aeba <_strtod_l+0x102>
 800aeac:	e8df f007 	tbb	[pc, r7]
 800aeb0:	1714030a 	.word	0x1714030a
 800aeb4:	0a          	.byte	0x0a
 800aeb5:	00          	.byte	0x00
 800aeb6:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 800aeba:	0728      	lsls	r0, r5, #28
 800aebc:	d5c0      	bpl.n	800ae40 <_strtod_l+0x88>
 800aebe:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 800aec2:	e7bd      	b.n	800ae40 <_strtod_l+0x88>
 800aec4:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 800aec8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800aeca:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800aece:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800aed2:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800aed6:	e7f0      	b.n	800aeba <_strtod_l+0x102>
 800aed8:	f8df b180 	ldr.w	fp, [pc, #384]	; 800b05c <_strtod_l+0x2a4>
 800aedc:	e7ed      	b.n	800aeba <_strtod_l+0x102>
 800aede:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800aee2:	f04f 3aff 	mov.w	sl, #4294967295
 800aee6:	e7e8      	b.n	800aeba <_strtod_l+0x102>
 800aee8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800aeea:	1c5a      	adds	r2, r3, #1
 800aeec:	9217      	str	r2, [sp, #92]	; 0x5c
 800aeee:	785b      	ldrb	r3, [r3, #1]
 800aef0:	2b30      	cmp	r3, #48	; 0x30
 800aef2:	d0f9      	beq.n	800aee8 <_strtod_l+0x130>
 800aef4:	2b00      	cmp	r3, #0
 800aef6:	d0a3      	beq.n	800ae40 <_strtod_l+0x88>
 800aef8:	2301      	movs	r3, #1
 800aefa:	f04f 0900 	mov.w	r9, #0
 800aefe:	9304      	str	r3, [sp, #16]
 800af00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800af02:	9308      	str	r3, [sp, #32]
 800af04:	f8cd 901c 	str.w	r9, [sp, #28]
 800af08:	464f      	mov	r7, r9
 800af0a:	220a      	movs	r2, #10
 800af0c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800af0e:	7806      	ldrb	r6, [r0, #0]
 800af10:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800af14:	b2d9      	uxtb	r1, r3
 800af16:	2909      	cmp	r1, #9
 800af18:	d92a      	bls.n	800af70 <_strtod_l+0x1b8>
 800af1a:	9905      	ldr	r1, [sp, #20]
 800af1c:	462a      	mov	r2, r5
 800af1e:	f7ff feef 	bl	800ad00 <strncmp>
 800af22:	b398      	cbz	r0, 800af8c <_strtod_l+0x1d4>
 800af24:	2000      	movs	r0, #0
 800af26:	4632      	mov	r2, r6
 800af28:	463d      	mov	r5, r7
 800af2a:	9005      	str	r0, [sp, #20]
 800af2c:	4603      	mov	r3, r0
 800af2e:	2a65      	cmp	r2, #101	; 0x65
 800af30:	d001      	beq.n	800af36 <_strtod_l+0x17e>
 800af32:	2a45      	cmp	r2, #69	; 0x45
 800af34:	d118      	bne.n	800af68 <_strtod_l+0x1b0>
 800af36:	b91d      	cbnz	r5, 800af40 <_strtod_l+0x188>
 800af38:	9a04      	ldr	r2, [sp, #16]
 800af3a:	4302      	orrs	r2, r0
 800af3c:	d09e      	beq.n	800ae7c <_strtod_l+0xc4>
 800af3e:	2500      	movs	r5, #0
 800af40:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800af44:	f108 0201 	add.w	r2, r8, #1
 800af48:	9217      	str	r2, [sp, #92]	; 0x5c
 800af4a:	f898 2001 	ldrb.w	r2, [r8, #1]
 800af4e:	2a2b      	cmp	r2, #43	; 0x2b
 800af50:	d075      	beq.n	800b03e <_strtod_l+0x286>
 800af52:	2a2d      	cmp	r2, #45	; 0x2d
 800af54:	d07b      	beq.n	800b04e <_strtod_l+0x296>
 800af56:	f04f 0c00 	mov.w	ip, #0
 800af5a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800af5e:	2909      	cmp	r1, #9
 800af60:	f240 8082 	bls.w	800b068 <_strtod_l+0x2b0>
 800af64:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800af68:	2600      	movs	r6, #0
 800af6a:	e09d      	b.n	800b0a8 <_strtod_l+0x2f0>
 800af6c:	2300      	movs	r3, #0
 800af6e:	e7c4      	b.n	800aefa <_strtod_l+0x142>
 800af70:	2f08      	cmp	r7, #8
 800af72:	bfd8      	it	le
 800af74:	9907      	ldrle	r1, [sp, #28]
 800af76:	f100 0001 	add.w	r0, r0, #1
 800af7a:	bfda      	itte	le
 800af7c:	fb02 3301 	mlale	r3, r2, r1, r3
 800af80:	9307      	strle	r3, [sp, #28]
 800af82:	fb02 3909 	mlagt	r9, r2, r9, r3
 800af86:	3701      	adds	r7, #1
 800af88:	9017      	str	r0, [sp, #92]	; 0x5c
 800af8a:	e7bf      	b.n	800af0c <_strtod_l+0x154>
 800af8c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800af8e:	195a      	adds	r2, r3, r5
 800af90:	9217      	str	r2, [sp, #92]	; 0x5c
 800af92:	5d5a      	ldrb	r2, [r3, r5]
 800af94:	2f00      	cmp	r7, #0
 800af96:	d037      	beq.n	800b008 <_strtod_l+0x250>
 800af98:	9005      	str	r0, [sp, #20]
 800af9a:	463d      	mov	r5, r7
 800af9c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800afa0:	2b09      	cmp	r3, #9
 800afa2:	d912      	bls.n	800afca <_strtod_l+0x212>
 800afa4:	2301      	movs	r3, #1
 800afa6:	e7c2      	b.n	800af2e <_strtod_l+0x176>
 800afa8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800afaa:	1c5a      	adds	r2, r3, #1
 800afac:	9217      	str	r2, [sp, #92]	; 0x5c
 800afae:	785a      	ldrb	r2, [r3, #1]
 800afb0:	3001      	adds	r0, #1
 800afb2:	2a30      	cmp	r2, #48	; 0x30
 800afb4:	d0f8      	beq.n	800afa8 <_strtod_l+0x1f0>
 800afb6:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800afba:	2b08      	cmp	r3, #8
 800afbc:	f200 84d9 	bhi.w	800b972 <_strtod_l+0xbba>
 800afc0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800afc2:	9005      	str	r0, [sp, #20]
 800afc4:	2000      	movs	r0, #0
 800afc6:	9308      	str	r3, [sp, #32]
 800afc8:	4605      	mov	r5, r0
 800afca:	3a30      	subs	r2, #48	; 0x30
 800afcc:	f100 0301 	add.w	r3, r0, #1
 800afd0:	d014      	beq.n	800affc <_strtod_l+0x244>
 800afd2:	9905      	ldr	r1, [sp, #20]
 800afd4:	4419      	add	r1, r3
 800afd6:	9105      	str	r1, [sp, #20]
 800afd8:	462b      	mov	r3, r5
 800afda:	eb00 0e05 	add.w	lr, r0, r5
 800afde:	210a      	movs	r1, #10
 800afe0:	4573      	cmp	r3, lr
 800afe2:	d113      	bne.n	800b00c <_strtod_l+0x254>
 800afe4:	182b      	adds	r3, r5, r0
 800afe6:	2b08      	cmp	r3, #8
 800afe8:	f105 0501 	add.w	r5, r5, #1
 800afec:	4405      	add	r5, r0
 800afee:	dc1c      	bgt.n	800b02a <_strtod_l+0x272>
 800aff0:	9907      	ldr	r1, [sp, #28]
 800aff2:	230a      	movs	r3, #10
 800aff4:	fb03 2301 	mla	r3, r3, r1, r2
 800aff8:	9307      	str	r3, [sp, #28]
 800affa:	2300      	movs	r3, #0
 800affc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800affe:	1c51      	adds	r1, r2, #1
 800b000:	9117      	str	r1, [sp, #92]	; 0x5c
 800b002:	7852      	ldrb	r2, [r2, #1]
 800b004:	4618      	mov	r0, r3
 800b006:	e7c9      	b.n	800af9c <_strtod_l+0x1e4>
 800b008:	4638      	mov	r0, r7
 800b00a:	e7d2      	b.n	800afb2 <_strtod_l+0x1fa>
 800b00c:	2b08      	cmp	r3, #8
 800b00e:	dc04      	bgt.n	800b01a <_strtod_l+0x262>
 800b010:	9e07      	ldr	r6, [sp, #28]
 800b012:	434e      	muls	r6, r1
 800b014:	9607      	str	r6, [sp, #28]
 800b016:	3301      	adds	r3, #1
 800b018:	e7e2      	b.n	800afe0 <_strtod_l+0x228>
 800b01a:	f103 0c01 	add.w	ip, r3, #1
 800b01e:	f1bc 0f10 	cmp.w	ip, #16
 800b022:	bfd8      	it	le
 800b024:	fb01 f909 	mulle.w	r9, r1, r9
 800b028:	e7f5      	b.n	800b016 <_strtod_l+0x25e>
 800b02a:	2d10      	cmp	r5, #16
 800b02c:	bfdc      	itt	le
 800b02e:	230a      	movle	r3, #10
 800b030:	fb03 2909 	mlale	r9, r3, r9, r2
 800b034:	e7e1      	b.n	800affa <_strtod_l+0x242>
 800b036:	2300      	movs	r3, #0
 800b038:	9305      	str	r3, [sp, #20]
 800b03a:	2301      	movs	r3, #1
 800b03c:	e77c      	b.n	800af38 <_strtod_l+0x180>
 800b03e:	f04f 0c00 	mov.w	ip, #0
 800b042:	f108 0202 	add.w	r2, r8, #2
 800b046:	9217      	str	r2, [sp, #92]	; 0x5c
 800b048:	f898 2002 	ldrb.w	r2, [r8, #2]
 800b04c:	e785      	b.n	800af5a <_strtod_l+0x1a2>
 800b04e:	f04f 0c01 	mov.w	ip, #1
 800b052:	e7f6      	b.n	800b042 <_strtod_l+0x28a>
 800b054:	08010338 	.word	0x08010338
 800b058:	0800fe68 	.word	0x0800fe68
 800b05c:	7ff00000 	.word	0x7ff00000
 800b060:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800b062:	1c51      	adds	r1, r2, #1
 800b064:	9117      	str	r1, [sp, #92]	; 0x5c
 800b066:	7852      	ldrb	r2, [r2, #1]
 800b068:	2a30      	cmp	r2, #48	; 0x30
 800b06a:	d0f9      	beq.n	800b060 <_strtod_l+0x2a8>
 800b06c:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800b070:	2908      	cmp	r1, #8
 800b072:	f63f af79 	bhi.w	800af68 <_strtod_l+0x1b0>
 800b076:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800b07a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800b07c:	9206      	str	r2, [sp, #24]
 800b07e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800b080:	1c51      	adds	r1, r2, #1
 800b082:	9117      	str	r1, [sp, #92]	; 0x5c
 800b084:	7852      	ldrb	r2, [r2, #1]
 800b086:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 800b08a:	2e09      	cmp	r6, #9
 800b08c:	d937      	bls.n	800b0fe <_strtod_l+0x346>
 800b08e:	9e06      	ldr	r6, [sp, #24]
 800b090:	1b89      	subs	r1, r1, r6
 800b092:	2908      	cmp	r1, #8
 800b094:	f644 661f 	movw	r6, #19999	; 0x4e1f
 800b098:	dc02      	bgt.n	800b0a0 <_strtod_l+0x2e8>
 800b09a:	4576      	cmp	r6, lr
 800b09c:	bfa8      	it	ge
 800b09e:	4676      	movge	r6, lr
 800b0a0:	f1bc 0f00 	cmp.w	ip, #0
 800b0a4:	d000      	beq.n	800b0a8 <_strtod_l+0x2f0>
 800b0a6:	4276      	negs	r6, r6
 800b0a8:	2d00      	cmp	r5, #0
 800b0aa:	d14d      	bne.n	800b148 <_strtod_l+0x390>
 800b0ac:	9904      	ldr	r1, [sp, #16]
 800b0ae:	4301      	orrs	r1, r0
 800b0b0:	f47f aec6 	bne.w	800ae40 <_strtod_l+0x88>
 800b0b4:	2b00      	cmp	r3, #0
 800b0b6:	f47f aee1 	bne.w	800ae7c <_strtod_l+0xc4>
 800b0ba:	2a69      	cmp	r2, #105	; 0x69
 800b0bc:	d027      	beq.n	800b10e <_strtod_l+0x356>
 800b0be:	dc24      	bgt.n	800b10a <_strtod_l+0x352>
 800b0c0:	2a49      	cmp	r2, #73	; 0x49
 800b0c2:	d024      	beq.n	800b10e <_strtod_l+0x356>
 800b0c4:	2a4e      	cmp	r2, #78	; 0x4e
 800b0c6:	f47f aed9 	bne.w	800ae7c <_strtod_l+0xc4>
 800b0ca:	499f      	ldr	r1, [pc, #636]	; (800b348 <_strtod_l+0x590>)
 800b0cc:	a817      	add	r0, sp, #92	; 0x5c
 800b0ce:	f002 f96b 	bl	800d3a8 <__match>
 800b0d2:	2800      	cmp	r0, #0
 800b0d4:	f43f aed2 	beq.w	800ae7c <_strtod_l+0xc4>
 800b0d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b0da:	781b      	ldrb	r3, [r3, #0]
 800b0dc:	2b28      	cmp	r3, #40	; 0x28
 800b0de:	d12d      	bne.n	800b13c <_strtod_l+0x384>
 800b0e0:	499a      	ldr	r1, [pc, #616]	; (800b34c <_strtod_l+0x594>)
 800b0e2:	aa1a      	add	r2, sp, #104	; 0x68
 800b0e4:	a817      	add	r0, sp, #92	; 0x5c
 800b0e6:	f002 f973 	bl	800d3d0 <__hexnan>
 800b0ea:	2805      	cmp	r0, #5
 800b0ec:	d126      	bne.n	800b13c <_strtod_l+0x384>
 800b0ee:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800b0f0:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 800b0f4:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 800b0f8:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 800b0fc:	e6a0      	b.n	800ae40 <_strtod_l+0x88>
 800b0fe:	210a      	movs	r1, #10
 800b100:	fb01 2e0e 	mla	lr, r1, lr, r2
 800b104:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 800b108:	e7b9      	b.n	800b07e <_strtod_l+0x2c6>
 800b10a:	2a6e      	cmp	r2, #110	; 0x6e
 800b10c:	e7db      	b.n	800b0c6 <_strtod_l+0x30e>
 800b10e:	4990      	ldr	r1, [pc, #576]	; (800b350 <_strtod_l+0x598>)
 800b110:	a817      	add	r0, sp, #92	; 0x5c
 800b112:	f002 f949 	bl	800d3a8 <__match>
 800b116:	2800      	cmp	r0, #0
 800b118:	f43f aeb0 	beq.w	800ae7c <_strtod_l+0xc4>
 800b11c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b11e:	498d      	ldr	r1, [pc, #564]	; (800b354 <_strtod_l+0x59c>)
 800b120:	3b01      	subs	r3, #1
 800b122:	a817      	add	r0, sp, #92	; 0x5c
 800b124:	9317      	str	r3, [sp, #92]	; 0x5c
 800b126:	f002 f93f 	bl	800d3a8 <__match>
 800b12a:	b910      	cbnz	r0, 800b132 <_strtod_l+0x37a>
 800b12c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b12e:	3301      	adds	r3, #1
 800b130:	9317      	str	r3, [sp, #92]	; 0x5c
 800b132:	f8df b230 	ldr.w	fp, [pc, #560]	; 800b364 <_strtod_l+0x5ac>
 800b136:	f04f 0a00 	mov.w	sl, #0
 800b13a:	e681      	b.n	800ae40 <_strtod_l+0x88>
 800b13c:	4886      	ldr	r0, [pc, #536]	; (800b358 <_strtod_l+0x5a0>)
 800b13e:	f7fd fbf3 	bl	8008928 <nan>
 800b142:	ec5b ab10 	vmov	sl, fp, d0
 800b146:	e67b      	b.n	800ae40 <_strtod_l+0x88>
 800b148:	9b05      	ldr	r3, [sp, #20]
 800b14a:	9807      	ldr	r0, [sp, #28]
 800b14c:	1af3      	subs	r3, r6, r3
 800b14e:	2f00      	cmp	r7, #0
 800b150:	bf08      	it	eq
 800b152:	462f      	moveq	r7, r5
 800b154:	2d10      	cmp	r5, #16
 800b156:	9306      	str	r3, [sp, #24]
 800b158:	46a8      	mov	r8, r5
 800b15a:	bfa8      	it	ge
 800b15c:	f04f 0810 	movge.w	r8, #16
 800b160:	f7f5 f9e8 	bl	8000534 <__aeabi_ui2d>
 800b164:	2d09      	cmp	r5, #9
 800b166:	4682      	mov	sl, r0
 800b168:	468b      	mov	fp, r1
 800b16a:	dd13      	ble.n	800b194 <_strtod_l+0x3dc>
 800b16c:	4b7b      	ldr	r3, [pc, #492]	; (800b35c <_strtod_l+0x5a4>)
 800b16e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800b172:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800b176:	f7f5 fa57 	bl	8000628 <__aeabi_dmul>
 800b17a:	4682      	mov	sl, r0
 800b17c:	4648      	mov	r0, r9
 800b17e:	468b      	mov	fp, r1
 800b180:	f7f5 f9d8 	bl	8000534 <__aeabi_ui2d>
 800b184:	4602      	mov	r2, r0
 800b186:	460b      	mov	r3, r1
 800b188:	4650      	mov	r0, sl
 800b18a:	4659      	mov	r1, fp
 800b18c:	f7f5 f896 	bl	80002bc <__adddf3>
 800b190:	4682      	mov	sl, r0
 800b192:	468b      	mov	fp, r1
 800b194:	2d0f      	cmp	r5, #15
 800b196:	dc38      	bgt.n	800b20a <_strtod_l+0x452>
 800b198:	9b06      	ldr	r3, [sp, #24]
 800b19a:	2b00      	cmp	r3, #0
 800b19c:	f43f ae50 	beq.w	800ae40 <_strtod_l+0x88>
 800b1a0:	dd24      	ble.n	800b1ec <_strtod_l+0x434>
 800b1a2:	2b16      	cmp	r3, #22
 800b1a4:	dc0b      	bgt.n	800b1be <_strtod_l+0x406>
 800b1a6:	496d      	ldr	r1, [pc, #436]	; (800b35c <_strtod_l+0x5a4>)
 800b1a8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b1ac:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b1b0:	4652      	mov	r2, sl
 800b1b2:	465b      	mov	r3, fp
 800b1b4:	f7f5 fa38 	bl	8000628 <__aeabi_dmul>
 800b1b8:	4682      	mov	sl, r0
 800b1ba:	468b      	mov	fp, r1
 800b1bc:	e640      	b.n	800ae40 <_strtod_l+0x88>
 800b1be:	9a06      	ldr	r2, [sp, #24]
 800b1c0:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 800b1c4:	4293      	cmp	r3, r2
 800b1c6:	db20      	blt.n	800b20a <_strtod_l+0x452>
 800b1c8:	4c64      	ldr	r4, [pc, #400]	; (800b35c <_strtod_l+0x5a4>)
 800b1ca:	f1c5 050f 	rsb	r5, r5, #15
 800b1ce:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800b1d2:	4652      	mov	r2, sl
 800b1d4:	465b      	mov	r3, fp
 800b1d6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b1da:	f7f5 fa25 	bl	8000628 <__aeabi_dmul>
 800b1de:	9b06      	ldr	r3, [sp, #24]
 800b1e0:	1b5d      	subs	r5, r3, r5
 800b1e2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800b1e6:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b1ea:	e7e3      	b.n	800b1b4 <_strtod_l+0x3fc>
 800b1ec:	9b06      	ldr	r3, [sp, #24]
 800b1ee:	3316      	adds	r3, #22
 800b1f0:	db0b      	blt.n	800b20a <_strtod_l+0x452>
 800b1f2:	9b05      	ldr	r3, [sp, #20]
 800b1f4:	1b9e      	subs	r6, r3, r6
 800b1f6:	4b59      	ldr	r3, [pc, #356]	; (800b35c <_strtod_l+0x5a4>)
 800b1f8:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 800b1fc:	e9d6 2300 	ldrd	r2, r3, [r6]
 800b200:	4650      	mov	r0, sl
 800b202:	4659      	mov	r1, fp
 800b204:	f7f5 fb3a 	bl	800087c <__aeabi_ddiv>
 800b208:	e7d6      	b.n	800b1b8 <_strtod_l+0x400>
 800b20a:	9b06      	ldr	r3, [sp, #24]
 800b20c:	eba5 0808 	sub.w	r8, r5, r8
 800b210:	4498      	add	r8, r3
 800b212:	f1b8 0f00 	cmp.w	r8, #0
 800b216:	dd74      	ble.n	800b302 <_strtod_l+0x54a>
 800b218:	f018 030f 	ands.w	r3, r8, #15
 800b21c:	d00a      	beq.n	800b234 <_strtod_l+0x47c>
 800b21e:	494f      	ldr	r1, [pc, #316]	; (800b35c <_strtod_l+0x5a4>)
 800b220:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b224:	4652      	mov	r2, sl
 800b226:	465b      	mov	r3, fp
 800b228:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b22c:	f7f5 f9fc 	bl	8000628 <__aeabi_dmul>
 800b230:	4682      	mov	sl, r0
 800b232:	468b      	mov	fp, r1
 800b234:	f038 080f 	bics.w	r8, r8, #15
 800b238:	d04f      	beq.n	800b2da <_strtod_l+0x522>
 800b23a:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800b23e:	dd22      	ble.n	800b286 <_strtod_l+0x4ce>
 800b240:	2500      	movs	r5, #0
 800b242:	462e      	mov	r6, r5
 800b244:	9507      	str	r5, [sp, #28]
 800b246:	9505      	str	r5, [sp, #20]
 800b248:	2322      	movs	r3, #34	; 0x22
 800b24a:	f8df b118 	ldr.w	fp, [pc, #280]	; 800b364 <_strtod_l+0x5ac>
 800b24e:	6023      	str	r3, [r4, #0]
 800b250:	f04f 0a00 	mov.w	sl, #0
 800b254:	9b07      	ldr	r3, [sp, #28]
 800b256:	2b00      	cmp	r3, #0
 800b258:	f43f adf2 	beq.w	800ae40 <_strtod_l+0x88>
 800b25c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b25e:	4620      	mov	r0, r4
 800b260:	f002 fac4 	bl	800d7ec <_Bfree>
 800b264:	9905      	ldr	r1, [sp, #20]
 800b266:	4620      	mov	r0, r4
 800b268:	f002 fac0 	bl	800d7ec <_Bfree>
 800b26c:	4631      	mov	r1, r6
 800b26e:	4620      	mov	r0, r4
 800b270:	f002 fabc 	bl	800d7ec <_Bfree>
 800b274:	9907      	ldr	r1, [sp, #28]
 800b276:	4620      	mov	r0, r4
 800b278:	f002 fab8 	bl	800d7ec <_Bfree>
 800b27c:	4629      	mov	r1, r5
 800b27e:	4620      	mov	r0, r4
 800b280:	f002 fab4 	bl	800d7ec <_Bfree>
 800b284:	e5dc      	b.n	800ae40 <_strtod_l+0x88>
 800b286:	4b36      	ldr	r3, [pc, #216]	; (800b360 <_strtod_l+0x5a8>)
 800b288:	9304      	str	r3, [sp, #16]
 800b28a:	2300      	movs	r3, #0
 800b28c:	ea4f 1828 	mov.w	r8, r8, asr #4
 800b290:	4650      	mov	r0, sl
 800b292:	4659      	mov	r1, fp
 800b294:	4699      	mov	r9, r3
 800b296:	f1b8 0f01 	cmp.w	r8, #1
 800b29a:	dc21      	bgt.n	800b2e0 <_strtod_l+0x528>
 800b29c:	b10b      	cbz	r3, 800b2a2 <_strtod_l+0x4ea>
 800b29e:	4682      	mov	sl, r0
 800b2a0:	468b      	mov	fp, r1
 800b2a2:	4b2f      	ldr	r3, [pc, #188]	; (800b360 <_strtod_l+0x5a8>)
 800b2a4:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 800b2a8:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800b2ac:	4652      	mov	r2, sl
 800b2ae:	465b      	mov	r3, fp
 800b2b0:	e9d9 0100 	ldrd	r0, r1, [r9]
 800b2b4:	f7f5 f9b8 	bl	8000628 <__aeabi_dmul>
 800b2b8:	4b2a      	ldr	r3, [pc, #168]	; (800b364 <_strtod_l+0x5ac>)
 800b2ba:	460a      	mov	r2, r1
 800b2bc:	400b      	ands	r3, r1
 800b2be:	492a      	ldr	r1, [pc, #168]	; (800b368 <_strtod_l+0x5b0>)
 800b2c0:	428b      	cmp	r3, r1
 800b2c2:	4682      	mov	sl, r0
 800b2c4:	d8bc      	bhi.n	800b240 <_strtod_l+0x488>
 800b2c6:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800b2ca:	428b      	cmp	r3, r1
 800b2cc:	bf86      	itte	hi
 800b2ce:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 800b36c <_strtod_l+0x5b4>
 800b2d2:	f04f 3aff 	movhi.w	sl, #4294967295
 800b2d6:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 800b2da:	2300      	movs	r3, #0
 800b2dc:	9304      	str	r3, [sp, #16]
 800b2de:	e084      	b.n	800b3ea <_strtod_l+0x632>
 800b2e0:	f018 0f01 	tst.w	r8, #1
 800b2e4:	d005      	beq.n	800b2f2 <_strtod_l+0x53a>
 800b2e6:	9b04      	ldr	r3, [sp, #16]
 800b2e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2ec:	f7f5 f99c 	bl	8000628 <__aeabi_dmul>
 800b2f0:	2301      	movs	r3, #1
 800b2f2:	9a04      	ldr	r2, [sp, #16]
 800b2f4:	3208      	adds	r2, #8
 800b2f6:	f109 0901 	add.w	r9, r9, #1
 800b2fa:	ea4f 0868 	mov.w	r8, r8, asr #1
 800b2fe:	9204      	str	r2, [sp, #16]
 800b300:	e7c9      	b.n	800b296 <_strtod_l+0x4de>
 800b302:	d0ea      	beq.n	800b2da <_strtod_l+0x522>
 800b304:	f1c8 0800 	rsb	r8, r8, #0
 800b308:	f018 020f 	ands.w	r2, r8, #15
 800b30c:	d00a      	beq.n	800b324 <_strtod_l+0x56c>
 800b30e:	4b13      	ldr	r3, [pc, #76]	; (800b35c <_strtod_l+0x5a4>)
 800b310:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800b314:	4650      	mov	r0, sl
 800b316:	4659      	mov	r1, fp
 800b318:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b31c:	f7f5 faae 	bl	800087c <__aeabi_ddiv>
 800b320:	4682      	mov	sl, r0
 800b322:	468b      	mov	fp, r1
 800b324:	ea5f 1828 	movs.w	r8, r8, asr #4
 800b328:	d0d7      	beq.n	800b2da <_strtod_l+0x522>
 800b32a:	f1b8 0f1f 	cmp.w	r8, #31
 800b32e:	dd1f      	ble.n	800b370 <_strtod_l+0x5b8>
 800b330:	2500      	movs	r5, #0
 800b332:	462e      	mov	r6, r5
 800b334:	9507      	str	r5, [sp, #28]
 800b336:	9505      	str	r5, [sp, #20]
 800b338:	2322      	movs	r3, #34	; 0x22
 800b33a:	f04f 0a00 	mov.w	sl, #0
 800b33e:	f04f 0b00 	mov.w	fp, #0
 800b342:	6023      	str	r3, [r4, #0]
 800b344:	e786      	b.n	800b254 <_strtod_l+0x49c>
 800b346:	bf00      	nop
 800b348:	0800feb9 	.word	0x0800feb9
 800b34c:	0800fe7c 	.word	0x0800fe7c
 800b350:	0800fddd 	.word	0x0800fddd
 800b354:	0801025c 	.word	0x0801025c
 800b358:	08010157 	.word	0x08010157
 800b35c:	080103d0 	.word	0x080103d0
 800b360:	080103a8 	.word	0x080103a8
 800b364:	7ff00000 	.word	0x7ff00000
 800b368:	7ca00000 	.word	0x7ca00000
 800b36c:	7fefffff 	.word	0x7fefffff
 800b370:	f018 0310 	ands.w	r3, r8, #16
 800b374:	bf18      	it	ne
 800b376:	236a      	movne	r3, #106	; 0x6a
 800b378:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 800b728 <_strtod_l+0x970>
 800b37c:	9304      	str	r3, [sp, #16]
 800b37e:	4650      	mov	r0, sl
 800b380:	4659      	mov	r1, fp
 800b382:	2300      	movs	r3, #0
 800b384:	f018 0f01 	tst.w	r8, #1
 800b388:	d004      	beq.n	800b394 <_strtod_l+0x5dc>
 800b38a:	e9d9 2300 	ldrd	r2, r3, [r9]
 800b38e:	f7f5 f94b 	bl	8000628 <__aeabi_dmul>
 800b392:	2301      	movs	r3, #1
 800b394:	ea5f 0868 	movs.w	r8, r8, asr #1
 800b398:	f109 0908 	add.w	r9, r9, #8
 800b39c:	d1f2      	bne.n	800b384 <_strtod_l+0x5cc>
 800b39e:	b10b      	cbz	r3, 800b3a4 <_strtod_l+0x5ec>
 800b3a0:	4682      	mov	sl, r0
 800b3a2:	468b      	mov	fp, r1
 800b3a4:	9b04      	ldr	r3, [sp, #16]
 800b3a6:	b1c3      	cbz	r3, 800b3da <_strtod_l+0x622>
 800b3a8:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800b3ac:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800b3b0:	2b00      	cmp	r3, #0
 800b3b2:	4659      	mov	r1, fp
 800b3b4:	dd11      	ble.n	800b3da <_strtod_l+0x622>
 800b3b6:	2b1f      	cmp	r3, #31
 800b3b8:	f340 8124 	ble.w	800b604 <_strtod_l+0x84c>
 800b3bc:	2b34      	cmp	r3, #52	; 0x34
 800b3be:	bfde      	ittt	le
 800b3c0:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800b3c4:	f04f 33ff 	movle.w	r3, #4294967295
 800b3c8:	fa03 f202 	lslle.w	r2, r3, r2
 800b3cc:	f04f 0a00 	mov.w	sl, #0
 800b3d0:	bfcc      	ite	gt
 800b3d2:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 800b3d6:	ea02 0b01 	andle.w	fp, r2, r1
 800b3da:	2200      	movs	r2, #0
 800b3dc:	2300      	movs	r3, #0
 800b3de:	4650      	mov	r0, sl
 800b3e0:	4659      	mov	r1, fp
 800b3e2:	f7f5 fb89 	bl	8000af8 <__aeabi_dcmpeq>
 800b3e6:	2800      	cmp	r0, #0
 800b3e8:	d1a2      	bne.n	800b330 <_strtod_l+0x578>
 800b3ea:	9b07      	ldr	r3, [sp, #28]
 800b3ec:	9300      	str	r3, [sp, #0]
 800b3ee:	9908      	ldr	r1, [sp, #32]
 800b3f0:	462b      	mov	r3, r5
 800b3f2:	463a      	mov	r2, r7
 800b3f4:	4620      	mov	r0, r4
 800b3f6:	f002 fa61 	bl	800d8bc <__s2b>
 800b3fa:	9007      	str	r0, [sp, #28]
 800b3fc:	2800      	cmp	r0, #0
 800b3fe:	f43f af1f 	beq.w	800b240 <_strtod_l+0x488>
 800b402:	9b05      	ldr	r3, [sp, #20]
 800b404:	1b9e      	subs	r6, r3, r6
 800b406:	9b06      	ldr	r3, [sp, #24]
 800b408:	2b00      	cmp	r3, #0
 800b40a:	bfb4      	ite	lt
 800b40c:	4633      	movlt	r3, r6
 800b40e:	2300      	movge	r3, #0
 800b410:	930c      	str	r3, [sp, #48]	; 0x30
 800b412:	9b06      	ldr	r3, [sp, #24]
 800b414:	2500      	movs	r5, #0
 800b416:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b41a:	9312      	str	r3, [sp, #72]	; 0x48
 800b41c:	462e      	mov	r6, r5
 800b41e:	9b07      	ldr	r3, [sp, #28]
 800b420:	4620      	mov	r0, r4
 800b422:	6859      	ldr	r1, [r3, #4]
 800b424:	f002 f9a2 	bl	800d76c <_Balloc>
 800b428:	9005      	str	r0, [sp, #20]
 800b42a:	2800      	cmp	r0, #0
 800b42c:	f43f af0c 	beq.w	800b248 <_strtod_l+0x490>
 800b430:	9b07      	ldr	r3, [sp, #28]
 800b432:	691a      	ldr	r2, [r3, #16]
 800b434:	3202      	adds	r2, #2
 800b436:	f103 010c 	add.w	r1, r3, #12
 800b43a:	0092      	lsls	r2, r2, #2
 800b43c:	300c      	adds	r0, #12
 800b43e:	f7fd fc51 	bl	8008ce4 <memcpy>
 800b442:	ec4b ab10 	vmov	d0, sl, fp
 800b446:	aa1a      	add	r2, sp, #104	; 0x68
 800b448:	a919      	add	r1, sp, #100	; 0x64
 800b44a:	4620      	mov	r0, r4
 800b44c:	f002 fd7c 	bl	800df48 <__d2b>
 800b450:	ec4b ab18 	vmov	d8, sl, fp
 800b454:	9018      	str	r0, [sp, #96]	; 0x60
 800b456:	2800      	cmp	r0, #0
 800b458:	f43f aef6 	beq.w	800b248 <_strtod_l+0x490>
 800b45c:	2101      	movs	r1, #1
 800b45e:	4620      	mov	r0, r4
 800b460:	f002 fac6 	bl	800d9f0 <__i2b>
 800b464:	4606      	mov	r6, r0
 800b466:	2800      	cmp	r0, #0
 800b468:	f43f aeee 	beq.w	800b248 <_strtod_l+0x490>
 800b46c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b46e:	9904      	ldr	r1, [sp, #16]
 800b470:	2b00      	cmp	r3, #0
 800b472:	bfab      	itete	ge
 800b474:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800b476:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 800b478:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 800b47a:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 800b47e:	bfac      	ite	ge
 800b480:	eb03 0902 	addge.w	r9, r3, r2
 800b484:	1ad7      	sublt	r7, r2, r3
 800b486:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800b488:	eba3 0801 	sub.w	r8, r3, r1
 800b48c:	4490      	add	r8, r2
 800b48e:	4ba1      	ldr	r3, [pc, #644]	; (800b714 <_strtod_l+0x95c>)
 800b490:	f108 38ff 	add.w	r8, r8, #4294967295
 800b494:	4598      	cmp	r8, r3
 800b496:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800b49a:	f280 80c7 	bge.w	800b62c <_strtod_l+0x874>
 800b49e:	eba3 0308 	sub.w	r3, r3, r8
 800b4a2:	2b1f      	cmp	r3, #31
 800b4a4:	eba2 0203 	sub.w	r2, r2, r3
 800b4a8:	f04f 0101 	mov.w	r1, #1
 800b4ac:	f300 80b1 	bgt.w	800b612 <_strtod_l+0x85a>
 800b4b0:	fa01 f303 	lsl.w	r3, r1, r3
 800b4b4:	930d      	str	r3, [sp, #52]	; 0x34
 800b4b6:	2300      	movs	r3, #0
 800b4b8:	9308      	str	r3, [sp, #32]
 800b4ba:	eb09 0802 	add.w	r8, r9, r2
 800b4be:	9b04      	ldr	r3, [sp, #16]
 800b4c0:	45c1      	cmp	r9, r8
 800b4c2:	4417      	add	r7, r2
 800b4c4:	441f      	add	r7, r3
 800b4c6:	464b      	mov	r3, r9
 800b4c8:	bfa8      	it	ge
 800b4ca:	4643      	movge	r3, r8
 800b4cc:	42bb      	cmp	r3, r7
 800b4ce:	bfa8      	it	ge
 800b4d0:	463b      	movge	r3, r7
 800b4d2:	2b00      	cmp	r3, #0
 800b4d4:	bfc2      	ittt	gt
 800b4d6:	eba8 0803 	subgt.w	r8, r8, r3
 800b4da:	1aff      	subgt	r7, r7, r3
 800b4dc:	eba9 0903 	subgt.w	r9, r9, r3
 800b4e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b4e2:	2b00      	cmp	r3, #0
 800b4e4:	dd17      	ble.n	800b516 <_strtod_l+0x75e>
 800b4e6:	4631      	mov	r1, r6
 800b4e8:	461a      	mov	r2, r3
 800b4ea:	4620      	mov	r0, r4
 800b4ec:	f002 fb40 	bl	800db70 <__pow5mult>
 800b4f0:	4606      	mov	r6, r0
 800b4f2:	2800      	cmp	r0, #0
 800b4f4:	f43f aea8 	beq.w	800b248 <_strtod_l+0x490>
 800b4f8:	4601      	mov	r1, r0
 800b4fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b4fc:	4620      	mov	r0, r4
 800b4fe:	f002 fa8d 	bl	800da1c <__multiply>
 800b502:	900b      	str	r0, [sp, #44]	; 0x2c
 800b504:	2800      	cmp	r0, #0
 800b506:	f43f ae9f 	beq.w	800b248 <_strtod_l+0x490>
 800b50a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b50c:	4620      	mov	r0, r4
 800b50e:	f002 f96d 	bl	800d7ec <_Bfree>
 800b512:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b514:	9318      	str	r3, [sp, #96]	; 0x60
 800b516:	f1b8 0f00 	cmp.w	r8, #0
 800b51a:	f300 808c 	bgt.w	800b636 <_strtod_l+0x87e>
 800b51e:	9b06      	ldr	r3, [sp, #24]
 800b520:	2b00      	cmp	r3, #0
 800b522:	dd08      	ble.n	800b536 <_strtod_l+0x77e>
 800b524:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b526:	9905      	ldr	r1, [sp, #20]
 800b528:	4620      	mov	r0, r4
 800b52a:	f002 fb21 	bl	800db70 <__pow5mult>
 800b52e:	9005      	str	r0, [sp, #20]
 800b530:	2800      	cmp	r0, #0
 800b532:	f43f ae89 	beq.w	800b248 <_strtod_l+0x490>
 800b536:	2f00      	cmp	r7, #0
 800b538:	dd08      	ble.n	800b54c <_strtod_l+0x794>
 800b53a:	9905      	ldr	r1, [sp, #20]
 800b53c:	463a      	mov	r2, r7
 800b53e:	4620      	mov	r0, r4
 800b540:	f002 fb70 	bl	800dc24 <__lshift>
 800b544:	9005      	str	r0, [sp, #20]
 800b546:	2800      	cmp	r0, #0
 800b548:	f43f ae7e 	beq.w	800b248 <_strtod_l+0x490>
 800b54c:	f1b9 0f00 	cmp.w	r9, #0
 800b550:	dd08      	ble.n	800b564 <_strtod_l+0x7ac>
 800b552:	4631      	mov	r1, r6
 800b554:	464a      	mov	r2, r9
 800b556:	4620      	mov	r0, r4
 800b558:	f002 fb64 	bl	800dc24 <__lshift>
 800b55c:	4606      	mov	r6, r0
 800b55e:	2800      	cmp	r0, #0
 800b560:	f43f ae72 	beq.w	800b248 <_strtod_l+0x490>
 800b564:	9a05      	ldr	r2, [sp, #20]
 800b566:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b568:	4620      	mov	r0, r4
 800b56a:	f002 fbe7 	bl	800dd3c <__mdiff>
 800b56e:	4605      	mov	r5, r0
 800b570:	2800      	cmp	r0, #0
 800b572:	f43f ae69 	beq.w	800b248 <_strtod_l+0x490>
 800b576:	68c3      	ldr	r3, [r0, #12]
 800b578:	930b      	str	r3, [sp, #44]	; 0x2c
 800b57a:	2300      	movs	r3, #0
 800b57c:	60c3      	str	r3, [r0, #12]
 800b57e:	4631      	mov	r1, r6
 800b580:	f002 fbc0 	bl	800dd04 <__mcmp>
 800b584:	2800      	cmp	r0, #0
 800b586:	da60      	bge.n	800b64a <_strtod_l+0x892>
 800b588:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b58a:	ea53 030a 	orrs.w	r3, r3, sl
 800b58e:	f040 8082 	bne.w	800b696 <_strtod_l+0x8de>
 800b592:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b596:	2b00      	cmp	r3, #0
 800b598:	d17d      	bne.n	800b696 <_strtod_l+0x8de>
 800b59a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800b59e:	0d1b      	lsrs	r3, r3, #20
 800b5a0:	051b      	lsls	r3, r3, #20
 800b5a2:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800b5a6:	d976      	bls.n	800b696 <_strtod_l+0x8de>
 800b5a8:	696b      	ldr	r3, [r5, #20]
 800b5aa:	b913      	cbnz	r3, 800b5b2 <_strtod_l+0x7fa>
 800b5ac:	692b      	ldr	r3, [r5, #16]
 800b5ae:	2b01      	cmp	r3, #1
 800b5b0:	dd71      	ble.n	800b696 <_strtod_l+0x8de>
 800b5b2:	4629      	mov	r1, r5
 800b5b4:	2201      	movs	r2, #1
 800b5b6:	4620      	mov	r0, r4
 800b5b8:	f002 fb34 	bl	800dc24 <__lshift>
 800b5bc:	4631      	mov	r1, r6
 800b5be:	4605      	mov	r5, r0
 800b5c0:	f002 fba0 	bl	800dd04 <__mcmp>
 800b5c4:	2800      	cmp	r0, #0
 800b5c6:	dd66      	ble.n	800b696 <_strtod_l+0x8de>
 800b5c8:	9904      	ldr	r1, [sp, #16]
 800b5ca:	4a53      	ldr	r2, [pc, #332]	; (800b718 <_strtod_l+0x960>)
 800b5cc:	465b      	mov	r3, fp
 800b5ce:	2900      	cmp	r1, #0
 800b5d0:	f000 8081 	beq.w	800b6d6 <_strtod_l+0x91e>
 800b5d4:	ea02 010b 	and.w	r1, r2, fp
 800b5d8:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800b5dc:	dc7b      	bgt.n	800b6d6 <_strtod_l+0x91e>
 800b5de:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800b5e2:	f77f aea9 	ble.w	800b338 <_strtod_l+0x580>
 800b5e6:	4b4d      	ldr	r3, [pc, #308]	; (800b71c <_strtod_l+0x964>)
 800b5e8:	4650      	mov	r0, sl
 800b5ea:	4659      	mov	r1, fp
 800b5ec:	2200      	movs	r2, #0
 800b5ee:	f7f5 f81b 	bl	8000628 <__aeabi_dmul>
 800b5f2:	460b      	mov	r3, r1
 800b5f4:	4303      	orrs	r3, r0
 800b5f6:	bf08      	it	eq
 800b5f8:	2322      	moveq	r3, #34	; 0x22
 800b5fa:	4682      	mov	sl, r0
 800b5fc:	468b      	mov	fp, r1
 800b5fe:	bf08      	it	eq
 800b600:	6023      	streq	r3, [r4, #0]
 800b602:	e62b      	b.n	800b25c <_strtod_l+0x4a4>
 800b604:	f04f 32ff 	mov.w	r2, #4294967295
 800b608:	fa02 f303 	lsl.w	r3, r2, r3
 800b60c:	ea03 0a0a 	and.w	sl, r3, sl
 800b610:	e6e3      	b.n	800b3da <_strtod_l+0x622>
 800b612:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 800b616:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 800b61a:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 800b61e:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 800b622:	fa01 f308 	lsl.w	r3, r1, r8
 800b626:	9308      	str	r3, [sp, #32]
 800b628:	910d      	str	r1, [sp, #52]	; 0x34
 800b62a:	e746      	b.n	800b4ba <_strtod_l+0x702>
 800b62c:	2300      	movs	r3, #0
 800b62e:	9308      	str	r3, [sp, #32]
 800b630:	2301      	movs	r3, #1
 800b632:	930d      	str	r3, [sp, #52]	; 0x34
 800b634:	e741      	b.n	800b4ba <_strtod_l+0x702>
 800b636:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b638:	4642      	mov	r2, r8
 800b63a:	4620      	mov	r0, r4
 800b63c:	f002 faf2 	bl	800dc24 <__lshift>
 800b640:	9018      	str	r0, [sp, #96]	; 0x60
 800b642:	2800      	cmp	r0, #0
 800b644:	f47f af6b 	bne.w	800b51e <_strtod_l+0x766>
 800b648:	e5fe      	b.n	800b248 <_strtod_l+0x490>
 800b64a:	465f      	mov	r7, fp
 800b64c:	d16e      	bne.n	800b72c <_strtod_l+0x974>
 800b64e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b650:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b654:	b342      	cbz	r2, 800b6a8 <_strtod_l+0x8f0>
 800b656:	4a32      	ldr	r2, [pc, #200]	; (800b720 <_strtod_l+0x968>)
 800b658:	4293      	cmp	r3, r2
 800b65a:	d128      	bne.n	800b6ae <_strtod_l+0x8f6>
 800b65c:	9b04      	ldr	r3, [sp, #16]
 800b65e:	4651      	mov	r1, sl
 800b660:	b1eb      	cbz	r3, 800b69e <_strtod_l+0x8e6>
 800b662:	4b2d      	ldr	r3, [pc, #180]	; (800b718 <_strtod_l+0x960>)
 800b664:	403b      	ands	r3, r7
 800b666:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800b66a:	f04f 32ff 	mov.w	r2, #4294967295
 800b66e:	d819      	bhi.n	800b6a4 <_strtod_l+0x8ec>
 800b670:	0d1b      	lsrs	r3, r3, #20
 800b672:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800b676:	fa02 f303 	lsl.w	r3, r2, r3
 800b67a:	4299      	cmp	r1, r3
 800b67c:	d117      	bne.n	800b6ae <_strtod_l+0x8f6>
 800b67e:	4b29      	ldr	r3, [pc, #164]	; (800b724 <_strtod_l+0x96c>)
 800b680:	429f      	cmp	r7, r3
 800b682:	d102      	bne.n	800b68a <_strtod_l+0x8d2>
 800b684:	3101      	adds	r1, #1
 800b686:	f43f addf 	beq.w	800b248 <_strtod_l+0x490>
 800b68a:	4b23      	ldr	r3, [pc, #140]	; (800b718 <_strtod_l+0x960>)
 800b68c:	403b      	ands	r3, r7
 800b68e:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 800b692:	f04f 0a00 	mov.w	sl, #0
 800b696:	9b04      	ldr	r3, [sp, #16]
 800b698:	2b00      	cmp	r3, #0
 800b69a:	d1a4      	bne.n	800b5e6 <_strtod_l+0x82e>
 800b69c:	e5de      	b.n	800b25c <_strtod_l+0x4a4>
 800b69e:	f04f 33ff 	mov.w	r3, #4294967295
 800b6a2:	e7ea      	b.n	800b67a <_strtod_l+0x8c2>
 800b6a4:	4613      	mov	r3, r2
 800b6a6:	e7e8      	b.n	800b67a <_strtod_l+0x8c2>
 800b6a8:	ea53 030a 	orrs.w	r3, r3, sl
 800b6ac:	d08c      	beq.n	800b5c8 <_strtod_l+0x810>
 800b6ae:	9b08      	ldr	r3, [sp, #32]
 800b6b0:	b1db      	cbz	r3, 800b6ea <_strtod_l+0x932>
 800b6b2:	423b      	tst	r3, r7
 800b6b4:	d0ef      	beq.n	800b696 <_strtod_l+0x8de>
 800b6b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b6b8:	9a04      	ldr	r2, [sp, #16]
 800b6ba:	4650      	mov	r0, sl
 800b6bc:	4659      	mov	r1, fp
 800b6be:	b1c3      	cbz	r3, 800b6f2 <_strtod_l+0x93a>
 800b6c0:	f7ff fb5b 	bl	800ad7a <sulp>
 800b6c4:	4602      	mov	r2, r0
 800b6c6:	460b      	mov	r3, r1
 800b6c8:	ec51 0b18 	vmov	r0, r1, d8
 800b6cc:	f7f4 fdf6 	bl	80002bc <__adddf3>
 800b6d0:	4682      	mov	sl, r0
 800b6d2:	468b      	mov	fp, r1
 800b6d4:	e7df      	b.n	800b696 <_strtod_l+0x8de>
 800b6d6:	4013      	ands	r3, r2
 800b6d8:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800b6dc:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800b6e0:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800b6e4:	f04f 3aff 	mov.w	sl, #4294967295
 800b6e8:	e7d5      	b.n	800b696 <_strtod_l+0x8de>
 800b6ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b6ec:	ea13 0f0a 	tst.w	r3, sl
 800b6f0:	e7e0      	b.n	800b6b4 <_strtod_l+0x8fc>
 800b6f2:	f7ff fb42 	bl	800ad7a <sulp>
 800b6f6:	4602      	mov	r2, r0
 800b6f8:	460b      	mov	r3, r1
 800b6fa:	ec51 0b18 	vmov	r0, r1, d8
 800b6fe:	f7f4 fddb 	bl	80002b8 <__aeabi_dsub>
 800b702:	2200      	movs	r2, #0
 800b704:	2300      	movs	r3, #0
 800b706:	4682      	mov	sl, r0
 800b708:	468b      	mov	fp, r1
 800b70a:	f7f5 f9f5 	bl	8000af8 <__aeabi_dcmpeq>
 800b70e:	2800      	cmp	r0, #0
 800b710:	d0c1      	beq.n	800b696 <_strtod_l+0x8de>
 800b712:	e611      	b.n	800b338 <_strtod_l+0x580>
 800b714:	fffffc02 	.word	0xfffffc02
 800b718:	7ff00000 	.word	0x7ff00000
 800b71c:	39500000 	.word	0x39500000
 800b720:	000fffff 	.word	0x000fffff
 800b724:	7fefffff 	.word	0x7fefffff
 800b728:	0800fe90 	.word	0x0800fe90
 800b72c:	4631      	mov	r1, r6
 800b72e:	4628      	mov	r0, r5
 800b730:	f002 fc66 	bl	800e000 <__ratio>
 800b734:	ec59 8b10 	vmov	r8, r9, d0
 800b738:	ee10 0a10 	vmov	r0, s0
 800b73c:	2200      	movs	r2, #0
 800b73e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b742:	4649      	mov	r1, r9
 800b744:	f7f5 f9ec 	bl	8000b20 <__aeabi_dcmple>
 800b748:	2800      	cmp	r0, #0
 800b74a:	d07a      	beq.n	800b842 <_strtod_l+0xa8a>
 800b74c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b74e:	2b00      	cmp	r3, #0
 800b750:	d04a      	beq.n	800b7e8 <_strtod_l+0xa30>
 800b752:	4b95      	ldr	r3, [pc, #596]	; (800b9a8 <_strtod_l+0xbf0>)
 800b754:	2200      	movs	r2, #0
 800b756:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b75a:	f8df 924c 	ldr.w	r9, [pc, #588]	; 800b9a8 <_strtod_l+0xbf0>
 800b75e:	f04f 0800 	mov.w	r8, #0
 800b762:	4b92      	ldr	r3, [pc, #584]	; (800b9ac <_strtod_l+0xbf4>)
 800b764:	403b      	ands	r3, r7
 800b766:	930d      	str	r3, [sp, #52]	; 0x34
 800b768:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b76a:	4b91      	ldr	r3, [pc, #580]	; (800b9b0 <_strtod_l+0xbf8>)
 800b76c:	429a      	cmp	r2, r3
 800b76e:	f040 80b0 	bne.w	800b8d2 <_strtod_l+0xb1a>
 800b772:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b776:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 800b77a:	ec4b ab10 	vmov	d0, sl, fp
 800b77e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800b782:	f002 fb65 	bl	800de50 <__ulp>
 800b786:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b78a:	ec53 2b10 	vmov	r2, r3, d0
 800b78e:	f7f4 ff4b 	bl	8000628 <__aeabi_dmul>
 800b792:	4652      	mov	r2, sl
 800b794:	465b      	mov	r3, fp
 800b796:	f7f4 fd91 	bl	80002bc <__adddf3>
 800b79a:	460b      	mov	r3, r1
 800b79c:	4983      	ldr	r1, [pc, #524]	; (800b9ac <_strtod_l+0xbf4>)
 800b79e:	4a85      	ldr	r2, [pc, #532]	; (800b9b4 <_strtod_l+0xbfc>)
 800b7a0:	4019      	ands	r1, r3
 800b7a2:	4291      	cmp	r1, r2
 800b7a4:	4682      	mov	sl, r0
 800b7a6:	d960      	bls.n	800b86a <_strtod_l+0xab2>
 800b7a8:	ee18 3a90 	vmov	r3, s17
 800b7ac:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800b7b0:	4293      	cmp	r3, r2
 800b7b2:	d104      	bne.n	800b7be <_strtod_l+0xa06>
 800b7b4:	ee18 3a10 	vmov	r3, s16
 800b7b8:	3301      	adds	r3, #1
 800b7ba:	f43f ad45 	beq.w	800b248 <_strtod_l+0x490>
 800b7be:	f8df b200 	ldr.w	fp, [pc, #512]	; 800b9c0 <_strtod_l+0xc08>
 800b7c2:	f04f 3aff 	mov.w	sl, #4294967295
 800b7c6:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b7c8:	4620      	mov	r0, r4
 800b7ca:	f002 f80f 	bl	800d7ec <_Bfree>
 800b7ce:	9905      	ldr	r1, [sp, #20]
 800b7d0:	4620      	mov	r0, r4
 800b7d2:	f002 f80b 	bl	800d7ec <_Bfree>
 800b7d6:	4631      	mov	r1, r6
 800b7d8:	4620      	mov	r0, r4
 800b7da:	f002 f807 	bl	800d7ec <_Bfree>
 800b7de:	4629      	mov	r1, r5
 800b7e0:	4620      	mov	r0, r4
 800b7e2:	f002 f803 	bl	800d7ec <_Bfree>
 800b7e6:	e61a      	b.n	800b41e <_strtod_l+0x666>
 800b7e8:	f1ba 0f00 	cmp.w	sl, #0
 800b7ec:	d11b      	bne.n	800b826 <_strtod_l+0xa6e>
 800b7ee:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b7f2:	b9f3      	cbnz	r3, 800b832 <_strtod_l+0xa7a>
 800b7f4:	4b6c      	ldr	r3, [pc, #432]	; (800b9a8 <_strtod_l+0xbf0>)
 800b7f6:	2200      	movs	r2, #0
 800b7f8:	4640      	mov	r0, r8
 800b7fa:	4649      	mov	r1, r9
 800b7fc:	f7f5 f986 	bl	8000b0c <__aeabi_dcmplt>
 800b800:	b9d0      	cbnz	r0, 800b838 <_strtod_l+0xa80>
 800b802:	4640      	mov	r0, r8
 800b804:	4649      	mov	r1, r9
 800b806:	4b6c      	ldr	r3, [pc, #432]	; (800b9b8 <_strtod_l+0xc00>)
 800b808:	2200      	movs	r2, #0
 800b80a:	f7f4 ff0d 	bl	8000628 <__aeabi_dmul>
 800b80e:	4680      	mov	r8, r0
 800b810:	4689      	mov	r9, r1
 800b812:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800b816:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 800b81a:	9315      	str	r3, [sp, #84]	; 0x54
 800b81c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 800b820:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b824:	e79d      	b.n	800b762 <_strtod_l+0x9aa>
 800b826:	f1ba 0f01 	cmp.w	sl, #1
 800b82a:	d102      	bne.n	800b832 <_strtod_l+0xa7a>
 800b82c:	2f00      	cmp	r7, #0
 800b82e:	f43f ad83 	beq.w	800b338 <_strtod_l+0x580>
 800b832:	4b62      	ldr	r3, [pc, #392]	; (800b9bc <_strtod_l+0xc04>)
 800b834:	2200      	movs	r2, #0
 800b836:	e78e      	b.n	800b756 <_strtod_l+0x99e>
 800b838:	f8df 917c 	ldr.w	r9, [pc, #380]	; 800b9b8 <_strtod_l+0xc00>
 800b83c:	f04f 0800 	mov.w	r8, #0
 800b840:	e7e7      	b.n	800b812 <_strtod_l+0xa5a>
 800b842:	4b5d      	ldr	r3, [pc, #372]	; (800b9b8 <_strtod_l+0xc00>)
 800b844:	4640      	mov	r0, r8
 800b846:	4649      	mov	r1, r9
 800b848:	2200      	movs	r2, #0
 800b84a:	f7f4 feed 	bl	8000628 <__aeabi_dmul>
 800b84e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b850:	4680      	mov	r8, r0
 800b852:	4689      	mov	r9, r1
 800b854:	b933      	cbnz	r3, 800b864 <_strtod_l+0xaac>
 800b856:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800b85a:	900e      	str	r0, [sp, #56]	; 0x38
 800b85c:	930f      	str	r3, [sp, #60]	; 0x3c
 800b85e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800b862:	e7dd      	b.n	800b820 <_strtod_l+0xa68>
 800b864:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 800b868:	e7f9      	b.n	800b85e <_strtod_l+0xaa6>
 800b86a:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 800b86e:	9b04      	ldr	r3, [sp, #16]
 800b870:	2b00      	cmp	r3, #0
 800b872:	d1a8      	bne.n	800b7c6 <_strtod_l+0xa0e>
 800b874:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800b878:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b87a:	0d1b      	lsrs	r3, r3, #20
 800b87c:	051b      	lsls	r3, r3, #20
 800b87e:	429a      	cmp	r2, r3
 800b880:	d1a1      	bne.n	800b7c6 <_strtod_l+0xa0e>
 800b882:	4640      	mov	r0, r8
 800b884:	4649      	mov	r1, r9
 800b886:	f7f5 fa7f 	bl	8000d88 <__aeabi_d2lz>
 800b88a:	f7f4 fe9f 	bl	80005cc <__aeabi_l2d>
 800b88e:	4602      	mov	r2, r0
 800b890:	460b      	mov	r3, r1
 800b892:	4640      	mov	r0, r8
 800b894:	4649      	mov	r1, r9
 800b896:	f7f4 fd0f 	bl	80002b8 <__aeabi_dsub>
 800b89a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b89c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b8a0:	ea43 030a 	orr.w	r3, r3, sl
 800b8a4:	4313      	orrs	r3, r2
 800b8a6:	4680      	mov	r8, r0
 800b8a8:	4689      	mov	r9, r1
 800b8aa:	d055      	beq.n	800b958 <_strtod_l+0xba0>
 800b8ac:	a336      	add	r3, pc, #216	; (adr r3, 800b988 <_strtod_l+0xbd0>)
 800b8ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b8b2:	f7f5 f92b 	bl	8000b0c <__aeabi_dcmplt>
 800b8b6:	2800      	cmp	r0, #0
 800b8b8:	f47f acd0 	bne.w	800b25c <_strtod_l+0x4a4>
 800b8bc:	a334      	add	r3, pc, #208	; (adr r3, 800b990 <_strtod_l+0xbd8>)
 800b8be:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b8c2:	4640      	mov	r0, r8
 800b8c4:	4649      	mov	r1, r9
 800b8c6:	f7f5 f93f 	bl	8000b48 <__aeabi_dcmpgt>
 800b8ca:	2800      	cmp	r0, #0
 800b8cc:	f43f af7b 	beq.w	800b7c6 <_strtod_l+0xa0e>
 800b8d0:	e4c4      	b.n	800b25c <_strtod_l+0x4a4>
 800b8d2:	9b04      	ldr	r3, [sp, #16]
 800b8d4:	b333      	cbz	r3, 800b924 <_strtod_l+0xb6c>
 800b8d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b8d8:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800b8dc:	d822      	bhi.n	800b924 <_strtod_l+0xb6c>
 800b8de:	a32e      	add	r3, pc, #184	; (adr r3, 800b998 <_strtod_l+0xbe0>)
 800b8e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b8e4:	4640      	mov	r0, r8
 800b8e6:	4649      	mov	r1, r9
 800b8e8:	f7f5 f91a 	bl	8000b20 <__aeabi_dcmple>
 800b8ec:	b1a0      	cbz	r0, 800b918 <_strtod_l+0xb60>
 800b8ee:	4649      	mov	r1, r9
 800b8f0:	4640      	mov	r0, r8
 800b8f2:	f7f5 f971 	bl	8000bd8 <__aeabi_d2uiz>
 800b8f6:	2801      	cmp	r0, #1
 800b8f8:	bf38      	it	cc
 800b8fa:	2001      	movcc	r0, #1
 800b8fc:	f7f4 fe1a 	bl	8000534 <__aeabi_ui2d>
 800b900:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b902:	4680      	mov	r8, r0
 800b904:	4689      	mov	r9, r1
 800b906:	bb23      	cbnz	r3, 800b952 <_strtod_l+0xb9a>
 800b908:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800b90c:	9010      	str	r0, [sp, #64]	; 0x40
 800b90e:	9311      	str	r3, [sp, #68]	; 0x44
 800b910:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800b914:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b918:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b91a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b91c:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800b920:	1a9b      	subs	r3, r3, r2
 800b922:	9309      	str	r3, [sp, #36]	; 0x24
 800b924:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b928:	eeb0 0a48 	vmov.f32	s0, s16
 800b92c:	eef0 0a68 	vmov.f32	s1, s17
 800b930:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800b934:	f002 fa8c 	bl	800de50 <__ulp>
 800b938:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b93c:	ec53 2b10 	vmov	r2, r3, d0
 800b940:	f7f4 fe72 	bl	8000628 <__aeabi_dmul>
 800b944:	ec53 2b18 	vmov	r2, r3, d8
 800b948:	f7f4 fcb8 	bl	80002bc <__adddf3>
 800b94c:	4682      	mov	sl, r0
 800b94e:	468b      	mov	fp, r1
 800b950:	e78d      	b.n	800b86e <_strtod_l+0xab6>
 800b952:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800b956:	e7db      	b.n	800b910 <_strtod_l+0xb58>
 800b958:	a311      	add	r3, pc, #68	; (adr r3, 800b9a0 <_strtod_l+0xbe8>)
 800b95a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b95e:	f7f5 f8d5 	bl	8000b0c <__aeabi_dcmplt>
 800b962:	e7b2      	b.n	800b8ca <_strtod_l+0xb12>
 800b964:	2300      	movs	r3, #0
 800b966:	930a      	str	r3, [sp, #40]	; 0x28
 800b968:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b96a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b96c:	6013      	str	r3, [r2, #0]
 800b96e:	f7ff ba6b 	b.w	800ae48 <_strtod_l+0x90>
 800b972:	2a65      	cmp	r2, #101	; 0x65
 800b974:	f43f ab5f 	beq.w	800b036 <_strtod_l+0x27e>
 800b978:	2a45      	cmp	r2, #69	; 0x45
 800b97a:	f43f ab5c 	beq.w	800b036 <_strtod_l+0x27e>
 800b97e:	2301      	movs	r3, #1
 800b980:	f7ff bb94 	b.w	800b0ac <_strtod_l+0x2f4>
 800b984:	f3af 8000 	nop.w
 800b988:	94a03595 	.word	0x94a03595
 800b98c:	3fdfffff 	.word	0x3fdfffff
 800b990:	35afe535 	.word	0x35afe535
 800b994:	3fe00000 	.word	0x3fe00000
 800b998:	ffc00000 	.word	0xffc00000
 800b99c:	41dfffff 	.word	0x41dfffff
 800b9a0:	94a03595 	.word	0x94a03595
 800b9a4:	3fcfffff 	.word	0x3fcfffff
 800b9a8:	3ff00000 	.word	0x3ff00000
 800b9ac:	7ff00000 	.word	0x7ff00000
 800b9b0:	7fe00000 	.word	0x7fe00000
 800b9b4:	7c9fffff 	.word	0x7c9fffff
 800b9b8:	3fe00000 	.word	0x3fe00000
 800b9bc:	bff00000 	.word	0xbff00000
 800b9c0:	7fefffff 	.word	0x7fefffff

0800b9c4 <_strtod_r>:
 800b9c4:	4b01      	ldr	r3, [pc, #4]	; (800b9cc <_strtod_r+0x8>)
 800b9c6:	f7ff b9f7 	b.w	800adb8 <_strtod_l>
 800b9ca:	bf00      	nop
 800b9cc:	200000d4 	.word	0x200000d4

0800b9d0 <_strtol_l.constprop.0>:
 800b9d0:	2b01      	cmp	r3, #1
 800b9d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b9d6:	d001      	beq.n	800b9dc <_strtol_l.constprop.0+0xc>
 800b9d8:	2b24      	cmp	r3, #36	; 0x24
 800b9da:	d906      	bls.n	800b9ea <_strtol_l.constprop.0+0x1a>
 800b9dc:	f7fd f836 	bl	8008a4c <__errno>
 800b9e0:	2316      	movs	r3, #22
 800b9e2:	6003      	str	r3, [r0, #0]
 800b9e4:	2000      	movs	r0, #0
 800b9e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b9ea:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800bad0 <_strtol_l.constprop.0+0x100>
 800b9ee:	460d      	mov	r5, r1
 800b9f0:	462e      	mov	r6, r5
 800b9f2:	f815 4b01 	ldrb.w	r4, [r5], #1
 800b9f6:	f814 700c 	ldrb.w	r7, [r4, ip]
 800b9fa:	f017 0708 	ands.w	r7, r7, #8
 800b9fe:	d1f7      	bne.n	800b9f0 <_strtol_l.constprop.0+0x20>
 800ba00:	2c2d      	cmp	r4, #45	; 0x2d
 800ba02:	d132      	bne.n	800ba6a <_strtol_l.constprop.0+0x9a>
 800ba04:	782c      	ldrb	r4, [r5, #0]
 800ba06:	2701      	movs	r7, #1
 800ba08:	1cb5      	adds	r5, r6, #2
 800ba0a:	2b00      	cmp	r3, #0
 800ba0c:	d05b      	beq.n	800bac6 <_strtol_l.constprop.0+0xf6>
 800ba0e:	2b10      	cmp	r3, #16
 800ba10:	d109      	bne.n	800ba26 <_strtol_l.constprop.0+0x56>
 800ba12:	2c30      	cmp	r4, #48	; 0x30
 800ba14:	d107      	bne.n	800ba26 <_strtol_l.constprop.0+0x56>
 800ba16:	782c      	ldrb	r4, [r5, #0]
 800ba18:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 800ba1c:	2c58      	cmp	r4, #88	; 0x58
 800ba1e:	d14d      	bne.n	800babc <_strtol_l.constprop.0+0xec>
 800ba20:	786c      	ldrb	r4, [r5, #1]
 800ba22:	2310      	movs	r3, #16
 800ba24:	3502      	adds	r5, #2
 800ba26:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 800ba2a:	f108 38ff 	add.w	r8, r8, #4294967295
 800ba2e:	f04f 0c00 	mov.w	ip, #0
 800ba32:	fbb8 f9f3 	udiv	r9, r8, r3
 800ba36:	4666      	mov	r6, ip
 800ba38:	fb03 8a19 	mls	sl, r3, r9, r8
 800ba3c:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 800ba40:	f1be 0f09 	cmp.w	lr, #9
 800ba44:	d816      	bhi.n	800ba74 <_strtol_l.constprop.0+0xa4>
 800ba46:	4674      	mov	r4, lr
 800ba48:	42a3      	cmp	r3, r4
 800ba4a:	dd24      	ble.n	800ba96 <_strtol_l.constprop.0+0xc6>
 800ba4c:	f1bc 0f00 	cmp.w	ip, #0
 800ba50:	db1e      	blt.n	800ba90 <_strtol_l.constprop.0+0xc0>
 800ba52:	45b1      	cmp	r9, r6
 800ba54:	d31c      	bcc.n	800ba90 <_strtol_l.constprop.0+0xc0>
 800ba56:	d101      	bne.n	800ba5c <_strtol_l.constprop.0+0x8c>
 800ba58:	45a2      	cmp	sl, r4
 800ba5a:	db19      	blt.n	800ba90 <_strtol_l.constprop.0+0xc0>
 800ba5c:	fb06 4603 	mla	r6, r6, r3, r4
 800ba60:	f04f 0c01 	mov.w	ip, #1
 800ba64:	f815 4b01 	ldrb.w	r4, [r5], #1
 800ba68:	e7e8      	b.n	800ba3c <_strtol_l.constprop.0+0x6c>
 800ba6a:	2c2b      	cmp	r4, #43	; 0x2b
 800ba6c:	bf04      	itt	eq
 800ba6e:	782c      	ldrbeq	r4, [r5, #0]
 800ba70:	1cb5      	addeq	r5, r6, #2
 800ba72:	e7ca      	b.n	800ba0a <_strtol_l.constprop.0+0x3a>
 800ba74:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 800ba78:	f1be 0f19 	cmp.w	lr, #25
 800ba7c:	d801      	bhi.n	800ba82 <_strtol_l.constprop.0+0xb2>
 800ba7e:	3c37      	subs	r4, #55	; 0x37
 800ba80:	e7e2      	b.n	800ba48 <_strtol_l.constprop.0+0x78>
 800ba82:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 800ba86:	f1be 0f19 	cmp.w	lr, #25
 800ba8a:	d804      	bhi.n	800ba96 <_strtol_l.constprop.0+0xc6>
 800ba8c:	3c57      	subs	r4, #87	; 0x57
 800ba8e:	e7db      	b.n	800ba48 <_strtol_l.constprop.0+0x78>
 800ba90:	f04f 3cff 	mov.w	ip, #4294967295
 800ba94:	e7e6      	b.n	800ba64 <_strtol_l.constprop.0+0x94>
 800ba96:	f1bc 0f00 	cmp.w	ip, #0
 800ba9a:	da05      	bge.n	800baa8 <_strtol_l.constprop.0+0xd8>
 800ba9c:	2322      	movs	r3, #34	; 0x22
 800ba9e:	6003      	str	r3, [r0, #0]
 800baa0:	4646      	mov	r6, r8
 800baa2:	b942      	cbnz	r2, 800bab6 <_strtol_l.constprop.0+0xe6>
 800baa4:	4630      	mov	r0, r6
 800baa6:	e79e      	b.n	800b9e6 <_strtol_l.constprop.0+0x16>
 800baa8:	b107      	cbz	r7, 800baac <_strtol_l.constprop.0+0xdc>
 800baaa:	4276      	negs	r6, r6
 800baac:	2a00      	cmp	r2, #0
 800baae:	d0f9      	beq.n	800baa4 <_strtol_l.constprop.0+0xd4>
 800bab0:	f1bc 0f00 	cmp.w	ip, #0
 800bab4:	d000      	beq.n	800bab8 <_strtol_l.constprop.0+0xe8>
 800bab6:	1e69      	subs	r1, r5, #1
 800bab8:	6011      	str	r1, [r2, #0]
 800baba:	e7f3      	b.n	800baa4 <_strtol_l.constprop.0+0xd4>
 800babc:	2430      	movs	r4, #48	; 0x30
 800babe:	2b00      	cmp	r3, #0
 800bac0:	d1b1      	bne.n	800ba26 <_strtol_l.constprop.0+0x56>
 800bac2:	2308      	movs	r3, #8
 800bac4:	e7af      	b.n	800ba26 <_strtol_l.constprop.0+0x56>
 800bac6:	2c30      	cmp	r4, #48	; 0x30
 800bac8:	d0a5      	beq.n	800ba16 <_strtol_l.constprop.0+0x46>
 800baca:	230a      	movs	r3, #10
 800bacc:	e7ab      	b.n	800ba26 <_strtol_l.constprop.0+0x56>
 800bace:	bf00      	nop
 800bad0:	08010159 	.word	0x08010159

0800bad4 <_strtol_r>:
 800bad4:	f7ff bf7c 	b.w	800b9d0 <_strtol_l.constprop.0>

0800bad8 <strtol>:
 800bad8:	4613      	mov	r3, r2
 800bada:	460a      	mov	r2, r1
 800badc:	4601      	mov	r1, r0
 800bade:	4802      	ldr	r0, [pc, #8]	; (800bae8 <strtol+0x10>)
 800bae0:	6800      	ldr	r0, [r0, #0]
 800bae2:	f7ff bf75 	b.w	800b9d0 <_strtol_l.constprop.0>
 800bae6:	bf00      	nop
 800bae8:	2000000c 	.word	0x2000000c

0800baec <_strtoul_l.constprop.0>:
 800baec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800baf0:	4f36      	ldr	r7, [pc, #216]	; (800bbcc <_strtoul_l.constprop.0+0xe0>)
 800baf2:	4686      	mov	lr, r0
 800baf4:	460d      	mov	r5, r1
 800baf6:	4628      	mov	r0, r5
 800baf8:	f815 4b01 	ldrb.w	r4, [r5], #1
 800bafc:	5de6      	ldrb	r6, [r4, r7]
 800bafe:	f016 0608 	ands.w	r6, r6, #8
 800bb02:	d1f8      	bne.n	800baf6 <_strtoul_l.constprop.0+0xa>
 800bb04:	2c2d      	cmp	r4, #45	; 0x2d
 800bb06:	d12f      	bne.n	800bb68 <_strtoul_l.constprop.0+0x7c>
 800bb08:	782c      	ldrb	r4, [r5, #0]
 800bb0a:	2601      	movs	r6, #1
 800bb0c:	1c85      	adds	r5, r0, #2
 800bb0e:	2b00      	cmp	r3, #0
 800bb10:	d057      	beq.n	800bbc2 <_strtoul_l.constprop.0+0xd6>
 800bb12:	2b10      	cmp	r3, #16
 800bb14:	d109      	bne.n	800bb2a <_strtoul_l.constprop.0+0x3e>
 800bb16:	2c30      	cmp	r4, #48	; 0x30
 800bb18:	d107      	bne.n	800bb2a <_strtoul_l.constprop.0+0x3e>
 800bb1a:	7828      	ldrb	r0, [r5, #0]
 800bb1c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800bb20:	2858      	cmp	r0, #88	; 0x58
 800bb22:	d149      	bne.n	800bbb8 <_strtoul_l.constprop.0+0xcc>
 800bb24:	786c      	ldrb	r4, [r5, #1]
 800bb26:	2310      	movs	r3, #16
 800bb28:	3502      	adds	r5, #2
 800bb2a:	f04f 38ff 	mov.w	r8, #4294967295
 800bb2e:	2700      	movs	r7, #0
 800bb30:	fbb8 f8f3 	udiv	r8, r8, r3
 800bb34:	fb03 f908 	mul.w	r9, r3, r8
 800bb38:	ea6f 0909 	mvn.w	r9, r9
 800bb3c:	4638      	mov	r0, r7
 800bb3e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800bb42:	f1bc 0f09 	cmp.w	ip, #9
 800bb46:	d814      	bhi.n	800bb72 <_strtoul_l.constprop.0+0x86>
 800bb48:	4664      	mov	r4, ip
 800bb4a:	42a3      	cmp	r3, r4
 800bb4c:	dd22      	ble.n	800bb94 <_strtoul_l.constprop.0+0xa8>
 800bb4e:	2f00      	cmp	r7, #0
 800bb50:	db1d      	blt.n	800bb8e <_strtoul_l.constprop.0+0xa2>
 800bb52:	4580      	cmp	r8, r0
 800bb54:	d31b      	bcc.n	800bb8e <_strtoul_l.constprop.0+0xa2>
 800bb56:	d101      	bne.n	800bb5c <_strtoul_l.constprop.0+0x70>
 800bb58:	45a1      	cmp	r9, r4
 800bb5a:	db18      	blt.n	800bb8e <_strtoul_l.constprop.0+0xa2>
 800bb5c:	fb00 4003 	mla	r0, r0, r3, r4
 800bb60:	2701      	movs	r7, #1
 800bb62:	f815 4b01 	ldrb.w	r4, [r5], #1
 800bb66:	e7ea      	b.n	800bb3e <_strtoul_l.constprop.0+0x52>
 800bb68:	2c2b      	cmp	r4, #43	; 0x2b
 800bb6a:	bf04      	itt	eq
 800bb6c:	782c      	ldrbeq	r4, [r5, #0]
 800bb6e:	1c85      	addeq	r5, r0, #2
 800bb70:	e7cd      	b.n	800bb0e <_strtoul_l.constprop.0+0x22>
 800bb72:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800bb76:	f1bc 0f19 	cmp.w	ip, #25
 800bb7a:	d801      	bhi.n	800bb80 <_strtoul_l.constprop.0+0x94>
 800bb7c:	3c37      	subs	r4, #55	; 0x37
 800bb7e:	e7e4      	b.n	800bb4a <_strtoul_l.constprop.0+0x5e>
 800bb80:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800bb84:	f1bc 0f19 	cmp.w	ip, #25
 800bb88:	d804      	bhi.n	800bb94 <_strtoul_l.constprop.0+0xa8>
 800bb8a:	3c57      	subs	r4, #87	; 0x57
 800bb8c:	e7dd      	b.n	800bb4a <_strtoul_l.constprop.0+0x5e>
 800bb8e:	f04f 37ff 	mov.w	r7, #4294967295
 800bb92:	e7e6      	b.n	800bb62 <_strtoul_l.constprop.0+0x76>
 800bb94:	2f00      	cmp	r7, #0
 800bb96:	da07      	bge.n	800bba8 <_strtoul_l.constprop.0+0xbc>
 800bb98:	2322      	movs	r3, #34	; 0x22
 800bb9a:	f8ce 3000 	str.w	r3, [lr]
 800bb9e:	f04f 30ff 	mov.w	r0, #4294967295
 800bba2:	b932      	cbnz	r2, 800bbb2 <_strtoul_l.constprop.0+0xc6>
 800bba4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bba8:	b106      	cbz	r6, 800bbac <_strtoul_l.constprop.0+0xc0>
 800bbaa:	4240      	negs	r0, r0
 800bbac:	2a00      	cmp	r2, #0
 800bbae:	d0f9      	beq.n	800bba4 <_strtoul_l.constprop.0+0xb8>
 800bbb0:	b107      	cbz	r7, 800bbb4 <_strtoul_l.constprop.0+0xc8>
 800bbb2:	1e69      	subs	r1, r5, #1
 800bbb4:	6011      	str	r1, [r2, #0]
 800bbb6:	e7f5      	b.n	800bba4 <_strtoul_l.constprop.0+0xb8>
 800bbb8:	2430      	movs	r4, #48	; 0x30
 800bbba:	2b00      	cmp	r3, #0
 800bbbc:	d1b5      	bne.n	800bb2a <_strtoul_l.constprop.0+0x3e>
 800bbbe:	2308      	movs	r3, #8
 800bbc0:	e7b3      	b.n	800bb2a <_strtoul_l.constprop.0+0x3e>
 800bbc2:	2c30      	cmp	r4, #48	; 0x30
 800bbc4:	d0a9      	beq.n	800bb1a <_strtoul_l.constprop.0+0x2e>
 800bbc6:	230a      	movs	r3, #10
 800bbc8:	e7af      	b.n	800bb2a <_strtoul_l.constprop.0+0x3e>
 800bbca:	bf00      	nop
 800bbcc:	08010159 	.word	0x08010159

0800bbd0 <_strtoul_r>:
 800bbd0:	f7ff bf8c 	b.w	800baec <_strtoul_l.constprop.0>

0800bbd4 <strtoul>:
 800bbd4:	4613      	mov	r3, r2
 800bbd6:	460a      	mov	r2, r1
 800bbd8:	4601      	mov	r1, r0
 800bbda:	4802      	ldr	r0, [pc, #8]	; (800bbe4 <strtoul+0x10>)
 800bbdc:	6800      	ldr	r0, [r0, #0]
 800bbde:	f7ff bf85 	b.w	800baec <_strtoul_l.constprop.0>
 800bbe2:	bf00      	nop
 800bbe4:	2000000c 	.word	0x2000000c

0800bbe8 <__tzcalc_limits>:
 800bbe8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbec:	4605      	mov	r5, r0
 800bbee:	f001 fccf 	bl	800d590 <__gettzinfo>
 800bbf2:	f240 73b1 	movw	r3, #1969	; 0x7b1
 800bbf6:	429d      	cmp	r5, r3
 800bbf8:	f340 8099 	ble.w	800bd2e <__tzcalc_limits+0x146>
 800bbfc:	f46f 62f6 	mvn.w	r2, #1968	; 0x7b0
 800bc00:	18ac      	adds	r4, r5, r2
 800bc02:	f2a5 73b2 	subw	r3, r5, #1970	; 0x7b2
 800bc06:	f240 126d 	movw	r2, #365	; 0x16d
 800bc0a:	10a4      	asrs	r4, r4, #2
 800bc0c:	fb02 4403 	mla	r4, r2, r3, r4
 800bc10:	f06f 0263 	mvn.w	r2, #99	; 0x63
 800bc14:	f2a5 736d 	subw	r3, r5, #1901	; 0x76d
 800bc18:	fb93 f3f2 	sdiv	r3, r3, r2
 800bc1c:	441c      	add	r4, r3
 800bc1e:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800bc22:	f46f 61c8 	mvn.w	r1, #1600	; 0x640
 800bc26:	fb95 fcf3 	sdiv	ip, r5, r3
 800bc2a:	fb03 5c1c 	mls	ip, r3, ip, r5
 800bc2e:	186a      	adds	r2, r5, r1
 800bc30:	fabc f68c 	clz	r6, ip
 800bc34:	fbb2 f2f3 	udiv	r2, r2, r3
 800bc38:	f005 0303 	and.w	r3, r5, #3
 800bc3c:	4414      	add	r4, r2
 800bc3e:	2264      	movs	r2, #100	; 0x64
 800bc40:	6045      	str	r5, [r0, #4]
 800bc42:	fb95 f7f2 	sdiv	r7, r5, r2
 800bc46:	0976      	lsrs	r6, r6, #5
 800bc48:	fb02 5717 	mls	r7, r2, r7, r5
 800bc4c:	4601      	mov	r1, r0
 800bc4e:	f100 0b50 	add.w	fp, r0, #80	; 0x50
 800bc52:	9300      	str	r3, [sp, #0]
 800bc54:	f04f 0a07 	mov.w	sl, #7
 800bc58:	7a0d      	ldrb	r5, [r1, #8]
 800bc5a:	694b      	ldr	r3, [r1, #20]
 800bc5c:	2d4a      	cmp	r5, #74	; 0x4a
 800bc5e:	d12d      	bne.n	800bcbc <__tzcalc_limits+0xd4>
 800bc60:	9a00      	ldr	r2, [sp, #0]
 800bc62:	eb04 0e03 	add.w	lr, r4, r3
 800bc66:	b902      	cbnz	r2, 800bc6a <__tzcalc_limits+0x82>
 800bc68:	b917      	cbnz	r7, 800bc70 <__tzcalc_limits+0x88>
 800bc6a:	f1bc 0f00 	cmp.w	ip, #0
 800bc6e:	d123      	bne.n	800bcb8 <__tzcalc_limits+0xd0>
 800bc70:	2b3b      	cmp	r3, #59	; 0x3b
 800bc72:	bfd4      	ite	le
 800bc74:	2300      	movle	r3, #0
 800bc76:	2301      	movgt	r3, #1
 800bc78:	4473      	add	r3, lr
 800bc7a:	3b01      	subs	r3, #1
 800bc7c:	698d      	ldr	r5, [r1, #24]
 800bc7e:	4a2d      	ldr	r2, [pc, #180]	; (800bd34 <__tzcalc_limits+0x14c>)
 800bc80:	ea4f 7ee5 	mov.w	lr, r5, asr #31
 800bc84:	fbc3 5e02 	smlal	r5, lr, r3, r2
 800bc88:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 800bc8a:	18ed      	adds	r5, r5, r3
 800bc8c:	eb4e 73e3 	adc.w	r3, lr, r3, asr #31
 800bc90:	e9c1 5308 	strd	r5, r3, [r1, #32]
 800bc94:	3128      	adds	r1, #40	; 0x28
 800bc96:	458b      	cmp	fp, r1
 800bc98:	d1de      	bne.n	800bc58 <__tzcalc_limits+0x70>
 800bc9a:	e9d0 1312 	ldrd	r1, r3, [r0, #72]	; 0x48
 800bc9e:	e9d0 4208 	ldrd	r4, r2, [r0, #32]
 800bca2:	428c      	cmp	r4, r1
 800bca4:	eb72 0303 	sbcs.w	r3, r2, r3
 800bca8:	bfb4      	ite	lt
 800bcaa:	2301      	movlt	r3, #1
 800bcac:	2300      	movge	r3, #0
 800bcae:	6003      	str	r3, [r0, #0]
 800bcb0:	2001      	movs	r0, #1
 800bcb2:	b003      	add	sp, #12
 800bcb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcb8:	2300      	movs	r3, #0
 800bcba:	e7dd      	b.n	800bc78 <__tzcalc_limits+0x90>
 800bcbc:	2d44      	cmp	r5, #68	; 0x44
 800bcbe:	d101      	bne.n	800bcc4 <__tzcalc_limits+0xdc>
 800bcc0:	4423      	add	r3, r4
 800bcc2:	e7db      	b.n	800bc7c <__tzcalc_limits+0x94>
 800bcc4:	9a00      	ldr	r2, [sp, #0]
 800bcc6:	bb62      	cbnz	r2, 800bd22 <__tzcalc_limits+0x13a>
 800bcc8:	2f00      	cmp	r7, #0
 800bcca:	bf0c      	ite	eq
 800bccc:	4635      	moveq	r5, r6
 800bcce:	2501      	movne	r5, #1
 800bcd0:	68ca      	ldr	r2, [r1, #12]
 800bcd2:	9201      	str	r2, [sp, #4]
 800bcd4:	4a18      	ldr	r2, [pc, #96]	; (800bd38 <__tzcalc_limits+0x150>)
 800bcd6:	f04f 0930 	mov.w	r9, #48	; 0x30
 800bcda:	fb09 2505 	mla	r5, r9, r5, r2
 800bcde:	46a6      	mov	lr, r4
 800bce0:	f04f 0800 	mov.w	r8, #0
 800bce4:	3d04      	subs	r5, #4
 800bce6:	9a01      	ldr	r2, [sp, #4]
 800bce8:	f108 0801 	add.w	r8, r8, #1
 800bcec:	4542      	cmp	r2, r8
 800bcee:	f855 9028 	ldr.w	r9, [r5, r8, lsl #2]
 800bcf2:	dc18      	bgt.n	800bd26 <__tzcalc_limits+0x13e>
 800bcf4:	f10e 0504 	add.w	r5, lr, #4
 800bcf8:	fb95 f8fa 	sdiv	r8, r5, sl
 800bcfc:	ebc8 08c8 	rsb	r8, r8, r8, lsl #3
 800bd00:	eba5 0808 	sub.w	r8, r5, r8
 800bd04:	ebb3 0808 	subs.w	r8, r3, r8
 800bd08:	690b      	ldr	r3, [r1, #16]
 800bd0a:	f103 33ff 	add.w	r3, r3, #4294967295
 800bd0e:	bf48      	it	mi
 800bd10:	f108 0807 	addmi.w	r8, r8, #7
 800bd14:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800bd18:	4443      	add	r3, r8
 800bd1a:	454b      	cmp	r3, r9
 800bd1c:	da05      	bge.n	800bd2a <__tzcalc_limits+0x142>
 800bd1e:	4473      	add	r3, lr
 800bd20:	e7ac      	b.n	800bc7c <__tzcalc_limits+0x94>
 800bd22:	4635      	mov	r5, r6
 800bd24:	e7d4      	b.n	800bcd0 <__tzcalc_limits+0xe8>
 800bd26:	44ce      	add	lr, r9
 800bd28:	e7dd      	b.n	800bce6 <__tzcalc_limits+0xfe>
 800bd2a:	3b07      	subs	r3, #7
 800bd2c:	e7f5      	b.n	800bd1a <__tzcalc_limits+0x132>
 800bd2e:	2000      	movs	r0, #0
 800bd30:	e7bf      	b.n	800bcb2 <__tzcalc_limits+0xca>
 800bd32:	bf00      	nop
 800bd34:	00015180 	.word	0x00015180
 800bd38:	0800fd78 	.word	0x0800fd78

0800bd3c <__tz_lock>:
 800bd3c:	4801      	ldr	r0, [pc, #4]	; (800bd44 <__tz_lock+0x8>)
 800bd3e:	f001 bce0 	b.w	800d702 <__retarget_lock_acquire>
 800bd42:	bf00      	nop
 800bd44:	2000035c 	.word	0x2000035c

0800bd48 <__tz_unlock>:
 800bd48:	4801      	ldr	r0, [pc, #4]	; (800bd50 <__tz_unlock+0x8>)
 800bd4a:	f001 bcdc 	b.w	800d706 <__retarget_lock_release>
 800bd4e:	bf00      	nop
 800bd50:	2000035c 	.word	0x2000035c

0800bd54 <_tzset_unlocked>:
 800bd54:	4b01      	ldr	r3, [pc, #4]	; (800bd5c <_tzset_unlocked+0x8>)
 800bd56:	6818      	ldr	r0, [r3, #0]
 800bd58:	f000 b802 	b.w	800bd60 <_tzset_unlocked_r>
 800bd5c:	2000000c 	.word	0x2000000c

0800bd60 <_tzset_unlocked_r>:
 800bd60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd64:	b08d      	sub	sp, #52	; 0x34
 800bd66:	4607      	mov	r7, r0
 800bd68:	f001 fc12 	bl	800d590 <__gettzinfo>
 800bd6c:	49b0      	ldr	r1, [pc, #704]	; (800c030 <_tzset_unlocked_r+0x2d0>)
 800bd6e:	4eb1      	ldr	r6, [pc, #708]	; (800c034 <_tzset_unlocked_r+0x2d4>)
 800bd70:	4605      	mov	r5, r0
 800bd72:	4638      	mov	r0, r7
 800bd74:	f001 fc04 	bl	800d580 <_getenv_r>
 800bd78:	4604      	mov	r4, r0
 800bd7a:	b970      	cbnz	r0, 800bd9a <_tzset_unlocked_r+0x3a>
 800bd7c:	4bae      	ldr	r3, [pc, #696]	; (800c038 <_tzset_unlocked_r+0x2d8>)
 800bd7e:	4aaf      	ldr	r2, [pc, #700]	; (800c03c <_tzset_unlocked_r+0x2dc>)
 800bd80:	6018      	str	r0, [r3, #0]
 800bd82:	4baf      	ldr	r3, [pc, #700]	; (800c040 <_tzset_unlocked_r+0x2e0>)
 800bd84:	6018      	str	r0, [r3, #0]
 800bd86:	4baf      	ldr	r3, [pc, #700]	; (800c044 <_tzset_unlocked_r+0x2e4>)
 800bd88:	6830      	ldr	r0, [r6, #0]
 800bd8a:	e9c3 2200 	strd	r2, r2, [r3]
 800bd8e:	f7fc ffa1 	bl	8008cd4 <free>
 800bd92:	6034      	str	r4, [r6, #0]
 800bd94:	b00d      	add	sp, #52	; 0x34
 800bd96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd9a:	6831      	ldr	r1, [r6, #0]
 800bd9c:	2900      	cmp	r1, #0
 800bd9e:	d162      	bne.n	800be66 <_tzset_unlocked_r+0x106>
 800bda0:	6830      	ldr	r0, [r6, #0]
 800bda2:	f7fc ff97 	bl	8008cd4 <free>
 800bda6:	4620      	mov	r0, r4
 800bda8:	f7f4 fa24 	bl	80001f4 <strlen>
 800bdac:	1c41      	adds	r1, r0, #1
 800bdae:	4638      	mov	r0, r7
 800bdb0:	f7fd fa8c 	bl	80092cc <_malloc_r>
 800bdb4:	6030      	str	r0, [r6, #0]
 800bdb6:	2800      	cmp	r0, #0
 800bdb8:	d15a      	bne.n	800be70 <_tzset_unlocked_r+0x110>
 800bdba:	7823      	ldrb	r3, [r4, #0]
 800bdbc:	4aa2      	ldr	r2, [pc, #648]	; (800c048 <_tzset_unlocked_r+0x2e8>)
 800bdbe:	49a3      	ldr	r1, [pc, #652]	; (800c04c <_tzset_unlocked_r+0x2ec>)
 800bdc0:	2b3a      	cmp	r3, #58	; 0x3a
 800bdc2:	bf08      	it	eq
 800bdc4:	3401      	addeq	r4, #1
 800bdc6:	ae0a      	add	r6, sp, #40	; 0x28
 800bdc8:	4633      	mov	r3, r6
 800bdca:	4620      	mov	r0, r4
 800bdcc:	f7fe f9d6 	bl	800a17c <siscanf>
 800bdd0:	2800      	cmp	r0, #0
 800bdd2:	dddf      	ble.n	800bd94 <_tzset_unlocked_r+0x34>
 800bdd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bdd6:	18e7      	adds	r7, r4, r3
 800bdd8:	5ce3      	ldrb	r3, [r4, r3]
 800bdda:	2b2d      	cmp	r3, #45	; 0x2d
 800bddc:	d14c      	bne.n	800be78 <_tzset_unlocked_r+0x118>
 800bdde:	3701      	adds	r7, #1
 800bde0:	f04f 38ff 	mov.w	r8, #4294967295
 800bde4:	f10d 0a20 	add.w	sl, sp, #32
 800bde8:	f10d 0b1e 	add.w	fp, sp, #30
 800bdec:	2400      	movs	r4, #0
 800bdee:	e9cd 6a01 	strd	r6, sl, [sp, #4]
 800bdf2:	4997      	ldr	r1, [pc, #604]	; (800c050 <_tzset_unlocked_r+0x2f0>)
 800bdf4:	9603      	str	r6, [sp, #12]
 800bdf6:	f8cd b000 	str.w	fp, [sp]
 800bdfa:	4633      	mov	r3, r6
 800bdfc:	aa07      	add	r2, sp, #28
 800bdfe:	4638      	mov	r0, r7
 800be00:	f8ad 401e 	strh.w	r4, [sp, #30]
 800be04:	f8ad 4020 	strh.w	r4, [sp, #32]
 800be08:	f7fe f9b8 	bl	800a17c <siscanf>
 800be0c:	42a0      	cmp	r0, r4
 800be0e:	ddc1      	ble.n	800bd94 <_tzset_unlocked_r+0x34>
 800be10:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800be14:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800be18:	f8df 9240 	ldr.w	r9, [pc, #576]	; 800c05c <_tzset_unlocked_r+0x2fc>
 800be1c:	213c      	movs	r1, #60	; 0x3c
 800be1e:	fb01 3302 	mla	r3, r1, r2, r3
 800be22:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800be26:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800be2a:	fb01 3302 	mla	r3, r1, r2, r3
 800be2e:	fb08 f303 	mul.w	r3, r8, r3
 800be32:	f8df 8210 	ldr.w	r8, [pc, #528]	; 800c044 <_tzset_unlocked_r+0x2e4>
 800be36:	62ab      	str	r3, [r5, #40]	; 0x28
 800be38:	4b83      	ldr	r3, [pc, #524]	; (800c048 <_tzset_unlocked_r+0x2e8>)
 800be3a:	f8c8 3000 	str.w	r3, [r8]
 800be3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800be40:	4982      	ldr	r1, [pc, #520]	; (800c04c <_tzset_unlocked_r+0x2ec>)
 800be42:	441f      	add	r7, r3
 800be44:	464a      	mov	r2, r9
 800be46:	4633      	mov	r3, r6
 800be48:	4638      	mov	r0, r7
 800be4a:	f7fe f997 	bl	800a17c <siscanf>
 800be4e:	42a0      	cmp	r0, r4
 800be50:	dc18      	bgt.n	800be84 <_tzset_unlocked_r+0x124>
 800be52:	f8d8 3000 	ldr.w	r3, [r8]
 800be56:	f8c8 3004 	str.w	r3, [r8, #4]
 800be5a:	4b77      	ldr	r3, [pc, #476]	; (800c038 <_tzset_unlocked_r+0x2d8>)
 800be5c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800be5e:	601a      	str	r2, [r3, #0]
 800be60:	4b77      	ldr	r3, [pc, #476]	; (800c040 <_tzset_unlocked_r+0x2e0>)
 800be62:	601c      	str	r4, [r3, #0]
 800be64:	e796      	b.n	800bd94 <_tzset_unlocked_r+0x34>
 800be66:	f7f4 f9bb 	bl	80001e0 <strcmp>
 800be6a:	2800      	cmp	r0, #0
 800be6c:	d198      	bne.n	800bda0 <_tzset_unlocked_r+0x40>
 800be6e:	e791      	b.n	800bd94 <_tzset_unlocked_r+0x34>
 800be70:	4621      	mov	r1, r4
 800be72:	f7fe fa03 	bl	800a27c <strcpy>
 800be76:	e7a0      	b.n	800bdba <_tzset_unlocked_r+0x5a>
 800be78:	2b2b      	cmp	r3, #43	; 0x2b
 800be7a:	bf08      	it	eq
 800be7c:	3701      	addeq	r7, #1
 800be7e:	f04f 0801 	mov.w	r8, #1
 800be82:	e7af      	b.n	800bde4 <_tzset_unlocked_r+0x84>
 800be84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800be86:	f8c8 9004 	str.w	r9, [r8, #4]
 800be8a:	18fc      	adds	r4, r7, r3
 800be8c:	5cfb      	ldrb	r3, [r7, r3]
 800be8e:	2b2d      	cmp	r3, #45	; 0x2d
 800be90:	f040 808b 	bne.w	800bfaa <_tzset_unlocked_r+0x24a>
 800be94:	3401      	adds	r4, #1
 800be96:	f04f 37ff 	mov.w	r7, #4294967295
 800be9a:	2300      	movs	r3, #0
 800be9c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bea0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bea4:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bea8:	930a      	str	r3, [sp, #40]	; 0x28
 800beaa:	e9cd a602 	strd	sl, r6, [sp, #8]
 800beae:	e9cd b600 	strd	fp, r6, [sp]
 800beb2:	4967      	ldr	r1, [pc, #412]	; (800c050 <_tzset_unlocked_r+0x2f0>)
 800beb4:	4633      	mov	r3, r6
 800beb6:	aa07      	add	r2, sp, #28
 800beb8:	4620      	mov	r0, r4
 800beba:	f7fe f95f 	bl	800a17c <siscanf>
 800bebe:	2800      	cmp	r0, #0
 800bec0:	dc78      	bgt.n	800bfb4 <_tzset_unlocked_r+0x254>
 800bec2:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800bec4:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
 800bec8:	652b      	str	r3, [r5, #80]	; 0x50
 800beca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800becc:	462f      	mov	r7, r5
 800bece:	441c      	add	r4, r3
 800bed0:	f04f 0900 	mov.w	r9, #0
 800bed4:	7823      	ldrb	r3, [r4, #0]
 800bed6:	2b2c      	cmp	r3, #44	; 0x2c
 800bed8:	bf08      	it	eq
 800beda:	3401      	addeq	r4, #1
 800bedc:	f894 8000 	ldrb.w	r8, [r4]
 800bee0:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
 800bee4:	d178      	bne.n	800bfd8 <_tzset_unlocked_r+0x278>
 800bee6:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 800beea:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800beee:	ab09      	add	r3, sp, #36	; 0x24
 800bef0:	9300      	str	r3, [sp, #0]
 800bef2:	4958      	ldr	r1, [pc, #352]	; (800c054 <_tzset_unlocked_r+0x2f4>)
 800bef4:	9603      	str	r6, [sp, #12]
 800bef6:	4633      	mov	r3, r6
 800bef8:	f10d 0222 	add.w	r2, sp, #34	; 0x22
 800befc:	4620      	mov	r0, r4
 800befe:	f7fe f93d 	bl	800a17c <siscanf>
 800bf02:	2803      	cmp	r0, #3
 800bf04:	f47f af46 	bne.w	800bd94 <_tzset_unlocked_r+0x34>
 800bf08:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800bf0c:	1e4b      	subs	r3, r1, #1
 800bf0e:	2b0b      	cmp	r3, #11
 800bf10:	f63f af40 	bhi.w	800bd94 <_tzset_unlocked_r+0x34>
 800bf14:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800bf18:	1e53      	subs	r3, r2, #1
 800bf1a:	2b04      	cmp	r3, #4
 800bf1c:	f63f af3a 	bhi.w	800bd94 <_tzset_unlocked_r+0x34>
 800bf20:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800bf24:	2b06      	cmp	r3, #6
 800bf26:	f63f af35 	bhi.w	800bd94 <_tzset_unlocked_r+0x34>
 800bf2a:	e9c7 1203 	strd	r1, r2, [r7, #12]
 800bf2e:	f887 8008 	strb.w	r8, [r7, #8]
 800bf32:	617b      	str	r3, [r7, #20]
 800bf34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bf36:	eb04 0803 	add.w	r8, r4, r3
 800bf3a:	2302      	movs	r3, #2
 800bf3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bf40:	2300      	movs	r3, #0
 800bf42:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bf46:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bf4a:	930a      	str	r3, [sp, #40]	; 0x28
 800bf4c:	f898 3000 	ldrb.w	r3, [r8]
 800bf50:	2b2f      	cmp	r3, #47	; 0x2f
 800bf52:	d109      	bne.n	800bf68 <_tzset_unlocked_r+0x208>
 800bf54:	e9cd a602 	strd	sl, r6, [sp, #8]
 800bf58:	e9cd b600 	strd	fp, r6, [sp]
 800bf5c:	493e      	ldr	r1, [pc, #248]	; (800c058 <_tzset_unlocked_r+0x2f8>)
 800bf5e:	4633      	mov	r3, r6
 800bf60:	aa07      	add	r2, sp, #28
 800bf62:	4640      	mov	r0, r8
 800bf64:	f7fe f90a 	bl	800a17c <siscanf>
 800bf68:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800bf6c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bf70:	213c      	movs	r1, #60	; 0x3c
 800bf72:	fb01 3302 	mla	r3, r1, r2, r3
 800bf76:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800bf7a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800bf7e:	fb01 3302 	mla	r3, r1, r2, r3
 800bf82:	61bb      	str	r3, [r7, #24]
 800bf84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bf86:	3728      	adds	r7, #40	; 0x28
 800bf88:	4444      	add	r4, r8
 800bf8a:	f1b9 0f00 	cmp.w	r9, #0
 800bf8e:	d020      	beq.n	800bfd2 <_tzset_unlocked_r+0x272>
 800bf90:	6868      	ldr	r0, [r5, #4]
 800bf92:	f7ff fe29 	bl	800bbe8 <__tzcalc_limits>
 800bf96:	4b28      	ldr	r3, [pc, #160]	; (800c038 <_tzset_unlocked_r+0x2d8>)
 800bf98:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800bf9a:	601a      	str	r2, [r3, #0]
 800bf9c:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 800bf9e:	1a9b      	subs	r3, r3, r2
 800bfa0:	4a27      	ldr	r2, [pc, #156]	; (800c040 <_tzset_unlocked_r+0x2e0>)
 800bfa2:	bf18      	it	ne
 800bfa4:	2301      	movne	r3, #1
 800bfa6:	6013      	str	r3, [r2, #0]
 800bfa8:	e6f4      	b.n	800bd94 <_tzset_unlocked_r+0x34>
 800bfaa:	2b2b      	cmp	r3, #43	; 0x2b
 800bfac:	bf08      	it	eq
 800bfae:	3401      	addeq	r4, #1
 800bfb0:	2701      	movs	r7, #1
 800bfb2:	e772      	b.n	800be9a <_tzset_unlocked_r+0x13a>
 800bfb4:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800bfb8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bfbc:	213c      	movs	r1, #60	; 0x3c
 800bfbe:	fb01 3302 	mla	r3, r1, r2, r3
 800bfc2:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800bfc6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800bfca:	fb01 3302 	mla	r3, r1, r2, r3
 800bfce:	437b      	muls	r3, r7
 800bfd0:	e77a      	b.n	800bec8 <_tzset_unlocked_r+0x168>
 800bfd2:	f04f 0901 	mov.w	r9, #1
 800bfd6:	e77d      	b.n	800bed4 <_tzset_unlocked_r+0x174>
 800bfd8:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
 800bfdc:	bf06      	itte	eq
 800bfde:	3401      	addeq	r4, #1
 800bfe0:	4643      	moveq	r3, r8
 800bfe2:	2344      	movne	r3, #68	; 0x44
 800bfe4:	220a      	movs	r2, #10
 800bfe6:	a90b      	add	r1, sp, #44	; 0x2c
 800bfe8:	4620      	mov	r0, r4
 800bfea:	9305      	str	r3, [sp, #20]
 800bfec:	f7ff fdf2 	bl	800bbd4 <strtoul>
 800bff0:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 800bff4:	9b05      	ldr	r3, [sp, #20]
 800bff6:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
 800bffa:	45a0      	cmp	r8, r4
 800bffc:	d114      	bne.n	800c028 <_tzset_unlocked_r+0x2c8>
 800bffe:	234d      	movs	r3, #77	; 0x4d
 800c000:	f1b9 0f00 	cmp.w	r9, #0
 800c004:	d107      	bne.n	800c016 <_tzset_unlocked_r+0x2b6>
 800c006:	722b      	strb	r3, [r5, #8]
 800c008:	2103      	movs	r1, #3
 800c00a:	2302      	movs	r3, #2
 800c00c:	e9c5 1303 	strd	r1, r3, [r5, #12]
 800c010:	f8c5 9014 	str.w	r9, [r5, #20]
 800c014:	e791      	b.n	800bf3a <_tzset_unlocked_r+0x1da>
 800c016:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
 800c01a:	220b      	movs	r2, #11
 800c01c:	2301      	movs	r3, #1
 800c01e:	e9c5 230d 	strd	r2, r3, [r5, #52]	; 0x34
 800c022:	2300      	movs	r3, #0
 800c024:	63eb      	str	r3, [r5, #60]	; 0x3c
 800c026:	e788      	b.n	800bf3a <_tzset_unlocked_r+0x1da>
 800c028:	b280      	uxth	r0, r0
 800c02a:	723b      	strb	r3, [r7, #8]
 800c02c:	6178      	str	r0, [r7, #20]
 800c02e:	e784      	b.n	800bf3a <_tzset_unlocked_r+0x1da>
 800c030:	080100e0 	.word	0x080100e0
 800c034:	2000034c 	.word	0x2000034c
 800c038:	20000354 	.word	0x20000354
 800c03c:	080100e3 	.word	0x080100e3
 800c040:	20000350 	.word	0x20000350
 800c044:	20000070 	.word	0x20000070
 800c048:	2000033f 	.word	0x2000033f
 800c04c:	080100e7 	.word	0x080100e7
 800c050:	0801010a 	.word	0x0801010a
 800c054:	080100f6 	.word	0x080100f6
 800c058:	08010109 	.word	0x08010109
 800c05c:	20000334 	.word	0x20000334

0800c060 <_write_r>:
 800c060:	b538      	push	{r3, r4, r5, lr}
 800c062:	4d07      	ldr	r5, [pc, #28]	; (800c080 <_write_r+0x20>)
 800c064:	4604      	mov	r4, r0
 800c066:	4608      	mov	r0, r1
 800c068:	4611      	mov	r1, r2
 800c06a:	2200      	movs	r2, #0
 800c06c:	602a      	str	r2, [r5, #0]
 800c06e:	461a      	mov	r2, r3
 800c070:	f003 faac 	bl	800f5cc <_write>
 800c074:	1c43      	adds	r3, r0, #1
 800c076:	d102      	bne.n	800c07e <_write_r+0x1e>
 800c078:	682b      	ldr	r3, [r5, #0]
 800c07a:	b103      	cbz	r3, 800c07e <_write_r+0x1e>
 800c07c:	6023      	str	r3, [r4, #0]
 800c07e:	bd38      	pop	{r3, r4, r5, pc}
 800c080:	20000360 	.word	0x20000360

0800c084 <abs>:
 800c084:	2800      	cmp	r0, #0
 800c086:	bfb8      	it	lt
 800c088:	4240      	neglt	r0, r0
 800c08a:	4770      	bx	lr

0800c08c <__assert_func>:
 800c08c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c08e:	4614      	mov	r4, r2
 800c090:	461a      	mov	r2, r3
 800c092:	4b09      	ldr	r3, [pc, #36]	; (800c0b8 <__assert_func+0x2c>)
 800c094:	681b      	ldr	r3, [r3, #0]
 800c096:	4605      	mov	r5, r0
 800c098:	68d8      	ldr	r0, [r3, #12]
 800c09a:	b14c      	cbz	r4, 800c0b0 <__assert_func+0x24>
 800c09c:	4b07      	ldr	r3, [pc, #28]	; (800c0bc <__assert_func+0x30>)
 800c09e:	9100      	str	r1, [sp, #0]
 800c0a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c0a4:	4906      	ldr	r1, [pc, #24]	; (800c0c0 <__assert_func+0x34>)
 800c0a6:	462b      	mov	r3, r5
 800c0a8:	f000 feac 	bl	800ce04 <fiprintf>
 800c0ac:	f002 ff60 	bl	800ef70 <abort>
 800c0b0:	4b04      	ldr	r3, [pc, #16]	; (800c0c4 <__assert_func+0x38>)
 800c0b2:	461c      	mov	r4, r3
 800c0b4:	e7f3      	b.n	800c09e <__assert_func+0x12>
 800c0b6:	bf00      	nop
 800c0b8:	2000000c 	.word	0x2000000c
 800c0bc:	0801011c 	.word	0x0801011c
 800c0c0:	08010129 	.word	0x08010129
 800c0c4:	08010157 	.word	0x08010157

0800c0c8 <_close_r>:
 800c0c8:	b538      	push	{r3, r4, r5, lr}
 800c0ca:	4d06      	ldr	r5, [pc, #24]	; (800c0e4 <_close_r+0x1c>)
 800c0cc:	2300      	movs	r3, #0
 800c0ce:	4604      	mov	r4, r0
 800c0d0:	4608      	mov	r0, r1
 800c0d2:	602b      	str	r3, [r5, #0]
 800c0d4:	f003 fa34 	bl	800f540 <_close>
 800c0d8:	1c43      	adds	r3, r0, #1
 800c0da:	d102      	bne.n	800c0e2 <_close_r+0x1a>
 800c0dc:	682b      	ldr	r3, [r5, #0]
 800c0de:	b103      	cbz	r3, 800c0e2 <_close_r+0x1a>
 800c0e0:	6023      	str	r3, [r4, #0]
 800c0e2:	bd38      	pop	{r3, r4, r5, pc}
 800c0e4:	20000360 	.word	0x20000360

0800c0e8 <div>:
 800c0e8:	2900      	cmp	r1, #0
 800c0ea:	b510      	push	{r4, lr}
 800c0ec:	fb91 f4f2 	sdiv	r4, r1, r2
 800c0f0:	fb02 1314 	mls	r3, r2, r4, r1
 800c0f4:	db06      	blt.n	800c104 <div+0x1c>
 800c0f6:	2b00      	cmp	r3, #0
 800c0f8:	da01      	bge.n	800c0fe <div+0x16>
 800c0fa:	3401      	adds	r4, #1
 800c0fc:	1a9b      	subs	r3, r3, r2
 800c0fe:	e9c0 4300 	strd	r4, r3, [r0]
 800c102:	bd10      	pop	{r4, pc}
 800c104:	2b00      	cmp	r3, #0
 800c106:	bfc4      	itt	gt
 800c108:	f104 34ff 	addgt.w	r4, r4, #4294967295
 800c10c:	189b      	addgt	r3, r3, r2
 800c10e:	e7f6      	b.n	800c0fe <div+0x16>

0800c110 <quorem>:
 800c110:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c114:	6903      	ldr	r3, [r0, #16]
 800c116:	690c      	ldr	r4, [r1, #16]
 800c118:	42a3      	cmp	r3, r4
 800c11a:	4607      	mov	r7, r0
 800c11c:	f2c0 8081 	blt.w	800c222 <quorem+0x112>
 800c120:	3c01      	subs	r4, #1
 800c122:	f101 0814 	add.w	r8, r1, #20
 800c126:	f100 0514 	add.w	r5, r0, #20
 800c12a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c12e:	9301      	str	r3, [sp, #4]
 800c130:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800c134:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c138:	3301      	adds	r3, #1
 800c13a:	429a      	cmp	r2, r3
 800c13c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800c140:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800c144:	fbb2 f6f3 	udiv	r6, r2, r3
 800c148:	d331      	bcc.n	800c1ae <quorem+0x9e>
 800c14a:	f04f 0e00 	mov.w	lr, #0
 800c14e:	4640      	mov	r0, r8
 800c150:	46ac      	mov	ip, r5
 800c152:	46f2      	mov	sl, lr
 800c154:	f850 2b04 	ldr.w	r2, [r0], #4
 800c158:	b293      	uxth	r3, r2
 800c15a:	fb06 e303 	mla	r3, r6, r3, lr
 800c15e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800c162:	b29b      	uxth	r3, r3
 800c164:	ebaa 0303 	sub.w	r3, sl, r3
 800c168:	f8dc a000 	ldr.w	sl, [ip]
 800c16c:	0c12      	lsrs	r2, r2, #16
 800c16e:	fa13 f38a 	uxtah	r3, r3, sl
 800c172:	fb06 e202 	mla	r2, r6, r2, lr
 800c176:	9300      	str	r3, [sp, #0]
 800c178:	9b00      	ldr	r3, [sp, #0]
 800c17a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800c17e:	b292      	uxth	r2, r2
 800c180:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800c184:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c188:	f8bd 3000 	ldrh.w	r3, [sp]
 800c18c:	4581      	cmp	r9, r0
 800c18e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c192:	f84c 3b04 	str.w	r3, [ip], #4
 800c196:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800c19a:	d2db      	bcs.n	800c154 <quorem+0x44>
 800c19c:	f855 300b 	ldr.w	r3, [r5, fp]
 800c1a0:	b92b      	cbnz	r3, 800c1ae <quorem+0x9e>
 800c1a2:	9b01      	ldr	r3, [sp, #4]
 800c1a4:	3b04      	subs	r3, #4
 800c1a6:	429d      	cmp	r5, r3
 800c1a8:	461a      	mov	r2, r3
 800c1aa:	d32e      	bcc.n	800c20a <quorem+0xfa>
 800c1ac:	613c      	str	r4, [r7, #16]
 800c1ae:	4638      	mov	r0, r7
 800c1b0:	f001 fda8 	bl	800dd04 <__mcmp>
 800c1b4:	2800      	cmp	r0, #0
 800c1b6:	db24      	blt.n	800c202 <quorem+0xf2>
 800c1b8:	3601      	adds	r6, #1
 800c1ba:	4628      	mov	r0, r5
 800c1bc:	f04f 0c00 	mov.w	ip, #0
 800c1c0:	f858 2b04 	ldr.w	r2, [r8], #4
 800c1c4:	f8d0 e000 	ldr.w	lr, [r0]
 800c1c8:	b293      	uxth	r3, r2
 800c1ca:	ebac 0303 	sub.w	r3, ip, r3
 800c1ce:	0c12      	lsrs	r2, r2, #16
 800c1d0:	fa13 f38e 	uxtah	r3, r3, lr
 800c1d4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800c1d8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c1dc:	b29b      	uxth	r3, r3
 800c1de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c1e2:	45c1      	cmp	r9, r8
 800c1e4:	f840 3b04 	str.w	r3, [r0], #4
 800c1e8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800c1ec:	d2e8      	bcs.n	800c1c0 <quorem+0xb0>
 800c1ee:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c1f2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c1f6:	b922      	cbnz	r2, 800c202 <quorem+0xf2>
 800c1f8:	3b04      	subs	r3, #4
 800c1fa:	429d      	cmp	r5, r3
 800c1fc:	461a      	mov	r2, r3
 800c1fe:	d30a      	bcc.n	800c216 <quorem+0x106>
 800c200:	613c      	str	r4, [r7, #16]
 800c202:	4630      	mov	r0, r6
 800c204:	b003      	add	sp, #12
 800c206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c20a:	6812      	ldr	r2, [r2, #0]
 800c20c:	3b04      	subs	r3, #4
 800c20e:	2a00      	cmp	r2, #0
 800c210:	d1cc      	bne.n	800c1ac <quorem+0x9c>
 800c212:	3c01      	subs	r4, #1
 800c214:	e7c7      	b.n	800c1a6 <quorem+0x96>
 800c216:	6812      	ldr	r2, [r2, #0]
 800c218:	3b04      	subs	r3, #4
 800c21a:	2a00      	cmp	r2, #0
 800c21c:	d1f0      	bne.n	800c200 <quorem+0xf0>
 800c21e:	3c01      	subs	r4, #1
 800c220:	e7eb      	b.n	800c1fa <quorem+0xea>
 800c222:	2000      	movs	r0, #0
 800c224:	e7ee      	b.n	800c204 <quorem+0xf4>
	...

0800c228 <_dtoa_r>:
 800c228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c22c:	ed2d 8b04 	vpush	{d8-d9}
 800c230:	ec57 6b10 	vmov	r6, r7, d0
 800c234:	b093      	sub	sp, #76	; 0x4c
 800c236:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800c238:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800c23c:	9106      	str	r1, [sp, #24]
 800c23e:	ee10 aa10 	vmov	sl, s0
 800c242:	4604      	mov	r4, r0
 800c244:	9209      	str	r2, [sp, #36]	; 0x24
 800c246:	930c      	str	r3, [sp, #48]	; 0x30
 800c248:	46bb      	mov	fp, r7
 800c24a:	b975      	cbnz	r5, 800c26a <_dtoa_r+0x42>
 800c24c:	2010      	movs	r0, #16
 800c24e:	f7fc fd39 	bl	8008cc4 <malloc>
 800c252:	4602      	mov	r2, r0
 800c254:	6260      	str	r0, [r4, #36]	; 0x24
 800c256:	b920      	cbnz	r0, 800c262 <_dtoa_r+0x3a>
 800c258:	4ba7      	ldr	r3, [pc, #668]	; (800c4f8 <_dtoa_r+0x2d0>)
 800c25a:	21ea      	movs	r1, #234	; 0xea
 800c25c:	48a7      	ldr	r0, [pc, #668]	; (800c4fc <_dtoa_r+0x2d4>)
 800c25e:	f7ff ff15 	bl	800c08c <__assert_func>
 800c262:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800c266:	6005      	str	r5, [r0, #0]
 800c268:	60c5      	str	r5, [r0, #12]
 800c26a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c26c:	6819      	ldr	r1, [r3, #0]
 800c26e:	b151      	cbz	r1, 800c286 <_dtoa_r+0x5e>
 800c270:	685a      	ldr	r2, [r3, #4]
 800c272:	604a      	str	r2, [r1, #4]
 800c274:	2301      	movs	r3, #1
 800c276:	4093      	lsls	r3, r2
 800c278:	608b      	str	r3, [r1, #8]
 800c27a:	4620      	mov	r0, r4
 800c27c:	f001 fab6 	bl	800d7ec <_Bfree>
 800c280:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c282:	2200      	movs	r2, #0
 800c284:	601a      	str	r2, [r3, #0]
 800c286:	1e3b      	subs	r3, r7, #0
 800c288:	bfaa      	itet	ge
 800c28a:	2300      	movge	r3, #0
 800c28c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800c290:	f8c8 3000 	strge.w	r3, [r8]
 800c294:	4b9a      	ldr	r3, [pc, #616]	; (800c500 <_dtoa_r+0x2d8>)
 800c296:	bfbc      	itt	lt
 800c298:	2201      	movlt	r2, #1
 800c29a:	f8c8 2000 	strlt.w	r2, [r8]
 800c29e:	ea33 030b 	bics.w	r3, r3, fp
 800c2a2:	d11b      	bne.n	800c2dc <_dtoa_r+0xb4>
 800c2a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c2a6:	f242 730f 	movw	r3, #9999	; 0x270f
 800c2aa:	6013      	str	r3, [r2, #0]
 800c2ac:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c2b0:	4333      	orrs	r3, r6
 800c2b2:	f000 8592 	beq.w	800cdda <_dtoa_r+0xbb2>
 800c2b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c2b8:	b963      	cbnz	r3, 800c2d4 <_dtoa_r+0xac>
 800c2ba:	4b92      	ldr	r3, [pc, #584]	; (800c504 <_dtoa_r+0x2dc>)
 800c2bc:	e022      	b.n	800c304 <_dtoa_r+0xdc>
 800c2be:	4b92      	ldr	r3, [pc, #584]	; (800c508 <_dtoa_r+0x2e0>)
 800c2c0:	9301      	str	r3, [sp, #4]
 800c2c2:	3308      	adds	r3, #8
 800c2c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c2c6:	6013      	str	r3, [r2, #0]
 800c2c8:	9801      	ldr	r0, [sp, #4]
 800c2ca:	b013      	add	sp, #76	; 0x4c
 800c2cc:	ecbd 8b04 	vpop	{d8-d9}
 800c2d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2d4:	4b8b      	ldr	r3, [pc, #556]	; (800c504 <_dtoa_r+0x2dc>)
 800c2d6:	9301      	str	r3, [sp, #4]
 800c2d8:	3303      	adds	r3, #3
 800c2da:	e7f3      	b.n	800c2c4 <_dtoa_r+0x9c>
 800c2dc:	2200      	movs	r2, #0
 800c2de:	2300      	movs	r3, #0
 800c2e0:	4650      	mov	r0, sl
 800c2e2:	4659      	mov	r1, fp
 800c2e4:	f7f4 fc08 	bl	8000af8 <__aeabi_dcmpeq>
 800c2e8:	ec4b ab19 	vmov	d9, sl, fp
 800c2ec:	4680      	mov	r8, r0
 800c2ee:	b158      	cbz	r0, 800c308 <_dtoa_r+0xe0>
 800c2f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c2f2:	2301      	movs	r3, #1
 800c2f4:	6013      	str	r3, [r2, #0]
 800c2f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c2f8:	2b00      	cmp	r3, #0
 800c2fa:	f000 856b 	beq.w	800cdd4 <_dtoa_r+0xbac>
 800c2fe:	4883      	ldr	r0, [pc, #524]	; (800c50c <_dtoa_r+0x2e4>)
 800c300:	6018      	str	r0, [r3, #0]
 800c302:	1e43      	subs	r3, r0, #1
 800c304:	9301      	str	r3, [sp, #4]
 800c306:	e7df      	b.n	800c2c8 <_dtoa_r+0xa0>
 800c308:	ec4b ab10 	vmov	d0, sl, fp
 800c30c:	aa10      	add	r2, sp, #64	; 0x40
 800c30e:	a911      	add	r1, sp, #68	; 0x44
 800c310:	4620      	mov	r0, r4
 800c312:	f001 fe19 	bl	800df48 <__d2b>
 800c316:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800c31a:	ee08 0a10 	vmov	s16, r0
 800c31e:	2d00      	cmp	r5, #0
 800c320:	f000 8084 	beq.w	800c42c <_dtoa_r+0x204>
 800c324:	ee19 3a90 	vmov	r3, s19
 800c328:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c32c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800c330:	4656      	mov	r6, sl
 800c332:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800c336:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800c33a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800c33e:	4b74      	ldr	r3, [pc, #464]	; (800c510 <_dtoa_r+0x2e8>)
 800c340:	2200      	movs	r2, #0
 800c342:	4630      	mov	r0, r6
 800c344:	4639      	mov	r1, r7
 800c346:	f7f3 ffb7 	bl	80002b8 <__aeabi_dsub>
 800c34a:	a365      	add	r3, pc, #404	; (adr r3, 800c4e0 <_dtoa_r+0x2b8>)
 800c34c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c350:	f7f4 f96a 	bl	8000628 <__aeabi_dmul>
 800c354:	a364      	add	r3, pc, #400	; (adr r3, 800c4e8 <_dtoa_r+0x2c0>)
 800c356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c35a:	f7f3 ffaf 	bl	80002bc <__adddf3>
 800c35e:	4606      	mov	r6, r0
 800c360:	4628      	mov	r0, r5
 800c362:	460f      	mov	r7, r1
 800c364:	f7f4 f8f6 	bl	8000554 <__aeabi_i2d>
 800c368:	a361      	add	r3, pc, #388	; (adr r3, 800c4f0 <_dtoa_r+0x2c8>)
 800c36a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c36e:	f7f4 f95b 	bl	8000628 <__aeabi_dmul>
 800c372:	4602      	mov	r2, r0
 800c374:	460b      	mov	r3, r1
 800c376:	4630      	mov	r0, r6
 800c378:	4639      	mov	r1, r7
 800c37a:	f7f3 ff9f 	bl	80002bc <__adddf3>
 800c37e:	4606      	mov	r6, r0
 800c380:	460f      	mov	r7, r1
 800c382:	f7f4 fc01 	bl	8000b88 <__aeabi_d2iz>
 800c386:	2200      	movs	r2, #0
 800c388:	9000      	str	r0, [sp, #0]
 800c38a:	2300      	movs	r3, #0
 800c38c:	4630      	mov	r0, r6
 800c38e:	4639      	mov	r1, r7
 800c390:	f7f4 fbbc 	bl	8000b0c <__aeabi_dcmplt>
 800c394:	b150      	cbz	r0, 800c3ac <_dtoa_r+0x184>
 800c396:	9800      	ldr	r0, [sp, #0]
 800c398:	f7f4 f8dc 	bl	8000554 <__aeabi_i2d>
 800c39c:	4632      	mov	r2, r6
 800c39e:	463b      	mov	r3, r7
 800c3a0:	f7f4 fbaa 	bl	8000af8 <__aeabi_dcmpeq>
 800c3a4:	b910      	cbnz	r0, 800c3ac <_dtoa_r+0x184>
 800c3a6:	9b00      	ldr	r3, [sp, #0]
 800c3a8:	3b01      	subs	r3, #1
 800c3aa:	9300      	str	r3, [sp, #0]
 800c3ac:	9b00      	ldr	r3, [sp, #0]
 800c3ae:	2b16      	cmp	r3, #22
 800c3b0:	d85a      	bhi.n	800c468 <_dtoa_r+0x240>
 800c3b2:	9a00      	ldr	r2, [sp, #0]
 800c3b4:	4b57      	ldr	r3, [pc, #348]	; (800c514 <_dtoa_r+0x2ec>)
 800c3b6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c3ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c3be:	ec51 0b19 	vmov	r0, r1, d9
 800c3c2:	f7f4 fba3 	bl	8000b0c <__aeabi_dcmplt>
 800c3c6:	2800      	cmp	r0, #0
 800c3c8:	d050      	beq.n	800c46c <_dtoa_r+0x244>
 800c3ca:	9b00      	ldr	r3, [sp, #0]
 800c3cc:	3b01      	subs	r3, #1
 800c3ce:	9300      	str	r3, [sp, #0]
 800c3d0:	2300      	movs	r3, #0
 800c3d2:	930b      	str	r3, [sp, #44]	; 0x2c
 800c3d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c3d6:	1b5d      	subs	r5, r3, r5
 800c3d8:	1e6b      	subs	r3, r5, #1
 800c3da:	9305      	str	r3, [sp, #20]
 800c3dc:	bf45      	ittet	mi
 800c3de:	f1c5 0301 	rsbmi	r3, r5, #1
 800c3e2:	9304      	strmi	r3, [sp, #16]
 800c3e4:	2300      	movpl	r3, #0
 800c3e6:	2300      	movmi	r3, #0
 800c3e8:	bf4c      	ite	mi
 800c3ea:	9305      	strmi	r3, [sp, #20]
 800c3ec:	9304      	strpl	r3, [sp, #16]
 800c3ee:	9b00      	ldr	r3, [sp, #0]
 800c3f0:	2b00      	cmp	r3, #0
 800c3f2:	db3d      	blt.n	800c470 <_dtoa_r+0x248>
 800c3f4:	9b05      	ldr	r3, [sp, #20]
 800c3f6:	9a00      	ldr	r2, [sp, #0]
 800c3f8:	920a      	str	r2, [sp, #40]	; 0x28
 800c3fa:	4413      	add	r3, r2
 800c3fc:	9305      	str	r3, [sp, #20]
 800c3fe:	2300      	movs	r3, #0
 800c400:	9307      	str	r3, [sp, #28]
 800c402:	9b06      	ldr	r3, [sp, #24]
 800c404:	2b09      	cmp	r3, #9
 800c406:	f200 8089 	bhi.w	800c51c <_dtoa_r+0x2f4>
 800c40a:	2b05      	cmp	r3, #5
 800c40c:	bfc4      	itt	gt
 800c40e:	3b04      	subgt	r3, #4
 800c410:	9306      	strgt	r3, [sp, #24]
 800c412:	9b06      	ldr	r3, [sp, #24]
 800c414:	f1a3 0302 	sub.w	r3, r3, #2
 800c418:	bfcc      	ite	gt
 800c41a:	2500      	movgt	r5, #0
 800c41c:	2501      	movle	r5, #1
 800c41e:	2b03      	cmp	r3, #3
 800c420:	f200 8087 	bhi.w	800c532 <_dtoa_r+0x30a>
 800c424:	e8df f003 	tbb	[pc, r3]
 800c428:	59383a2d 	.word	0x59383a2d
 800c42c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800c430:	441d      	add	r5, r3
 800c432:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800c436:	2b20      	cmp	r3, #32
 800c438:	bfc1      	itttt	gt
 800c43a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800c43e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800c442:	fa0b f303 	lslgt.w	r3, fp, r3
 800c446:	fa26 f000 	lsrgt.w	r0, r6, r0
 800c44a:	bfda      	itte	le
 800c44c:	f1c3 0320 	rsble	r3, r3, #32
 800c450:	fa06 f003 	lslle.w	r0, r6, r3
 800c454:	4318      	orrgt	r0, r3
 800c456:	f7f4 f86d 	bl	8000534 <__aeabi_ui2d>
 800c45a:	2301      	movs	r3, #1
 800c45c:	4606      	mov	r6, r0
 800c45e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800c462:	3d01      	subs	r5, #1
 800c464:	930e      	str	r3, [sp, #56]	; 0x38
 800c466:	e76a      	b.n	800c33e <_dtoa_r+0x116>
 800c468:	2301      	movs	r3, #1
 800c46a:	e7b2      	b.n	800c3d2 <_dtoa_r+0x1aa>
 800c46c:	900b      	str	r0, [sp, #44]	; 0x2c
 800c46e:	e7b1      	b.n	800c3d4 <_dtoa_r+0x1ac>
 800c470:	9b04      	ldr	r3, [sp, #16]
 800c472:	9a00      	ldr	r2, [sp, #0]
 800c474:	1a9b      	subs	r3, r3, r2
 800c476:	9304      	str	r3, [sp, #16]
 800c478:	4253      	negs	r3, r2
 800c47a:	9307      	str	r3, [sp, #28]
 800c47c:	2300      	movs	r3, #0
 800c47e:	930a      	str	r3, [sp, #40]	; 0x28
 800c480:	e7bf      	b.n	800c402 <_dtoa_r+0x1da>
 800c482:	2300      	movs	r3, #0
 800c484:	9308      	str	r3, [sp, #32]
 800c486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c488:	2b00      	cmp	r3, #0
 800c48a:	dc55      	bgt.n	800c538 <_dtoa_r+0x310>
 800c48c:	2301      	movs	r3, #1
 800c48e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c492:	461a      	mov	r2, r3
 800c494:	9209      	str	r2, [sp, #36]	; 0x24
 800c496:	e00c      	b.n	800c4b2 <_dtoa_r+0x28a>
 800c498:	2301      	movs	r3, #1
 800c49a:	e7f3      	b.n	800c484 <_dtoa_r+0x25c>
 800c49c:	2300      	movs	r3, #0
 800c49e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c4a0:	9308      	str	r3, [sp, #32]
 800c4a2:	9b00      	ldr	r3, [sp, #0]
 800c4a4:	4413      	add	r3, r2
 800c4a6:	9302      	str	r3, [sp, #8]
 800c4a8:	3301      	adds	r3, #1
 800c4aa:	2b01      	cmp	r3, #1
 800c4ac:	9303      	str	r3, [sp, #12]
 800c4ae:	bfb8      	it	lt
 800c4b0:	2301      	movlt	r3, #1
 800c4b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800c4b4:	2200      	movs	r2, #0
 800c4b6:	6042      	str	r2, [r0, #4]
 800c4b8:	2204      	movs	r2, #4
 800c4ba:	f102 0614 	add.w	r6, r2, #20
 800c4be:	429e      	cmp	r6, r3
 800c4c0:	6841      	ldr	r1, [r0, #4]
 800c4c2:	d93d      	bls.n	800c540 <_dtoa_r+0x318>
 800c4c4:	4620      	mov	r0, r4
 800c4c6:	f001 f951 	bl	800d76c <_Balloc>
 800c4ca:	9001      	str	r0, [sp, #4]
 800c4cc:	2800      	cmp	r0, #0
 800c4ce:	d13b      	bne.n	800c548 <_dtoa_r+0x320>
 800c4d0:	4b11      	ldr	r3, [pc, #68]	; (800c518 <_dtoa_r+0x2f0>)
 800c4d2:	4602      	mov	r2, r0
 800c4d4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800c4d8:	e6c0      	b.n	800c25c <_dtoa_r+0x34>
 800c4da:	2301      	movs	r3, #1
 800c4dc:	e7df      	b.n	800c49e <_dtoa_r+0x276>
 800c4de:	bf00      	nop
 800c4e0:	636f4361 	.word	0x636f4361
 800c4e4:	3fd287a7 	.word	0x3fd287a7
 800c4e8:	8b60c8b3 	.word	0x8b60c8b3
 800c4ec:	3fc68a28 	.word	0x3fc68a28
 800c4f0:	509f79fb 	.word	0x509f79fb
 800c4f4:	3fd34413 	.word	0x3fd34413
 800c4f8:	0800fca4 	.word	0x0800fca4
 800c4fc:	08010266 	.word	0x08010266
 800c500:	7ff00000 	.word	0x7ff00000
 800c504:	08010262 	.word	0x08010262
 800c508:	08010259 	.word	0x08010259
 800c50c:	080104ba 	.word	0x080104ba
 800c510:	3ff80000 	.word	0x3ff80000
 800c514:	080103d0 	.word	0x080103d0
 800c518:	080102c1 	.word	0x080102c1
 800c51c:	2501      	movs	r5, #1
 800c51e:	2300      	movs	r3, #0
 800c520:	9306      	str	r3, [sp, #24]
 800c522:	9508      	str	r5, [sp, #32]
 800c524:	f04f 33ff 	mov.w	r3, #4294967295
 800c528:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c52c:	2200      	movs	r2, #0
 800c52e:	2312      	movs	r3, #18
 800c530:	e7b0      	b.n	800c494 <_dtoa_r+0x26c>
 800c532:	2301      	movs	r3, #1
 800c534:	9308      	str	r3, [sp, #32]
 800c536:	e7f5      	b.n	800c524 <_dtoa_r+0x2fc>
 800c538:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c53a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c53e:	e7b8      	b.n	800c4b2 <_dtoa_r+0x28a>
 800c540:	3101      	adds	r1, #1
 800c542:	6041      	str	r1, [r0, #4]
 800c544:	0052      	lsls	r2, r2, #1
 800c546:	e7b8      	b.n	800c4ba <_dtoa_r+0x292>
 800c548:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c54a:	9a01      	ldr	r2, [sp, #4]
 800c54c:	601a      	str	r2, [r3, #0]
 800c54e:	9b03      	ldr	r3, [sp, #12]
 800c550:	2b0e      	cmp	r3, #14
 800c552:	f200 809d 	bhi.w	800c690 <_dtoa_r+0x468>
 800c556:	2d00      	cmp	r5, #0
 800c558:	f000 809a 	beq.w	800c690 <_dtoa_r+0x468>
 800c55c:	9b00      	ldr	r3, [sp, #0]
 800c55e:	2b00      	cmp	r3, #0
 800c560:	dd32      	ble.n	800c5c8 <_dtoa_r+0x3a0>
 800c562:	4ab7      	ldr	r2, [pc, #732]	; (800c840 <_dtoa_r+0x618>)
 800c564:	f003 030f 	and.w	r3, r3, #15
 800c568:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800c56c:	e9d3 8900 	ldrd	r8, r9, [r3]
 800c570:	9b00      	ldr	r3, [sp, #0]
 800c572:	05d8      	lsls	r0, r3, #23
 800c574:	ea4f 1723 	mov.w	r7, r3, asr #4
 800c578:	d516      	bpl.n	800c5a8 <_dtoa_r+0x380>
 800c57a:	4bb2      	ldr	r3, [pc, #712]	; (800c844 <_dtoa_r+0x61c>)
 800c57c:	ec51 0b19 	vmov	r0, r1, d9
 800c580:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800c584:	f7f4 f97a 	bl	800087c <__aeabi_ddiv>
 800c588:	f007 070f 	and.w	r7, r7, #15
 800c58c:	4682      	mov	sl, r0
 800c58e:	468b      	mov	fp, r1
 800c590:	2503      	movs	r5, #3
 800c592:	4eac      	ldr	r6, [pc, #688]	; (800c844 <_dtoa_r+0x61c>)
 800c594:	b957      	cbnz	r7, 800c5ac <_dtoa_r+0x384>
 800c596:	4642      	mov	r2, r8
 800c598:	464b      	mov	r3, r9
 800c59a:	4650      	mov	r0, sl
 800c59c:	4659      	mov	r1, fp
 800c59e:	f7f4 f96d 	bl	800087c <__aeabi_ddiv>
 800c5a2:	4682      	mov	sl, r0
 800c5a4:	468b      	mov	fp, r1
 800c5a6:	e028      	b.n	800c5fa <_dtoa_r+0x3d2>
 800c5a8:	2502      	movs	r5, #2
 800c5aa:	e7f2      	b.n	800c592 <_dtoa_r+0x36a>
 800c5ac:	07f9      	lsls	r1, r7, #31
 800c5ae:	d508      	bpl.n	800c5c2 <_dtoa_r+0x39a>
 800c5b0:	4640      	mov	r0, r8
 800c5b2:	4649      	mov	r1, r9
 800c5b4:	e9d6 2300 	ldrd	r2, r3, [r6]
 800c5b8:	f7f4 f836 	bl	8000628 <__aeabi_dmul>
 800c5bc:	3501      	adds	r5, #1
 800c5be:	4680      	mov	r8, r0
 800c5c0:	4689      	mov	r9, r1
 800c5c2:	107f      	asrs	r7, r7, #1
 800c5c4:	3608      	adds	r6, #8
 800c5c6:	e7e5      	b.n	800c594 <_dtoa_r+0x36c>
 800c5c8:	f000 809b 	beq.w	800c702 <_dtoa_r+0x4da>
 800c5cc:	9b00      	ldr	r3, [sp, #0]
 800c5ce:	4f9d      	ldr	r7, [pc, #628]	; (800c844 <_dtoa_r+0x61c>)
 800c5d0:	425e      	negs	r6, r3
 800c5d2:	4b9b      	ldr	r3, [pc, #620]	; (800c840 <_dtoa_r+0x618>)
 800c5d4:	f006 020f 	and.w	r2, r6, #15
 800c5d8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c5dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c5e0:	ec51 0b19 	vmov	r0, r1, d9
 800c5e4:	f7f4 f820 	bl	8000628 <__aeabi_dmul>
 800c5e8:	1136      	asrs	r6, r6, #4
 800c5ea:	4682      	mov	sl, r0
 800c5ec:	468b      	mov	fp, r1
 800c5ee:	2300      	movs	r3, #0
 800c5f0:	2502      	movs	r5, #2
 800c5f2:	2e00      	cmp	r6, #0
 800c5f4:	d17a      	bne.n	800c6ec <_dtoa_r+0x4c4>
 800c5f6:	2b00      	cmp	r3, #0
 800c5f8:	d1d3      	bne.n	800c5a2 <_dtoa_r+0x37a>
 800c5fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c5fc:	2b00      	cmp	r3, #0
 800c5fe:	f000 8082 	beq.w	800c706 <_dtoa_r+0x4de>
 800c602:	4b91      	ldr	r3, [pc, #580]	; (800c848 <_dtoa_r+0x620>)
 800c604:	2200      	movs	r2, #0
 800c606:	4650      	mov	r0, sl
 800c608:	4659      	mov	r1, fp
 800c60a:	f7f4 fa7f 	bl	8000b0c <__aeabi_dcmplt>
 800c60e:	2800      	cmp	r0, #0
 800c610:	d079      	beq.n	800c706 <_dtoa_r+0x4de>
 800c612:	9b03      	ldr	r3, [sp, #12]
 800c614:	2b00      	cmp	r3, #0
 800c616:	d076      	beq.n	800c706 <_dtoa_r+0x4de>
 800c618:	9b02      	ldr	r3, [sp, #8]
 800c61a:	2b00      	cmp	r3, #0
 800c61c:	dd36      	ble.n	800c68c <_dtoa_r+0x464>
 800c61e:	9b00      	ldr	r3, [sp, #0]
 800c620:	4650      	mov	r0, sl
 800c622:	4659      	mov	r1, fp
 800c624:	1e5f      	subs	r7, r3, #1
 800c626:	2200      	movs	r2, #0
 800c628:	4b88      	ldr	r3, [pc, #544]	; (800c84c <_dtoa_r+0x624>)
 800c62a:	f7f3 fffd 	bl	8000628 <__aeabi_dmul>
 800c62e:	9e02      	ldr	r6, [sp, #8]
 800c630:	4682      	mov	sl, r0
 800c632:	468b      	mov	fp, r1
 800c634:	3501      	adds	r5, #1
 800c636:	4628      	mov	r0, r5
 800c638:	f7f3 ff8c 	bl	8000554 <__aeabi_i2d>
 800c63c:	4652      	mov	r2, sl
 800c63e:	465b      	mov	r3, fp
 800c640:	f7f3 fff2 	bl	8000628 <__aeabi_dmul>
 800c644:	4b82      	ldr	r3, [pc, #520]	; (800c850 <_dtoa_r+0x628>)
 800c646:	2200      	movs	r2, #0
 800c648:	f7f3 fe38 	bl	80002bc <__adddf3>
 800c64c:	46d0      	mov	r8, sl
 800c64e:	46d9      	mov	r9, fp
 800c650:	4682      	mov	sl, r0
 800c652:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800c656:	2e00      	cmp	r6, #0
 800c658:	d158      	bne.n	800c70c <_dtoa_r+0x4e4>
 800c65a:	4b7e      	ldr	r3, [pc, #504]	; (800c854 <_dtoa_r+0x62c>)
 800c65c:	2200      	movs	r2, #0
 800c65e:	4640      	mov	r0, r8
 800c660:	4649      	mov	r1, r9
 800c662:	f7f3 fe29 	bl	80002b8 <__aeabi_dsub>
 800c666:	4652      	mov	r2, sl
 800c668:	465b      	mov	r3, fp
 800c66a:	4680      	mov	r8, r0
 800c66c:	4689      	mov	r9, r1
 800c66e:	f7f4 fa6b 	bl	8000b48 <__aeabi_dcmpgt>
 800c672:	2800      	cmp	r0, #0
 800c674:	f040 8295 	bne.w	800cba2 <_dtoa_r+0x97a>
 800c678:	4652      	mov	r2, sl
 800c67a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800c67e:	4640      	mov	r0, r8
 800c680:	4649      	mov	r1, r9
 800c682:	f7f4 fa43 	bl	8000b0c <__aeabi_dcmplt>
 800c686:	2800      	cmp	r0, #0
 800c688:	f040 8289 	bne.w	800cb9e <_dtoa_r+0x976>
 800c68c:	ec5b ab19 	vmov	sl, fp, d9
 800c690:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c692:	2b00      	cmp	r3, #0
 800c694:	f2c0 8148 	blt.w	800c928 <_dtoa_r+0x700>
 800c698:	9a00      	ldr	r2, [sp, #0]
 800c69a:	2a0e      	cmp	r2, #14
 800c69c:	f300 8144 	bgt.w	800c928 <_dtoa_r+0x700>
 800c6a0:	4b67      	ldr	r3, [pc, #412]	; (800c840 <_dtoa_r+0x618>)
 800c6a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c6a6:	e9d3 8900 	ldrd	r8, r9, [r3]
 800c6aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c6ac:	2b00      	cmp	r3, #0
 800c6ae:	f280 80d5 	bge.w	800c85c <_dtoa_r+0x634>
 800c6b2:	9b03      	ldr	r3, [sp, #12]
 800c6b4:	2b00      	cmp	r3, #0
 800c6b6:	f300 80d1 	bgt.w	800c85c <_dtoa_r+0x634>
 800c6ba:	f040 826f 	bne.w	800cb9c <_dtoa_r+0x974>
 800c6be:	4b65      	ldr	r3, [pc, #404]	; (800c854 <_dtoa_r+0x62c>)
 800c6c0:	2200      	movs	r2, #0
 800c6c2:	4640      	mov	r0, r8
 800c6c4:	4649      	mov	r1, r9
 800c6c6:	f7f3 ffaf 	bl	8000628 <__aeabi_dmul>
 800c6ca:	4652      	mov	r2, sl
 800c6cc:	465b      	mov	r3, fp
 800c6ce:	f7f4 fa31 	bl	8000b34 <__aeabi_dcmpge>
 800c6d2:	9e03      	ldr	r6, [sp, #12]
 800c6d4:	4637      	mov	r7, r6
 800c6d6:	2800      	cmp	r0, #0
 800c6d8:	f040 8245 	bne.w	800cb66 <_dtoa_r+0x93e>
 800c6dc:	9d01      	ldr	r5, [sp, #4]
 800c6de:	2331      	movs	r3, #49	; 0x31
 800c6e0:	f805 3b01 	strb.w	r3, [r5], #1
 800c6e4:	9b00      	ldr	r3, [sp, #0]
 800c6e6:	3301      	adds	r3, #1
 800c6e8:	9300      	str	r3, [sp, #0]
 800c6ea:	e240      	b.n	800cb6e <_dtoa_r+0x946>
 800c6ec:	07f2      	lsls	r2, r6, #31
 800c6ee:	d505      	bpl.n	800c6fc <_dtoa_r+0x4d4>
 800c6f0:	e9d7 2300 	ldrd	r2, r3, [r7]
 800c6f4:	f7f3 ff98 	bl	8000628 <__aeabi_dmul>
 800c6f8:	3501      	adds	r5, #1
 800c6fa:	2301      	movs	r3, #1
 800c6fc:	1076      	asrs	r6, r6, #1
 800c6fe:	3708      	adds	r7, #8
 800c700:	e777      	b.n	800c5f2 <_dtoa_r+0x3ca>
 800c702:	2502      	movs	r5, #2
 800c704:	e779      	b.n	800c5fa <_dtoa_r+0x3d2>
 800c706:	9f00      	ldr	r7, [sp, #0]
 800c708:	9e03      	ldr	r6, [sp, #12]
 800c70a:	e794      	b.n	800c636 <_dtoa_r+0x40e>
 800c70c:	9901      	ldr	r1, [sp, #4]
 800c70e:	4b4c      	ldr	r3, [pc, #304]	; (800c840 <_dtoa_r+0x618>)
 800c710:	4431      	add	r1, r6
 800c712:	910d      	str	r1, [sp, #52]	; 0x34
 800c714:	9908      	ldr	r1, [sp, #32]
 800c716:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800c71a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800c71e:	2900      	cmp	r1, #0
 800c720:	d043      	beq.n	800c7aa <_dtoa_r+0x582>
 800c722:	494d      	ldr	r1, [pc, #308]	; (800c858 <_dtoa_r+0x630>)
 800c724:	2000      	movs	r0, #0
 800c726:	f7f4 f8a9 	bl	800087c <__aeabi_ddiv>
 800c72a:	4652      	mov	r2, sl
 800c72c:	465b      	mov	r3, fp
 800c72e:	f7f3 fdc3 	bl	80002b8 <__aeabi_dsub>
 800c732:	9d01      	ldr	r5, [sp, #4]
 800c734:	4682      	mov	sl, r0
 800c736:	468b      	mov	fp, r1
 800c738:	4649      	mov	r1, r9
 800c73a:	4640      	mov	r0, r8
 800c73c:	f7f4 fa24 	bl	8000b88 <__aeabi_d2iz>
 800c740:	4606      	mov	r6, r0
 800c742:	f7f3 ff07 	bl	8000554 <__aeabi_i2d>
 800c746:	4602      	mov	r2, r0
 800c748:	460b      	mov	r3, r1
 800c74a:	4640      	mov	r0, r8
 800c74c:	4649      	mov	r1, r9
 800c74e:	f7f3 fdb3 	bl	80002b8 <__aeabi_dsub>
 800c752:	3630      	adds	r6, #48	; 0x30
 800c754:	f805 6b01 	strb.w	r6, [r5], #1
 800c758:	4652      	mov	r2, sl
 800c75a:	465b      	mov	r3, fp
 800c75c:	4680      	mov	r8, r0
 800c75e:	4689      	mov	r9, r1
 800c760:	f7f4 f9d4 	bl	8000b0c <__aeabi_dcmplt>
 800c764:	2800      	cmp	r0, #0
 800c766:	d163      	bne.n	800c830 <_dtoa_r+0x608>
 800c768:	4642      	mov	r2, r8
 800c76a:	464b      	mov	r3, r9
 800c76c:	4936      	ldr	r1, [pc, #216]	; (800c848 <_dtoa_r+0x620>)
 800c76e:	2000      	movs	r0, #0
 800c770:	f7f3 fda2 	bl	80002b8 <__aeabi_dsub>
 800c774:	4652      	mov	r2, sl
 800c776:	465b      	mov	r3, fp
 800c778:	f7f4 f9c8 	bl	8000b0c <__aeabi_dcmplt>
 800c77c:	2800      	cmp	r0, #0
 800c77e:	f040 80b5 	bne.w	800c8ec <_dtoa_r+0x6c4>
 800c782:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c784:	429d      	cmp	r5, r3
 800c786:	d081      	beq.n	800c68c <_dtoa_r+0x464>
 800c788:	4b30      	ldr	r3, [pc, #192]	; (800c84c <_dtoa_r+0x624>)
 800c78a:	2200      	movs	r2, #0
 800c78c:	4650      	mov	r0, sl
 800c78e:	4659      	mov	r1, fp
 800c790:	f7f3 ff4a 	bl	8000628 <__aeabi_dmul>
 800c794:	4b2d      	ldr	r3, [pc, #180]	; (800c84c <_dtoa_r+0x624>)
 800c796:	4682      	mov	sl, r0
 800c798:	468b      	mov	fp, r1
 800c79a:	4640      	mov	r0, r8
 800c79c:	4649      	mov	r1, r9
 800c79e:	2200      	movs	r2, #0
 800c7a0:	f7f3 ff42 	bl	8000628 <__aeabi_dmul>
 800c7a4:	4680      	mov	r8, r0
 800c7a6:	4689      	mov	r9, r1
 800c7a8:	e7c6      	b.n	800c738 <_dtoa_r+0x510>
 800c7aa:	4650      	mov	r0, sl
 800c7ac:	4659      	mov	r1, fp
 800c7ae:	f7f3 ff3b 	bl	8000628 <__aeabi_dmul>
 800c7b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c7b4:	9d01      	ldr	r5, [sp, #4]
 800c7b6:	930f      	str	r3, [sp, #60]	; 0x3c
 800c7b8:	4682      	mov	sl, r0
 800c7ba:	468b      	mov	fp, r1
 800c7bc:	4649      	mov	r1, r9
 800c7be:	4640      	mov	r0, r8
 800c7c0:	f7f4 f9e2 	bl	8000b88 <__aeabi_d2iz>
 800c7c4:	4606      	mov	r6, r0
 800c7c6:	f7f3 fec5 	bl	8000554 <__aeabi_i2d>
 800c7ca:	3630      	adds	r6, #48	; 0x30
 800c7cc:	4602      	mov	r2, r0
 800c7ce:	460b      	mov	r3, r1
 800c7d0:	4640      	mov	r0, r8
 800c7d2:	4649      	mov	r1, r9
 800c7d4:	f7f3 fd70 	bl	80002b8 <__aeabi_dsub>
 800c7d8:	f805 6b01 	strb.w	r6, [r5], #1
 800c7dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c7de:	429d      	cmp	r5, r3
 800c7e0:	4680      	mov	r8, r0
 800c7e2:	4689      	mov	r9, r1
 800c7e4:	f04f 0200 	mov.w	r2, #0
 800c7e8:	d124      	bne.n	800c834 <_dtoa_r+0x60c>
 800c7ea:	4b1b      	ldr	r3, [pc, #108]	; (800c858 <_dtoa_r+0x630>)
 800c7ec:	4650      	mov	r0, sl
 800c7ee:	4659      	mov	r1, fp
 800c7f0:	f7f3 fd64 	bl	80002bc <__adddf3>
 800c7f4:	4602      	mov	r2, r0
 800c7f6:	460b      	mov	r3, r1
 800c7f8:	4640      	mov	r0, r8
 800c7fa:	4649      	mov	r1, r9
 800c7fc:	f7f4 f9a4 	bl	8000b48 <__aeabi_dcmpgt>
 800c800:	2800      	cmp	r0, #0
 800c802:	d173      	bne.n	800c8ec <_dtoa_r+0x6c4>
 800c804:	4652      	mov	r2, sl
 800c806:	465b      	mov	r3, fp
 800c808:	4913      	ldr	r1, [pc, #76]	; (800c858 <_dtoa_r+0x630>)
 800c80a:	2000      	movs	r0, #0
 800c80c:	f7f3 fd54 	bl	80002b8 <__aeabi_dsub>
 800c810:	4602      	mov	r2, r0
 800c812:	460b      	mov	r3, r1
 800c814:	4640      	mov	r0, r8
 800c816:	4649      	mov	r1, r9
 800c818:	f7f4 f978 	bl	8000b0c <__aeabi_dcmplt>
 800c81c:	2800      	cmp	r0, #0
 800c81e:	f43f af35 	beq.w	800c68c <_dtoa_r+0x464>
 800c822:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800c824:	1e6b      	subs	r3, r5, #1
 800c826:	930f      	str	r3, [sp, #60]	; 0x3c
 800c828:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800c82c:	2b30      	cmp	r3, #48	; 0x30
 800c82e:	d0f8      	beq.n	800c822 <_dtoa_r+0x5fa>
 800c830:	9700      	str	r7, [sp, #0]
 800c832:	e049      	b.n	800c8c8 <_dtoa_r+0x6a0>
 800c834:	4b05      	ldr	r3, [pc, #20]	; (800c84c <_dtoa_r+0x624>)
 800c836:	f7f3 fef7 	bl	8000628 <__aeabi_dmul>
 800c83a:	4680      	mov	r8, r0
 800c83c:	4689      	mov	r9, r1
 800c83e:	e7bd      	b.n	800c7bc <_dtoa_r+0x594>
 800c840:	080103d0 	.word	0x080103d0
 800c844:	080103a8 	.word	0x080103a8
 800c848:	3ff00000 	.word	0x3ff00000
 800c84c:	40240000 	.word	0x40240000
 800c850:	401c0000 	.word	0x401c0000
 800c854:	40140000 	.word	0x40140000
 800c858:	3fe00000 	.word	0x3fe00000
 800c85c:	9d01      	ldr	r5, [sp, #4]
 800c85e:	4656      	mov	r6, sl
 800c860:	465f      	mov	r7, fp
 800c862:	4642      	mov	r2, r8
 800c864:	464b      	mov	r3, r9
 800c866:	4630      	mov	r0, r6
 800c868:	4639      	mov	r1, r7
 800c86a:	f7f4 f807 	bl	800087c <__aeabi_ddiv>
 800c86e:	f7f4 f98b 	bl	8000b88 <__aeabi_d2iz>
 800c872:	4682      	mov	sl, r0
 800c874:	f7f3 fe6e 	bl	8000554 <__aeabi_i2d>
 800c878:	4642      	mov	r2, r8
 800c87a:	464b      	mov	r3, r9
 800c87c:	f7f3 fed4 	bl	8000628 <__aeabi_dmul>
 800c880:	4602      	mov	r2, r0
 800c882:	460b      	mov	r3, r1
 800c884:	4630      	mov	r0, r6
 800c886:	4639      	mov	r1, r7
 800c888:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800c88c:	f7f3 fd14 	bl	80002b8 <__aeabi_dsub>
 800c890:	f805 6b01 	strb.w	r6, [r5], #1
 800c894:	9e01      	ldr	r6, [sp, #4]
 800c896:	9f03      	ldr	r7, [sp, #12]
 800c898:	1bae      	subs	r6, r5, r6
 800c89a:	42b7      	cmp	r7, r6
 800c89c:	4602      	mov	r2, r0
 800c89e:	460b      	mov	r3, r1
 800c8a0:	d135      	bne.n	800c90e <_dtoa_r+0x6e6>
 800c8a2:	f7f3 fd0b 	bl	80002bc <__adddf3>
 800c8a6:	4642      	mov	r2, r8
 800c8a8:	464b      	mov	r3, r9
 800c8aa:	4606      	mov	r6, r0
 800c8ac:	460f      	mov	r7, r1
 800c8ae:	f7f4 f94b 	bl	8000b48 <__aeabi_dcmpgt>
 800c8b2:	b9d0      	cbnz	r0, 800c8ea <_dtoa_r+0x6c2>
 800c8b4:	4642      	mov	r2, r8
 800c8b6:	464b      	mov	r3, r9
 800c8b8:	4630      	mov	r0, r6
 800c8ba:	4639      	mov	r1, r7
 800c8bc:	f7f4 f91c 	bl	8000af8 <__aeabi_dcmpeq>
 800c8c0:	b110      	cbz	r0, 800c8c8 <_dtoa_r+0x6a0>
 800c8c2:	f01a 0f01 	tst.w	sl, #1
 800c8c6:	d110      	bne.n	800c8ea <_dtoa_r+0x6c2>
 800c8c8:	4620      	mov	r0, r4
 800c8ca:	ee18 1a10 	vmov	r1, s16
 800c8ce:	f000 ff8d 	bl	800d7ec <_Bfree>
 800c8d2:	2300      	movs	r3, #0
 800c8d4:	9800      	ldr	r0, [sp, #0]
 800c8d6:	702b      	strb	r3, [r5, #0]
 800c8d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c8da:	3001      	adds	r0, #1
 800c8dc:	6018      	str	r0, [r3, #0]
 800c8de:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c8e0:	2b00      	cmp	r3, #0
 800c8e2:	f43f acf1 	beq.w	800c2c8 <_dtoa_r+0xa0>
 800c8e6:	601d      	str	r5, [r3, #0]
 800c8e8:	e4ee      	b.n	800c2c8 <_dtoa_r+0xa0>
 800c8ea:	9f00      	ldr	r7, [sp, #0]
 800c8ec:	462b      	mov	r3, r5
 800c8ee:	461d      	mov	r5, r3
 800c8f0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c8f4:	2a39      	cmp	r2, #57	; 0x39
 800c8f6:	d106      	bne.n	800c906 <_dtoa_r+0x6de>
 800c8f8:	9a01      	ldr	r2, [sp, #4]
 800c8fa:	429a      	cmp	r2, r3
 800c8fc:	d1f7      	bne.n	800c8ee <_dtoa_r+0x6c6>
 800c8fe:	9901      	ldr	r1, [sp, #4]
 800c900:	2230      	movs	r2, #48	; 0x30
 800c902:	3701      	adds	r7, #1
 800c904:	700a      	strb	r2, [r1, #0]
 800c906:	781a      	ldrb	r2, [r3, #0]
 800c908:	3201      	adds	r2, #1
 800c90a:	701a      	strb	r2, [r3, #0]
 800c90c:	e790      	b.n	800c830 <_dtoa_r+0x608>
 800c90e:	4ba6      	ldr	r3, [pc, #664]	; (800cba8 <_dtoa_r+0x980>)
 800c910:	2200      	movs	r2, #0
 800c912:	f7f3 fe89 	bl	8000628 <__aeabi_dmul>
 800c916:	2200      	movs	r2, #0
 800c918:	2300      	movs	r3, #0
 800c91a:	4606      	mov	r6, r0
 800c91c:	460f      	mov	r7, r1
 800c91e:	f7f4 f8eb 	bl	8000af8 <__aeabi_dcmpeq>
 800c922:	2800      	cmp	r0, #0
 800c924:	d09d      	beq.n	800c862 <_dtoa_r+0x63a>
 800c926:	e7cf      	b.n	800c8c8 <_dtoa_r+0x6a0>
 800c928:	9a08      	ldr	r2, [sp, #32]
 800c92a:	2a00      	cmp	r2, #0
 800c92c:	f000 80d7 	beq.w	800cade <_dtoa_r+0x8b6>
 800c930:	9a06      	ldr	r2, [sp, #24]
 800c932:	2a01      	cmp	r2, #1
 800c934:	f300 80ba 	bgt.w	800caac <_dtoa_r+0x884>
 800c938:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c93a:	2a00      	cmp	r2, #0
 800c93c:	f000 80b2 	beq.w	800caa4 <_dtoa_r+0x87c>
 800c940:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800c944:	9e07      	ldr	r6, [sp, #28]
 800c946:	9d04      	ldr	r5, [sp, #16]
 800c948:	9a04      	ldr	r2, [sp, #16]
 800c94a:	441a      	add	r2, r3
 800c94c:	9204      	str	r2, [sp, #16]
 800c94e:	9a05      	ldr	r2, [sp, #20]
 800c950:	2101      	movs	r1, #1
 800c952:	441a      	add	r2, r3
 800c954:	4620      	mov	r0, r4
 800c956:	9205      	str	r2, [sp, #20]
 800c958:	f001 f84a 	bl	800d9f0 <__i2b>
 800c95c:	4607      	mov	r7, r0
 800c95e:	2d00      	cmp	r5, #0
 800c960:	dd0c      	ble.n	800c97c <_dtoa_r+0x754>
 800c962:	9b05      	ldr	r3, [sp, #20]
 800c964:	2b00      	cmp	r3, #0
 800c966:	dd09      	ble.n	800c97c <_dtoa_r+0x754>
 800c968:	42ab      	cmp	r3, r5
 800c96a:	9a04      	ldr	r2, [sp, #16]
 800c96c:	bfa8      	it	ge
 800c96e:	462b      	movge	r3, r5
 800c970:	1ad2      	subs	r2, r2, r3
 800c972:	9204      	str	r2, [sp, #16]
 800c974:	9a05      	ldr	r2, [sp, #20]
 800c976:	1aed      	subs	r5, r5, r3
 800c978:	1ad3      	subs	r3, r2, r3
 800c97a:	9305      	str	r3, [sp, #20]
 800c97c:	9b07      	ldr	r3, [sp, #28]
 800c97e:	b31b      	cbz	r3, 800c9c8 <_dtoa_r+0x7a0>
 800c980:	9b08      	ldr	r3, [sp, #32]
 800c982:	2b00      	cmp	r3, #0
 800c984:	f000 80af 	beq.w	800cae6 <_dtoa_r+0x8be>
 800c988:	2e00      	cmp	r6, #0
 800c98a:	dd13      	ble.n	800c9b4 <_dtoa_r+0x78c>
 800c98c:	4639      	mov	r1, r7
 800c98e:	4632      	mov	r2, r6
 800c990:	4620      	mov	r0, r4
 800c992:	f001 f8ed 	bl	800db70 <__pow5mult>
 800c996:	ee18 2a10 	vmov	r2, s16
 800c99a:	4601      	mov	r1, r0
 800c99c:	4607      	mov	r7, r0
 800c99e:	4620      	mov	r0, r4
 800c9a0:	f001 f83c 	bl	800da1c <__multiply>
 800c9a4:	ee18 1a10 	vmov	r1, s16
 800c9a8:	4680      	mov	r8, r0
 800c9aa:	4620      	mov	r0, r4
 800c9ac:	f000 ff1e 	bl	800d7ec <_Bfree>
 800c9b0:	ee08 8a10 	vmov	s16, r8
 800c9b4:	9b07      	ldr	r3, [sp, #28]
 800c9b6:	1b9a      	subs	r2, r3, r6
 800c9b8:	d006      	beq.n	800c9c8 <_dtoa_r+0x7a0>
 800c9ba:	ee18 1a10 	vmov	r1, s16
 800c9be:	4620      	mov	r0, r4
 800c9c0:	f001 f8d6 	bl	800db70 <__pow5mult>
 800c9c4:	ee08 0a10 	vmov	s16, r0
 800c9c8:	2101      	movs	r1, #1
 800c9ca:	4620      	mov	r0, r4
 800c9cc:	f001 f810 	bl	800d9f0 <__i2b>
 800c9d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c9d2:	2b00      	cmp	r3, #0
 800c9d4:	4606      	mov	r6, r0
 800c9d6:	f340 8088 	ble.w	800caea <_dtoa_r+0x8c2>
 800c9da:	461a      	mov	r2, r3
 800c9dc:	4601      	mov	r1, r0
 800c9de:	4620      	mov	r0, r4
 800c9e0:	f001 f8c6 	bl	800db70 <__pow5mult>
 800c9e4:	9b06      	ldr	r3, [sp, #24]
 800c9e6:	2b01      	cmp	r3, #1
 800c9e8:	4606      	mov	r6, r0
 800c9ea:	f340 8081 	ble.w	800caf0 <_dtoa_r+0x8c8>
 800c9ee:	f04f 0800 	mov.w	r8, #0
 800c9f2:	6933      	ldr	r3, [r6, #16]
 800c9f4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800c9f8:	6918      	ldr	r0, [r3, #16]
 800c9fa:	f000 ffa9 	bl	800d950 <__hi0bits>
 800c9fe:	f1c0 0020 	rsb	r0, r0, #32
 800ca02:	9b05      	ldr	r3, [sp, #20]
 800ca04:	4418      	add	r0, r3
 800ca06:	f010 001f 	ands.w	r0, r0, #31
 800ca0a:	f000 8092 	beq.w	800cb32 <_dtoa_r+0x90a>
 800ca0e:	f1c0 0320 	rsb	r3, r0, #32
 800ca12:	2b04      	cmp	r3, #4
 800ca14:	f340 808a 	ble.w	800cb2c <_dtoa_r+0x904>
 800ca18:	f1c0 001c 	rsb	r0, r0, #28
 800ca1c:	9b04      	ldr	r3, [sp, #16]
 800ca1e:	4403      	add	r3, r0
 800ca20:	9304      	str	r3, [sp, #16]
 800ca22:	9b05      	ldr	r3, [sp, #20]
 800ca24:	4403      	add	r3, r0
 800ca26:	4405      	add	r5, r0
 800ca28:	9305      	str	r3, [sp, #20]
 800ca2a:	9b04      	ldr	r3, [sp, #16]
 800ca2c:	2b00      	cmp	r3, #0
 800ca2e:	dd07      	ble.n	800ca40 <_dtoa_r+0x818>
 800ca30:	ee18 1a10 	vmov	r1, s16
 800ca34:	461a      	mov	r2, r3
 800ca36:	4620      	mov	r0, r4
 800ca38:	f001 f8f4 	bl	800dc24 <__lshift>
 800ca3c:	ee08 0a10 	vmov	s16, r0
 800ca40:	9b05      	ldr	r3, [sp, #20]
 800ca42:	2b00      	cmp	r3, #0
 800ca44:	dd05      	ble.n	800ca52 <_dtoa_r+0x82a>
 800ca46:	4631      	mov	r1, r6
 800ca48:	461a      	mov	r2, r3
 800ca4a:	4620      	mov	r0, r4
 800ca4c:	f001 f8ea 	bl	800dc24 <__lshift>
 800ca50:	4606      	mov	r6, r0
 800ca52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ca54:	2b00      	cmp	r3, #0
 800ca56:	d06e      	beq.n	800cb36 <_dtoa_r+0x90e>
 800ca58:	ee18 0a10 	vmov	r0, s16
 800ca5c:	4631      	mov	r1, r6
 800ca5e:	f001 f951 	bl	800dd04 <__mcmp>
 800ca62:	2800      	cmp	r0, #0
 800ca64:	da67      	bge.n	800cb36 <_dtoa_r+0x90e>
 800ca66:	9b00      	ldr	r3, [sp, #0]
 800ca68:	3b01      	subs	r3, #1
 800ca6a:	ee18 1a10 	vmov	r1, s16
 800ca6e:	9300      	str	r3, [sp, #0]
 800ca70:	220a      	movs	r2, #10
 800ca72:	2300      	movs	r3, #0
 800ca74:	4620      	mov	r0, r4
 800ca76:	f000 fedb 	bl	800d830 <__multadd>
 800ca7a:	9b08      	ldr	r3, [sp, #32]
 800ca7c:	ee08 0a10 	vmov	s16, r0
 800ca80:	2b00      	cmp	r3, #0
 800ca82:	f000 81b1 	beq.w	800cde8 <_dtoa_r+0xbc0>
 800ca86:	2300      	movs	r3, #0
 800ca88:	4639      	mov	r1, r7
 800ca8a:	220a      	movs	r2, #10
 800ca8c:	4620      	mov	r0, r4
 800ca8e:	f000 fecf 	bl	800d830 <__multadd>
 800ca92:	9b02      	ldr	r3, [sp, #8]
 800ca94:	2b00      	cmp	r3, #0
 800ca96:	4607      	mov	r7, r0
 800ca98:	f300 808e 	bgt.w	800cbb8 <_dtoa_r+0x990>
 800ca9c:	9b06      	ldr	r3, [sp, #24]
 800ca9e:	2b02      	cmp	r3, #2
 800caa0:	dc51      	bgt.n	800cb46 <_dtoa_r+0x91e>
 800caa2:	e089      	b.n	800cbb8 <_dtoa_r+0x990>
 800caa4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800caa6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800caaa:	e74b      	b.n	800c944 <_dtoa_r+0x71c>
 800caac:	9b03      	ldr	r3, [sp, #12]
 800caae:	1e5e      	subs	r6, r3, #1
 800cab0:	9b07      	ldr	r3, [sp, #28]
 800cab2:	42b3      	cmp	r3, r6
 800cab4:	bfbf      	itttt	lt
 800cab6:	9b07      	ldrlt	r3, [sp, #28]
 800cab8:	9607      	strlt	r6, [sp, #28]
 800caba:	1af2      	sublt	r2, r6, r3
 800cabc:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800cabe:	bfb6      	itet	lt
 800cac0:	189b      	addlt	r3, r3, r2
 800cac2:	1b9e      	subge	r6, r3, r6
 800cac4:	930a      	strlt	r3, [sp, #40]	; 0x28
 800cac6:	9b03      	ldr	r3, [sp, #12]
 800cac8:	bfb8      	it	lt
 800caca:	2600      	movlt	r6, #0
 800cacc:	2b00      	cmp	r3, #0
 800cace:	bfb7      	itett	lt
 800cad0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800cad4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800cad8:	1a9d      	sublt	r5, r3, r2
 800cada:	2300      	movlt	r3, #0
 800cadc:	e734      	b.n	800c948 <_dtoa_r+0x720>
 800cade:	9e07      	ldr	r6, [sp, #28]
 800cae0:	9d04      	ldr	r5, [sp, #16]
 800cae2:	9f08      	ldr	r7, [sp, #32]
 800cae4:	e73b      	b.n	800c95e <_dtoa_r+0x736>
 800cae6:	9a07      	ldr	r2, [sp, #28]
 800cae8:	e767      	b.n	800c9ba <_dtoa_r+0x792>
 800caea:	9b06      	ldr	r3, [sp, #24]
 800caec:	2b01      	cmp	r3, #1
 800caee:	dc18      	bgt.n	800cb22 <_dtoa_r+0x8fa>
 800caf0:	f1ba 0f00 	cmp.w	sl, #0
 800caf4:	d115      	bne.n	800cb22 <_dtoa_r+0x8fa>
 800caf6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800cafa:	b993      	cbnz	r3, 800cb22 <_dtoa_r+0x8fa>
 800cafc:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800cb00:	0d1b      	lsrs	r3, r3, #20
 800cb02:	051b      	lsls	r3, r3, #20
 800cb04:	b183      	cbz	r3, 800cb28 <_dtoa_r+0x900>
 800cb06:	9b04      	ldr	r3, [sp, #16]
 800cb08:	3301      	adds	r3, #1
 800cb0a:	9304      	str	r3, [sp, #16]
 800cb0c:	9b05      	ldr	r3, [sp, #20]
 800cb0e:	3301      	adds	r3, #1
 800cb10:	9305      	str	r3, [sp, #20]
 800cb12:	f04f 0801 	mov.w	r8, #1
 800cb16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cb18:	2b00      	cmp	r3, #0
 800cb1a:	f47f af6a 	bne.w	800c9f2 <_dtoa_r+0x7ca>
 800cb1e:	2001      	movs	r0, #1
 800cb20:	e76f      	b.n	800ca02 <_dtoa_r+0x7da>
 800cb22:	f04f 0800 	mov.w	r8, #0
 800cb26:	e7f6      	b.n	800cb16 <_dtoa_r+0x8ee>
 800cb28:	4698      	mov	r8, r3
 800cb2a:	e7f4      	b.n	800cb16 <_dtoa_r+0x8ee>
 800cb2c:	f43f af7d 	beq.w	800ca2a <_dtoa_r+0x802>
 800cb30:	4618      	mov	r0, r3
 800cb32:	301c      	adds	r0, #28
 800cb34:	e772      	b.n	800ca1c <_dtoa_r+0x7f4>
 800cb36:	9b03      	ldr	r3, [sp, #12]
 800cb38:	2b00      	cmp	r3, #0
 800cb3a:	dc37      	bgt.n	800cbac <_dtoa_r+0x984>
 800cb3c:	9b06      	ldr	r3, [sp, #24]
 800cb3e:	2b02      	cmp	r3, #2
 800cb40:	dd34      	ble.n	800cbac <_dtoa_r+0x984>
 800cb42:	9b03      	ldr	r3, [sp, #12]
 800cb44:	9302      	str	r3, [sp, #8]
 800cb46:	9b02      	ldr	r3, [sp, #8]
 800cb48:	b96b      	cbnz	r3, 800cb66 <_dtoa_r+0x93e>
 800cb4a:	4631      	mov	r1, r6
 800cb4c:	2205      	movs	r2, #5
 800cb4e:	4620      	mov	r0, r4
 800cb50:	f000 fe6e 	bl	800d830 <__multadd>
 800cb54:	4601      	mov	r1, r0
 800cb56:	4606      	mov	r6, r0
 800cb58:	ee18 0a10 	vmov	r0, s16
 800cb5c:	f001 f8d2 	bl	800dd04 <__mcmp>
 800cb60:	2800      	cmp	r0, #0
 800cb62:	f73f adbb 	bgt.w	800c6dc <_dtoa_r+0x4b4>
 800cb66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb68:	9d01      	ldr	r5, [sp, #4]
 800cb6a:	43db      	mvns	r3, r3
 800cb6c:	9300      	str	r3, [sp, #0]
 800cb6e:	f04f 0800 	mov.w	r8, #0
 800cb72:	4631      	mov	r1, r6
 800cb74:	4620      	mov	r0, r4
 800cb76:	f000 fe39 	bl	800d7ec <_Bfree>
 800cb7a:	2f00      	cmp	r7, #0
 800cb7c:	f43f aea4 	beq.w	800c8c8 <_dtoa_r+0x6a0>
 800cb80:	f1b8 0f00 	cmp.w	r8, #0
 800cb84:	d005      	beq.n	800cb92 <_dtoa_r+0x96a>
 800cb86:	45b8      	cmp	r8, r7
 800cb88:	d003      	beq.n	800cb92 <_dtoa_r+0x96a>
 800cb8a:	4641      	mov	r1, r8
 800cb8c:	4620      	mov	r0, r4
 800cb8e:	f000 fe2d 	bl	800d7ec <_Bfree>
 800cb92:	4639      	mov	r1, r7
 800cb94:	4620      	mov	r0, r4
 800cb96:	f000 fe29 	bl	800d7ec <_Bfree>
 800cb9a:	e695      	b.n	800c8c8 <_dtoa_r+0x6a0>
 800cb9c:	2600      	movs	r6, #0
 800cb9e:	4637      	mov	r7, r6
 800cba0:	e7e1      	b.n	800cb66 <_dtoa_r+0x93e>
 800cba2:	9700      	str	r7, [sp, #0]
 800cba4:	4637      	mov	r7, r6
 800cba6:	e599      	b.n	800c6dc <_dtoa_r+0x4b4>
 800cba8:	40240000 	.word	0x40240000
 800cbac:	9b08      	ldr	r3, [sp, #32]
 800cbae:	2b00      	cmp	r3, #0
 800cbb0:	f000 80ca 	beq.w	800cd48 <_dtoa_r+0xb20>
 800cbb4:	9b03      	ldr	r3, [sp, #12]
 800cbb6:	9302      	str	r3, [sp, #8]
 800cbb8:	2d00      	cmp	r5, #0
 800cbba:	dd05      	ble.n	800cbc8 <_dtoa_r+0x9a0>
 800cbbc:	4639      	mov	r1, r7
 800cbbe:	462a      	mov	r2, r5
 800cbc0:	4620      	mov	r0, r4
 800cbc2:	f001 f82f 	bl	800dc24 <__lshift>
 800cbc6:	4607      	mov	r7, r0
 800cbc8:	f1b8 0f00 	cmp.w	r8, #0
 800cbcc:	d05b      	beq.n	800cc86 <_dtoa_r+0xa5e>
 800cbce:	6879      	ldr	r1, [r7, #4]
 800cbd0:	4620      	mov	r0, r4
 800cbd2:	f000 fdcb 	bl	800d76c <_Balloc>
 800cbd6:	4605      	mov	r5, r0
 800cbd8:	b928      	cbnz	r0, 800cbe6 <_dtoa_r+0x9be>
 800cbda:	4b87      	ldr	r3, [pc, #540]	; (800cdf8 <_dtoa_r+0xbd0>)
 800cbdc:	4602      	mov	r2, r0
 800cbde:	f240 21ea 	movw	r1, #746	; 0x2ea
 800cbe2:	f7ff bb3b 	b.w	800c25c <_dtoa_r+0x34>
 800cbe6:	693a      	ldr	r2, [r7, #16]
 800cbe8:	3202      	adds	r2, #2
 800cbea:	0092      	lsls	r2, r2, #2
 800cbec:	f107 010c 	add.w	r1, r7, #12
 800cbf0:	300c      	adds	r0, #12
 800cbf2:	f7fc f877 	bl	8008ce4 <memcpy>
 800cbf6:	2201      	movs	r2, #1
 800cbf8:	4629      	mov	r1, r5
 800cbfa:	4620      	mov	r0, r4
 800cbfc:	f001 f812 	bl	800dc24 <__lshift>
 800cc00:	9b01      	ldr	r3, [sp, #4]
 800cc02:	f103 0901 	add.w	r9, r3, #1
 800cc06:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800cc0a:	4413      	add	r3, r2
 800cc0c:	9305      	str	r3, [sp, #20]
 800cc0e:	f00a 0301 	and.w	r3, sl, #1
 800cc12:	46b8      	mov	r8, r7
 800cc14:	9304      	str	r3, [sp, #16]
 800cc16:	4607      	mov	r7, r0
 800cc18:	4631      	mov	r1, r6
 800cc1a:	ee18 0a10 	vmov	r0, s16
 800cc1e:	f7ff fa77 	bl	800c110 <quorem>
 800cc22:	4641      	mov	r1, r8
 800cc24:	9002      	str	r0, [sp, #8]
 800cc26:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800cc2a:	ee18 0a10 	vmov	r0, s16
 800cc2e:	f001 f869 	bl	800dd04 <__mcmp>
 800cc32:	463a      	mov	r2, r7
 800cc34:	9003      	str	r0, [sp, #12]
 800cc36:	4631      	mov	r1, r6
 800cc38:	4620      	mov	r0, r4
 800cc3a:	f001 f87f 	bl	800dd3c <__mdiff>
 800cc3e:	68c2      	ldr	r2, [r0, #12]
 800cc40:	f109 3bff 	add.w	fp, r9, #4294967295
 800cc44:	4605      	mov	r5, r0
 800cc46:	bb02      	cbnz	r2, 800cc8a <_dtoa_r+0xa62>
 800cc48:	4601      	mov	r1, r0
 800cc4a:	ee18 0a10 	vmov	r0, s16
 800cc4e:	f001 f859 	bl	800dd04 <__mcmp>
 800cc52:	4602      	mov	r2, r0
 800cc54:	4629      	mov	r1, r5
 800cc56:	4620      	mov	r0, r4
 800cc58:	9207      	str	r2, [sp, #28]
 800cc5a:	f000 fdc7 	bl	800d7ec <_Bfree>
 800cc5e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800cc62:	ea43 0102 	orr.w	r1, r3, r2
 800cc66:	9b04      	ldr	r3, [sp, #16]
 800cc68:	430b      	orrs	r3, r1
 800cc6a:	464d      	mov	r5, r9
 800cc6c:	d10f      	bne.n	800cc8e <_dtoa_r+0xa66>
 800cc6e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800cc72:	d02a      	beq.n	800ccca <_dtoa_r+0xaa2>
 800cc74:	9b03      	ldr	r3, [sp, #12]
 800cc76:	2b00      	cmp	r3, #0
 800cc78:	dd02      	ble.n	800cc80 <_dtoa_r+0xa58>
 800cc7a:	9b02      	ldr	r3, [sp, #8]
 800cc7c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800cc80:	f88b a000 	strb.w	sl, [fp]
 800cc84:	e775      	b.n	800cb72 <_dtoa_r+0x94a>
 800cc86:	4638      	mov	r0, r7
 800cc88:	e7ba      	b.n	800cc00 <_dtoa_r+0x9d8>
 800cc8a:	2201      	movs	r2, #1
 800cc8c:	e7e2      	b.n	800cc54 <_dtoa_r+0xa2c>
 800cc8e:	9b03      	ldr	r3, [sp, #12]
 800cc90:	2b00      	cmp	r3, #0
 800cc92:	db04      	blt.n	800cc9e <_dtoa_r+0xa76>
 800cc94:	9906      	ldr	r1, [sp, #24]
 800cc96:	430b      	orrs	r3, r1
 800cc98:	9904      	ldr	r1, [sp, #16]
 800cc9a:	430b      	orrs	r3, r1
 800cc9c:	d122      	bne.n	800cce4 <_dtoa_r+0xabc>
 800cc9e:	2a00      	cmp	r2, #0
 800cca0:	ddee      	ble.n	800cc80 <_dtoa_r+0xa58>
 800cca2:	ee18 1a10 	vmov	r1, s16
 800cca6:	2201      	movs	r2, #1
 800cca8:	4620      	mov	r0, r4
 800ccaa:	f000 ffbb 	bl	800dc24 <__lshift>
 800ccae:	4631      	mov	r1, r6
 800ccb0:	ee08 0a10 	vmov	s16, r0
 800ccb4:	f001 f826 	bl	800dd04 <__mcmp>
 800ccb8:	2800      	cmp	r0, #0
 800ccba:	dc03      	bgt.n	800ccc4 <_dtoa_r+0xa9c>
 800ccbc:	d1e0      	bne.n	800cc80 <_dtoa_r+0xa58>
 800ccbe:	f01a 0f01 	tst.w	sl, #1
 800ccc2:	d0dd      	beq.n	800cc80 <_dtoa_r+0xa58>
 800ccc4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800ccc8:	d1d7      	bne.n	800cc7a <_dtoa_r+0xa52>
 800ccca:	2339      	movs	r3, #57	; 0x39
 800cccc:	f88b 3000 	strb.w	r3, [fp]
 800ccd0:	462b      	mov	r3, r5
 800ccd2:	461d      	mov	r5, r3
 800ccd4:	3b01      	subs	r3, #1
 800ccd6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800ccda:	2a39      	cmp	r2, #57	; 0x39
 800ccdc:	d071      	beq.n	800cdc2 <_dtoa_r+0xb9a>
 800ccde:	3201      	adds	r2, #1
 800cce0:	701a      	strb	r2, [r3, #0]
 800cce2:	e746      	b.n	800cb72 <_dtoa_r+0x94a>
 800cce4:	2a00      	cmp	r2, #0
 800cce6:	dd07      	ble.n	800ccf8 <_dtoa_r+0xad0>
 800cce8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800ccec:	d0ed      	beq.n	800ccca <_dtoa_r+0xaa2>
 800ccee:	f10a 0301 	add.w	r3, sl, #1
 800ccf2:	f88b 3000 	strb.w	r3, [fp]
 800ccf6:	e73c      	b.n	800cb72 <_dtoa_r+0x94a>
 800ccf8:	9b05      	ldr	r3, [sp, #20]
 800ccfa:	f809 ac01 	strb.w	sl, [r9, #-1]
 800ccfe:	4599      	cmp	r9, r3
 800cd00:	d047      	beq.n	800cd92 <_dtoa_r+0xb6a>
 800cd02:	ee18 1a10 	vmov	r1, s16
 800cd06:	2300      	movs	r3, #0
 800cd08:	220a      	movs	r2, #10
 800cd0a:	4620      	mov	r0, r4
 800cd0c:	f000 fd90 	bl	800d830 <__multadd>
 800cd10:	45b8      	cmp	r8, r7
 800cd12:	ee08 0a10 	vmov	s16, r0
 800cd16:	f04f 0300 	mov.w	r3, #0
 800cd1a:	f04f 020a 	mov.w	r2, #10
 800cd1e:	4641      	mov	r1, r8
 800cd20:	4620      	mov	r0, r4
 800cd22:	d106      	bne.n	800cd32 <_dtoa_r+0xb0a>
 800cd24:	f000 fd84 	bl	800d830 <__multadd>
 800cd28:	4680      	mov	r8, r0
 800cd2a:	4607      	mov	r7, r0
 800cd2c:	f109 0901 	add.w	r9, r9, #1
 800cd30:	e772      	b.n	800cc18 <_dtoa_r+0x9f0>
 800cd32:	f000 fd7d 	bl	800d830 <__multadd>
 800cd36:	4639      	mov	r1, r7
 800cd38:	4680      	mov	r8, r0
 800cd3a:	2300      	movs	r3, #0
 800cd3c:	220a      	movs	r2, #10
 800cd3e:	4620      	mov	r0, r4
 800cd40:	f000 fd76 	bl	800d830 <__multadd>
 800cd44:	4607      	mov	r7, r0
 800cd46:	e7f1      	b.n	800cd2c <_dtoa_r+0xb04>
 800cd48:	9b03      	ldr	r3, [sp, #12]
 800cd4a:	9302      	str	r3, [sp, #8]
 800cd4c:	9d01      	ldr	r5, [sp, #4]
 800cd4e:	ee18 0a10 	vmov	r0, s16
 800cd52:	4631      	mov	r1, r6
 800cd54:	f7ff f9dc 	bl	800c110 <quorem>
 800cd58:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800cd5c:	9b01      	ldr	r3, [sp, #4]
 800cd5e:	f805 ab01 	strb.w	sl, [r5], #1
 800cd62:	1aea      	subs	r2, r5, r3
 800cd64:	9b02      	ldr	r3, [sp, #8]
 800cd66:	4293      	cmp	r3, r2
 800cd68:	dd09      	ble.n	800cd7e <_dtoa_r+0xb56>
 800cd6a:	ee18 1a10 	vmov	r1, s16
 800cd6e:	2300      	movs	r3, #0
 800cd70:	220a      	movs	r2, #10
 800cd72:	4620      	mov	r0, r4
 800cd74:	f000 fd5c 	bl	800d830 <__multadd>
 800cd78:	ee08 0a10 	vmov	s16, r0
 800cd7c:	e7e7      	b.n	800cd4e <_dtoa_r+0xb26>
 800cd7e:	9b02      	ldr	r3, [sp, #8]
 800cd80:	2b00      	cmp	r3, #0
 800cd82:	bfc8      	it	gt
 800cd84:	461d      	movgt	r5, r3
 800cd86:	9b01      	ldr	r3, [sp, #4]
 800cd88:	bfd8      	it	le
 800cd8a:	2501      	movle	r5, #1
 800cd8c:	441d      	add	r5, r3
 800cd8e:	f04f 0800 	mov.w	r8, #0
 800cd92:	ee18 1a10 	vmov	r1, s16
 800cd96:	2201      	movs	r2, #1
 800cd98:	4620      	mov	r0, r4
 800cd9a:	f000 ff43 	bl	800dc24 <__lshift>
 800cd9e:	4631      	mov	r1, r6
 800cda0:	ee08 0a10 	vmov	s16, r0
 800cda4:	f000 ffae 	bl	800dd04 <__mcmp>
 800cda8:	2800      	cmp	r0, #0
 800cdaa:	dc91      	bgt.n	800ccd0 <_dtoa_r+0xaa8>
 800cdac:	d102      	bne.n	800cdb4 <_dtoa_r+0xb8c>
 800cdae:	f01a 0f01 	tst.w	sl, #1
 800cdb2:	d18d      	bne.n	800ccd0 <_dtoa_r+0xaa8>
 800cdb4:	462b      	mov	r3, r5
 800cdb6:	461d      	mov	r5, r3
 800cdb8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800cdbc:	2a30      	cmp	r2, #48	; 0x30
 800cdbe:	d0fa      	beq.n	800cdb6 <_dtoa_r+0xb8e>
 800cdc0:	e6d7      	b.n	800cb72 <_dtoa_r+0x94a>
 800cdc2:	9a01      	ldr	r2, [sp, #4]
 800cdc4:	429a      	cmp	r2, r3
 800cdc6:	d184      	bne.n	800ccd2 <_dtoa_r+0xaaa>
 800cdc8:	9b00      	ldr	r3, [sp, #0]
 800cdca:	3301      	adds	r3, #1
 800cdcc:	9300      	str	r3, [sp, #0]
 800cdce:	2331      	movs	r3, #49	; 0x31
 800cdd0:	7013      	strb	r3, [r2, #0]
 800cdd2:	e6ce      	b.n	800cb72 <_dtoa_r+0x94a>
 800cdd4:	4b09      	ldr	r3, [pc, #36]	; (800cdfc <_dtoa_r+0xbd4>)
 800cdd6:	f7ff ba95 	b.w	800c304 <_dtoa_r+0xdc>
 800cdda:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cddc:	2b00      	cmp	r3, #0
 800cdde:	f47f aa6e 	bne.w	800c2be <_dtoa_r+0x96>
 800cde2:	4b07      	ldr	r3, [pc, #28]	; (800ce00 <_dtoa_r+0xbd8>)
 800cde4:	f7ff ba8e 	b.w	800c304 <_dtoa_r+0xdc>
 800cde8:	9b02      	ldr	r3, [sp, #8]
 800cdea:	2b00      	cmp	r3, #0
 800cdec:	dcae      	bgt.n	800cd4c <_dtoa_r+0xb24>
 800cdee:	9b06      	ldr	r3, [sp, #24]
 800cdf0:	2b02      	cmp	r3, #2
 800cdf2:	f73f aea8 	bgt.w	800cb46 <_dtoa_r+0x91e>
 800cdf6:	e7a9      	b.n	800cd4c <_dtoa_r+0xb24>
 800cdf8:	080102c1 	.word	0x080102c1
 800cdfc:	080104b9 	.word	0x080104b9
 800ce00:	08010259 	.word	0x08010259

0800ce04 <fiprintf>:
 800ce04:	b40e      	push	{r1, r2, r3}
 800ce06:	b503      	push	{r0, r1, lr}
 800ce08:	4601      	mov	r1, r0
 800ce0a:	ab03      	add	r3, sp, #12
 800ce0c:	4805      	ldr	r0, [pc, #20]	; (800ce24 <fiprintf+0x20>)
 800ce0e:	f853 2b04 	ldr.w	r2, [r3], #4
 800ce12:	6800      	ldr	r0, [r0, #0]
 800ce14:	9301      	str	r3, [sp, #4]
 800ce16:	f001 fcd7 	bl	800e7c8 <_vfiprintf_r>
 800ce1a:	b002      	add	sp, #8
 800ce1c:	f85d eb04 	ldr.w	lr, [sp], #4
 800ce20:	b003      	add	sp, #12
 800ce22:	4770      	bx	lr
 800ce24:	2000000c 	.word	0x2000000c

0800ce28 <rshift>:
 800ce28:	6903      	ldr	r3, [r0, #16]
 800ce2a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800ce2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce32:	ea4f 1261 	mov.w	r2, r1, asr #5
 800ce36:	f100 0414 	add.w	r4, r0, #20
 800ce3a:	dd45      	ble.n	800cec8 <rshift+0xa0>
 800ce3c:	f011 011f 	ands.w	r1, r1, #31
 800ce40:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800ce44:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800ce48:	d10c      	bne.n	800ce64 <rshift+0x3c>
 800ce4a:	f100 0710 	add.w	r7, r0, #16
 800ce4e:	4629      	mov	r1, r5
 800ce50:	42b1      	cmp	r1, r6
 800ce52:	d334      	bcc.n	800cebe <rshift+0x96>
 800ce54:	1a9b      	subs	r3, r3, r2
 800ce56:	009b      	lsls	r3, r3, #2
 800ce58:	1eea      	subs	r2, r5, #3
 800ce5a:	4296      	cmp	r6, r2
 800ce5c:	bf38      	it	cc
 800ce5e:	2300      	movcc	r3, #0
 800ce60:	4423      	add	r3, r4
 800ce62:	e015      	b.n	800ce90 <rshift+0x68>
 800ce64:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800ce68:	f1c1 0820 	rsb	r8, r1, #32
 800ce6c:	40cf      	lsrs	r7, r1
 800ce6e:	f105 0e04 	add.w	lr, r5, #4
 800ce72:	46a1      	mov	r9, r4
 800ce74:	4576      	cmp	r6, lr
 800ce76:	46f4      	mov	ip, lr
 800ce78:	d815      	bhi.n	800cea6 <rshift+0x7e>
 800ce7a:	1a9a      	subs	r2, r3, r2
 800ce7c:	0092      	lsls	r2, r2, #2
 800ce7e:	3a04      	subs	r2, #4
 800ce80:	3501      	adds	r5, #1
 800ce82:	42ae      	cmp	r6, r5
 800ce84:	bf38      	it	cc
 800ce86:	2200      	movcc	r2, #0
 800ce88:	18a3      	adds	r3, r4, r2
 800ce8a:	50a7      	str	r7, [r4, r2]
 800ce8c:	b107      	cbz	r7, 800ce90 <rshift+0x68>
 800ce8e:	3304      	adds	r3, #4
 800ce90:	1b1a      	subs	r2, r3, r4
 800ce92:	42a3      	cmp	r3, r4
 800ce94:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800ce98:	bf08      	it	eq
 800ce9a:	2300      	moveq	r3, #0
 800ce9c:	6102      	str	r2, [r0, #16]
 800ce9e:	bf08      	it	eq
 800cea0:	6143      	streq	r3, [r0, #20]
 800cea2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cea6:	f8dc c000 	ldr.w	ip, [ip]
 800ceaa:	fa0c fc08 	lsl.w	ip, ip, r8
 800ceae:	ea4c 0707 	orr.w	r7, ip, r7
 800ceb2:	f849 7b04 	str.w	r7, [r9], #4
 800ceb6:	f85e 7b04 	ldr.w	r7, [lr], #4
 800ceba:	40cf      	lsrs	r7, r1
 800cebc:	e7da      	b.n	800ce74 <rshift+0x4c>
 800cebe:	f851 cb04 	ldr.w	ip, [r1], #4
 800cec2:	f847 cf04 	str.w	ip, [r7, #4]!
 800cec6:	e7c3      	b.n	800ce50 <rshift+0x28>
 800cec8:	4623      	mov	r3, r4
 800ceca:	e7e1      	b.n	800ce90 <rshift+0x68>

0800cecc <__hexdig_fun>:
 800cecc:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800ced0:	2b09      	cmp	r3, #9
 800ced2:	d802      	bhi.n	800ceda <__hexdig_fun+0xe>
 800ced4:	3820      	subs	r0, #32
 800ced6:	b2c0      	uxtb	r0, r0
 800ced8:	4770      	bx	lr
 800ceda:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800cede:	2b05      	cmp	r3, #5
 800cee0:	d801      	bhi.n	800cee6 <__hexdig_fun+0x1a>
 800cee2:	3847      	subs	r0, #71	; 0x47
 800cee4:	e7f7      	b.n	800ced6 <__hexdig_fun+0xa>
 800cee6:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800ceea:	2b05      	cmp	r3, #5
 800ceec:	d801      	bhi.n	800cef2 <__hexdig_fun+0x26>
 800ceee:	3827      	subs	r0, #39	; 0x27
 800cef0:	e7f1      	b.n	800ced6 <__hexdig_fun+0xa>
 800cef2:	2000      	movs	r0, #0
 800cef4:	4770      	bx	lr
	...

0800cef8 <__gethex>:
 800cef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cefc:	ed2d 8b02 	vpush	{d8}
 800cf00:	b089      	sub	sp, #36	; 0x24
 800cf02:	ee08 0a10 	vmov	s16, r0
 800cf06:	9304      	str	r3, [sp, #16]
 800cf08:	4bb4      	ldr	r3, [pc, #720]	; (800d1dc <__gethex+0x2e4>)
 800cf0a:	681b      	ldr	r3, [r3, #0]
 800cf0c:	9301      	str	r3, [sp, #4]
 800cf0e:	4618      	mov	r0, r3
 800cf10:	468b      	mov	fp, r1
 800cf12:	4690      	mov	r8, r2
 800cf14:	f7f3 f96e 	bl	80001f4 <strlen>
 800cf18:	9b01      	ldr	r3, [sp, #4]
 800cf1a:	f8db 2000 	ldr.w	r2, [fp]
 800cf1e:	4403      	add	r3, r0
 800cf20:	4682      	mov	sl, r0
 800cf22:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800cf26:	9305      	str	r3, [sp, #20]
 800cf28:	1c93      	adds	r3, r2, #2
 800cf2a:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800cf2e:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800cf32:	32fe      	adds	r2, #254	; 0xfe
 800cf34:	18d1      	adds	r1, r2, r3
 800cf36:	461f      	mov	r7, r3
 800cf38:	f813 0b01 	ldrb.w	r0, [r3], #1
 800cf3c:	9100      	str	r1, [sp, #0]
 800cf3e:	2830      	cmp	r0, #48	; 0x30
 800cf40:	d0f8      	beq.n	800cf34 <__gethex+0x3c>
 800cf42:	f7ff ffc3 	bl	800cecc <__hexdig_fun>
 800cf46:	4604      	mov	r4, r0
 800cf48:	2800      	cmp	r0, #0
 800cf4a:	d13a      	bne.n	800cfc2 <__gethex+0xca>
 800cf4c:	9901      	ldr	r1, [sp, #4]
 800cf4e:	4652      	mov	r2, sl
 800cf50:	4638      	mov	r0, r7
 800cf52:	f7fd fed5 	bl	800ad00 <strncmp>
 800cf56:	4605      	mov	r5, r0
 800cf58:	2800      	cmp	r0, #0
 800cf5a:	d168      	bne.n	800d02e <__gethex+0x136>
 800cf5c:	f817 000a 	ldrb.w	r0, [r7, sl]
 800cf60:	eb07 060a 	add.w	r6, r7, sl
 800cf64:	f7ff ffb2 	bl	800cecc <__hexdig_fun>
 800cf68:	2800      	cmp	r0, #0
 800cf6a:	d062      	beq.n	800d032 <__gethex+0x13a>
 800cf6c:	4633      	mov	r3, r6
 800cf6e:	7818      	ldrb	r0, [r3, #0]
 800cf70:	2830      	cmp	r0, #48	; 0x30
 800cf72:	461f      	mov	r7, r3
 800cf74:	f103 0301 	add.w	r3, r3, #1
 800cf78:	d0f9      	beq.n	800cf6e <__gethex+0x76>
 800cf7a:	f7ff ffa7 	bl	800cecc <__hexdig_fun>
 800cf7e:	2301      	movs	r3, #1
 800cf80:	fab0 f480 	clz	r4, r0
 800cf84:	0964      	lsrs	r4, r4, #5
 800cf86:	4635      	mov	r5, r6
 800cf88:	9300      	str	r3, [sp, #0]
 800cf8a:	463a      	mov	r2, r7
 800cf8c:	4616      	mov	r6, r2
 800cf8e:	3201      	adds	r2, #1
 800cf90:	7830      	ldrb	r0, [r6, #0]
 800cf92:	f7ff ff9b 	bl	800cecc <__hexdig_fun>
 800cf96:	2800      	cmp	r0, #0
 800cf98:	d1f8      	bne.n	800cf8c <__gethex+0x94>
 800cf9a:	9901      	ldr	r1, [sp, #4]
 800cf9c:	4652      	mov	r2, sl
 800cf9e:	4630      	mov	r0, r6
 800cfa0:	f7fd feae 	bl	800ad00 <strncmp>
 800cfa4:	b980      	cbnz	r0, 800cfc8 <__gethex+0xd0>
 800cfa6:	b94d      	cbnz	r5, 800cfbc <__gethex+0xc4>
 800cfa8:	eb06 050a 	add.w	r5, r6, sl
 800cfac:	462a      	mov	r2, r5
 800cfae:	4616      	mov	r6, r2
 800cfb0:	3201      	adds	r2, #1
 800cfb2:	7830      	ldrb	r0, [r6, #0]
 800cfb4:	f7ff ff8a 	bl	800cecc <__hexdig_fun>
 800cfb8:	2800      	cmp	r0, #0
 800cfba:	d1f8      	bne.n	800cfae <__gethex+0xb6>
 800cfbc:	1bad      	subs	r5, r5, r6
 800cfbe:	00ad      	lsls	r5, r5, #2
 800cfc0:	e004      	b.n	800cfcc <__gethex+0xd4>
 800cfc2:	2400      	movs	r4, #0
 800cfc4:	4625      	mov	r5, r4
 800cfc6:	e7e0      	b.n	800cf8a <__gethex+0x92>
 800cfc8:	2d00      	cmp	r5, #0
 800cfca:	d1f7      	bne.n	800cfbc <__gethex+0xc4>
 800cfcc:	7833      	ldrb	r3, [r6, #0]
 800cfce:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800cfd2:	2b50      	cmp	r3, #80	; 0x50
 800cfd4:	d13b      	bne.n	800d04e <__gethex+0x156>
 800cfd6:	7873      	ldrb	r3, [r6, #1]
 800cfd8:	2b2b      	cmp	r3, #43	; 0x2b
 800cfda:	d02c      	beq.n	800d036 <__gethex+0x13e>
 800cfdc:	2b2d      	cmp	r3, #45	; 0x2d
 800cfde:	d02e      	beq.n	800d03e <__gethex+0x146>
 800cfe0:	1c71      	adds	r1, r6, #1
 800cfe2:	f04f 0900 	mov.w	r9, #0
 800cfe6:	7808      	ldrb	r0, [r1, #0]
 800cfe8:	f7ff ff70 	bl	800cecc <__hexdig_fun>
 800cfec:	1e43      	subs	r3, r0, #1
 800cfee:	b2db      	uxtb	r3, r3
 800cff0:	2b18      	cmp	r3, #24
 800cff2:	d82c      	bhi.n	800d04e <__gethex+0x156>
 800cff4:	f1a0 0210 	sub.w	r2, r0, #16
 800cff8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800cffc:	f7ff ff66 	bl	800cecc <__hexdig_fun>
 800d000:	1e43      	subs	r3, r0, #1
 800d002:	b2db      	uxtb	r3, r3
 800d004:	2b18      	cmp	r3, #24
 800d006:	d91d      	bls.n	800d044 <__gethex+0x14c>
 800d008:	f1b9 0f00 	cmp.w	r9, #0
 800d00c:	d000      	beq.n	800d010 <__gethex+0x118>
 800d00e:	4252      	negs	r2, r2
 800d010:	4415      	add	r5, r2
 800d012:	f8cb 1000 	str.w	r1, [fp]
 800d016:	b1e4      	cbz	r4, 800d052 <__gethex+0x15a>
 800d018:	9b00      	ldr	r3, [sp, #0]
 800d01a:	2b00      	cmp	r3, #0
 800d01c:	bf14      	ite	ne
 800d01e:	2700      	movne	r7, #0
 800d020:	2706      	moveq	r7, #6
 800d022:	4638      	mov	r0, r7
 800d024:	b009      	add	sp, #36	; 0x24
 800d026:	ecbd 8b02 	vpop	{d8}
 800d02a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d02e:	463e      	mov	r6, r7
 800d030:	4625      	mov	r5, r4
 800d032:	2401      	movs	r4, #1
 800d034:	e7ca      	b.n	800cfcc <__gethex+0xd4>
 800d036:	f04f 0900 	mov.w	r9, #0
 800d03a:	1cb1      	adds	r1, r6, #2
 800d03c:	e7d3      	b.n	800cfe6 <__gethex+0xee>
 800d03e:	f04f 0901 	mov.w	r9, #1
 800d042:	e7fa      	b.n	800d03a <__gethex+0x142>
 800d044:	230a      	movs	r3, #10
 800d046:	fb03 0202 	mla	r2, r3, r2, r0
 800d04a:	3a10      	subs	r2, #16
 800d04c:	e7d4      	b.n	800cff8 <__gethex+0x100>
 800d04e:	4631      	mov	r1, r6
 800d050:	e7df      	b.n	800d012 <__gethex+0x11a>
 800d052:	1bf3      	subs	r3, r6, r7
 800d054:	3b01      	subs	r3, #1
 800d056:	4621      	mov	r1, r4
 800d058:	2b07      	cmp	r3, #7
 800d05a:	dc0b      	bgt.n	800d074 <__gethex+0x17c>
 800d05c:	ee18 0a10 	vmov	r0, s16
 800d060:	f000 fb84 	bl	800d76c <_Balloc>
 800d064:	4604      	mov	r4, r0
 800d066:	b940      	cbnz	r0, 800d07a <__gethex+0x182>
 800d068:	4b5d      	ldr	r3, [pc, #372]	; (800d1e0 <__gethex+0x2e8>)
 800d06a:	4602      	mov	r2, r0
 800d06c:	21de      	movs	r1, #222	; 0xde
 800d06e:	485d      	ldr	r0, [pc, #372]	; (800d1e4 <__gethex+0x2ec>)
 800d070:	f7ff f80c 	bl	800c08c <__assert_func>
 800d074:	3101      	adds	r1, #1
 800d076:	105b      	asrs	r3, r3, #1
 800d078:	e7ee      	b.n	800d058 <__gethex+0x160>
 800d07a:	f100 0914 	add.w	r9, r0, #20
 800d07e:	f04f 0b00 	mov.w	fp, #0
 800d082:	f1ca 0301 	rsb	r3, sl, #1
 800d086:	f8cd 9008 	str.w	r9, [sp, #8]
 800d08a:	f8cd b000 	str.w	fp, [sp]
 800d08e:	9306      	str	r3, [sp, #24]
 800d090:	42b7      	cmp	r7, r6
 800d092:	d340      	bcc.n	800d116 <__gethex+0x21e>
 800d094:	9802      	ldr	r0, [sp, #8]
 800d096:	9b00      	ldr	r3, [sp, #0]
 800d098:	f840 3b04 	str.w	r3, [r0], #4
 800d09c:	eba0 0009 	sub.w	r0, r0, r9
 800d0a0:	1080      	asrs	r0, r0, #2
 800d0a2:	0146      	lsls	r6, r0, #5
 800d0a4:	6120      	str	r0, [r4, #16]
 800d0a6:	4618      	mov	r0, r3
 800d0a8:	f000 fc52 	bl	800d950 <__hi0bits>
 800d0ac:	1a30      	subs	r0, r6, r0
 800d0ae:	f8d8 6000 	ldr.w	r6, [r8]
 800d0b2:	42b0      	cmp	r0, r6
 800d0b4:	dd63      	ble.n	800d17e <__gethex+0x286>
 800d0b6:	1b87      	subs	r7, r0, r6
 800d0b8:	4639      	mov	r1, r7
 800d0ba:	4620      	mov	r0, r4
 800d0bc:	f000 fff6 	bl	800e0ac <__any_on>
 800d0c0:	4682      	mov	sl, r0
 800d0c2:	b1a8      	cbz	r0, 800d0f0 <__gethex+0x1f8>
 800d0c4:	1e7b      	subs	r3, r7, #1
 800d0c6:	1159      	asrs	r1, r3, #5
 800d0c8:	f003 021f 	and.w	r2, r3, #31
 800d0cc:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800d0d0:	f04f 0a01 	mov.w	sl, #1
 800d0d4:	fa0a f202 	lsl.w	r2, sl, r2
 800d0d8:	420a      	tst	r2, r1
 800d0da:	d009      	beq.n	800d0f0 <__gethex+0x1f8>
 800d0dc:	4553      	cmp	r3, sl
 800d0de:	dd05      	ble.n	800d0ec <__gethex+0x1f4>
 800d0e0:	1eb9      	subs	r1, r7, #2
 800d0e2:	4620      	mov	r0, r4
 800d0e4:	f000 ffe2 	bl	800e0ac <__any_on>
 800d0e8:	2800      	cmp	r0, #0
 800d0ea:	d145      	bne.n	800d178 <__gethex+0x280>
 800d0ec:	f04f 0a02 	mov.w	sl, #2
 800d0f0:	4639      	mov	r1, r7
 800d0f2:	4620      	mov	r0, r4
 800d0f4:	f7ff fe98 	bl	800ce28 <rshift>
 800d0f8:	443d      	add	r5, r7
 800d0fa:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d0fe:	42ab      	cmp	r3, r5
 800d100:	da4c      	bge.n	800d19c <__gethex+0x2a4>
 800d102:	ee18 0a10 	vmov	r0, s16
 800d106:	4621      	mov	r1, r4
 800d108:	f000 fb70 	bl	800d7ec <_Bfree>
 800d10c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d10e:	2300      	movs	r3, #0
 800d110:	6013      	str	r3, [r2, #0]
 800d112:	27a3      	movs	r7, #163	; 0xa3
 800d114:	e785      	b.n	800d022 <__gethex+0x12a>
 800d116:	1e73      	subs	r3, r6, #1
 800d118:	9a05      	ldr	r2, [sp, #20]
 800d11a:	9303      	str	r3, [sp, #12]
 800d11c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800d120:	4293      	cmp	r3, r2
 800d122:	d019      	beq.n	800d158 <__gethex+0x260>
 800d124:	f1bb 0f20 	cmp.w	fp, #32
 800d128:	d107      	bne.n	800d13a <__gethex+0x242>
 800d12a:	9b02      	ldr	r3, [sp, #8]
 800d12c:	9a00      	ldr	r2, [sp, #0]
 800d12e:	f843 2b04 	str.w	r2, [r3], #4
 800d132:	9302      	str	r3, [sp, #8]
 800d134:	2300      	movs	r3, #0
 800d136:	9300      	str	r3, [sp, #0]
 800d138:	469b      	mov	fp, r3
 800d13a:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800d13e:	f7ff fec5 	bl	800cecc <__hexdig_fun>
 800d142:	9b00      	ldr	r3, [sp, #0]
 800d144:	f000 000f 	and.w	r0, r0, #15
 800d148:	fa00 f00b 	lsl.w	r0, r0, fp
 800d14c:	4303      	orrs	r3, r0
 800d14e:	9300      	str	r3, [sp, #0]
 800d150:	f10b 0b04 	add.w	fp, fp, #4
 800d154:	9b03      	ldr	r3, [sp, #12]
 800d156:	e00d      	b.n	800d174 <__gethex+0x27c>
 800d158:	9b03      	ldr	r3, [sp, #12]
 800d15a:	9a06      	ldr	r2, [sp, #24]
 800d15c:	4413      	add	r3, r2
 800d15e:	42bb      	cmp	r3, r7
 800d160:	d3e0      	bcc.n	800d124 <__gethex+0x22c>
 800d162:	4618      	mov	r0, r3
 800d164:	9901      	ldr	r1, [sp, #4]
 800d166:	9307      	str	r3, [sp, #28]
 800d168:	4652      	mov	r2, sl
 800d16a:	f7fd fdc9 	bl	800ad00 <strncmp>
 800d16e:	9b07      	ldr	r3, [sp, #28]
 800d170:	2800      	cmp	r0, #0
 800d172:	d1d7      	bne.n	800d124 <__gethex+0x22c>
 800d174:	461e      	mov	r6, r3
 800d176:	e78b      	b.n	800d090 <__gethex+0x198>
 800d178:	f04f 0a03 	mov.w	sl, #3
 800d17c:	e7b8      	b.n	800d0f0 <__gethex+0x1f8>
 800d17e:	da0a      	bge.n	800d196 <__gethex+0x29e>
 800d180:	1a37      	subs	r7, r6, r0
 800d182:	4621      	mov	r1, r4
 800d184:	ee18 0a10 	vmov	r0, s16
 800d188:	463a      	mov	r2, r7
 800d18a:	f000 fd4b 	bl	800dc24 <__lshift>
 800d18e:	1bed      	subs	r5, r5, r7
 800d190:	4604      	mov	r4, r0
 800d192:	f100 0914 	add.w	r9, r0, #20
 800d196:	f04f 0a00 	mov.w	sl, #0
 800d19a:	e7ae      	b.n	800d0fa <__gethex+0x202>
 800d19c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d1a0:	42a8      	cmp	r0, r5
 800d1a2:	dd72      	ble.n	800d28a <__gethex+0x392>
 800d1a4:	1b45      	subs	r5, r0, r5
 800d1a6:	42ae      	cmp	r6, r5
 800d1a8:	dc36      	bgt.n	800d218 <__gethex+0x320>
 800d1aa:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d1ae:	2b02      	cmp	r3, #2
 800d1b0:	d02a      	beq.n	800d208 <__gethex+0x310>
 800d1b2:	2b03      	cmp	r3, #3
 800d1b4:	d02c      	beq.n	800d210 <__gethex+0x318>
 800d1b6:	2b01      	cmp	r3, #1
 800d1b8:	d11c      	bne.n	800d1f4 <__gethex+0x2fc>
 800d1ba:	42ae      	cmp	r6, r5
 800d1bc:	d11a      	bne.n	800d1f4 <__gethex+0x2fc>
 800d1be:	2e01      	cmp	r6, #1
 800d1c0:	d112      	bne.n	800d1e8 <__gethex+0x2f0>
 800d1c2:	9a04      	ldr	r2, [sp, #16]
 800d1c4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d1c8:	6013      	str	r3, [r2, #0]
 800d1ca:	2301      	movs	r3, #1
 800d1cc:	6123      	str	r3, [r4, #16]
 800d1ce:	f8c9 3000 	str.w	r3, [r9]
 800d1d2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d1d4:	2762      	movs	r7, #98	; 0x62
 800d1d6:	601c      	str	r4, [r3, #0]
 800d1d8:	e723      	b.n	800d022 <__gethex+0x12a>
 800d1da:	bf00      	nop
 800d1dc:	08010338 	.word	0x08010338
 800d1e0:	080102c1 	.word	0x080102c1
 800d1e4:	080102d2 	.word	0x080102d2
 800d1e8:	1e71      	subs	r1, r6, #1
 800d1ea:	4620      	mov	r0, r4
 800d1ec:	f000 ff5e 	bl	800e0ac <__any_on>
 800d1f0:	2800      	cmp	r0, #0
 800d1f2:	d1e6      	bne.n	800d1c2 <__gethex+0x2ca>
 800d1f4:	ee18 0a10 	vmov	r0, s16
 800d1f8:	4621      	mov	r1, r4
 800d1fa:	f000 faf7 	bl	800d7ec <_Bfree>
 800d1fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d200:	2300      	movs	r3, #0
 800d202:	6013      	str	r3, [r2, #0]
 800d204:	2750      	movs	r7, #80	; 0x50
 800d206:	e70c      	b.n	800d022 <__gethex+0x12a>
 800d208:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d20a:	2b00      	cmp	r3, #0
 800d20c:	d1f2      	bne.n	800d1f4 <__gethex+0x2fc>
 800d20e:	e7d8      	b.n	800d1c2 <__gethex+0x2ca>
 800d210:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d212:	2b00      	cmp	r3, #0
 800d214:	d1d5      	bne.n	800d1c2 <__gethex+0x2ca>
 800d216:	e7ed      	b.n	800d1f4 <__gethex+0x2fc>
 800d218:	1e6f      	subs	r7, r5, #1
 800d21a:	f1ba 0f00 	cmp.w	sl, #0
 800d21e:	d131      	bne.n	800d284 <__gethex+0x38c>
 800d220:	b127      	cbz	r7, 800d22c <__gethex+0x334>
 800d222:	4639      	mov	r1, r7
 800d224:	4620      	mov	r0, r4
 800d226:	f000 ff41 	bl	800e0ac <__any_on>
 800d22a:	4682      	mov	sl, r0
 800d22c:	117b      	asrs	r3, r7, #5
 800d22e:	2101      	movs	r1, #1
 800d230:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800d234:	f007 071f 	and.w	r7, r7, #31
 800d238:	fa01 f707 	lsl.w	r7, r1, r7
 800d23c:	421f      	tst	r7, r3
 800d23e:	4629      	mov	r1, r5
 800d240:	4620      	mov	r0, r4
 800d242:	bf18      	it	ne
 800d244:	f04a 0a02 	orrne.w	sl, sl, #2
 800d248:	1b76      	subs	r6, r6, r5
 800d24a:	f7ff fded 	bl	800ce28 <rshift>
 800d24e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d252:	2702      	movs	r7, #2
 800d254:	f1ba 0f00 	cmp.w	sl, #0
 800d258:	d048      	beq.n	800d2ec <__gethex+0x3f4>
 800d25a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d25e:	2b02      	cmp	r3, #2
 800d260:	d015      	beq.n	800d28e <__gethex+0x396>
 800d262:	2b03      	cmp	r3, #3
 800d264:	d017      	beq.n	800d296 <__gethex+0x39e>
 800d266:	2b01      	cmp	r3, #1
 800d268:	d109      	bne.n	800d27e <__gethex+0x386>
 800d26a:	f01a 0f02 	tst.w	sl, #2
 800d26e:	d006      	beq.n	800d27e <__gethex+0x386>
 800d270:	f8d9 0000 	ldr.w	r0, [r9]
 800d274:	ea4a 0a00 	orr.w	sl, sl, r0
 800d278:	f01a 0f01 	tst.w	sl, #1
 800d27c:	d10e      	bne.n	800d29c <__gethex+0x3a4>
 800d27e:	f047 0710 	orr.w	r7, r7, #16
 800d282:	e033      	b.n	800d2ec <__gethex+0x3f4>
 800d284:	f04f 0a01 	mov.w	sl, #1
 800d288:	e7d0      	b.n	800d22c <__gethex+0x334>
 800d28a:	2701      	movs	r7, #1
 800d28c:	e7e2      	b.n	800d254 <__gethex+0x35c>
 800d28e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d290:	f1c3 0301 	rsb	r3, r3, #1
 800d294:	9315      	str	r3, [sp, #84]	; 0x54
 800d296:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d298:	2b00      	cmp	r3, #0
 800d29a:	d0f0      	beq.n	800d27e <__gethex+0x386>
 800d29c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800d2a0:	f104 0314 	add.w	r3, r4, #20
 800d2a4:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800d2a8:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800d2ac:	f04f 0c00 	mov.w	ip, #0
 800d2b0:	4618      	mov	r0, r3
 800d2b2:	f853 2b04 	ldr.w	r2, [r3], #4
 800d2b6:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d2ba:	d01c      	beq.n	800d2f6 <__gethex+0x3fe>
 800d2bc:	3201      	adds	r2, #1
 800d2be:	6002      	str	r2, [r0, #0]
 800d2c0:	2f02      	cmp	r7, #2
 800d2c2:	f104 0314 	add.w	r3, r4, #20
 800d2c6:	d13f      	bne.n	800d348 <__gethex+0x450>
 800d2c8:	f8d8 2000 	ldr.w	r2, [r8]
 800d2cc:	3a01      	subs	r2, #1
 800d2ce:	42b2      	cmp	r2, r6
 800d2d0:	d10a      	bne.n	800d2e8 <__gethex+0x3f0>
 800d2d2:	1171      	asrs	r1, r6, #5
 800d2d4:	2201      	movs	r2, #1
 800d2d6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d2da:	f006 061f 	and.w	r6, r6, #31
 800d2de:	fa02 f606 	lsl.w	r6, r2, r6
 800d2e2:	421e      	tst	r6, r3
 800d2e4:	bf18      	it	ne
 800d2e6:	4617      	movne	r7, r2
 800d2e8:	f047 0720 	orr.w	r7, r7, #32
 800d2ec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d2ee:	601c      	str	r4, [r3, #0]
 800d2f0:	9b04      	ldr	r3, [sp, #16]
 800d2f2:	601d      	str	r5, [r3, #0]
 800d2f4:	e695      	b.n	800d022 <__gethex+0x12a>
 800d2f6:	4299      	cmp	r1, r3
 800d2f8:	f843 cc04 	str.w	ip, [r3, #-4]
 800d2fc:	d8d8      	bhi.n	800d2b0 <__gethex+0x3b8>
 800d2fe:	68a3      	ldr	r3, [r4, #8]
 800d300:	459b      	cmp	fp, r3
 800d302:	db19      	blt.n	800d338 <__gethex+0x440>
 800d304:	6861      	ldr	r1, [r4, #4]
 800d306:	ee18 0a10 	vmov	r0, s16
 800d30a:	3101      	adds	r1, #1
 800d30c:	f000 fa2e 	bl	800d76c <_Balloc>
 800d310:	4681      	mov	r9, r0
 800d312:	b918      	cbnz	r0, 800d31c <__gethex+0x424>
 800d314:	4b1a      	ldr	r3, [pc, #104]	; (800d380 <__gethex+0x488>)
 800d316:	4602      	mov	r2, r0
 800d318:	2184      	movs	r1, #132	; 0x84
 800d31a:	e6a8      	b.n	800d06e <__gethex+0x176>
 800d31c:	6922      	ldr	r2, [r4, #16]
 800d31e:	3202      	adds	r2, #2
 800d320:	f104 010c 	add.w	r1, r4, #12
 800d324:	0092      	lsls	r2, r2, #2
 800d326:	300c      	adds	r0, #12
 800d328:	f7fb fcdc 	bl	8008ce4 <memcpy>
 800d32c:	4621      	mov	r1, r4
 800d32e:	ee18 0a10 	vmov	r0, s16
 800d332:	f000 fa5b 	bl	800d7ec <_Bfree>
 800d336:	464c      	mov	r4, r9
 800d338:	6923      	ldr	r3, [r4, #16]
 800d33a:	1c5a      	adds	r2, r3, #1
 800d33c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d340:	6122      	str	r2, [r4, #16]
 800d342:	2201      	movs	r2, #1
 800d344:	615a      	str	r2, [r3, #20]
 800d346:	e7bb      	b.n	800d2c0 <__gethex+0x3c8>
 800d348:	6922      	ldr	r2, [r4, #16]
 800d34a:	455a      	cmp	r2, fp
 800d34c:	dd0b      	ble.n	800d366 <__gethex+0x46e>
 800d34e:	2101      	movs	r1, #1
 800d350:	4620      	mov	r0, r4
 800d352:	f7ff fd69 	bl	800ce28 <rshift>
 800d356:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d35a:	3501      	adds	r5, #1
 800d35c:	42ab      	cmp	r3, r5
 800d35e:	f6ff aed0 	blt.w	800d102 <__gethex+0x20a>
 800d362:	2701      	movs	r7, #1
 800d364:	e7c0      	b.n	800d2e8 <__gethex+0x3f0>
 800d366:	f016 061f 	ands.w	r6, r6, #31
 800d36a:	d0fa      	beq.n	800d362 <__gethex+0x46a>
 800d36c:	4453      	add	r3, sl
 800d36e:	f1c6 0620 	rsb	r6, r6, #32
 800d372:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800d376:	f000 faeb 	bl	800d950 <__hi0bits>
 800d37a:	42b0      	cmp	r0, r6
 800d37c:	dbe7      	blt.n	800d34e <__gethex+0x456>
 800d37e:	e7f0      	b.n	800d362 <__gethex+0x46a>
 800d380:	080102c1 	.word	0x080102c1

0800d384 <L_shift>:
 800d384:	f1c2 0208 	rsb	r2, r2, #8
 800d388:	0092      	lsls	r2, r2, #2
 800d38a:	b570      	push	{r4, r5, r6, lr}
 800d38c:	f1c2 0620 	rsb	r6, r2, #32
 800d390:	6843      	ldr	r3, [r0, #4]
 800d392:	6804      	ldr	r4, [r0, #0]
 800d394:	fa03 f506 	lsl.w	r5, r3, r6
 800d398:	432c      	orrs	r4, r5
 800d39a:	40d3      	lsrs	r3, r2
 800d39c:	6004      	str	r4, [r0, #0]
 800d39e:	f840 3f04 	str.w	r3, [r0, #4]!
 800d3a2:	4288      	cmp	r0, r1
 800d3a4:	d3f4      	bcc.n	800d390 <L_shift+0xc>
 800d3a6:	bd70      	pop	{r4, r5, r6, pc}

0800d3a8 <__match>:
 800d3a8:	b530      	push	{r4, r5, lr}
 800d3aa:	6803      	ldr	r3, [r0, #0]
 800d3ac:	3301      	adds	r3, #1
 800d3ae:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d3b2:	b914      	cbnz	r4, 800d3ba <__match+0x12>
 800d3b4:	6003      	str	r3, [r0, #0]
 800d3b6:	2001      	movs	r0, #1
 800d3b8:	bd30      	pop	{r4, r5, pc}
 800d3ba:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d3be:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800d3c2:	2d19      	cmp	r5, #25
 800d3c4:	bf98      	it	ls
 800d3c6:	3220      	addls	r2, #32
 800d3c8:	42a2      	cmp	r2, r4
 800d3ca:	d0f0      	beq.n	800d3ae <__match+0x6>
 800d3cc:	2000      	movs	r0, #0
 800d3ce:	e7f3      	b.n	800d3b8 <__match+0x10>

0800d3d0 <__hexnan>:
 800d3d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3d4:	680b      	ldr	r3, [r1, #0]
 800d3d6:	115e      	asrs	r6, r3, #5
 800d3d8:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800d3dc:	f013 031f 	ands.w	r3, r3, #31
 800d3e0:	b087      	sub	sp, #28
 800d3e2:	bf18      	it	ne
 800d3e4:	3604      	addne	r6, #4
 800d3e6:	2500      	movs	r5, #0
 800d3e8:	1f37      	subs	r7, r6, #4
 800d3ea:	4690      	mov	r8, r2
 800d3ec:	6802      	ldr	r2, [r0, #0]
 800d3ee:	9301      	str	r3, [sp, #4]
 800d3f0:	4682      	mov	sl, r0
 800d3f2:	f846 5c04 	str.w	r5, [r6, #-4]
 800d3f6:	46b9      	mov	r9, r7
 800d3f8:	463c      	mov	r4, r7
 800d3fa:	9502      	str	r5, [sp, #8]
 800d3fc:	46ab      	mov	fp, r5
 800d3fe:	7851      	ldrb	r1, [r2, #1]
 800d400:	1c53      	adds	r3, r2, #1
 800d402:	9303      	str	r3, [sp, #12]
 800d404:	b341      	cbz	r1, 800d458 <__hexnan+0x88>
 800d406:	4608      	mov	r0, r1
 800d408:	9205      	str	r2, [sp, #20]
 800d40a:	9104      	str	r1, [sp, #16]
 800d40c:	f7ff fd5e 	bl	800cecc <__hexdig_fun>
 800d410:	2800      	cmp	r0, #0
 800d412:	d14f      	bne.n	800d4b4 <__hexnan+0xe4>
 800d414:	9904      	ldr	r1, [sp, #16]
 800d416:	9a05      	ldr	r2, [sp, #20]
 800d418:	2920      	cmp	r1, #32
 800d41a:	d818      	bhi.n	800d44e <__hexnan+0x7e>
 800d41c:	9b02      	ldr	r3, [sp, #8]
 800d41e:	459b      	cmp	fp, r3
 800d420:	dd13      	ble.n	800d44a <__hexnan+0x7a>
 800d422:	454c      	cmp	r4, r9
 800d424:	d206      	bcs.n	800d434 <__hexnan+0x64>
 800d426:	2d07      	cmp	r5, #7
 800d428:	dc04      	bgt.n	800d434 <__hexnan+0x64>
 800d42a:	462a      	mov	r2, r5
 800d42c:	4649      	mov	r1, r9
 800d42e:	4620      	mov	r0, r4
 800d430:	f7ff ffa8 	bl	800d384 <L_shift>
 800d434:	4544      	cmp	r4, r8
 800d436:	d950      	bls.n	800d4da <__hexnan+0x10a>
 800d438:	2300      	movs	r3, #0
 800d43a:	f1a4 0904 	sub.w	r9, r4, #4
 800d43e:	f844 3c04 	str.w	r3, [r4, #-4]
 800d442:	f8cd b008 	str.w	fp, [sp, #8]
 800d446:	464c      	mov	r4, r9
 800d448:	461d      	mov	r5, r3
 800d44a:	9a03      	ldr	r2, [sp, #12]
 800d44c:	e7d7      	b.n	800d3fe <__hexnan+0x2e>
 800d44e:	2929      	cmp	r1, #41	; 0x29
 800d450:	d156      	bne.n	800d500 <__hexnan+0x130>
 800d452:	3202      	adds	r2, #2
 800d454:	f8ca 2000 	str.w	r2, [sl]
 800d458:	f1bb 0f00 	cmp.w	fp, #0
 800d45c:	d050      	beq.n	800d500 <__hexnan+0x130>
 800d45e:	454c      	cmp	r4, r9
 800d460:	d206      	bcs.n	800d470 <__hexnan+0xa0>
 800d462:	2d07      	cmp	r5, #7
 800d464:	dc04      	bgt.n	800d470 <__hexnan+0xa0>
 800d466:	462a      	mov	r2, r5
 800d468:	4649      	mov	r1, r9
 800d46a:	4620      	mov	r0, r4
 800d46c:	f7ff ff8a 	bl	800d384 <L_shift>
 800d470:	4544      	cmp	r4, r8
 800d472:	d934      	bls.n	800d4de <__hexnan+0x10e>
 800d474:	f1a8 0204 	sub.w	r2, r8, #4
 800d478:	4623      	mov	r3, r4
 800d47a:	f853 1b04 	ldr.w	r1, [r3], #4
 800d47e:	f842 1f04 	str.w	r1, [r2, #4]!
 800d482:	429f      	cmp	r7, r3
 800d484:	d2f9      	bcs.n	800d47a <__hexnan+0xaa>
 800d486:	1b3b      	subs	r3, r7, r4
 800d488:	f023 0303 	bic.w	r3, r3, #3
 800d48c:	3304      	adds	r3, #4
 800d48e:	3401      	adds	r4, #1
 800d490:	3e03      	subs	r6, #3
 800d492:	42b4      	cmp	r4, r6
 800d494:	bf88      	it	hi
 800d496:	2304      	movhi	r3, #4
 800d498:	4443      	add	r3, r8
 800d49a:	2200      	movs	r2, #0
 800d49c:	f843 2b04 	str.w	r2, [r3], #4
 800d4a0:	429f      	cmp	r7, r3
 800d4a2:	d2fb      	bcs.n	800d49c <__hexnan+0xcc>
 800d4a4:	683b      	ldr	r3, [r7, #0]
 800d4a6:	b91b      	cbnz	r3, 800d4b0 <__hexnan+0xe0>
 800d4a8:	4547      	cmp	r7, r8
 800d4aa:	d127      	bne.n	800d4fc <__hexnan+0x12c>
 800d4ac:	2301      	movs	r3, #1
 800d4ae:	603b      	str	r3, [r7, #0]
 800d4b0:	2005      	movs	r0, #5
 800d4b2:	e026      	b.n	800d502 <__hexnan+0x132>
 800d4b4:	3501      	adds	r5, #1
 800d4b6:	2d08      	cmp	r5, #8
 800d4b8:	f10b 0b01 	add.w	fp, fp, #1
 800d4bc:	dd06      	ble.n	800d4cc <__hexnan+0xfc>
 800d4be:	4544      	cmp	r4, r8
 800d4c0:	d9c3      	bls.n	800d44a <__hexnan+0x7a>
 800d4c2:	2300      	movs	r3, #0
 800d4c4:	f844 3c04 	str.w	r3, [r4, #-4]
 800d4c8:	2501      	movs	r5, #1
 800d4ca:	3c04      	subs	r4, #4
 800d4cc:	6822      	ldr	r2, [r4, #0]
 800d4ce:	f000 000f 	and.w	r0, r0, #15
 800d4d2:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800d4d6:	6022      	str	r2, [r4, #0]
 800d4d8:	e7b7      	b.n	800d44a <__hexnan+0x7a>
 800d4da:	2508      	movs	r5, #8
 800d4dc:	e7b5      	b.n	800d44a <__hexnan+0x7a>
 800d4de:	9b01      	ldr	r3, [sp, #4]
 800d4e0:	2b00      	cmp	r3, #0
 800d4e2:	d0df      	beq.n	800d4a4 <__hexnan+0xd4>
 800d4e4:	f04f 32ff 	mov.w	r2, #4294967295
 800d4e8:	f1c3 0320 	rsb	r3, r3, #32
 800d4ec:	fa22 f303 	lsr.w	r3, r2, r3
 800d4f0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800d4f4:	401a      	ands	r2, r3
 800d4f6:	f846 2c04 	str.w	r2, [r6, #-4]
 800d4fa:	e7d3      	b.n	800d4a4 <__hexnan+0xd4>
 800d4fc:	3f04      	subs	r7, #4
 800d4fe:	e7d1      	b.n	800d4a4 <__hexnan+0xd4>
 800d500:	2004      	movs	r0, #4
 800d502:	b007      	add	sp, #28
 800d504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d508 <_findenv_r>:
 800d508:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d50c:	f8df a06c 	ldr.w	sl, [pc, #108]	; 800d57c <_findenv_r+0x74>
 800d510:	4607      	mov	r7, r0
 800d512:	4689      	mov	r9, r1
 800d514:	4616      	mov	r6, r2
 800d516:	f001 fd33 	bl	800ef80 <__env_lock>
 800d51a:	f8da 4000 	ldr.w	r4, [sl]
 800d51e:	b134      	cbz	r4, 800d52e <_findenv_r+0x26>
 800d520:	464b      	mov	r3, r9
 800d522:	4698      	mov	r8, r3
 800d524:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d528:	b13a      	cbz	r2, 800d53a <_findenv_r+0x32>
 800d52a:	2a3d      	cmp	r2, #61	; 0x3d
 800d52c:	d1f9      	bne.n	800d522 <_findenv_r+0x1a>
 800d52e:	4638      	mov	r0, r7
 800d530:	f001 fd2c 	bl	800ef8c <__env_unlock>
 800d534:	2000      	movs	r0, #0
 800d536:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d53a:	eba8 0809 	sub.w	r8, r8, r9
 800d53e:	46a3      	mov	fp, r4
 800d540:	f854 0b04 	ldr.w	r0, [r4], #4
 800d544:	2800      	cmp	r0, #0
 800d546:	d0f2      	beq.n	800d52e <_findenv_r+0x26>
 800d548:	4642      	mov	r2, r8
 800d54a:	4649      	mov	r1, r9
 800d54c:	f7fd fbd8 	bl	800ad00 <strncmp>
 800d550:	2800      	cmp	r0, #0
 800d552:	d1f4      	bne.n	800d53e <_findenv_r+0x36>
 800d554:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d558:	eb03 0508 	add.w	r5, r3, r8
 800d55c:	f813 3008 	ldrb.w	r3, [r3, r8]
 800d560:	2b3d      	cmp	r3, #61	; 0x3d
 800d562:	d1ec      	bne.n	800d53e <_findenv_r+0x36>
 800d564:	f8da 3000 	ldr.w	r3, [sl]
 800d568:	ebab 0303 	sub.w	r3, fp, r3
 800d56c:	109b      	asrs	r3, r3, #2
 800d56e:	4638      	mov	r0, r7
 800d570:	6033      	str	r3, [r6, #0]
 800d572:	f001 fd0b 	bl	800ef8c <__env_unlock>
 800d576:	1c68      	adds	r0, r5, #1
 800d578:	e7dd      	b.n	800d536 <_findenv_r+0x2e>
 800d57a:	bf00      	nop
 800d57c:	20000240 	.word	0x20000240

0800d580 <_getenv_r>:
 800d580:	b507      	push	{r0, r1, r2, lr}
 800d582:	aa01      	add	r2, sp, #4
 800d584:	f7ff ffc0 	bl	800d508 <_findenv_r>
 800d588:	b003      	add	sp, #12
 800d58a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800d590 <__gettzinfo>:
 800d590:	4800      	ldr	r0, [pc, #0]	; (800d594 <__gettzinfo+0x4>)
 800d592:	4770      	bx	lr
 800d594:	20000078 	.word	0x20000078

0800d598 <gmtime_r>:
 800d598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d59c:	e9d0 6700 	ldrd	r6, r7, [r0]
 800d5a0:	460c      	mov	r4, r1
 800d5a2:	4a4f      	ldr	r2, [pc, #316]	; (800d6e0 <gmtime_r+0x148>)
 800d5a4:	2300      	movs	r3, #0
 800d5a6:	4630      	mov	r0, r6
 800d5a8:	4639      	mov	r1, r7
 800d5aa:	f7f3 fb85 	bl	8000cb8 <__aeabi_ldivmod>
 800d5ae:	4639      	mov	r1, r7
 800d5b0:	4605      	mov	r5, r0
 800d5b2:	4a4b      	ldr	r2, [pc, #300]	; (800d6e0 <gmtime_r+0x148>)
 800d5b4:	4630      	mov	r0, r6
 800d5b6:	2300      	movs	r3, #0
 800d5b8:	f7f3 fb7e 	bl	8000cb8 <__aeabi_ldivmod>
 800d5bc:	2a00      	cmp	r2, #0
 800d5be:	f505 202f 	add.w	r0, r5, #716800	; 0xaf000
 800d5c2:	bfb7      	itett	lt
 800d5c4:	f502 32a8 	addlt.w	r2, r2, #86016	; 0x15000
 800d5c8:	f600 236c 	addwge	r3, r0, #2668	; 0xa6c
 800d5cc:	f600 236b 	addwlt	r3, r0, #2667	; 0xa6b
 800d5d0:	f502 72c0 	addlt.w	r2, r2, #384	; 0x180
 800d5d4:	f44f 6061 	mov.w	r0, #3600	; 0xe10
 800d5d8:	fbb2 f1f0 	udiv	r1, r2, r0
 800d5dc:	fb00 2211 	mls	r2, r0, r1, r2
 800d5e0:	203c      	movs	r0, #60	; 0x3c
 800d5e2:	60a1      	str	r1, [r4, #8]
 800d5e4:	fbb2 f1f0 	udiv	r1, r2, r0
 800d5e8:	fb00 2211 	mls	r2, r0, r1, r2
 800d5ec:	6061      	str	r1, [r4, #4]
 800d5ee:	6022      	str	r2, [r4, #0]
 800d5f0:	2107      	movs	r1, #7
 800d5f2:	1cda      	adds	r2, r3, #3
 800d5f4:	fb92 f1f1 	sdiv	r1, r2, r1
 800d5f8:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 800d5fc:	1a52      	subs	r2, r2, r1
 800d5fe:	bf48      	it	mi
 800d600:	3207      	addmi	r2, #7
 800d602:	4d38      	ldr	r5, [pc, #224]	; (800d6e4 <gmtime_r+0x14c>)
 800d604:	4838      	ldr	r0, [pc, #224]	; (800d6e8 <gmtime_r+0x150>)
 800d606:	61a2      	str	r2, [r4, #24]
 800d608:	2b00      	cmp	r3, #0
 800d60a:	bfb7      	itett	lt
 800d60c:	f5a3 320e 	sublt.w	r2, r3, #145408	; 0x23800
 800d610:	fb93 f5f5 	sdivge	r5, r3, r5
 800d614:	f5a2 722c 	sublt.w	r2, r2, #688	; 0x2b0
 800d618:	fb92 f5f5 	sdivlt	r5, r2, r5
 800d61c:	fb00 3005 	mla	r0, r0, r5, r3
 800d620:	f648 62ac 	movw	r2, #36524	; 0x8eac
 800d624:	fbb0 f2f2 	udiv	r2, r0, r2
 800d628:	4402      	add	r2, r0
 800d62a:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800d62e:	fbb0 f1f3 	udiv	r1, r0, r3
 800d632:	1a52      	subs	r2, r2, r1
 800d634:	f240 1c6d 	movw	ip, #365	; 0x16d
 800d638:	492c      	ldr	r1, [pc, #176]	; (800d6ec <gmtime_r+0x154>)
 800d63a:	fbb0 f1f1 	udiv	r1, r0, r1
 800d63e:	2764      	movs	r7, #100	; 0x64
 800d640:	1a52      	subs	r2, r2, r1
 800d642:	fbb2 f1fc 	udiv	r1, r2, ip
 800d646:	fbb2 f3f3 	udiv	r3, r2, r3
 800d64a:	fbb1 f6f7 	udiv	r6, r1, r7
 800d64e:	1af3      	subs	r3, r6, r3
 800d650:	4403      	add	r3, r0
 800d652:	fb0c 3311 	mls	r3, ip, r1, r3
 800d656:	2299      	movs	r2, #153	; 0x99
 800d658:	eb03 0e83 	add.w	lr, r3, r3, lsl #2
 800d65c:	f10e 0e02 	add.w	lr, lr, #2
 800d660:	f103 0c01 	add.w	ip, r3, #1
 800d664:	fbbe f0f2 	udiv	r0, lr, r2
 800d668:	4342      	muls	r2, r0
 800d66a:	3202      	adds	r2, #2
 800d66c:	f04f 0805 	mov.w	r8, #5
 800d670:	fbb2 f2f8 	udiv	r2, r2, r8
 800d674:	ebac 0c02 	sub.w	ip, ip, r2
 800d678:	f240 52f9 	movw	r2, #1529	; 0x5f9
 800d67c:	4596      	cmp	lr, r2
 800d67e:	bf94      	ite	ls
 800d680:	2202      	movls	r2, #2
 800d682:	f06f 0209 	mvnhi.w	r2, #9
 800d686:	4410      	add	r0, r2
 800d688:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800d68c:	fb02 1505 	mla	r5, r2, r5, r1
 800d690:	2801      	cmp	r0, #1
 800d692:	bf98      	it	ls
 800d694:	3501      	addls	r5, #1
 800d696:	f5b3 7f99 	cmp.w	r3, #306	; 0x132
 800d69a:	d30d      	bcc.n	800d6b8 <gmtime_r+0x120>
 800d69c:	f5a3 7399 	sub.w	r3, r3, #306	; 0x132
 800d6a0:	61e3      	str	r3, [r4, #28]
 800d6a2:	f2a5 756c 	subw	r5, r5, #1900	; 0x76c
 800d6a6:	2300      	movs	r3, #0
 800d6a8:	e9c4 0504 	strd	r0, r5, [r4, #16]
 800d6ac:	f8c4 c00c 	str.w	ip, [r4, #12]
 800d6b0:	6223      	str	r3, [r4, #32]
 800d6b2:	4620      	mov	r0, r4
 800d6b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d6b8:	078a      	lsls	r2, r1, #30
 800d6ba:	d102      	bne.n	800d6c2 <gmtime_r+0x12a>
 800d6bc:	fb07 1616 	mls	r6, r7, r6, r1
 800d6c0:	b95e      	cbnz	r6, 800d6da <gmtime_r+0x142>
 800d6c2:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800d6c6:	fbb1 f6f2 	udiv	r6, r1, r2
 800d6ca:	fb02 1216 	mls	r2, r2, r6, r1
 800d6ce:	fab2 f282 	clz	r2, r2
 800d6d2:	0952      	lsrs	r2, r2, #5
 800d6d4:	333b      	adds	r3, #59	; 0x3b
 800d6d6:	4413      	add	r3, r2
 800d6d8:	e7e2      	b.n	800d6a0 <gmtime_r+0x108>
 800d6da:	2201      	movs	r2, #1
 800d6dc:	e7fa      	b.n	800d6d4 <gmtime_r+0x13c>
 800d6de:	bf00      	nop
 800d6e0:	00015180 	.word	0x00015180
 800d6e4:	00023ab1 	.word	0x00023ab1
 800d6e8:	fffdc54f 	.word	0xfffdc54f
 800d6ec:	00023ab0 	.word	0x00023ab0

0800d6f0 <labs>:
 800d6f0:	2800      	cmp	r0, #0
 800d6f2:	bfb8      	it	lt
 800d6f4:	4240      	neglt	r0, r0
 800d6f6:	4770      	bx	lr

0800d6f8 <_localeconv_r>:
 800d6f8:	4800      	ldr	r0, [pc, #0]	; (800d6fc <_localeconv_r+0x4>)
 800d6fa:	4770      	bx	lr
 800d6fc:	200001c4 	.word	0x200001c4

0800d700 <__retarget_lock_init_recursive>:
 800d700:	4770      	bx	lr

0800d702 <__retarget_lock_acquire>:
 800d702:	4770      	bx	lr

0800d704 <__retarget_lock_acquire_recursive>:
 800d704:	4770      	bx	lr

0800d706 <__retarget_lock_release>:
 800d706:	4770      	bx	lr

0800d708 <__retarget_lock_release_recursive>:
 800d708:	4770      	bx	lr
	...

0800d70c <_lseek_r>:
 800d70c:	b538      	push	{r3, r4, r5, lr}
 800d70e:	4d07      	ldr	r5, [pc, #28]	; (800d72c <_lseek_r+0x20>)
 800d710:	4604      	mov	r4, r0
 800d712:	4608      	mov	r0, r1
 800d714:	4611      	mov	r1, r2
 800d716:	2200      	movs	r2, #0
 800d718:	602a      	str	r2, [r5, #0]
 800d71a:	461a      	mov	r2, r3
 800d71c:	f001 ff38 	bl	800f590 <_lseek>
 800d720:	1c43      	adds	r3, r0, #1
 800d722:	d102      	bne.n	800d72a <_lseek_r+0x1e>
 800d724:	682b      	ldr	r3, [r5, #0]
 800d726:	b103      	cbz	r3, 800d72a <_lseek_r+0x1e>
 800d728:	6023      	str	r3, [r4, #0]
 800d72a:	bd38      	pop	{r3, r4, r5, pc}
 800d72c:	20000360 	.word	0x20000360

0800d730 <__ascii_mbtowc>:
 800d730:	b082      	sub	sp, #8
 800d732:	b901      	cbnz	r1, 800d736 <__ascii_mbtowc+0x6>
 800d734:	a901      	add	r1, sp, #4
 800d736:	b142      	cbz	r2, 800d74a <__ascii_mbtowc+0x1a>
 800d738:	b14b      	cbz	r3, 800d74e <__ascii_mbtowc+0x1e>
 800d73a:	7813      	ldrb	r3, [r2, #0]
 800d73c:	600b      	str	r3, [r1, #0]
 800d73e:	7812      	ldrb	r2, [r2, #0]
 800d740:	1e10      	subs	r0, r2, #0
 800d742:	bf18      	it	ne
 800d744:	2001      	movne	r0, #1
 800d746:	b002      	add	sp, #8
 800d748:	4770      	bx	lr
 800d74a:	4610      	mov	r0, r2
 800d74c:	e7fb      	b.n	800d746 <__ascii_mbtowc+0x16>
 800d74e:	f06f 0001 	mvn.w	r0, #1
 800d752:	e7f8      	b.n	800d746 <__ascii_mbtowc+0x16>

0800d754 <__malloc_lock>:
 800d754:	4801      	ldr	r0, [pc, #4]	; (800d75c <__malloc_lock+0x8>)
 800d756:	f7ff bfd5 	b.w	800d704 <__retarget_lock_acquire_recursive>
 800d75a:	bf00      	nop
 800d75c:	20000359 	.word	0x20000359

0800d760 <__malloc_unlock>:
 800d760:	4801      	ldr	r0, [pc, #4]	; (800d768 <__malloc_unlock+0x8>)
 800d762:	f7ff bfd1 	b.w	800d708 <__retarget_lock_release_recursive>
 800d766:	bf00      	nop
 800d768:	20000359 	.word	0x20000359

0800d76c <_Balloc>:
 800d76c:	b570      	push	{r4, r5, r6, lr}
 800d76e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d770:	4604      	mov	r4, r0
 800d772:	460d      	mov	r5, r1
 800d774:	b976      	cbnz	r6, 800d794 <_Balloc+0x28>
 800d776:	2010      	movs	r0, #16
 800d778:	f7fb faa4 	bl	8008cc4 <malloc>
 800d77c:	4602      	mov	r2, r0
 800d77e:	6260      	str	r0, [r4, #36]	; 0x24
 800d780:	b920      	cbnz	r0, 800d78c <_Balloc+0x20>
 800d782:	4b18      	ldr	r3, [pc, #96]	; (800d7e4 <_Balloc+0x78>)
 800d784:	4818      	ldr	r0, [pc, #96]	; (800d7e8 <_Balloc+0x7c>)
 800d786:	2166      	movs	r1, #102	; 0x66
 800d788:	f7fe fc80 	bl	800c08c <__assert_func>
 800d78c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d790:	6006      	str	r6, [r0, #0]
 800d792:	60c6      	str	r6, [r0, #12]
 800d794:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800d796:	68f3      	ldr	r3, [r6, #12]
 800d798:	b183      	cbz	r3, 800d7bc <_Balloc+0x50>
 800d79a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d79c:	68db      	ldr	r3, [r3, #12]
 800d79e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d7a2:	b9b8      	cbnz	r0, 800d7d4 <_Balloc+0x68>
 800d7a4:	2101      	movs	r1, #1
 800d7a6:	fa01 f605 	lsl.w	r6, r1, r5
 800d7aa:	1d72      	adds	r2, r6, #5
 800d7ac:	0092      	lsls	r2, r2, #2
 800d7ae:	4620      	mov	r0, r4
 800d7b0:	f000 fc9d 	bl	800e0ee <_calloc_r>
 800d7b4:	b160      	cbz	r0, 800d7d0 <_Balloc+0x64>
 800d7b6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d7ba:	e00e      	b.n	800d7da <_Balloc+0x6e>
 800d7bc:	2221      	movs	r2, #33	; 0x21
 800d7be:	2104      	movs	r1, #4
 800d7c0:	4620      	mov	r0, r4
 800d7c2:	f000 fc94 	bl	800e0ee <_calloc_r>
 800d7c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d7c8:	60f0      	str	r0, [r6, #12]
 800d7ca:	68db      	ldr	r3, [r3, #12]
 800d7cc:	2b00      	cmp	r3, #0
 800d7ce:	d1e4      	bne.n	800d79a <_Balloc+0x2e>
 800d7d0:	2000      	movs	r0, #0
 800d7d2:	bd70      	pop	{r4, r5, r6, pc}
 800d7d4:	6802      	ldr	r2, [r0, #0]
 800d7d6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d7da:	2300      	movs	r3, #0
 800d7dc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d7e0:	e7f7      	b.n	800d7d2 <_Balloc+0x66>
 800d7e2:	bf00      	nop
 800d7e4:	0800fca4 	.word	0x0800fca4
 800d7e8:	0801034c 	.word	0x0801034c

0800d7ec <_Bfree>:
 800d7ec:	b570      	push	{r4, r5, r6, lr}
 800d7ee:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d7f0:	4605      	mov	r5, r0
 800d7f2:	460c      	mov	r4, r1
 800d7f4:	b976      	cbnz	r6, 800d814 <_Bfree+0x28>
 800d7f6:	2010      	movs	r0, #16
 800d7f8:	f7fb fa64 	bl	8008cc4 <malloc>
 800d7fc:	4602      	mov	r2, r0
 800d7fe:	6268      	str	r0, [r5, #36]	; 0x24
 800d800:	b920      	cbnz	r0, 800d80c <_Bfree+0x20>
 800d802:	4b09      	ldr	r3, [pc, #36]	; (800d828 <_Bfree+0x3c>)
 800d804:	4809      	ldr	r0, [pc, #36]	; (800d82c <_Bfree+0x40>)
 800d806:	218a      	movs	r1, #138	; 0x8a
 800d808:	f7fe fc40 	bl	800c08c <__assert_func>
 800d80c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d810:	6006      	str	r6, [r0, #0]
 800d812:	60c6      	str	r6, [r0, #12]
 800d814:	b13c      	cbz	r4, 800d826 <_Bfree+0x3a>
 800d816:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d818:	6862      	ldr	r2, [r4, #4]
 800d81a:	68db      	ldr	r3, [r3, #12]
 800d81c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d820:	6021      	str	r1, [r4, #0]
 800d822:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d826:	bd70      	pop	{r4, r5, r6, pc}
 800d828:	0800fca4 	.word	0x0800fca4
 800d82c:	0801034c 	.word	0x0801034c

0800d830 <__multadd>:
 800d830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d834:	690d      	ldr	r5, [r1, #16]
 800d836:	4607      	mov	r7, r0
 800d838:	460c      	mov	r4, r1
 800d83a:	461e      	mov	r6, r3
 800d83c:	f101 0c14 	add.w	ip, r1, #20
 800d840:	2000      	movs	r0, #0
 800d842:	f8dc 3000 	ldr.w	r3, [ip]
 800d846:	b299      	uxth	r1, r3
 800d848:	fb02 6101 	mla	r1, r2, r1, r6
 800d84c:	0c1e      	lsrs	r6, r3, #16
 800d84e:	0c0b      	lsrs	r3, r1, #16
 800d850:	fb02 3306 	mla	r3, r2, r6, r3
 800d854:	b289      	uxth	r1, r1
 800d856:	3001      	adds	r0, #1
 800d858:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800d85c:	4285      	cmp	r5, r0
 800d85e:	f84c 1b04 	str.w	r1, [ip], #4
 800d862:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800d866:	dcec      	bgt.n	800d842 <__multadd+0x12>
 800d868:	b30e      	cbz	r6, 800d8ae <__multadd+0x7e>
 800d86a:	68a3      	ldr	r3, [r4, #8]
 800d86c:	42ab      	cmp	r3, r5
 800d86e:	dc19      	bgt.n	800d8a4 <__multadd+0x74>
 800d870:	6861      	ldr	r1, [r4, #4]
 800d872:	4638      	mov	r0, r7
 800d874:	3101      	adds	r1, #1
 800d876:	f7ff ff79 	bl	800d76c <_Balloc>
 800d87a:	4680      	mov	r8, r0
 800d87c:	b928      	cbnz	r0, 800d88a <__multadd+0x5a>
 800d87e:	4602      	mov	r2, r0
 800d880:	4b0c      	ldr	r3, [pc, #48]	; (800d8b4 <__multadd+0x84>)
 800d882:	480d      	ldr	r0, [pc, #52]	; (800d8b8 <__multadd+0x88>)
 800d884:	21b5      	movs	r1, #181	; 0xb5
 800d886:	f7fe fc01 	bl	800c08c <__assert_func>
 800d88a:	6922      	ldr	r2, [r4, #16]
 800d88c:	3202      	adds	r2, #2
 800d88e:	f104 010c 	add.w	r1, r4, #12
 800d892:	0092      	lsls	r2, r2, #2
 800d894:	300c      	adds	r0, #12
 800d896:	f7fb fa25 	bl	8008ce4 <memcpy>
 800d89a:	4621      	mov	r1, r4
 800d89c:	4638      	mov	r0, r7
 800d89e:	f7ff ffa5 	bl	800d7ec <_Bfree>
 800d8a2:	4644      	mov	r4, r8
 800d8a4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800d8a8:	3501      	adds	r5, #1
 800d8aa:	615e      	str	r6, [r3, #20]
 800d8ac:	6125      	str	r5, [r4, #16]
 800d8ae:	4620      	mov	r0, r4
 800d8b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8b4:	080102c1 	.word	0x080102c1
 800d8b8:	0801034c 	.word	0x0801034c

0800d8bc <__s2b>:
 800d8bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d8c0:	460c      	mov	r4, r1
 800d8c2:	4615      	mov	r5, r2
 800d8c4:	461f      	mov	r7, r3
 800d8c6:	2209      	movs	r2, #9
 800d8c8:	3308      	adds	r3, #8
 800d8ca:	4606      	mov	r6, r0
 800d8cc:	fb93 f3f2 	sdiv	r3, r3, r2
 800d8d0:	2100      	movs	r1, #0
 800d8d2:	2201      	movs	r2, #1
 800d8d4:	429a      	cmp	r2, r3
 800d8d6:	db09      	blt.n	800d8ec <__s2b+0x30>
 800d8d8:	4630      	mov	r0, r6
 800d8da:	f7ff ff47 	bl	800d76c <_Balloc>
 800d8de:	b940      	cbnz	r0, 800d8f2 <__s2b+0x36>
 800d8e0:	4602      	mov	r2, r0
 800d8e2:	4b19      	ldr	r3, [pc, #100]	; (800d948 <__s2b+0x8c>)
 800d8e4:	4819      	ldr	r0, [pc, #100]	; (800d94c <__s2b+0x90>)
 800d8e6:	21ce      	movs	r1, #206	; 0xce
 800d8e8:	f7fe fbd0 	bl	800c08c <__assert_func>
 800d8ec:	0052      	lsls	r2, r2, #1
 800d8ee:	3101      	adds	r1, #1
 800d8f0:	e7f0      	b.n	800d8d4 <__s2b+0x18>
 800d8f2:	9b08      	ldr	r3, [sp, #32]
 800d8f4:	6143      	str	r3, [r0, #20]
 800d8f6:	2d09      	cmp	r5, #9
 800d8f8:	f04f 0301 	mov.w	r3, #1
 800d8fc:	6103      	str	r3, [r0, #16]
 800d8fe:	dd16      	ble.n	800d92e <__s2b+0x72>
 800d900:	f104 0909 	add.w	r9, r4, #9
 800d904:	46c8      	mov	r8, r9
 800d906:	442c      	add	r4, r5
 800d908:	f818 3b01 	ldrb.w	r3, [r8], #1
 800d90c:	4601      	mov	r1, r0
 800d90e:	3b30      	subs	r3, #48	; 0x30
 800d910:	220a      	movs	r2, #10
 800d912:	4630      	mov	r0, r6
 800d914:	f7ff ff8c 	bl	800d830 <__multadd>
 800d918:	45a0      	cmp	r8, r4
 800d91a:	d1f5      	bne.n	800d908 <__s2b+0x4c>
 800d91c:	f1a5 0408 	sub.w	r4, r5, #8
 800d920:	444c      	add	r4, r9
 800d922:	1b2d      	subs	r5, r5, r4
 800d924:	1963      	adds	r3, r4, r5
 800d926:	42bb      	cmp	r3, r7
 800d928:	db04      	blt.n	800d934 <__s2b+0x78>
 800d92a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d92e:	340a      	adds	r4, #10
 800d930:	2509      	movs	r5, #9
 800d932:	e7f6      	b.n	800d922 <__s2b+0x66>
 800d934:	f814 3b01 	ldrb.w	r3, [r4], #1
 800d938:	4601      	mov	r1, r0
 800d93a:	3b30      	subs	r3, #48	; 0x30
 800d93c:	220a      	movs	r2, #10
 800d93e:	4630      	mov	r0, r6
 800d940:	f7ff ff76 	bl	800d830 <__multadd>
 800d944:	e7ee      	b.n	800d924 <__s2b+0x68>
 800d946:	bf00      	nop
 800d948:	080102c1 	.word	0x080102c1
 800d94c:	0801034c 	.word	0x0801034c

0800d950 <__hi0bits>:
 800d950:	0c03      	lsrs	r3, r0, #16
 800d952:	041b      	lsls	r3, r3, #16
 800d954:	b9d3      	cbnz	r3, 800d98c <__hi0bits+0x3c>
 800d956:	0400      	lsls	r0, r0, #16
 800d958:	2310      	movs	r3, #16
 800d95a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800d95e:	bf04      	itt	eq
 800d960:	0200      	lsleq	r0, r0, #8
 800d962:	3308      	addeq	r3, #8
 800d964:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800d968:	bf04      	itt	eq
 800d96a:	0100      	lsleq	r0, r0, #4
 800d96c:	3304      	addeq	r3, #4
 800d96e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800d972:	bf04      	itt	eq
 800d974:	0080      	lsleq	r0, r0, #2
 800d976:	3302      	addeq	r3, #2
 800d978:	2800      	cmp	r0, #0
 800d97a:	db05      	blt.n	800d988 <__hi0bits+0x38>
 800d97c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800d980:	f103 0301 	add.w	r3, r3, #1
 800d984:	bf08      	it	eq
 800d986:	2320      	moveq	r3, #32
 800d988:	4618      	mov	r0, r3
 800d98a:	4770      	bx	lr
 800d98c:	2300      	movs	r3, #0
 800d98e:	e7e4      	b.n	800d95a <__hi0bits+0xa>

0800d990 <__lo0bits>:
 800d990:	6803      	ldr	r3, [r0, #0]
 800d992:	f013 0207 	ands.w	r2, r3, #7
 800d996:	4601      	mov	r1, r0
 800d998:	d00b      	beq.n	800d9b2 <__lo0bits+0x22>
 800d99a:	07da      	lsls	r2, r3, #31
 800d99c:	d423      	bmi.n	800d9e6 <__lo0bits+0x56>
 800d99e:	0798      	lsls	r0, r3, #30
 800d9a0:	bf49      	itett	mi
 800d9a2:	085b      	lsrmi	r3, r3, #1
 800d9a4:	089b      	lsrpl	r3, r3, #2
 800d9a6:	2001      	movmi	r0, #1
 800d9a8:	600b      	strmi	r3, [r1, #0]
 800d9aa:	bf5c      	itt	pl
 800d9ac:	600b      	strpl	r3, [r1, #0]
 800d9ae:	2002      	movpl	r0, #2
 800d9b0:	4770      	bx	lr
 800d9b2:	b298      	uxth	r0, r3
 800d9b4:	b9a8      	cbnz	r0, 800d9e2 <__lo0bits+0x52>
 800d9b6:	0c1b      	lsrs	r3, r3, #16
 800d9b8:	2010      	movs	r0, #16
 800d9ba:	b2da      	uxtb	r2, r3
 800d9bc:	b90a      	cbnz	r2, 800d9c2 <__lo0bits+0x32>
 800d9be:	3008      	adds	r0, #8
 800d9c0:	0a1b      	lsrs	r3, r3, #8
 800d9c2:	071a      	lsls	r2, r3, #28
 800d9c4:	bf04      	itt	eq
 800d9c6:	091b      	lsreq	r3, r3, #4
 800d9c8:	3004      	addeq	r0, #4
 800d9ca:	079a      	lsls	r2, r3, #30
 800d9cc:	bf04      	itt	eq
 800d9ce:	089b      	lsreq	r3, r3, #2
 800d9d0:	3002      	addeq	r0, #2
 800d9d2:	07da      	lsls	r2, r3, #31
 800d9d4:	d403      	bmi.n	800d9de <__lo0bits+0x4e>
 800d9d6:	085b      	lsrs	r3, r3, #1
 800d9d8:	f100 0001 	add.w	r0, r0, #1
 800d9dc:	d005      	beq.n	800d9ea <__lo0bits+0x5a>
 800d9de:	600b      	str	r3, [r1, #0]
 800d9e0:	4770      	bx	lr
 800d9e2:	4610      	mov	r0, r2
 800d9e4:	e7e9      	b.n	800d9ba <__lo0bits+0x2a>
 800d9e6:	2000      	movs	r0, #0
 800d9e8:	4770      	bx	lr
 800d9ea:	2020      	movs	r0, #32
 800d9ec:	4770      	bx	lr
	...

0800d9f0 <__i2b>:
 800d9f0:	b510      	push	{r4, lr}
 800d9f2:	460c      	mov	r4, r1
 800d9f4:	2101      	movs	r1, #1
 800d9f6:	f7ff feb9 	bl	800d76c <_Balloc>
 800d9fa:	4602      	mov	r2, r0
 800d9fc:	b928      	cbnz	r0, 800da0a <__i2b+0x1a>
 800d9fe:	4b05      	ldr	r3, [pc, #20]	; (800da14 <__i2b+0x24>)
 800da00:	4805      	ldr	r0, [pc, #20]	; (800da18 <__i2b+0x28>)
 800da02:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800da06:	f7fe fb41 	bl	800c08c <__assert_func>
 800da0a:	2301      	movs	r3, #1
 800da0c:	6144      	str	r4, [r0, #20]
 800da0e:	6103      	str	r3, [r0, #16]
 800da10:	bd10      	pop	{r4, pc}
 800da12:	bf00      	nop
 800da14:	080102c1 	.word	0x080102c1
 800da18:	0801034c 	.word	0x0801034c

0800da1c <__multiply>:
 800da1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da20:	4691      	mov	r9, r2
 800da22:	690a      	ldr	r2, [r1, #16]
 800da24:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800da28:	429a      	cmp	r2, r3
 800da2a:	bfb8      	it	lt
 800da2c:	460b      	movlt	r3, r1
 800da2e:	460c      	mov	r4, r1
 800da30:	bfbc      	itt	lt
 800da32:	464c      	movlt	r4, r9
 800da34:	4699      	movlt	r9, r3
 800da36:	6927      	ldr	r7, [r4, #16]
 800da38:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800da3c:	68a3      	ldr	r3, [r4, #8]
 800da3e:	6861      	ldr	r1, [r4, #4]
 800da40:	eb07 060a 	add.w	r6, r7, sl
 800da44:	42b3      	cmp	r3, r6
 800da46:	b085      	sub	sp, #20
 800da48:	bfb8      	it	lt
 800da4a:	3101      	addlt	r1, #1
 800da4c:	f7ff fe8e 	bl	800d76c <_Balloc>
 800da50:	b930      	cbnz	r0, 800da60 <__multiply+0x44>
 800da52:	4602      	mov	r2, r0
 800da54:	4b44      	ldr	r3, [pc, #272]	; (800db68 <__multiply+0x14c>)
 800da56:	4845      	ldr	r0, [pc, #276]	; (800db6c <__multiply+0x150>)
 800da58:	f240 115d 	movw	r1, #349	; 0x15d
 800da5c:	f7fe fb16 	bl	800c08c <__assert_func>
 800da60:	f100 0514 	add.w	r5, r0, #20
 800da64:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800da68:	462b      	mov	r3, r5
 800da6a:	2200      	movs	r2, #0
 800da6c:	4543      	cmp	r3, r8
 800da6e:	d321      	bcc.n	800dab4 <__multiply+0x98>
 800da70:	f104 0314 	add.w	r3, r4, #20
 800da74:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800da78:	f109 0314 	add.w	r3, r9, #20
 800da7c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800da80:	9202      	str	r2, [sp, #8]
 800da82:	1b3a      	subs	r2, r7, r4
 800da84:	3a15      	subs	r2, #21
 800da86:	f022 0203 	bic.w	r2, r2, #3
 800da8a:	3204      	adds	r2, #4
 800da8c:	f104 0115 	add.w	r1, r4, #21
 800da90:	428f      	cmp	r7, r1
 800da92:	bf38      	it	cc
 800da94:	2204      	movcc	r2, #4
 800da96:	9201      	str	r2, [sp, #4]
 800da98:	9a02      	ldr	r2, [sp, #8]
 800da9a:	9303      	str	r3, [sp, #12]
 800da9c:	429a      	cmp	r2, r3
 800da9e:	d80c      	bhi.n	800daba <__multiply+0x9e>
 800daa0:	2e00      	cmp	r6, #0
 800daa2:	dd03      	ble.n	800daac <__multiply+0x90>
 800daa4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800daa8:	2b00      	cmp	r3, #0
 800daaa:	d05a      	beq.n	800db62 <__multiply+0x146>
 800daac:	6106      	str	r6, [r0, #16]
 800daae:	b005      	add	sp, #20
 800dab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dab4:	f843 2b04 	str.w	r2, [r3], #4
 800dab8:	e7d8      	b.n	800da6c <__multiply+0x50>
 800daba:	f8b3 a000 	ldrh.w	sl, [r3]
 800dabe:	f1ba 0f00 	cmp.w	sl, #0
 800dac2:	d024      	beq.n	800db0e <__multiply+0xf2>
 800dac4:	f104 0e14 	add.w	lr, r4, #20
 800dac8:	46a9      	mov	r9, r5
 800daca:	f04f 0c00 	mov.w	ip, #0
 800dace:	f85e 2b04 	ldr.w	r2, [lr], #4
 800dad2:	f8d9 1000 	ldr.w	r1, [r9]
 800dad6:	fa1f fb82 	uxth.w	fp, r2
 800dada:	b289      	uxth	r1, r1
 800dadc:	fb0a 110b 	mla	r1, sl, fp, r1
 800dae0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800dae4:	f8d9 2000 	ldr.w	r2, [r9]
 800dae8:	4461      	add	r1, ip
 800daea:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800daee:	fb0a c20b 	mla	r2, sl, fp, ip
 800daf2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800daf6:	b289      	uxth	r1, r1
 800daf8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800dafc:	4577      	cmp	r7, lr
 800dafe:	f849 1b04 	str.w	r1, [r9], #4
 800db02:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800db06:	d8e2      	bhi.n	800dace <__multiply+0xb2>
 800db08:	9a01      	ldr	r2, [sp, #4]
 800db0a:	f845 c002 	str.w	ip, [r5, r2]
 800db0e:	9a03      	ldr	r2, [sp, #12]
 800db10:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800db14:	3304      	adds	r3, #4
 800db16:	f1b9 0f00 	cmp.w	r9, #0
 800db1a:	d020      	beq.n	800db5e <__multiply+0x142>
 800db1c:	6829      	ldr	r1, [r5, #0]
 800db1e:	f104 0c14 	add.w	ip, r4, #20
 800db22:	46ae      	mov	lr, r5
 800db24:	f04f 0a00 	mov.w	sl, #0
 800db28:	f8bc b000 	ldrh.w	fp, [ip]
 800db2c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800db30:	fb09 220b 	mla	r2, r9, fp, r2
 800db34:	4492      	add	sl, r2
 800db36:	b289      	uxth	r1, r1
 800db38:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800db3c:	f84e 1b04 	str.w	r1, [lr], #4
 800db40:	f85c 2b04 	ldr.w	r2, [ip], #4
 800db44:	f8be 1000 	ldrh.w	r1, [lr]
 800db48:	0c12      	lsrs	r2, r2, #16
 800db4a:	fb09 1102 	mla	r1, r9, r2, r1
 800db4e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800db52:	4567      	cmp	r7, ip
 800db54:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800db58:	d8e6      	bhi.n	800db28 <__multiply+0x10c>
 800db5a:	9a01      	ldr	r2, [sp, #4]
 800db5c:	50a9      	str	r1, [r5, r2]
 800db5e:	3504      	adds	r5, #4
 800db60:	e79a      	b.n	800da98 <__multiply+0x7c>
 800db62:	3e01      	subs	r6, #1
 800db64:	e79c      	b.n	800daa0 <__multiply+0x84>
 800db66:	bf00      	nop
 800db68:	080102c1 	.word	0x080102c1
 800db6c:	0801034c 	.word	0x0801034c

0800db70 <__pow5mult>:
 800db70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800db74:	4615      	mov	r5, r2
 800db76:	f012 0203 	ands.w	r2, r2, #3
 800db7a:	4606      	mov	r6, r0
 800db7c:	460f      	mov	r7, r1
 800db7e:	d007      	beq.n	800db90 <__pow5mult+0x20>
 800db80:	4c25      	ldr	r4, [pc, #148]	; (800dc18 <__pow5mult+0xa8>)
 800db82:	3a01      	subs	r2, #1
 800db84:	2300      	movs	r3, #0
 800db86:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800db8a:	f7ff fe51 	bl	800d830 <__multadd>
 800db8e:	4607      	mov	r7, r0
 800db90:	10ad      	asrs	r5, r5, #2
 800db92:	d03d      	beq.n	800dc10 <__pow5mult+0xa0>
 800db94:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800db96:	b97c      	cbnz	r4, 800dbb8 <__pow5mult+0x48>
 800db98:	2010      	movs	r0, #16
 800db9a:	f7fb f893 	bl	8008cc4 <malloc>
 800db9e:	4602      	mov	r2, r0
 800dba0:	6270      	str	r0, [r6, #36]	; 0x24
 800dba2:	b928      	cbnz	r0, 800dbb0 <__pow5mult+0x40>
 800dba4:	4b1d      	ldr	r3, [pc, #116]	; (800dc1c <__pow5mult+0xac>)
 800dba6:	481e      	ldr	r0, [pc, #120]	; (800dc20 <__pow5mult+0xb0>)
 800dba8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800dbac:	f7fe fa6e 	bl	800c08c <__assert_func>
 800dbb0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800dbb4:	6004      	str	r4, [r0, #0]
 800dbb6:	60c4      	str	r4, [r0, #12]
 800dbb8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800dbbc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800dbc0:	b94c      	cbnz	r4, 800dbd6 <__pow5mult+0x66>
 800dbc2:	f240 2171 	movw	r1, #625	; 0x271
 800dbc6:	4630      	mov	r0, r6
 800dbc8:	f7ff ff12 	bl	800d9f0 <__i2b>
 800dbcc:	2300      	movs	r3, #0
 800dbce:	f8c8 0008 	str.w	r0, [r8, #8]
 800dbd2:	4604      	mov	r4, r0
 800dbd4:	6003      	str	r3, [r0, #0]
 800dbd6:	f04f 0900 	mov.w	r9, #0
 800dbda:	07eb      	lsls	r3, r5, #31
 800dbdc:	d50a      	bpl.n	800dbf4 <__pow5mult+0x84>
 800dbde:	4639      	mov	r1, r7
 800dbe0:	4622      	mov	r2, r4
 800dbe2:	4630      	mov	r0, r6
 800dbe4:	f7ff ff1a 	bl	800da1c <__multiply>
 800dbe8:	4639      	mov	r1, r7
 800dbea:	4680      	mov	r8, r0
 800dbec:	4630      	mov	r0, r6
 800dbee:	f7ff fdfd 	bl	800d7ec <_Bfree>
 800dbf2:	4647      	mov	r7, r8
 800dbf4:	106d      	asrs	r5, r5, #1
 800dbf6:	d00b      	beq.n	800dc10 <__pow5mult+0xa0>
 800dbf8:	6820      	ldr	r0, [r4, #0]
 800dbfa:	b938      	cbnz	r0, 800dc0c <__pow5mult+0x9c>
 800dbfc:	4622      	mov	r2, r4
 800dbfe:	4621      	mov	r1, r4
 800dc00:	4630      	mov	r0, r6
 800dc02:	f7ff ff0b 	bl	800da1c <__multiply>
 800dc06:	6020      	str	r0, [r4, #0]
 800dc08:	f8c0 9000 	str.w	r9, [r0]
 800dc0c:	4604      	mov	r4, r0
 800dc0e:	e7e4      	b.n	800dbda <__pow5mult+0x6a>
 800dc10:	4638      	mov	r0, r7
 800dc12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dc16:	bf00      	nop
 800dc18:	08010498 	.word	0x08010498
 800dc1c:	0800fca4 	.word	0x0800fca4
 800dc20:	0801034c 	.word	0x0801034c

0800dc24 <__lshift>:
 800dc24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc28:	460c      	mov	r4, r1
 800dc2a:	6849      	ldr	r1, [r1, #4]
 800dc2c:	6923      	ldr	r3, [r4, #16]
 800dc2e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800dc32:	68a3      	ldr	r3, [r4, #8]
 800dc34:	4607      	mov	r7, r0
 800dc36:	4691      	mov	r9, r2
 800dc38:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800dc3c:	f108 0601 	add.w	r6, r8, #1
 800dc40:	42b3      	cmp	r3, r6
 800dc42:	db0b      	blt.n	800dc5c <__lshift+0x38>
 800dc44:	4638      	mov	r0, r7
 800dc46:	f7ff fd91 	bl	800d76c <_Balloc>
 800dc4a:	4605      	mov	r5, r0
 800dc4c:	b948      	cbnz	r0, 800dc62 <__lshift+0x3e>
 800dc4e:	4602      	mov	r2, r0
 800dc50:	4b2a      	ldr	r3, [pc, #168]	; (800dcfc <__lshift+0xd8>)
 800dc52:	482b      	ldr	r0, [pc, #172]	; (800dd00 <__lshift+0xdc>)
 800dc54:	f240 11d9 	movw	r1, #473	; 0x1d9
 800dc58:	f7fe fa18 	bl	800c08c <__assert_func>
 800dc5c:	3101      	adds	r1, #1
 800dc5e:	005b      	lsls	r3, r3, #1
 800dc60:	e7ee      	b.n	800dc40 <__lshift+0x1c>
 800dc62:	2300      	movs	r3, #0
 800dc64:	f100 0114 	add.w	r1, r0, #20
 800dc68:	f100 0210 	add.w	r2, r0, #16
 800dc6c:	4618      	mov	r0, r3
 800dc6e:	4553      	cmp	r3, sl
 800dc70:	db37      	blt.n	800dce2 <__lshift+0xbe>
 800dc72:	6920      	ldr	r0, [r4, #16]
 800dc74:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800dc78:	f104 0314 	add.w	r3, r4, #20
 800dc7c:	f019 091f 	ands.w	r9, r9, #31
 800dc80:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800dc84:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800dc88:	d02f      	beq.n	800dcea <__lshift+0xc6>
 800dc8a:	f1c9 0e20 	rsb	lr, r9, #32
 800dc8e:	468a      	mov	sl, r1
 800dc90:	f04f 0c00 	mov.w	ip, #0
 800dc94:	681a      	ldr	r2, [r3, #0]
 800dc96:	fa02 f209 	lsl.w	r2, r2, r9
 800dc9a:	ea42 020c 	orr.w	r2, r2, ip
 800dc9e:	f84a 2b04 	str.w	r2, [sl], #4
 800dca2:	f853 2b04 	ldr.w	r2, [r3], #4
 800dca6:	4298      	cmp	r0, r3
 800dca8:	fa22 fc0e 	lsr.w	ip, r2, lr
 800dcac:	d8f2      	bhi.n	800dc94 <__lshift+0x70>
 800dcae:	1b03      	subs	r3, r0, r4
 800dcb0:	3b15      	subs	r3, #21
 800dcb2:	f023 0303 	bic.w	r3, r3, #3
 800dcb6:	3304      	adds	r3, #4
 800dcb8:	f104 0215 	add.w	r2, r4, #21
 800dcbc:	4290      	cmp	r0, r2
 800dcbe:	bf38      	it	cc
 800dcc0:	2304      	movcc	r3, #4
 800dcc2:	f841 c003 	str.w	ip, [r1, r3]
 800dcc6:	f1bc 0f00 	cmp.w	ip, #0
 800dcca:	d001      	beq.n	800dcd0 <__lshift+0xac>
 800dccc:	f108 0602 	add.w	r6, r8, #2
 800dcd0:	3e01      	subs	r6, #1
 800dcd2:	4638      	mov	r0, r7
 800dcd4:	612e      	str	r6, [r5, #16]
 800dcd6:	4621      	mov	r1, r4
 800dcd8:	f7ff fd88 	bl	800d7ec <_Bfree>
 800dcdc:	4628      	mov	r0, r5
 800dcde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dce2:	f842 0f04 	str.w	r0, [r2, #4]!
 800dce6:	3301      	adds	r3, #1
 800dce8:	e7c1      	b.n	800dc6e <__lshift+0x4a>
 800dcea:	3904      	subs	r1, #4
 800dcec:	f853 2b04 	ldr.w	r2, [r3], #4
 800dcf0:	f841 2f04 	str.w	r2, [r1, #4]!
 800dcf4:	4298      	cmp	r0, r3
 800dcf6:	d8f9      	bhi.n	800dcec <__lshift+0xc8>
 800dcf8:	e7ea      	b.n	800dcd0 <__lshift+0xac>
 800dcfa:	bf00      	nop
 800dcfc:	080102c1 	.word	0x080102c1
 800dd00:	0801034c 	.word	0x0801034c

0800dd04 <__mcmp>:
 800dd04:	b530      	push	{r4, r5, lr}
 800dd06:	6902      	ldr	r2, [r0, #16]
 800dd08:	690c      	ldr	r4, [r1, #16]
 800dd0a:	1b12      	subs	r2, r2, r4
 800dd0c:	d10e      	bne.n	800dd2c <__mcmp+0x28>
 800dd0e:	f100 0314 	add.w	r3, r0, #20
 800dd12:	3114      	adds	r1, #20
 800dd14:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800dd18:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800dd1c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800dd20:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800dd24:	42a5      	cmp	r5, r4
 800dd26:	d003      	beq.n	800dd30 <__mcmp+0x2c>
 800dd28:	d305      	bcc.n	800dd36 <__mcmp+0x32>
 800dd2a:	2201      	movs	r2, #1
 800dd2c:	4610      	mov	r0, r2
 800dd2e:	bd30      	pop	{r4, r5, pc}
 800dd30:	4283      	cmp	r3, r0
 800dd32:	d3f3      	bcc.n	800dd1c <__mcmp+0x18>
 800dd34:	e7fa      	b.n	800dd2c <__mcmp+0x28>
 800dd36:	f04f 32ff 	mov.w	r2, #4294967295
 800dd3a:	e7f7      	b.n	800dd2c <__mcmp+0x28>

0800dd3c <__mdiff>:
 800dd3c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd40:	460c      	mov	r4, r1
 800dd42:	4606      	mov	r6, r0
 800dd44:	4611      	mov	r1, r2
 800dd46:	4620      	mov	r0, r4
 800dd48:	4690      	mov	r8, r2
 800dd4a:	f7ff ffdb 	bl	800dd04 <__mcmp>
 800dd4e:	1e05      	subs	r5, r0, #0
 800dd50:	d110      	bne.n	800dd74 <__mdiff+0x38>
 800dd52:	4629      	mov	r1, r5
 800dd54:	4630      	mov	r0, r6
 800dd56:	f7ff fd09 	bl	800d76c <_Balloc>
 800dd5a:	b930      	cbnz	r0, 800dd6a <__mdiff+0x2e>
 800dd5c:	4b3a      	ldr	r3, [pc, #232]	; (800de48 <__mdiff+0x10c>)
 800dd5e:	4602      	mov	r2, r0
 800dd60:	f240 2132 	movw	r1, #562	; 0x232
 800dd64:	4839      	ldr	r0, [pc, #228]	; (800de4c <__mdiff+0x110>)
 800dd66:	f7fe f991 	bl	800c08c <__assert_func>
 800dd6a:	2301      	movs	r3, #1
 800dd6c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800dd70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd74:	bfa4      	itt	ge
 800dd76:	4643      	movge	r3, r8
 800dd78:	46a0      	movge	r8, r4
 800dd7a:	4630      	mov	r0, r6
 800dd7c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800dd80:	bfa6      	itte	ge
 800dd82:	461c      	movge	r4, r3
 800dd84:	2500      	movge	r5, #0
 800dd86:	2501      	movlt	r5, #1
 800dd88:	f7ff fcf0 	bl	800d76c <_Balloc>
 800dd8c:	b920      	cbnz	r0, 800dd98 <__mdiff+0x5c>
 800dd8e:	4b2e      	ldr	r3, [pc, #184]	; (800de48 <__mdiff+0x10c>)
 800dd90:	4602      	mov	r2, r0
 800dd92:	f44f 7110 	mov.w	r1, #576	; 0x240
 800dd96:	e7e5      	b.n	800dd64 <__mdiff+0x28>
 800dd98:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800dd9c:	6926      	ldr	r6, [r4, #16]
 800dd9e:	60c5      	str	r5, [r0, #12]
 800dda0:	f104 0914 	add.w	r9, r4, #20
 800dda4:	f108 0514 	add.w	r5, r8, #20
 800dda8:	f100 0e14 	add.w	lr, r0, #20
 800ddac:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800ddb0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800ddb4:	f108 0210 	add.w	r2, r8, #16
 800ddb8:	46f2      	mov	sl, lr
 800ddba:	2100      	movs	r1, #0
 800ddbc:	f859 3b04 	ldr.w	r3, [r9], #4
 800ddc0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800ddc4:	fa1f f883 	uxth.w	r8, r3
 800ddc8:	fa11 f18b 	uxtah	r1, r1, fp
 800ddcc:	0c1b      	lsrs	r3, r3, #16
 800ddce:	eba1 0808 	sub.w	r8, r1, r8
 800ddd2:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800ddd6:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800ddda:	fa1f f888 	uxth.w	r8, r8
 800ddde:	1419      	asrs	r1, r3, #16
 800dde0:	454e      	cmp	r6, r9
 800dde2:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800dde6:	f84a 3b04 	str.w	r3, [sl], #4
 800ddea:	d8e7      	bhi.n	800ddbc <__mdiff+0x80>
 800ddec:	1b33      	subs	r3, r6, r4
 800ddee:	3b15      	subs	r3, #21
 800ddf0:	f023 0303 	bic.w	r3, r3, #3
 800ddf4:	3304      	adds	r3, #4
 800ddf6:	3415      	adds	r4, #21
 800ddf8:	42a6      	cmp	r6, r4
 800ddfa:	bf38      	it	cc
 800ddfc:	2304      	movcc	r3, #4
 800ddfe:	441d      	add	r5, r3
 800de00:	4473      	add	r3, lr
 800de02:	469e      	mov	lr, r3
 800de04:	462e      	mov	r6, r5
 800de06:	4566      	cmp	r6, ip
 800de08:	d30e      	bcc.n	800de28 <__mdiff+0xec>
 800de0a:	f10c 0203 	add.w	r2, ip, #3
 800de0e:	1b52      	subs	r2, r2, r5
 800de10:	f022 0203 	bic.w	r2, r2, #3
 800de14:	3d03      	subs	r5, #3
 800de16:	45ac      	cmp	ip, r5
 800de18:	bf38      	it	cc
 800de1a:	2200      	movcc	r2, #0
 800de1c:	441a      	add	r2, r3
 800de1e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800de22:	b17b      	cbz	r3, 800de44 <__mdiff+0x108>
 800de24:	6107      	str	r7, [r0, #16]
 800de26:	e7a3      	b.n	800dd70 <__mdiff+0x34>
 800de28:	f856 8b04 	ldr.w	r8, [r6], #4
 800de2c:	fa11 f288 	uxtah	r2, r1, r8
 800de30:	1414      	asrs	r4, r2, #16
 800de32:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800de36:	b292      	uxth	r2, r2
 800de38:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800de3c:	f84e 2b04 	str.w	r2, [lr], #4
 800de40:	1421      	asrs	r1, r4, #16
 800de42:	e7e0      	b.n	800de06 <__mdiff+0xca>
 800de44:	3f01      	subs	r7, #1
 800de46:	e7ea      	b.n	800de1e <__mdiff+0xe2>
 800de48:	080102c1 	.word	0x080102c1
 800de4c:	0801034c 	.word	0x0801034c

0800de50 <__ulp>:
 800de50:	b082      	sub	sp, #8
 800de52:	ed8d 0b00 	vstr	d0, [sp]
 800de56:	9b01      	ldr	r3, [sp, #4]
 800de58:	4912      	ldr	r1, [pc, #72]	; (800dea4 <__ulp+0x54>)
 800de5a:	4019      	ands	r1, r3
 800de5c:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800de60:	2900      	cmp	r1, #0
 800de62:	dd05      	ble.n	800de70 <__ulp+0x20>
 800de64:	2200      	movs	r2, #0
 800de66:	460b      	mov	r3, r1
 800de68:	ec43 2b10 	vmov	d0, r2, r3
 800de6c:	b002      	add	sp, #8
 800de6e:	4770      	bx	lr
 800de70:	4249      	negs	r1, r1
 800de72:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 800de76:	ea4f 5021 	mov.w	r0, r1, asr #20
 800de7a:	f04f 0200 	mov.w	r2, #0
 800de7e:	f04f 0300 	mov.w	r3, #0
 800de82:	da04      	bge.n	800de8e <__ulp+0x3e>
 800de84:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800de88:	fa41 f300 	asr.w	r3, r1, r0
 800de8c:	e7ec      	b.n	800de68 <__ulp+0x18>
 800de8e:	f1a0 0114 	sub.w	r1, r0, #20
 800de92:	291e      	cmp	r1, #30
 800de94:	bfda      	itte	le
 800de96:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800de9a:	fa20 f101 	lsrle.w	r1, r0, r1
 800de9e:	2101      	movgt	r1, #1
 800dea0:	460a      	mov	r2, r1
 800dea2:	e7e1      	b.n	800de68 <__ulp+0x18>
 800dea4:	7ff00000 	.word	0x7ff00000

0800dea8 <__b2d>:
 800dea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800deaa:	6905      	ldr	r5, [r0, #16]
 800deac:	f100 0714 	add.w	r7, r0, #20
 800deb0:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800deb4:	1f2e      	subs	r6, r5, #4
 800deb6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800deba:	4620      	mov	r0, r4
 800debc:	f7ff fd48 	bl	800d950 <__hi0bits>
 800dec0:	f1c0 0320 	rsb	r3, r0, #32
 800dec4:	280a      	cmp	r0, #10
 800dec6:	f8df c07c 	ldr.w	ip, [pc, #124]	; 800df44 <__b2d+0x9c>
 800deca:	600b      	str	r3, [r1, #0]
 800decc:	dc14      	bgt.n	800def8 <__b2d+0x50>
 800dece:	f1c0 0e0b 	rsb	lr, r0, #11
 800ded2:	fa24 f10e 	lsr.w	r1, r4, lr
 800ded6:	42b7      	cmp	r7, r6
 800ded8:	ea41 030c 	orr.w	r3, r1, ip
 800dedc:	bf34      	ite	cc
 800dede:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800dee2:	2100      	movcs	r1, #0
 800dee4:	3015      	adds	r0, #21
 800dee6:	fa04 f000 	lsl.w	r0, r4, r0
 800deea:	fa21 f10e 	lsr.w	r1, r1, lr
 800deee:	ea40 0201 	orr.w	r2, r0, r1
 800def2:	ec43 2b10 	vmov	d0, r2, r3
 800def6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800def8:	42b7      	cmp	r7, r6
 800defa:	bf3a      	itte	cc
 800defc:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800df00:	f1a5 0608 	subcc.w	r6, r5, #8
 800df04:	2100      	movcs	r1, #0
 800df06:	380b      	subs	r0, #11
 800df08:	d017      	beq.n	800df3a <__b2d+0x92>
 800df0a:	f1c0 0c20 	rsb	ip, r0, #32
 800df0e:	fa04 f500 	lsl.w	r5, r4, r0
 800df12:	42be      	cmp	r6, r7
 800df14:	fa21 f40c 	lsr.w	r4, r1, ip
 800df18:	ea45 0504 	orr.w	r5, r5, r4
 800df1c:	bf8c      	ite	hi
 800df1e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800df22:	2400      	movls	r4, #0
 800df24:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 800df28:	fa01 f000 	lsl.w	r0, r1, r0
 800df2c:	fa24 f40c 	lsr.w	r4, r4, ip
 800df30:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800df34:	ea40 0204 	orr.w	r2, r0, r4
 800df38:	e7db      	b.n	800def2 <__b2d+0x4a>
 800df3a:	ea44 030c 	orr.w	r3, r4, ip
 800df3e:	460a      	mov	r2, r1
 800df40:	e7d7      	b.n	800def2 <__b2d+0x4a>
 800df42:	bf00      	nop
 800df44:	3ff00000 	.word	0x3ff00000

0800df48 <__d2b>:
 800df48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df4c:	4689      	mov	r9, r1
 800df4e:	2101      	movs	r1, #1
 800df50:	ec57 6b10 	vmov	r6, r7, d0
 800df54:	4690      	mov	r8, r2
 800df56:	f7ff fc09 	bl	800d76c <_Balloc>
 800df5a:	4604      	mov	r4, r0
 800df5c:	b930      	cbnz	r0, 800df6c <__d2b+0x24>
 800df5e:	4602      	mov	r2, r0
 800df60:	4b25      	ldr	r3, [pc, #148]	; (800dff8 <__d2b+0xb0>)
 800df62:	4826      	ldr	r0, [pc, #152]	; (800dffc <__d2b+0xb4>)
 800df64:	f240 310a 	movw	r1, #778	; 0x30a
 800df68:	f7fe f890 	bl	800c08c <__assert_func>
 800df6c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800df70:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800df74:	bb35      	cbnz	r5, 800dfc4 <__d2b+0x7c>
 800df76:	2e00      	cmp	r6, #0
 800df78:	9301      	str	r3, [sp, #4]
 800df7a:	d028      	beq.n	800dfce <__d2b+0x86>
 800df7c:	4668      	mov	r0, sp
 800df7e:	9600      	str	r6, [sp, #0]
 800df80:	f7ff fd06 	bl	800d990 <__lo0bits>
 800df84:	9900      	ldr	r1, [sp, #0]
 800df86:	b300      	cbz	r0, 800dfca <__d2b+0x82>
 800df88:	9a01      	ldr	r2, [sp, #4]
 800df8a:	f1c0 0320 	rsb	r3, r0, #32
 800df8e:	fa02 f303 	lsl.w	r3, r2, r3
 800df92:	430b      	orrs	r3, r1
 800df94:	40c2      	lsrs	r2, r0
 800df96:	6163      	str	r3, [r4, #20]
 800df98:	9201      	str	r2, [sp, #4]
 800df9a:	9b01      	ldr	r3, [sp, #4]
 800df9c:	61a3      	str	r3, [r4, #24]
 800df9e:	2b00      	cmp	r3, #0
 800dfa0:	bf14      	ite	ne
 800dfa2:	2202      	movne	r2, #2
 800dfa4:	2201      	moveq	r2, #1
 800dfa6:	6122      	str	r2, [r4, #16]
 800dfa8:	b1d5      	cbz	r5, 800dfe0 <__d2b+0x98>
 800dfaa:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800dfae:	4405      	add	r5, r0
 800dfb0:	f8c9 5000 	str.w	r5, [r9]
 800dfb4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800dfb8:	f8c8 0000 	str.w	r0, [r8]
 800dfbc:	4620      	mov	r0, r4
 800dfbe:	b003      	add	sp, #12
 800dfc0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dfc4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800dfc8:	e7d5      	b.n	800df76 <__d2b+0x2e>
 800dfca:	6161      	str	r1, [r4, #20]
 800dfcc:	e7e5      	b.n	800df9a <__d2b+0x52>
 800dfce:	a801      	add	r0, sp, #4
 800dfd0:	f7ff fcde 	bl	800d990 <__lo0bits>
 800dfd4:	9b01      	ldr	r3, [sp, #4]
 800dfd6:	6163      	str	r3, [r4, #20]
 800dfd8:	2201      	movs	r2, #1
 800dfda:	6122      	str	r2, [r4, #16]
 800dfdc:	3020      	adds	r0, #32
 800dfde:	e7e3      	b.n	800dfa8 <__d2b+0x60>
 800dfe0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800dfe4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800dfe8:	f8c9 0000 	str.w	r0, [r9]
 800dfec:	6918      	ldr	r0, [r3, #16]
 800dfee:	f7ff fcaf 	bl	800d950 <__hi0bits>
 800dff2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800dff6:	e7df      	b.n	800dfb8 <__d2b+0x70>
 800dff8:	080102c1 	.word	0x080102c1
 800dffc:	0801034c 	.word	0x0801034c

0800e000 <__ratio>:
 800e000:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e004:	4688      	mov	r8, r1
 800e006:	4669      	mov	r1, sp
 800e008:	4681      	mov	r9, r0
 800e00a:	f7ff ff4d 	bl	800dea8 <__b2d>
 800e00e:	a901      	add	r1, sp, #4
 800e010:	4640      	mov	r0, r8
 800e012:	ec55 4b10 	vmov	r4, r5, d0
 800e016:	f7ff ff47 	bl	800dea8 <__b2d>
 800e01a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e01e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800e022:	eba3 0c02 	sub.w	ip, r3, r2
 800e026:	e9dd 3200 	ldrd	r3, r2, [sp]
 800e02a:	1a9b      	subs	r3, r3, r2
 800e02c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800e030:	ec51 0b10 	vmov	r0, r1, d0
 800e034:	2b00      	cmp	r3, #0
 800e036:	bfd6      	itet	le
 800e038:	460a      	movle	r2, r1
 800e03a:	462a      	movgt	r2, r5
 800e03c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800e040:	468b      	mov	fp, r1
 800e042:	462f      	mov	r7, r5
 800e044:	bfd4      	ite	le
 800e046:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800e04a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800e04e:	4620      	mov	r0, r4
 800e050:	ee10 2a10 	vmov	r2, s0
 800e054:	465b      	mov	r3, fp
 800e056:	4639      	mov	r1, r7
 800e058:	f7f2 fc10 	bl	800087c <__aeabi_ddiv>
 800e05c:	ec41 0b10 	vmov	d0, r0, r1
 800e060:	b003      	add	sp, #12
 800e062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e066 <__copybits>:
 800e066:	3901      	subs	r1, #1
 800e068:	b570      	push	{r4, r5, r6, lr}
 800e06a:	1149      	asrs	r1, r1, #5
 800e06c:	6914      	ldr	r4, [r2, #16]
 800e06e:	3101      	adds	r1, #1
 800e070:	f102 0314 	add.w	r3, r2, #20
 800e074:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e078:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800e07c:	1f05      	subs	r5, r0, #4
 800e07e:	42a3      	cmp	r3, r4
 800e080:	d30c      	bcc.n	800e09c <__copybits+0x36>
 800e082:	1aa3      	subs	r3, r4, r2
 800e084:	3b11      	subs	r3, #17
 800e086:	f023 0303 	bic.w	r3, r3, #3
 800e08a:	3211      	adds	r2, #17
 800e08c:	42a2      	cmp	r2, r4
 800e08e:	bf88      	it	hi
 800e090:	2300      	movhi	r3, #0
 800e092:	4418      	add	r0, r3
 800e094:	2300      	movs	r3, #0
 800e096:	4288      	cmp	r0, r1
 800e098:	d305      	bcc.n	800e0a6 <__copybits+0x40>
 800e09a:	bd70      	pop	{r4, r5, r6, pc}
 800e09c:	f853 6b04 	ldr.w	r6, [r3], #4
 800e0a0:	f845 6f04 	str.w	r6, [r5, #4]!
 800e0a4:	e7eb      	b.n	800e07e <__copybits+0x18>
 800e0a6:	f840 3b04 	str.w	r3, [r0], #4
 800e0aa:	e7f4      	b.n	800e096 <__copybits+0x30>

0800e0ac <__any_on>:
 800e0ac:	f100 0214 	add.w	r2, r0, #20
 800e0b0:	6900      	ldr	r0, [r0, #16]
 800e0b2:	114b      	asrs	r3, r1, #5
 800e0b4:	4298      	cmp	r0, r3
 800e0b6:	b510      	push	{r4, lr}
 800e0b8:	db11      	blt.n	800e0de <__any_on+0x32>
 800e0ba:	dd0a      	ble.n	800e0d2 <__any_on+0x26>
 800e0bc:	f011 011f 	ands.w	r1, r1, #31
 800e0c0:	d007      	beq.n	800e0d2 <__any_on+0x26>
 800e0c2:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800e0c6:	fa24 f001 	lsr.w	r0, r4, r1
 800e0ca:	fa00 f101 	lsl.w	r1, r0, r1
 800e0ce:	428c      	cmp	r4, r1
 800e0d0:	d10b      	bne.n	800e0ea <__any_on+0x3e>
 800e0d2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e0d6:	4293      	cmp	r3, r2
 800e0d8:	d803      	bhi.n	800e0e2 <__any_on+0x36>
 800e0da:	2000      	movs	r0, #0
 800e0dc:	bd10      	pop	{r4, pc}
 800e0de:	4603      	mov	r3, r0
 800e0e0:	e7f7      	b.n	800e0d2 <__any_on+0x26>
 800e0e2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800e0e6:	2900      	cmp	r1, #0
 800e0e8:	d0f5      	beq.n	800e0d6 <__any_on+0x2a>
 800e0ea:	2001      	movs	r0, #1
 800e0ec:	e7f6      	b.n	800e0dc <__any_on+0x30>

0800e0ee <_calloc_r>:
 800e0ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e0f0:	fba1 2402 	umull	r2, r4, r1, r2
 800e0f4:	b94c      	cbnz	r4, 800e10a <_calloc_r+0x1c>
 800e0f6:	4611      	mov	r1, r2
 800e0f8:	9201      	str	r2, [sp, #4]
 800e0fa:	f7fb f8e7 	bl	80092cc <_malloc_r>
 800e0fe:	9a01      	ldr	r2, [sp, #4]
 800e100:	4605      	mov	r5, r0
 800e102:	b930      	cbnz	r0, 800e112 <_calloc_r+0x24>
 800e104:	4628      	mov	r0, r5
 800e106:	b003      	add	sp, #12
 800e108:	bd30      	pop	{r4, r5, pc}
 800e10a:	220c      	movs	r2, #12
 800e10c:	6002      	str	r2, [r0, #0]
 800e10e:	2500      	movs	r5, #0
 800e110:	e7f8      	b.n	800e104 <_calloc_r+0x16>
 800e112:	4621      	mov	r1, r4
 800e114:	f7fa fdf4 	bl	8008d00 <memset>
 800e118:	e7f4      	b.n	800e104 <_calloc_r+0x16>

0800e11a <__ssputs_r>:
 800e11a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e11e:	688e      	ldr	r6, [r1, #8]
 800e120:	429e      	cmp	r6, r3
 800e122:	4682      	mov	sl, r0
 800e124:	460c      	mov	r4, r1
 800e126:	4690      	mov	r8, r2
 800e128:	461f      	mov	r7, r3
 800e12a:	d838      	bhi.n	800e19e <__ssputs_r+0x84>
 800e12c:	898a      	ldrh	r2, [r1, #12]
 800e12e:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e132:	d032      	beq.n	800e19a <__ssputs_r+0x80>
 800e134:	6825      	ldr	r5, [r4, #0]
 800e136:	6909      	ldr	r1, [r1, #16]
 800e138:	eba5 0901 	sub.w	r9, r5, r1
 800e13c:	6965      	ldr	r5, [r4, #20]
 800e13e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e142:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e146:	3301      	adds	r3, #1
 800e148:	444b      	add	r3, r9
 800e14a:	106d      	asrs	r5, r5, #1
 800e14c:	429d      	cmp	r5, r3
 800e14e:	bf38      	it	cc
 800e150:	461d      	movcc	r5, r3
 800e152:	0553      	lsls	r3, r2, #21
 800e154:	d531      	bpl.n	800e1ba <__ssputs_r+0xa0>
 800e156:	4629      	mov	r1, r5
 800e158:	f7fb f8b8 	bl	80092cc <_malloc_r>
 800e15c:	4606      	mov	r6, r0
 800e15e:	b950      	cbnz	r0, 800e176 <__ssputs_r+0x5c>
 800e160:	230c      	movs	r3, #12
 800e162:	f8ca 3000 	str.w	r3, [sl]
 800e166:	89a3      	ldrh	r3, [r4, #12]
 800e168:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e16c:	81a3      	strh	r3, [r4, #12]
 800e16e:	f04f 30ff 	mov.w	r0, #4294967295
 800e172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e176:	6921      	ldr	r1, [r4, #16]
 800e178:	464a      	mov	r2, r9
 800e17a:	f7fa fdb3 	bl	8008ce4 <memcpy>
 800e17e:	89a3      	ldrh	r3, [r4, #12]
 800e180:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800e184:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e188:	81a3      	strh	r3, [r4, #12]
 800e18a:	6126      	str	r6, [r4, #16]
 800e18c:	6165      	str	r5, [r4, #20]
 800e18e:	444e      	add	r6, r9
 800e190:	eba5 0509 	sub.w	r5, r5, r9
 800e194:	6026      	str	r6, [r4, #0]
 800e196:	60a5      	str	r5, [r4, #8]
 800e198:	463e      	mov	r6, r7
 800e19a:	42be      	cmp	r6, r7
 800e19c:	d900      	bls.n	800e1a0 <__ssputs_r+0x86>
 800e19e:	463e      	mov	r6, r7
 800e1a0:	6820      	ldr	r0, [r4, #0]
 800e1a2:	4632      	mov	r2, r6
 800e1a4:	4641      	mov	r1, r8
 800e1a6:	f001 f913 	bl	800f3d0 <memmove>
 800e1aa:	68a3      	ldr	r3, [r4, #8]
 800e1ac:	1b9b      	subs	r3, r3, r6
 800e1ae:	60a3      	str	r3, [r4, #8]
 800e1b0:	6823      	ldr	r3, [r4, #0]
 800e1b2:	4433      	add	r3, r6
 800e1b4:	6023      	str	r3, [r4, #0]
 800e1b6:	2000      	movs	r0, #0
 800e1b8:	e7db      	b.n	800e172 <__ssputs_r+0x58>
 800e1ba:	462a      	mov	r2, r5
 800e1bc:	f001 f922 	bl	800f404 <_realloc_r>
 800e1c0:	4606      	mov	r6, r0
 800e1c2:	2800      	cmp	r0, #0
 800e1c4:	d1e1      	bne.n	800e18a <__ssputs_r+0x70>
 800e1c6:	6921      	ldr	r1, [r4, #16]
 800e1c8:	4650      	mov	r0, sl
 800e1ca:	f7fb f813 	bl	80091f4 <_free_r>
 800e1ce:	e7c7      	b.n	800e160 <__ssputs_r+0x46>

0800e1d0 <_svfiprintf_r>:
 800e1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1d4:	4698      	mov	r8, r3
 800e1d6:	898b      	ldrh	r3, [r1, #12]
 800e1d8:	061b      	lsls	r3, r3, #24
 800e1da:	b09d      	sub	sp, #116	; 0x74
 800e1dc:	4607      	mov	r7, r0
 800e1de:	460d      	mov	r5, r1
 800e1e0:	4614      	mov	r4, r2
 800e1e2:	d50e      	bpl.n	800e202 <_svfiprintf_r+0x32>
 800e1e4:	690b      	ldr	r3, [r1, #16]
 800e1e6:	b963      	cbnz	r3, 800e202 <_svfiprintf_r+0x32>
 800e1e8:	2140      	movs	r1, #64	; 0x40
 800e1ea:	f7fb f86f 	bl	80092cc <_malloc_r>
 800e1ee:	6028      	str	r0, [r5, #0]
 800e1f0:	6128      	str	r0, [r5, #16]
 800e1f2:	b920      	cbnz	r0, 800e1fe <_svfiprintf_r+0x2e>
 800e1f4:	230c      	movs	r3, #12
 800e1f6:	603b      	str	r3, [r7, #0]
 800e1f8:	f04f 30ff 	mov.w	r0, #4294967295
 800e1fc:	e0d1      	b.n	800e3a2 <_svfiprintf_r+0x1d2>
 800e1fe:	2340      	movs	r3, #64	; 0x40
 800e200:	616b      	str	r3, [r5, #20]
 800e202:	2300      	movs	r3, #0
 800e204:	9309      	str	r3, [sp, #36]	; 0x24
 800e206:	2320      	movs	r3, #32
 800e208:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e20c:	f8cd 800c 	str.w	r8, [sp, #12]
 800e210:	2330      	movs	r3, #48	; 0x30
 800e212:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800e3bc <_svfiprintf_r+0x1ec>
 800e216:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e21a:	f04f 0901 	mov.w	r9, #1
 800e21e:	4623      	mov	r3, r4
 800e220:	469a      	mov	sl, r3
 800e222:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e226:	b10a      	cbz	r2, 800e22c <_svfiprintf_r+0x5c>
 800e228:	2a25      	cmp	r2, #37	; 0x25
 800e22a:	d1f9      	bne.n	800e220 <_svfiprintf_r+0x50>
 800e22c:	ebba 0b04 	subs.w	fp, sl, r4
 800e230:	d00b      	beq.n	800e24a <_svfiprintf_r+0x7a>
 800e232:	465b      	mov	r3, fp
 800e234:	4622      	mov	r2, r4
 800e236:	4629      	mov	r1, r5
 800e238:	4638      	mov	r0, r7
 800e23a:	f7ff ff6e 	bl	800e11a <__ssputs_r>
 800e23e:	3001      	adds	r0, #1
 800e240:	f000 80aa 	beq.w	800e398 <_svfiprintf_r+0x1c8>
 800e244:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e246:	445a      	add	r2, fp
 800e248:	9209      	str	r2, [sp, #36]	; 0x24
 800e24a:	f89a 3000 	ldrb.w	r3, [sl]
 800e24e:	2b00      	cmp	r3, #0
 800e250:	f000 80a2 	beq.w	800e398 <_svfiprintf_r+0x1c8>
 800e254:	2300      	movs	r3, #0
 800e256:	f04f 32ff 	mov.w	r2, #4294967295
 800e25a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e25e:	f10a 0a01 	add.w	sl, sl, #1
 800e262:	9304      	str	r3, [sp, #16]
 800e264:	9307      	str	r3, [sp, #28]
 800e266:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e26a:	931a      	str	r3, [sp, #104]	; 0x68
 800e26c:	4654      	mov	r4, sl
 800e26e:	2205      	movs	r2, #5
 800e270:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e274:	4851      	ldr	r0, [pc, #324]	; (800e3bc <_svfiprintf_r+0x1ec>)
 800e276:	f7f1 ffcb 	bl	8000210 <memchr>
 800e27a:	9a04      	ldr	r2, [sp, #16]
 800e27c:	b9d8      	cbnz	r0, 800e2b6 <_svfiprintf_r+0xe6>
 800e27e:	06d0      	lsls	r0, r2, #27
 800e280:	bf44      	itt	mi
 800e282:	2320      	movmi	r3, #32
 800e284:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e288:	0711      	lsls	r1, r2, #28
 800e28a:	bf44      	itt	mi
 800e28c:	232b      	movmi	r3, #43	; 0x2b
 800e28e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e292:	f89a 3000 	ldrb.w	r3, [sl]
 800e296:	2b2a      	cmp	r3, #42	; 0x2a
 800e298:	d015      	beq.n	800e2c6 <_svfiprintf_r+0xf6>
 800e29a:	9a07      	ldr	r2, [sp, #28]
 800e29c:	4654      	mov	r4, sl
 800e29e:	2000      	movs	r0, #0
 800e2a0:	f04f 0c0a 	mov.w	ip, #10
 800e2a4:	4621      	mov	r1, r4
 800e2a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e2aa:	3b30      	subs	r3, #48	; 0x30
 800e2ac:	2b09      	cmp	r3, #9
 800e2ae:	d94e      	bls.n	800e34e <_svfiprintf_r+0x17e>
 800e2b0:	b1b0      	cbz	r0, 800e2e0 <_svfiprintf_r+0x110>
 800e2b2:	9207      	str	r2, [sp, #28]
 800e2b4:	e014      	b.n	800e2e0 <_svfiprintf_r+0x110>
 800e2b6:	eba0 0308 	sub.w	r3, r0, r8
 800e2ba:	fa09 f303 	lsl.w	r3, r9, r3
 800e2be:	4313      	orrs	r3, r2
 800e2c0:	9304      	str	r3, [sp, #16]
 800e2c2:	46a2      	mov	sl, r4
 800e2c4:	e7d2      	b.n	800e26c <_svfiprintf_r+0x9c>
 800e2c6:	9b03      	ldr	r3, [sp, #12]
 800e2c8:	1d19      	adds	r1, r3, #4
 800e2ca:	681b      	ldr	r3, [r3, #0]
 800e2cc:	9103      	str	r1, [sp, #12]
 800e2ce:	2b00      	cmp	r3, #0
 800e2d0:	bfbb      	ittet	lt
 800e2d2:	425b      	neglt	r3, r3
 800e2d4:	f042 0202 	orrlt.w	r2, r2, #2
 800e2d8:	9307      	strge	r3, [sp, #28]
 800e2da:	9307      	strlt	r3, [sp, #28]
 800e2dc:	bfb8      	it	lt
 800e2de:	9204      	strlt	r2, [sp, #16]
 800e2e0:	7823      	ldrb	r3, [r4, #0]
 800e2e2:	2b2e      	cmp	r3, #46	; 0x2e
 800e2e4:	d10c      	bne.n	800e300 <_svfiprintf_r+0x130>
 800e2e6:	7863      	ldrb	r3, [r4, #1]
 800e2e8:	2b2a      	cmp	r3, #42	; 0x2a
 800e2ea:	d135      	bne.n	800e358 <_svfiprintf_r+0x188>
 800e2ec:	9b03      	ldr	r3, [sp, #12]
 800e2ee:	1d1a      	adds	r2, r3, #4
 800e2f0:	681b      	ldr	r3, [r3, #0]
 800e2f2:	9203      	str	r2, [sp, #12]
 800e2f4:	2b00      	cmp	r3, #0
 800e2f6:	bfb8      	it	lt
 800e2f8:	f04f 33ff 	movlt.w	r3, #4294967295
 800e2fc:	3402      	adds	r4, #2
 800e2fe:	9305      	str	r3, [sp, #20]
 800e300:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800e3cc <_svfiprintf_r+0x1fc>
 800e304:	7821      	ldrb	r1, [r4, #0]
 800e306:	2203      	movs	r2, #3
 800e308:	4650      	mov	r0, sl
 800e30a:	f7f1 ff81 	bl	8000210 <memchr>
 800e30e:	b140      	cbz	r0, 800e322 <_svfiprintf_r+0x152>
 800e310:	2340      	movs	r3, #64	; 0x40
 800e312:	eba0 000a 	sub.w	r0, r0, sl
 800e316:	fa03 f000 	lsl.w	r0, r3, r0
 800e31a:	9b04      	ldr	r3, [sp, #16]
 800e31c:	4303      	orrs	r3, r0
 800e31e:	3401      	adds	r4, #1
 800e320:	9304      	str	r3, [sp, #16]
 800e322:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e326:	4826      	ldr	r0, [pc, #152]	; (800e3c0 <_svfiprintf_r+0x1f0>)
 800e328:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e32c:	2206      	movs	r2, #6
 800e32e:	f7f1 ff6f 	bl	8000210 <memchr>
 800e332:	2800      	cmp	r0, #0
 800e334:	d038      	beq.n	800e3a8 <_svfiprintf_r+0x1d8>
 800e336:	4b23      	ldr	r3, [pc, #140]	; (800e3c4 <_svfiprintf_r+0x1f4>)
 800e338:	bb1b      	cbnz	r3, 800e382 <_svfiprintf_r+0x1b2>
 800e33a:	9b03      	ldr	r3, [sp, #12]
 800e33c:	3307      	adds	r3, #7
 800e33e:	f023 0307 	bic.w	r3, r3, #7
 800e342:	3308      	adds	r3, #8
 800e344:	9303      	str	r3, [sp, #12]
 800e346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e348:	4433      	add	r3, r6
 800e34a:	9309      	str	r3, [sp, #36]	; 0x24
 800e34c:	e767      	b.n	800e21e <_svfiprintf_r+0x4e>
 800e34e:	fb0c 3202 	mla	r2, ip, r2, r3
 800e352:	460c      	mov	r4, r1
 800e354:	2001      	movs	r0, #1
 800e356:	e7a5      	b.n	800e2a4 <_svfiprintf_r+0xd4>
 800e358:	2300      	movs	r3, #0
 800e35a:	3401      	adds	r4, #1
 800e35c:	9305      	str	r3, [sp, #20]
 800e35e:	4619      	mov	r1, r3
 800e360:	f04f 0c0a 	mov.w	ip, #10
 800e364:	4620      	mov	r0, r4
 800e366:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e36a:	3a30      	subs	r2, #48	; 0x30
 800e36c:	2a09      	cmp	r2, #9
 800e36e:	d903      	bls.n	800e378 <_svfiprintf_r+0x1a8>
 800e370:	2b00      	cmp	r3, #0
 800e372:	d0c5      	beq.n	800e300 <_svfiprintf_r+0x130>
 800e374:	9105      	str	r1, [sp, #20]
 800e376:	e7c3      	b.n	800e300 <_svfiprintf_r+0x130>
 800e378:	fb0c 2101 	mla	r1, ip, r1, r2
 800e37c:	4604      	mov	r4, r0
 800e37e:	2301      	movs	r3, #1
 800e380:	e7f0      	b.n	800e364 <_svfiprintf_r+0x194>
 800e382:	ab03      	add	r3, sp, #12
 800e384:	9300      	str	r3, [sp, #0]
 800e386:	462a      	mov	r2, r5
 800e388:	4b0f      	ldr	r3, [pc, #60]	; (800e3c8 <_svfiprintf_r+0x1f8>)
 800e38a:	a904      	add	r1, sp, #16
 800e38c:	4638      	mov	r0, r7
 800e38e:	f7fb f8b1 	bl	80094f4 <_printf_float>
 800e392:	1c42      	adds	r2, r0, #1
 800e394:	4606      	mov	r6, r0
 800e396:	d1d6      	bne.n	800e346 <_svfiprintf_r+0x176>
 800e398:	89ab      	ldrh	r3, [r5, #12]
 800e39a:	065b      	lsls	r3, r3, #25
 800e39c:	f53f af2c 	bmi.w	800e1f8 <_svfiprintf_r+0x28>
 800e3a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e3a2:	b01d      	add	sp, #116	; 0x74
 800e3a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e3a8:	ab03      	add	r3, sp, #12
 800e3aa:	9300      	str	r3, [sp, #0]
 800e3ac:	462a      	mov	r2, r5
 800e3ae:	4b06      	ldr	r3, [pc, #24]	; (800e3c8 <_svfiprintf_r+0x1f8>)
 800e3b0:	a904      	add	r1, sp, #16
 800e3b2:	4638      	mov	r0, r7
 800e3b4:	f7fb fb42 	bl	8009a3c <_printf_i>
 800e3b8:	e7eb      	b.n	800e392 <_svfiprintf_r+0x1c2>
 800e3ba:	bf00      	nop
 800e3bc:	080104a4 	.word	0x080104a4
 800e3c0:	080104ae 	.word	0x080104ae
 800e3c4:	080094f5 	.word	0x080094f5
 800e3c8:	0800e11b 	.word	0x0800e11b
 800e3cc:	080104aa 	.word	0x080104aa

0800e3d0 <_sungetc_r>:
 800e3d0:	b538      	push	{r3, r4, r5, lr}
 800e3d2:	1c4b      	adds	r3, r1, #1
 800e3d4:	4614      	mov	r4, r2
 800e3d6:	d103      	bne.n	800e3e0 <_sungetc_r+0x10>
 800e3d8:	f04f 35ff 	mov.w	r5, #4294967295
 800e3dc:	4628      	mov	r0, r5
 800e3de:	bd38      	pop	{r3, r4, r5, pc}
 800e3e0:	8993      	ldrh	r3, [r2, #12]
 800e3e2:	f023 0320 	bic.w	r3, r3, #32
 800e3e6:	8193      	strh	r3, [r2, #12]
 800e3e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e3ea:	6852      	ldr	r2, [r2, #4]
 800e3ec:	b2cd      	uxtb	r5, r1
 800e3ee:	b18b      	cbz	r3, 800e414 <_sungetc_r+0x44>
 800e3f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e3f2:	4293      	cmp	r3, r2
 800e3f4:	dd08      	ble.n	800e408 <_sungetc_r+0x38>
 800e3f6:	6823      	ldr	r3, [r4, #0]
 800e3f8:	1e5a      	subs	r2, r3, #1
 800e3fa:	6022      	str	r2, [r4, #0]
 800e3fc:	f803 5c01 	strb.w	r5, [r3, #-1]
 800e400:	6863      	ldr	r3, [r4, #4]
 800e402:	3301      	adds	r3, #1
 800e404:	6063      	str	r3, [r4, #4]
 800e406:	e7e9      	b.n	800e3dc <_sungetc_r+0xc>
 800e408:	4621      	mov	r1, r4
 800e40a:	f000 fca9 	bl	800ed60 <__submore>
 800e40e:	2800      	cmp	r0, #0
 800e410:	d0f1      	beq.n	800e3f6 <_sungetc_r+0x26>
 800e412:	e7e1      	b.n	800e3d8 <_sungetc_r+0x8>
 800e414:	6921      	ldr	r1, [r4, #16]
 800e416:	6823      	ldr	r3, [r4, #0]
 800e418:	b151      	cbz	r1, 800e430 <_sungetc_r+0x60>
 800e41a:	4299      	cmp	r1, r3
 800e41c:	d208      	bcs.n	800e430 <_sungetc_r+0x60>
 800e41e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800e422:	42a9      	cmp	r1, r5
 800e424:	d104      	bne.n	800e430 <_sungetc_r+0x60>
 800e426:	3b01      	subs	r3, #1
 800e428:	3201      	adds	r2, #1
 800e42a:	6023      	str	r3, [r4, #0]
 800e42c:	6062      	str	r2, [r4, #4]
 800e42e:	e7d5      	b.n	800e3dc <_sungetc_r+0xc>
 800e430:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800e434:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e438:	6363      	str	r3, [r4, #52]	; 0x34
 800e43a:	2303      	movs	r3, #3
 800e43c:	63a3      	str	r3, [r4, #56]	; 0x38
 800e43e:	4623      	mov	r3, r4
 800e440:	f803 5f46 	strb.w	r5, [r3, #70]!
 800e444:	6023      	str	r3, [r4, #0]
 800e446:	2301      	movs	r3, #1
 800e448:	e7dc      	b.n	800e404 <_sungetc_r+0x34>

0800e44a <__ssrefill_r>:
 800e44a:	b510      	push	{r4, lr}
 800e44c:	460c      	mov	r4, r1
 800e44e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800e450:	b169      	cbz	r1, 800e46e <__ssrefill_r+0x24>
 800e452:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e456:	4299      	cmp	r1, r3
 800e458:	d001      	beq.n	800e45e <__ssrefill_r+0x14>
 800e45a:	f7fa fecb 	bl	80091f4 <_free_r>
 800e45e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e460:	6063      	str	r3, [r4, #4]
 800e462:	2000      	movs	r0, #0
 800e464:	6360      	str	r0, [r4, #52]	; 0x34
 800e466:	b113      	cbz	r3, 800e46e <__ssrefill_r+0x24>
 800e468:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e46a:	6023      	str	r3, [r4, #0]
 800e46c:	bd10      	pop	{r4, pc}
 800e46e:	6923      	ldr	r3, [r4, #16]
 800e470:	6023      	str	r3, [r4, #0]
 800e472:	2300      	movs	r3, #0
 800e474:	6063      	str	r3, [r4, #4]
 800e476:	89a3      	ldrh	r3, [r4, #12]
 800e478:	f043 0320 	orr.w	r3, r3, #32
 800e47c:	81a3      	strh	r3, [r4, #12]
 800e47e:	f04f 30ff 	mov.w	r0, #4294967295
 800e482:	e7f3      	b.n	800e46c <__ssrefill_r+0x22>

0800e484 <__ssvfiscanf_r>:
 800e484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e488:	460c      	mov	r4, r1
 800e48a:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 800e48e:	2100      	movs	r1, #0
 800e490:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800e494:	49a6      	ldr	r1, [pc, #664]	; (800e730 <__ssvfiscanf_r+0x2ac>)
 800e496:	91a0      	str	r1, [sp, #640]	; 0x280
 800e498:	f10d 0804 	add.w	r8, sp, #4
 800e49c:	49a5      	ldr	r1, [pc, #660]	; (800e734 <__ssvfiscanf_r+0x2b0>)
 800e49e:	4fa6      	ldr	r7, [pc, #664]	; (800e738 <__ssvfiscanf_r+0x2b4>)
 800e4a0:	f8df 9298 	ldr.w	r9, [pc, #664]	; 800e73c <__ssvfiscanf_r+0x2b8>
 800e4a4:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800e4a8:	4606      	mov	r6, r0
 800e4aa:	91a1      	str	r1, [sp, #644]	; 0x284
 800e4ac:	9300      	str	r3, [sp, #0]
 800e4ae:	7813      	ldrb	r3, [r2, #0]
 800e4b0:	2b00      	cmp	r3, #0
 800e4b2:	f000 815a 	beq.w	800e76a <__ssvfiscanf_r+0x2e6>
 800e4b6:	5dd9      	ldrb	r1, [r3, r7]
 800e4b8:	f011 0108 	ands.w	r1, r1, #8
 800e4bc:	f102 0501 	add.w	r5, r2, #1
 800e4c0:	d019      	beq.n	800e4f6 <__ssvfiscanf_r+0x72>
 800e4c2:	6863      	ldr	r3, [r4, #4]
 800e4c4:	2b00      	cmp	r3, #0
 800e4c6:	dd0f      	ble.n	800e4e8 <__ssvfiscanf_r+0x64>
 800e4c8:	6823      	ldr	r3, [r4, #0]
 800e4ca:	781a      	ldrb	r2, [r3, #0]
 800e4cc:	5cba      	ldrb	r2, [r7, r2]
 800e4ce:	0712      	lsls	r2, r2, #28
 800e4d0:	d401      	bmi.n	800e4d6 <__ssvfiscanf_r+0x52>
 800e4d2:	462a      	mov	r2, r5
 800e4d4:	e7eb      	b.n	800e4ae <__ssvfiscanf_r+0x2a>
 800e4d6:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e4d8:	3201      	adds	r2, #1
 800e4da:	9245      	str	r2, [sp, #276]	; 0x114
 800e4dc:	6862      	ldr	r2, [r4, #4]
 800e4de:	3301      	adds	r3, #1
 800e4e0:	3a01      	subs	r2, #1
 800e4e2:	6062      	str	r2, [r4, #4]
 800e4e4:	6023      	str	r3, [r4, #0]
 800e4e6:	e7ec      	b.n	800e4c2 <__ssvfiscanf_r+0x3e>
 800e4e8:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e4ea:	4621      	mov	r1, r4
 800e4ec:	4630      	mov	r0, r6
 800e4ee:	4798      	blx	r3
 800e4f0:	2800      	cmp	r0, #0
 800e4f2:	d0e9      	beq.n	800e4c8 <__ssvfiscanf_r+0x44>
 800e4f4:	e7ed      	b.n	800e4d2 <__ssvfiscanf_r+0x4e>
 800e4f6:	2b25      	cmp	r3, #37	; 0x25
 800e4f8:	d012      	beq.n	800e520 <__ssvfiscanf_r+0x9c>
 800e4fa:	469a      	mov	sl, r3
 800e4fc:	6863      	ldr	r3, [r4, #4]
 800e4fe:	2b00      	cmp	r3, #0
 800e500:	f340 8091 	ble.w	800e626 <__ssvfiscanf_r+0x1a2>
 800e504:	6822      	ldr	r2, [r4, #0]
 800e506:	7813      	ldrb	r3, [r2, #0]
 800e508:	4553      	cmp	r3, sl
 800e50a:	f040 812e 	bne.w	800e76a <__ssvfiscanf_r+0x2e6>
 800e50e:	6863      	ldr	r3, [r4, #4]
 800e510:	3b01      	subs	r3, #1
 800e512:	6063      	str	r3, [r4, #4]
 800e514:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800e516:	3201      	adds	r2, #1
 800e518:	3301      	adds	r3, #1
 800e51a:	6022      	str	r2, [r4, #0]
 800e51c:	9345      	str	r3, [sp, #276]	; 0x114
 800e51e:	e7d8      	b.n	800e4d2 <__ssvfiscanf_r+0x4e>
 800e520:	9141      	str	r1, [sp, #260]	; 0x104
 800e522:	9143      	str	r1, [sp, #268]	; 0x10c
 800e524:	7853      	ldrb	r3, [r2, #1]
 800e526:	2b2a      	cmp	r3, #42	; 0x2a
 800e528:	bf02      	ittt	eq
 800e52a:	2310      	moveq	r3, #16
 800e52c:	1c95      	addeq	r5, r2, #2
 800e52e:	9341      	streq	r3, [sp, #260]	; 0x104
 800e530:	220a      	movs	r2, #10
 800e532:	46aa      	mov	sl, r5
 800e534:	f81a 1b01 	ldrb.w	r1, [sl], #1
 800e538:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800e53c:	2b09      	cmp	r3, #9
 800e53e:	d91d      	bls.n	800e57c <__ssvfiscanf_r+0xf8>
 800e540:	487e      	ldr	r0, [pc, #504]	; (800e73c <__ssvfiscanf_r+0x2b8>)
 800e542:	2203      	movs	r2, #3
 800e544:	f7f1 fe64 	bl	8000210 <memchr>
 800e548:	b140      	cbz	r0, 800e55c <__ssvfiscanf_r+0xd8>
 800e54a:	2301      	movs	r3, #1
 800e54c:	eba0 0009 	sub.w	r0, r0, r9
 800e550:	fa03 f000 	lsl.w	r0, r3, r0
 800e554:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e556:	4318      	orrs	r0, r3
 800e558:	9041      	str	r0, [sp, #260]	; 0x104
 800e55a:	4655      	mov	r5, sl
 800e55c:	f815 3b01 	ldrb.w	r3, [r5], #1
 800e560:	2b78      	cmp	r3, #120	; 0x78
 800e562:	d806      	bhi.n	800e572 <__ssvfiscanf_r+0xee>
 800e564:	2b57      	cmp	r3, #87	; 0x57
 800e566:	d810      	bhi.n	800e58a <__ssvfiscanf_r+0x106>
 800e568:	2b25      	cmp	r3, #37	; 0x25
 800e56a:	d0c6      	beq.n	800e4fa <__ssvfiscanf_r+0x76>
 800e56c:	d856      	bhi.n	800e61c <__ssvfiscanf_r+0x198>
 800e56e:	2b00      	cmp	r3, #0
 800e570:	d064      	beq.n	800e63c <__ssvfiscanf_r+0x1b8>
 800e572:	2303      	movs	r3, #3
 800e574:	9347      	str	r3, [sp, #284]	; 0x11c
 800e576:	230a      	movs	r3, #10
 800e578:	9342      	str	r3, [sp, #264]	; 0x108
 800e57a:	e071      	b.n	800e660 <__ssvfiscanf_r+0x1dc>
 800e57c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800e57e:	fb02 1103 	mla	r1, r2, r3, r1
 800e582:	3930      	subs	r1, #48	; 0x30
 800e584:	9143      	str	r1, [sp, #268]	; 0x10c
 800e586:	4655      	mov	r5, sl
 800e588:	e7d3      	b.n	800e532 <__ssvfiscanf_r+0xae>
 800e58a:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800e58e:	2a20      	cmp	r2, #32
 800e590:	d8ef      	bhi.n	800e572 <__ssvfiscanf_r+0xee>
 800e592:	a101      	add	r1, pc, #4	; (adr r1, 800e598 <__ssvfiscanf_r+0x114>)
 800e594:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800e598:	0800e64b 	.word	0x0800e64b
 800e59c:	0800e573 	.word	0x0800e573
 800e5a0:	0800e573 	.word	0x0800e573
 800e5a4:	0800e6a9 	.word	0x0800e6a9
 800e5a8:	0800e573 	.word	0x0800e573
 800e5ac:	0800e573 	.word	0x0800e573
 800e5b0:	0800e573 	.word	0x0800e573
 800e5b4:	0800e573 	.word	0x0800e573
 800e5b8:	0800e573 	.word	0x0800e573
 800e5bc:	0800e573 	.word	0x0800e573
 800e5c0:	0800e573 	.word	0x0800e573
 800e5c4:	0800e6bf 	.word	0x0800e6bf
 800e5c8:	0800e695 	.word	0x0800e695
 800e5cc:	0800e623 	.word	0x0800e623
 800e5d0:	0800e623 	.word	0x0800e623
 800e5d4:	0800e623 	.word	0x0800e623
 800e5d8:	0800e573 	.word	0x0800e573
 800e5dc:	0800e699 	.word	0x0800e699
 800e5e0:	0800e573 	.word	0x0800e573
 800e5e4:	0800e573 	.word	0x0800e573
 800e5e8:	0800e573 	.word	0x0800e573
 800e5ec:	0800e573 	.word	0x0800e573
 800e5f0:	0800e6cf 	.word	0x0800e6cf
 800e5f4:	0800e6a1 	.word	0x0800e6a1
 800e5f8:	0800e643 	.word	0x0800e643
 800e5fc:	0800e573 	.word	0x0800e573
 800e600:	0800e573 	.word	0x0800e573
 800e604:	0800e6cb 	.word	0x0800e6cb
 800e608:	0800e573 	.word	0x0800e573
 800e60c:	0800e695 	.word	0x0800e695
 800e610:	0800e573 	.word	0x0800e573
 800e614:	0800e573 	.word	0x0800e573
 800e618:	0800e64b 	.word	0x0800e64b
 800e61c:	3b45      	subs	r3, #69	; 0x45
 800e61e:	2b02      	cmp	r3, #2
 800e620:	d8a7      	bhi.n	800e572 <__ssvfiscanf_r+0xee>
 800e622:	2305      	movs	r3, #5
 800e624:	e01b      	b.n	800e65e <__ssvfiscanf_r+0x1da>
 800e626:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e628:	4621      	mov	r1, r4
 800e62a:	4630      	mov	r0, r6
 800e62c:	4798      	blx	r3
 800e62e:	2800      	cmp	r0, #0
 800e630:	f43f af68 	beq.w	800e504 <__ssvfiscanf_r+0x80>
 800e634:	9844      	ldr	r0, [sp, #272]	; 0x110
 800e636:	2800      	cmp	r0, #0
 800e638:	f040 808d 	bne.w	800e756 <__ssvfiscanf_r+0x2d2>
 800e63c:	f04f 30ff 	mov.w	r0, #4294967295
 800e640:	e08f      	b.n	800e762 <__ssvfiscanf_r+0x2de>
 800e642:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800e644:	f042 0220 	orr.w	r2, r2, #32
 800e648:	9241      	str	r2, [sp, #260]	; 0x104
 800e64a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800e64c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800e650:	9241      	str	r2, [sp, #260]	; 0x104
 800e652:	2210      	movs	r2, #16
 800e654:	2b6f      	cmp	r3, #111	; 0x6f
 800e656:	9242      	str	r2, [sp, #264]	; 0x108
 800e658:	bf34      	ite	cc
 800e65a:	2303      	movcc	r3, #3
 800e65c:	2304      	movcs	r3, #4
 800e65e:	9347      	str	r3, [sp, #284]	; 0x11c
 800e660:	6863      	ldr	r3, [r4, #4]
 800e662:	2b00      	cmp	r3, #0
 800e664:	dd42      	ble.n	800e6ec <__ssvfiscanf_r+0x268>
 800e666:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e668:	0659      	lsls	r1, r3, #25
 800e66a:	d404      	bmi.n	800e676 <__ssvfiscanf_r+0x1f2>
 800e66c:	6823      	ldr	r3, [r4, #0]
 800e66e:	781a      	ldrb	r2, [r3, #0]
 800e670:	5cba      	ldrb	r2, [r7, r2]
 800e672:	0712      	lsls	r2, r2, #28
 800e674:	d441      	bmi.n	800e6fa <__ssvfiscanf_r+0x276>
 800e676:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800e678:	2b02      	cmp	r3, #2
 800e67a:	dc50      	bgt.n	800e71e <__ssvfiscanf_r+0x29a>
 800e67c:	466b      	mov	r3, sp
 800e67e:	4622      	mov	r2, r4
 800e680:	a941      	add	r1, sp, #260	; 0x104
 800e682:	4630      	mov	r0, r6
 800e684:	f000 f9d0 	bl	800ea28 <_scanf_chars>
 800e688:	2801      	cmp	r0, #1
 800e68a:	d06e      	beq.n	800e76a <__ssvfiscanf_r+0x2e6>
 800e68c:	2802      	cmp	r0, #2
 800e68e:	f47f af20 	bne.w	800e4d2 <__ssvfiscanf_r+0x4e>
 800e692:	e7cf      	b.n	800e634 <__ssvfiscanf_r+0x1b0>
 800e694:	220a      	movs	r2, #10
 800e696:	e7dd      	b.n	800e654 <__ssvfiscanf_r+0x1d0>
 800e698:	2300      	movs	r3, #0
 800e69a:	9342      	str	r3, [sp, #264]	; 0x108
 800e69c:	2303      	movs	r3, #3
 800e69e:	e7de      	b.n	800e65e <__ssvfiscanf_r+0x1da>
 800e6a0:	2308      	movs	r3, #8
 800e6a2:	9342      	str	r3, [sp, #264]	; 0x108
 800e6a4:	2304      	movs	r3, #4
 800e6a6:	e7da      	b.n	800e65e <__ssvfiscanf_r+0x1da>
 800e6a8:	4629      	mov	r1, r5
 800e6aa:	4640      	mov	r0, r8
 800e6ac:	f000 fb20 	bl	800ecf0 <__sccl>
 800e6b0:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e6b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e6b6:	9341      	str	r3, [sp, #260]	; 0x104
 800e6b8:	4605      	mov	r5, r0
 800e6ba:	2301      	movs	r3, #1
 800e6bc:	e7cf      	b.n	800e65e <__ssvfiscanf_r+0x1da>
 800e6be:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e6c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e6c4:	9341      	str	r3, [sp, #260]	; 0x104
 800e6c6:	2300      	movs	r3, #0
 800e6c8:	e7c9      	b.n	800e65e <__ssvfiscanf_r+0x1da>
 800e6ca:	2302      	movs	r3, #2
 800e6cc:	e7c7      	b.n	800e65e <__ssvfiscanf_r+0x1da>
 800e6ce:	9841      	ldr	r0, [sp, #260]	; 0x104
 800e6d0:	06c3      	lsls	r3, r0, #27
 800e6d2:	f53f aefe 	bmi.w	800e4d2 <__ssvfiscanf_r+0x4e>
 800e6d6:	9b00      	ldr	r3, [sp, #0]
 800e6d8:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e6da:	1d19      	adds	r1, r3, #4
 800e6dc:	9100      	str	r1, [sp, #0]
 800e6de:	681b      	ldr	r3, [r3, #0]
 800e6e0:	f010 0f01 	tst.w	r0, #1
 800e6e4:	bf14      	ite	ne
 800e6e6:	801a      	strhne	r2, [r3, #0]
 800e6e8:	601a      	streq	r2, [r3, #0]
 800e6ea:	e6f2      	b.n	800e4d2 <__ssvfiscanf_r+0x4e>
 800e6ec:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e6ee:	4621      	mov	r1, r4
 800e6f0:	4630      	mov	r0, r6
 800e6f2:	4798      	blx	r3
 800e6f4:	2800      	cmp	r0, #0
 800e6f6:	d0b6      	beq.n	800e666 <__ssvfiscanf_r+0x1e2>
 800e6f8:	e79c      	b.n	800e634 <__ssvfiscanf_r+0x1b0>
 800e6fa:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e6fc:	3201      	adds	r2, #1
 800e6fe:	9245      	str	r2, [sp, #276]	; 0x114
 800e700:	6862      	ldr	r2, [r4, #4]
 800e702:	3a01      	subs	r2, #1
 800e704:	2a00      	cmp	r2, #0
 800e706:	6062      	str	r2, [r4, #4]
 800e708:	dd02      	ble.n	800e710 <__ssvfiscanf_r+0x28c>
 800e70a:	3301      	adds	r3, #1
 800e70c:	6023      	str	r3, [r4, #0]
 800e70e:	e7ad      	b.n	800e66c <__ssvfiscanf_r+0x1e8>
 800e710:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e712:	4621      	mov	r1, r4
 800e714:	4630      	mov	r0, r6
 800e716:	4798      	blx	r3
 800e718:	2800      	cmp	r0, #0
 800e71a:	d0a7      	beq.n	800e66c <__ssvfiscanf_r+0x1e8>
 800e71c:	e78a      	b.n	800e634 <__ssvfiscanf_r+0x1b0>
 800e71e:	2b04      	cmp	r3, #4
 800e720:	dc0e      	bgt.n	800e740 <__ssvfiscanf_r+0x2bc>
 800e722:	466b      	mov	r3, sp
 800e724:	4622      	mov	r2, r4
 800e726:	a941      	add	r1, sp, #260	; 0x104
 800e728:	4630      	mov	r0, r6
 800e72a:	f000 f9d7 	bl	800eadc <_scanf_i>
 800e72e:	e7ab      	b.n	800e688 <__ssvfiscanf_r+0x204>
 800e730:	0800e3d1 	.word	0x0800e3d1
 800e734:	0800e44b 	.word	0x0800e44b
 800e738:	08010159 	.word	0x08010159
 800e73c:	080104aa 	.word	0x080104aa
 800e740:	4b0b      	ldr	r3, [pc, #44]	; (800e770 <__ssvfiscanf_r+0x2ec>)
 800e742:	2b00      	cmp	r3, #0
 800e744:	f43f aec5 	beq.w	800e4d2 <__ssvfiscanf_r+0x4e>
 800e748:	466b      	mov	r3, sp
 800e74a:	4622      	mov	r2, r4
 800e74c:	a941      	add	r1, sp, #260	; 0x104
 800e74e:	4630      	mov	r0, r6
 800e750:	f7fb fa9a 	bl	8009c88 <_scanf_float>
 800e754:	e798      	b.n	800e688 <__ssvfiscanf_r+0x204>
 800e756:	89a3      	ldrh	r3, [r4, #12]
 800e758:	f013 0f40 	tst.w	r3, #64	; 0x40
 800e75c:	bf18      	it	ne
 800e75e:	f04f 30ff 	movne.w	r0, #4294967295
 800e762:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 800e766:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e76a:	9844      	ldr	r0, [sp, #272]	; 0x110
 800e76c:	e7f9      	b.n	800e762 <__ssvfiscanf_r+0x2de>
 800e76e:	bf00      	nop
 800e770:	08009c89 	.word	0x08009c89

0800e774 <__sfputc_r>:
 800e774:	6893      	ldr	r3, [r2, #8]
 800e776:	3b01      	subs	r3, #1
 800e778:	2b00      	cmp	r3, #0
 800e77a:	b410      	push	{r4}
 800e77c:	6093      	str	r3, [r2, #8]
 800e77e:	da08      	bge.n	800e792 <__sfputc_r+0x1e>
 800e780:	6994      	ldr	r4, [r2, #24]
 800e782:	42a3      	cmp	r3, r4
 800e784:	db01      	blt.n	800e78a <__sfputc_r+0x16>
 800e786:	290a      	cmp	r1, #10
 800e788:	d103      	bne.n	800e792 <__sfputc_r+0x1e>
 800e78a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e78e:	f000 bb21 	b.w	800edd4 <__swbuf_r>
 800e792:	6813      	ldr	r3, [r2, #0]
 800e794:	1c58      	adds	r0, r3, #1
 800e796:	6010      	str	r0, [r2, #0]
 800e798:	7019      	strb	r1, [r3, #0]
 800e79a:	4608      	mov	r0, r1
 800e79c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e7a0:	4770      	bx	lr

0800e7a2 <__sfputs_r>:
 800e7a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e7a4:	4606      	mov	r6, r0
 800e7a6:	460f      	mov	r7, r1
 800e7a8:	4614      	mov	r4, r2
 800e7aa:	18d5      	adds	r5, r2, r3
 800e7ac:	42ac      	cmp	r4, r5
 800e7ae:	d101      	bne.n	800e7b4 <__sfputs_r+0x12>
 800e7b0:	2000      	movs	r0, #0
 800e7b2:	e007      	b.n	800e7c4 <__sfputs_r+0x22>
 800e7b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e7b8:	463a      	mov	r2, r7
 800e7ba:	4630      	mov	r0, r6
 800e7bc:	f7ff ffda 	bl	800e774 <__sfputc_r>
 800e7c0:	1c43      	adds	r3, r0, #1
 800e7c2:	d1f3      	bne.n	800e7ac <__sfputs_r+0xa>
 800e7c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800e7c8 <_vfiprintf_r>:
 800e7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7cc:	460d      	mov	r5, r1
 800e7ce:	b09d      	sub	sp, #116	; 0x74
 800e7d0:	4614      	mov	r4, r2
 800e7d2:	4698      	mov	r8, r3
 800e7d4:	4606      	mov	r6, r0
 800e7d6:	b118      	cbz	r0, 800e7e0 <_vfiprintf_r+0x18>
 800e7d8:	6983      	ldr	r3, [r0, #24]
 800e7da:	b90b      	cbnz	r3, 800e7e0 <_vfiprintf_r+0x18>
 800e7dc:	f000 fcf6 	bl	800f1cc <__sinit>
 800e7e0:	4b89      	ldr	r3, [pc, #548]	; (800ea08 <_vfiprintf_r+0x240>)
 800e7e2:	429d      	cmp	r5, r3
 800e7e4:	d11b      	bne.n	800e81e <_vfiprintf_r+0x56>
 800e7e6:	6875      	ldr	r5, [r6, #4]
 800e7e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e7ea:	07d9      	lsls	r1, r3, #31
 800e7ec:	d405      	bmi.n	800e7fa <_vfiprintf_r+0x32>
 800e7ee:	89ab      	ldrh	r3, [r5, #12]
 800e7f0:	059a      	lsls	r2, r3, #22
 800e7f2:	d402      	bmi.n	800e7fa <_vfiprintf_r+0x32>
 800e7f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e7f6:	f7fe ff85 	bl	800d704 <__retarget_lock_acquire_recursive>
 800e7fa:	89ab      	ldrh	r3, [r5, #12]
 800e7fc:	071b      	lsls	r3, r3, #28
 800e7fe:	d501      	bpl.n	800e804 <_vfiprintf_r+0x3c>
 800e800:	692b      	ldr	r3, [r5, #16]
 800e802:	b9eb      	cbnz	r3, 800e840 <_vfiprintf_r+0x78>
 800e804:	4629      	mov	r1, r5
 800e806:	4630      	mov	r0, r6
 800e808:	f000 fb44 	bl	800ee94 <__swsetup_r>
 800e80c:	b1c0      	cbz	r0, 800e840 <_vfiprintf_r+0x78>
 800e80e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e810:	07dc      	lsls	r4, r3, #31
 800e812:	d50e      	bpl.n	800e832 <_vfiprintf_r+0x6a>
 800e814:	f04f 30ff 	mov.w	r0, #4294967295
 800e818:	b01d      	add	sp, #116	; 0x74
 800e81a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e81e:	4b7b      	ldr	r3, [pc, #492]	; (800ea0c <_vfiprintf_r+0x244>)
 800e820:	429d      	cmp	r5, r3
 800e822:	d101      	bne.n	800e828 <_vfiprintf_r+0x60>
 800e824:	68b5      	ldr	r5, [r6, #8]
 800e826:	e7df      	b.n	800e7e8 <_vfiprintf_r+0x20>
 800e828:	4b79      	ldr	r3, [pc, #484]	; (800ea10 <_vfiprintf_r+0x248>)
 800e82a:	429d      	cmp	r5, r3
 800e82c:	bf08      	it	eq
 800e82e:	68f5      	ldreq	r5, [r6, #12]
 800e830:	e7da      	b.n	800e7e8 <_vfiprintf_r+0x20>
 800e832:	89ab      	ldrh	r3, [r5, #12]
 800e834:	0598      	lsls	r0, r3, #22
 800e836:	d4ed      	bmi.n	800e814 <_vfiprintf_r+0x4c>
 800e838:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e83a:	f7fe ff65 	bl	800d708 <__retarget_lock_release_recursive>
 800e83e:	e7e9      	b.n	800e814 <_vfiprintf_r+0x4c>
 800e840:	2300      	movs	r3, #0
 800e842:	9309      	str	r3, [sp, #36]	; 0x24
 800e844:	2320      	movs	r3, #32
 800e846:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e84a:	f8cd 800c 	str.w	r8, [sp, #12]
 800e84e:	2330      	movs	r3, #48	; 0x30
 800e850:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800ea14 <_vfiprintf_r+0x24c>
 800e854:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e858:	f04f 0901 	mov.w	r9, #1
 800e85c:	4623      	mov	r3, r4
 800e85e:	469a      	mov	sl, r3
 800e860:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e864:	b10a      	cbz	r2, 800e86a <_vfiprintf_r+0xa2>
 800e866:	2a25      	cmp	r2, #37	; 0x25
 800e868:	d1f9      	bne.n	800e85e <_vfiprintf_r+0x96>
 800e86a:	ebba 0b04 	subs.w	fp, sl, r4
 800e86e:	d00b      	beq.n	800e888 <_vfiprintf_r+0xc0>
 800e870:	465b      	mov	r3, fp
 800e872:	4622      	mov	r2, r4
 800e874:	4629      	mov	r1, r5
 800e876:	4630      	mov	r0, r6
 800e878:	f7ff ff93 	bl	800e7a2 <__sfputs_r>
 800e87c:	3001      	adds	r0, #1
 800e87e:	f000 80aa 	beq.w	800e9d6 <_vfiprintf_r+0x20e>
 800e882:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e884:	445a      	add	r2, fp
 800e886:	9209      	str	r2, [sp, #36]	; 0x24
 800e888:	f89a 3000 	ldrb.w	r3, [sl]
 800e88c:	2b00      	cmp	r3, #0
 800e88e:	f000 80a2 	beq.w	800e9d6 <_vfiprintf_r+0x20e>
 800e892:	2300      	movs	r3, #0
 800e894:	f04f 32ff 	mov.w	r2, #4294967295
 800e898:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e89c:	f10a 0a01 	add.w	sl, sl, #1
 800e8a0:	9304      	str	r3, [sp, #16]
 800e8a2:	9307      	str	r3, [sp, #28]
 800e8a4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e8a8:	931a      	str	r3, [sp, #104]	; 0x68
 800e8aa:	4654      	mov	r4, sl
 800e8ac:	2205      	movs	r2, #5
 800e8ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e8b2:	4858      	ldr	r0, [pc, #352]	; (800ea14 <_vfiprintf_r+0x24c>)
 800e8b4:	f7f1 fcac 	bl	8000210 <memchr>
 800e8b8:	9a04      	ldr	r2, [sp, #16]
 800e8ba:	b9d8      	cbnz	r0, 800e8f4 <_vfiprintf_r+0x12c>
 800e8bc:	06d1      	lsls	r1, r2, #27
 800e8be:	bf44      	itt	mi
 800e8c0:	2320      	movmi	r3, #32
 800e8c2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e8c6:	0713      	lsls	r3, r2, #28
 800e8c8:	bf44      	itt	mi
 800e8ca:	232b      	movmi	r3, #43	; 0x2b
 800e8cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e8d0:	f89a 3000 	ldrb.w	r3, [sl]
 800e8d4:	2b2a      	cmp	r3, #42	; 0x2a
 800e8d6:	d015      	beq.n	800e904 <_vfiprintf_r+0x13c>
 800e8d8:	9a07      	ldr	r2, [sp, #28]
 800e8da:	4654      	mov	r4, sl
 800e8dc:	2000      	movs	r0, #0
 800e8de:	f04f 0c0a 	mov.w	ip, #10
 800e8e2:	4621      	mov	r1, r4
 800e8e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e8e8:	3b30      	subs	r3, #48	; 0x30
 800e8ea:	2b09      	cmp	r3, #9
 800e8ec:	d94e      	bls.n	800e98c <_vfiprintf_r+0x1c4>
 800e8ee:	b1b0      	cbz	r0, 800e91e <_vfiprintf_r+0x156>
 800e8f0:	9207      	str	r2, [sp, #28]
 800e8f2:	e014      	b.n	800e91e <_vfiprintf_r+0x156>
 800e8f4:	eba0 0308 	sub.w	r3, r0, r8
 800e8f8:	fa09 f303 	lsl.w	r3, r9, r3
 800e8fc:	4313      	orrs	r3, r2
 800e8fe:	9304      	str	r3, [sp, #16]
 800e900:	46a2      	mov	sl, r4
 800e902:	e7d2      	b.n	800e8aa <_vfiprintf_r+0xe2>
 800e904:	9b03      	ldr	r3, [sp, #12]
 800e906:	1d19      	adds	r1, r3, #4
 800e908:	681b      	ldr	r3, [r3, #0]
 800e90a:	9103      	str	r1, [sp, #12]
 800e90c:	2b00      	cmp	r3, #0
 800e90e:	bfbb      	ittet	lt
 800e910:	425b      	neglt	r3, r3
 800e912:	f042 0202 	orrlt.w	r2, r2, #2
 800e916:	9307      	strge	r3, [sp, #28]
 800e918:	9307      	strlt	r3, [sp, #28]
 800e91a:	bfb8      	it	lt
 800e91c:	9204      	strlt	r2, [sp, #16]
 800e91e:	7823      	ldrb	r3, [r4, #0]
 800e920:	2b2e      	cmp	r3, #46	; 0x2e
 800e922:	d10c      	bne.n	800e93e <_vfiprintf_r+0x176>
 800e924:	7863      	ldrb	r3, [r4, #1]
 800e926:	2b2a      	cmp	r3, #42	; 0x2a
 800e928:	d135      	bne.n	800e996 <_vfiprintf_r+0x1ce>
 800e92a:	9b03      	ldr	r3, [sp, #12]
 800e92c:	1d1a      	adds	r2, r3, #4
 800e92e:	681b      	ldr	r3, [r3, #0]
 800e930:	9203      	str	r2, [sp, #12]
 800e932:	2b00      	cmp	r3, #0
 800e934:	bfb8      	it	lt
 800e936:	f04f 33ff 	movlt.w	r3, #4294967295
 800e93a:	3402      	adds	r4, #2
 800e93c:	9305      	str	r3, [sp, #20]
 800e93e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800ea24 <_vfiprintf_r+0x25c>
 800e942:	7821      	ldrb	r1, [r4, #0]
 800e944:	2203      	movs	r2, #3
 800e946:	4650      	mov	r0, sl
 800e948:	f7f1 fc62 	bl	8000210 <memchr>
 800e94c:	b140      	cbz	r0, 800e960 <_vfiprintf_r+0x198>
 800e94e:	2340      	movs	r3, #64	; 0x40
 800e950:	eba0 000a 	sub.w	r0, r0, sl
 800e954:	fa03 f000 	lsl.w	r0, r3, r0
 800e958:	9b04      	ldr	r3, [sp, #16]
 800e95a:	4303      	orrs	r3, r0
 800e95c:	3401      	adds	r4, #1
 800e95e:	9304      	str	r3, [sp, #16]
 800e960:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e964:	482c      	ldr	r0, [pc, #176]	; (800ea18 <_vfiprintf_r+0x250>)
 800e966:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e96a:	2206      	movs	r2, #6
 800e96c:	f7f1 fc50 	bl	8000210 <memchr>
 800e970:	2800      	cmp	r0, #0
 800e972:	d03f      	beq.n	800e9f4 <_vfiprintf_r+0x22c>
 800e974:	4b29      	ldr	r3, [pc, #164]	; (800ea1c <_vfiprintf_r+0x254>)
 800e976:	bb1b      	cbnz	r3, 800e9c0 <_vfiprintf_r+0x1f8>
 800e978:	9b03      	ldr	r3, [sp, #12]
 800e97a:	3307      	adds	r3, #7
 800e97c:	f023 0307 	bic.w	r3, r3, #7
 800e980:	3308      	adds	r3, #8
 800e982:	9303      	str	r3, [sp, #12]
 800e984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e986:	443b      	add	r3, r7
 800e988:	9309      	str	r3, [sp, #36]	; 0x24
 800e98a:	e767      	b.n	800e85c <_vfiprintf_r+0x94>
 800e98c:	fb0c 3202 	mla	r2, ip, r2, r3
 800e990:	460c      	mov	r4, r1
 800e992:	2001      	movs	r0, #1
 800e994:	e7a5      	b.n	800e8e2 <_vfiprintf_r+0x11a>
 800e996:	2300      	movs	r3, #0
 800e998:	3401      	adds	r4, #1
 800e99a:	9305      	str	r3, [sp, #20]
 800e99c:	4619      	mov	r1, r3
 800e99e:	f04f 0c0a 	mov.w	ip, #10
 800e9a2:	4620      	mov	r0, r4
 800e9a4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e9a8:	3a30      	subs	r2, #48	; 0x30
 800e9aa:	2a09      	cmp	r2, #9
 800e9ac:	d903      	bls.n	800e9b6 <_vfiprintf_r+0x1ee>
 800e9ae:	2b00      	cmp	r3, #0
 800e9b0:	d0c5      	beq.n	800e93e <_vfiprintf_r+0x176>
 800e9b2:	9105      	str	r1, [sp, #20]
 800e9b4:	e7c3      	b.n	800e93e <_vfiprintf_r+0x176>
 800e9b6:	fb0c 2101 	mla	r1, ip, r1, r2
 800e9ba:	4604      	mov	r4, r0
 800e9bc:	2301      	movs	r3, #1
 800e9be:	e7f0      	b.n	800e9a2 <_vfiprintf_r+0x1da>
 800e9c0:	ab03      	add	r3, sp, #12
 800e9c2:	9300      	str	r3, [sp, #0]
 800e9c4:	462a      	mov	r2, r5
 800e9c6:	4b16      	ldr	r3, [pc, #88]	; (800ea20 <_vfiprintf_r+0x258>)
 800e9c8:	a904      	add	r1, sp, #16
 800e9ca:	4630      	mov	r0, r6
 800e9cc:	f7fa fd92 	bl	80094f4 <_printf_float>
 800e9d0:	4607      	mov	r7, r0
 800e9d2:	1c78      	adds	r0, r7, #1
 800e9d4:	d1d6      	bne.n	800e984 <_vfiprintf_r+0x1bc>
 800e9d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e9d8:	07d9      	lsls	r1, r3, #31
 800e9da:	d405      	bmi.n	800e9e8 <_vfiprintf_r+0x220>
 800e9dc:	89ab      	ldrh	r3, [r5, #12]
 800e9de:	059a      	lsls	r2, r3, #22
 800e9e0:	d402      	bmi.n	800e9e8 <_vfiprintf_r+0x220>
 800e9e2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e9e4:	f7fe fe90 	bl	800d708 <__retarget_lock_release_recursive>
 800e9e8:	89ab      	ldrh	r3, [r5, #12]
 800e9ea:	065b      	lsls	r3, r3, #25
 800e9ec:	f53f af12 	bmi.w	800e814 <_vfiprintf_r+0x4c>
 800e9f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e9f2:	e711      	b.n	800e818 <_vfiprintf_r+0x50>
 800e9f4:	ab03      	add	r3, sp, #12
 800e9f6:	9300      	str	r3, [sp, #0]
 800e9f8:	462a      	mov	r2, r5
 800e9fa:	4b09      	ldr	r3, [pc, #36]	; (800ea20 <_vfiprintf_r+0x258>)
 800e9fc:	a904      	add	r1, sp, #16
 800e9fe:	4630      	mov	r0, r6
 800ea00:	f7fb f81c 	bl	8009a3c <_printf_i>
 800ea04:	e7e4      	b.n	800e9d0 <_vfiprintf_r+0x208>
 800ea06:	bf00      	nop
 800ea08:	080104f0 	.word	0x080104f0
 800ea0c:	08010510 	.word	0x08010510
 800ea10:	080104d0 	.word	0x080104d0
 800ea14:	080104a4 	.word	0x080104a4
 800ea18:	080104ae 	.word	0x080104ae
 800ea1c:	080094f5 	.word	0x080094f5
 800ea20:	0800e7a3 	.word	0x0800e7a3
 800ea24:	080104aa 	.word	0x080104aa

0800ea28 <_scanf_chars>:
 800ea28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ea2c:	4615      	mov	r5, r2
 800ea2e:	688a      	ldr	r2, [r1, #8]
 800ea30:	4680      	mov	r8, r0
 800ea32:	460c      	mov	r4, r1
 800ea34:	b932      	cbnz	r2, 800ea44 <_scanf_chars+0x1c>
 800ea36:	698a      	ldr	r2, [r1, #24]
 800ea38:	2a00      	cmp	r2, #0
 800ea3a:	bf0c      	ite	eq
 800ea3c:	2201      	moveq	r2, #1
 800ea3e:	f04f 32ff 	movne.w	r2, #4294967295
 800ea42:	608a      	str	r2, [r1, #8]
 800ea44:	6822      	ldr	r2, [r4, #0]
 800ea46:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ead8 <_scanf_chars+0xb0>
 800ea4a:	06d1      	lsls	r1, r2, #27
 800ea4c:	bf5f      	itttt	pl
 800ea4e:	681a      	ldrpl	r2, [r3, #0]
 800ea50:	1d11      	addpl	r1, r2, #4
 800ea52:	6019      	strpl	r1, [r3, #0]
 800ea54:	6816      	ldrpl	r6, [r2, #0]
 800ea56:	2700      	movs	r7, #0
 800ea58:	69a0      	ldr	r0, [r4, #24]
 800ea5a:	b188      	cbz	r0, 800ea80 <_scanf_chars+0x58>
 800ea5c:	2801      	cmp	r0, #1
 800ea5e:	d107      	bne.n	800ea70 <_scanf_chars+0x48>
 800ea60:	682a      	ldr	r2, [r5, #0]
 800ea62:	7811      	ldrb	r1, [r2, #0]
 800ea64:	6962      	ldr	r2, [r4, #20]
 800ea66:	5c52      	ldrb	r2, [r2, r1]
 800ea68:	b952      	cbnz	r2, 800ea80 <_scanf_chars+0x58>
 800ea6a:	2f00      	cmp	r7, #0
 800ea6c:	d031      	beq.n	800ead2 <_scanf_chars+0xaa>
 800ea6e:	e022      	b.n	800eab6 <_scanf_chars+0x8e>
 800ea70:	2802      	cmp	r0, #2
 800ea72:	d120      	bne.n	800eab6 <_scanf_chars+0x8e>
 800ea74:	682b      	ldr	r3, [r5, #0]
 800ea76:	781b      	ldrb	r3, [r3, #0]
 800ea78:	f813 3009 	ldrb.w	r3, [r3, r9]
 800ea7c:	071b      	lsls	r3, r3, #28
 800ea7e:	d41a      	bmi.n	800eab6 <_scanf_chars+0x8e>
 800ea80:	6823      	ldr	r3, [r4, #0]
 800ea82:	06da      	lsls	r2, r3, #27
 800ea84:	bf5e      	ittt	pl
 800ea86:	682b      	ldrpl	r3, [r5, #0]
 800ea88:	781b      	ldrbpl	r3, [r3, #0]
 800ea8a:	f806 3b01 	strbpl.w	r3, [r6], #1
 800ea8e:	682a      	ldr	r2, [r5, #0]
 800ea90:	686b      	ldr	r3, [r5, #4]
 800ea92:	3201      	adds	r2, #1
 800ea94:	602a      	str	r2, [r5, #0]
 800ea96:	68a2      	ldr	r2, [r4, #8]
 800ea98:	3b01      	subs	r3, #1
 800ea9a:	3a01      	subs	r2, #1
 800ea9c:	606b      	str	r3, [r5, #4]
 800ea9e:	3701      	adds	r7, #1
 800eaa0:	60a2      	str	r2, [r4, #8]
 800eaa2:	b142      	cbz	r2, 800eab6 <_scanf_chars+0x8e>
 800eaa4:	2b00      	cmp	r3, #0
 800eaa6:	dcd7      	bgt.n	800ea58 <_scanf_chars+0x30>
 800eaa8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800eaac:	4629      	mov	r1, r5
 800eaae:	4640      	mov	r0, r8
 800eab0:	4798      	blx	r3
 800eab2:	2800      	cmp	r0, #0
 800eab4:	d0d0      	beq.n	800ea58 <_scanf_chars+0x30>
 800eab6:	6823      	ldr	r3, [r4, #0]
 800eab8:	f013 0310 	ands.w	r3, r3, #16
 800eabc:	d105      	bne.n	800eaca <_scanf_chars+0xa2>
 800eabe:	68e2      	ldr	r2, [r4, #12]
 800eac0:	3201      	adds	r2, #1
 800eac2:	60e2      	str	r2, [r4, #12]
 800eac4:	69a2      	ldr	r2, [r4, #24]
 800eac6:	b102      	cbz	r2, 800eaca <_scanf_chars+0xa2>
 800eac8:	7033      	strb	r3, [r6, #0]
 800eaca:	6923      	ldr	r3, [r4, #16]
 800eacc:	443b      	add	r3, r7
 800eace:	6123      	str	r3, [r4, #16]
 800ead0:	2000      	movs	r0, #0
 800ead2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ead6:	bf00      	nop
 800ead8:	08010159 	.word	0x08010159

0800eadc <_scanf_i>:
 800eadc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eae0:	4698      	mov	r8, r3
 800eae2:	4b76      	ldr	r3, [pc, #472]	; (800ecbc <_scanf_i+0x1e0>)
 800eae4:	460c      	mov	r4, r1
 800eae6:	4682      	mov	sl, r0
 800eae8:	4616      	mov	r6, r2
 800eaea:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800eaee:	b087      	sub	sp, #28
 800eaf0:	ab03      	add	r3, sp, #12
 800eaf2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800eaf6:	4b72      	ldr	r3, [pc, #456]	; (800ecc0 <_scanf_i+0x1e4>)
 800eaf8:	69a1      	ldr	r1, [r4, #24]
 800eafa:	4a72      	ldr	r2, [pc, #456]	; (800ecc4 <_scanf_i+0x1e8>)
 800eafc:	2903      	cmp	r1, #3
 800eafe:	bf18      	it	ne
 800eb00:	461a      	movne	r2, r3
 800eb02:	68a3      	ldr	r3, [r4, #8]
 800eb04:	9201      	str	r2, [sp, #4]
 800eb06:	1e5a      	subs	r2, r3, #1
 800eb08:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800eb0c:	bf88      	it	hi
 800eb0e:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800eb12:	4627      	mov	r7, r4
 800eb14:	bf82      	ittt	hi
 800eb16:	eb03 0905 	addhi.w	r9, r3, r5
 800eb1a:	f240 135d 	movwhi	r3, #349	; 0x15d
 800eb1e:	60a3      	strhi	r3, [r4, #8]
 800eb20:	f857 3b1c 	ldr.w	r3, [r7], #28
 800eb24:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800eb28:	bf98      	it	ls
 800eb2a:	f04f 0900 	movls.w	r9, #0
 800eb2e:	6023      	str	r3, [r4, #0]
 800eb30:	463d      	mov	r5, r7
 800eb32:	f04f 0b00 	mov.w	fp, #0
 800eb36:	6831      	ldr	r1, [r6, #0]
 800eb38:	ab03      	add	r3, sp, #12
 800eb3a:	7809      	ldrb	r1, [r1, #0]
 800eb3c:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800eb40:	2202      	movs	r2, #2
 800eb42:	f7f1 fb65 	bl	8000210 <memchr>
 800eb46:	b328      	cbz	r0, 800eb94 <_scanf_i+0xb8>
 800eb48:	f1bb 0f01 	cmp.w	fp, #1
 800eb4c:	d159      	bne.n	800ec02 <_scanf_i+0x126>
 800eb4e:	6862      	ldr	r2, [r4, #4]
 800eb50:	b92a      	cbnz	r2, 800eb5e <_scanf_i+0x82>
 800eb52:	6822      	ldr	r2, [r4, #0]
 800eb54:	2308      	movs	r3, #8
 800eb56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800eb5a:	6063      	str	r3, [r4, #4]
 800eb5c:	6022      	str	r2, [r4, #0]
 800eb5e:	6822      	ldr	r2, [r4, #0]
 800eb60:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800eb64:	6022      	str	r2, [r4, #0]
 800eb66:	68a2      	ldr	r2, [r4, #8]
 800eb68:	1e51      	subs	r1, r2, #1
 800eb6a:	60a1      	str	r1, [r4, #8]
 800eb6c:	b192      	cbz	r2, 800eb94 <_scanf_i+0xb8>
 800eb6e:	6832      	ldr	r2, [r6, #0]
 800eb70:	1c51      	adds	r1, r2, #1
 800eb72:	6031      	str	r1, [r6, #0]
 800eb74:	7812      	ldrb	r2, [r2, #0]
 800eb76:	f805 2b01 	strb.w	r2, [r5], #1
 800eb7a:	6872      	ldr	r2, [r6, #4]
 800eb7c:	3a01      	subs	r2, #1
 800eb7e:	2a00      	cmp	r2, #0
 800eb80:	6072      	str	r2, [r6, #4]
 800eb82:	dc07      	bgt.n	800eb94 <_scanf_i+0xb8>
 800eb84:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800eb88:	4631      	mov	r1, r6
 800eb8a:	4650      	mov	r0, sl
 800eb8c:	4790      	blx	r2
 800eb8e:	2800      	cmp	r0, #0
 800eb90:	f040 8085 	bne.w	800ec9e <_scanf_i+0x1c2>
 800eb94:	f10b 0b01 	add.w	fp, fp, #1
 800eb98:	f1bb 0f03 	cmp.w	fp, #3
 800eb9c:	d1cb      	bne.n	800eb36 <_scanf_i+0x5a>
 800eb9e:	6863      	ldr	r3, [r4, #4]
 800eba0:	b90b      	cbnz	r3, 800eba6 <_scanf_i+0xca>
 800eba2:	230a      	movs	r3, #10
 800eba4:	6063      	str	r3, [r4, #4]
 800eba6:	6863      	ldr	r3, [r4, #4]
 800eba8:	4947      	ldr	r1, [pc, #284]	; (800ecc8 <_scanf_i+0x1ec>)
 800ebaa:	6960      	ldr	r0, [r4, #20]
 800ebac:	1ac9      	subs	r1, r1, r3
 800ebae:	f000 f89f 	bl	800ecf0 <__sccl>
 800ebb2:	f04f 0b00 	mov.w	fp, #0
 800ebb6:	68a3      	ldr	r3, [r4, #8]
 800ebb8:	6822      	ldr	r2, [r4, #0]
 800ebba:	2b00      	cmp	r3, #0
 800ebbc:	d03d      	beq.n	800ec3a <_scanf_i+0x15e>
 800ebbe:	6831      	ldr	r1, [r6, #0]
 800ebc0:	6960      	ldr	r0, [r4, #20]
 800ebc2:	f891 c000 	ldrb.w	ip, [r1]
 800ebc6:	f810 000c 	ldrb.w	r0, [r0, ip]
 800ebca:	2800      	cmp	r0, #0
 800ebcc:	d035      	beq.n	800ec3a <_scanf_i+0x15e>
 800ebce:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800ebd2:	d124      	bne.n	800ec1e <_scanf_i+0x142>
 800ebd4:	0510      	lsls	r0, r2, #20
 800ebd6:	d522      	bpl.n	800ec1e <_scanf_i+0x142>
 800ebd8:	f10b 0b01 	add.w	fp, fp, #1
 800ebdc:	f1b9 0f00 	cmp.w	r9, #0
 800ebe0:	d003      	beq.n	800ebea <_scanf_i+0x10e>
 800ebe2:	3301      	adds	r3, #1
 800ebe4:	f109 39ff 	add.w	r9, r9, #4294967295
 800ebe8:	60a3      	str	r3, [r4, #8]
 800ebea:	6873      	ldr	r3, [r6, #4]
 800ebec:	3b01      	subs	r3, #1
 800ebee:	2b00      	cmp	r3, #0
 800ebf0:	6073      	str	r3, [r6, #4]
 800ebf2:	dd1b      	ble.n	800ec2c <_scanf_i+0x150>
 800ebf4:	6833      	ldr	r3, [r6, #0]
 800ebf6:	3301      	adds	r3, #1
 800ebf8:	6033      	str	r3, [r6, #0]
 800ebfa:	68a3      	ldr	r3, [r4, #8]
 800ebfc:	3b01      	subs	r3, #1
 800ebfe:	60a3      	str	r3, [r4, #8]
 800ec00:	e7d9      	b.n	800ebb6 <_scanf_i+0xda>
 800ec02:	f1bb 0f02 	cmp.w	fp, #2
 800ec06:	d1ae      	bne.n	800eb66 <_scanf_i+0x8a>
 800ec08:	6822      	ldr	r2, [r4, #0]
 800ec0a:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800ec0e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800ec12:	d1bf      	bne.n	800eb94 <_scanf_i+0xb8>
 800ec14:	2310      	movs	r3, #16
 800ec16:	6063      	str	r3, [r4, #4]
 800ec18:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ec1c:	e7a2      	b.n	800eb64 <_scanf_i+0x88>
 800ec1e:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800ec22:	6022      	str	r2, [r4, #0]
 800ec24:	780b      	ldrb	r3, [r1, #0]
 800ec26:	f805 3b01 	strb.w	r3, [r5], #1
 800ec2a:	e7de      	b.n	800ebea <_scanf_i+0x10e>
 800ec2c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800ec30:	4631      	mov	r1, r6
 800ec32:	4650      	mov	r0, sl
 800ec34:	4798      	blx	r3
 800ec36:	2800      	cmp	r0, #0
 800ec38:	d0df      	beq.n	800ebfa <_scanf_i+0x11e>
 800ec3a:	6823      	ldr	r3, [r4, #0]
 800ec3c:	05db      	lsls	r3, r3, #23
 800ec3e:	d50d      	bpl.n	800ec5c <_scanf_i+0x180>
 800ec40:	42bd      	cmp	r5, r7
 800ec42:	d909      	bls.n	800ec58 <_scanf_i+0x17c>
 800ec44:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800ec48:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800ec4c:	4632      	mov	r2, r6
 800ec4e:	4650      	mov	r0, sl
 800ec50:	4798      	blx	r3
 800ec52:	f105 39ff 	add.w	r9, r5, #4294967295
 800ec56:	464d      	mov	r5, r9
 800ec58:	42bd      	cmp	r5, r7
 800ec5a:	d02d      	beq.n	800ecb8 <_scanf_i+0x1dc>
 800ec5c:	6822      	ldr	r2, [r4, #0]
 800ec5e:	f012 0210 	ands.w	r2, r2, #16
 800ec62:	d113      	bne.n	800ec8c <_scanf_i+0x1b0>
 800ec64:	702a      	strb	r2, [r5, #0]
 800ec66:	6863      	ldr	r3, [r4, #4]
 800ec68:	9e01      	ldr	r6, [sp, #4]
 800ec6a:	4639      	mov	r1, r7
 800ec6c:	4650      	mov	r0, sl
 800ec6e:	47b0      	blx	r6
 800ec70:	6821      	ldr	r1, [r4, #0]
 800ec72:	f8d8 3000 	ldr.w	r3, [r8]
 800ec76:	f011 0f20 	tst.w	r1, #32
 800ec7a:	d013      	beq.n	800eca4 <_scanf_i+0x1c8>
 800ec7c:	1d1a      	adds	r2, r3, #4
 800ec7e:	f8c8 2000 	str.w	r2, [r8]
 800ec82:	681b      	ldr	r3, [r3, #0]
 800ec84:	6018      	str	r0, [r3, #0]
 800ec86:	68e3      	ldr	r3, [r4, #12]
 800ec88:	3301      	adds	r3, #1
 800ec8a:	60e3      	str	r3, [r4, #12]
 800ec8c:	1bed      	subs	r5, r5, r7
 800ec8e:	44ab      	add	fp, r5
 800ec90:	6925      	ldr	r5, [r4, #16]
 800ec92:	445d      	add	r5, fp
 800ec94:	6125      	str	r5, [r4, #16]
 800ec96:	2000      	movs	r0, #0
 800ec98:	b007      	add	sp, #28
 800ec9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec9e:	f04f 0b00 	mov.w	fp, #0
 800eca2:	e7ca      	b.n	800ec3a <_scanf_i+0x15e>
 800eca4:	1d1a      	adds	r2, r3, #4
 800eca6:	f8c8 2000 	str.w	r2, [r8]
 800ecaa:	681b      	ldr	r3, [r3, #0]
 800ecac:	f011 0f01 	tst.w	r1, #1
 800ecb0:	bf14      	ite	ne
 800ecb2:	8018      	strhne	r0, [r3, #0]
 800ecb4:	6018      	streq	r0, [r3, #0]
 800ecb6:	e7e6      	b.n	800ec86 <_scanf_i+0x1aa>
 800ecb8:	2001      	movs	r0, #1
 800ecba:	e7ed      	b.n	800ec98 <_scanf_i+0x1bc>
 800ecbc:	0800fa98 	.word	0x0800fa98
 800ecc0:	0800bbd1 	.word	0x0800bbd1
 800ecc4:	0800bad5 	.word	0x0800bad5
 800ecc8:	080104ce 	.word	0x080104ce

0800eccc <_read_r>:
 800eccc:	b538      	push	{r3, r4, r5, lr}
 800ecce:	4d07      	ldr	r5, [pc, #28]	; (800ecec <_read_r+0x20>)
 800ecd0:	4604      	mov	r4, r0
 800ecd2:	4608      	mov	r0, r1
 800ecd4:	4611      	mov	r1, r2
 800ecd6:	2200      	movs	r2, #0
 800ecd8:	602a      	str	r2, [r5, #0]
 800ecda:	461a      	mov	r2, r3
 800ecdc:	f000 fc60 	bl	800f5a0 <_read>
 800ece0:	1c43      	adds	r3, r0, #1
 800ece2:	d102      	bne.n	800ecea <_read_r+0x1e>
 800ece4:	682b      	ldr	r3, [r5, #0]
 800ece6:	b103      	cbz	r3, 800ecea <_read_r+0x1e>
 800ece8:	6023      	str	r3, [r4, #0]
 800ecea:	bd38      	pop	{r3, r4, r5, pc}
 800ecec:	20000360 	.word	0x20000360

0800ecf0 <__sccl>:
 800ecf0:	b570      	push	{r4, r5, r6, lr}
 800ecf2:	780b      	ldrb	r3, [r1, #0]
 800ecf4:	4604      	mov	r4, r0
 800ecf6:	2b5e      	cmp	r3, #94	; 0x5e
 800ecf8:	bf0b      	itete	eq
 800ecfa:	784b      	ldrbeq	r3, [r1, #1]
 800ecfc:	1c48      	addne	r0, r1, #1
 800ecfe:	1c88      	addeq	r0, r1, #2
 800ed00:	2200      	movne	r2, #0
 800ed02:	bf08      	it	eq
 800ed04:	2201      	moveq	r2, #1
 800ed06:	1e61      	subs	r1, r4, #1
 800ed08:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800ed0c:	f801 2f01 	strb.w	r2, [r1, #1]!
 800ed10:	42a9      	cmp	r1, r5
 800ed12:	d1fb      	bne.n	800ed0c <__sccl+0x1c>
 800ed14:	b90b      	cbnz	r3, 800ed1a <__sccl+0x2a>
 800ed16:	3801      	subs	r0, #1
 800ed18:	bd70      	pop	{r4, r5, r6, pc}
 800ed1a:	f082 0201 	eor.w	r2, r2, #1
 800ed1e:	54e2      	strb	r2, [r4, r3]
 800ed20:	4605      	mov	r5, r0
 800ed22:	4628      	mov	r0, r5
 800ed24:	f810 1b01 	ldrb.w	r1, [r0], #1
 800ed28:	292d      	cmp	r1, #45	; 0x2d
 800ed2a:	d006      	beq.n	800ed3a <__sccl+0x4a>
 800ed2c:	295d      	cmp	r1, #93	; 0x5d
 800ed2e:	d0f3      	beq.n	800ed18 <__sccl+0x28>
 800ed30:	b909      	cbnz	r1, 800ed36 <__sccl+0x46>
 800ed32:	4628      	mov	r0, r5
 800ed34:	e7f0      	b.n	800ed18 <__sccl+0x28>
 800ed36:	460b      	mov	r3, r1
 800ed38:	e7f1      	b.n	800ed1e <__sccl+0x2e>
 800ed3a:	786e      	ldrb	r6, [r5, #1]
 800ed3c:	2e5d      	cmp	r6, #93	; 0x5d
 800ed3e:	d0fa      	beq.n	800ed36 <__sccl+0x46>
 800ed40:	42b3      	cmp	r3, r6
 800ed42:	dcf8      	bgt.n	800ed36 <__sccl+0x46>
 800ed44:	3502      	adds	r5, #2
 800ed46:	4619      	mov	r1, r3
 800ed48:	3101      	adds	r1, #1
 800ed4a:	428e      	cmp	r6, r1
 800ed4c:	5462      	strb	r2, [r4, r1]
 800ed4e:	dcfb      	bgt.n	800ed48 <__sccl+0x58>
 800ed50:	1af1      	subs	r1, r6, r3
 800ed52:	3901      	subs	r1, #1
 800ed54:	1c58      	adds	r0, r3, #1
 800ed56:	42b3      	cmp	r3, r6
 800ed58:	bfa8      	it	ge
 800ed5a:	2100      	movge	r1, #0
 800ed5c:	1843      	adds	r3, r0, r1
 800ed5e:	e7e0      	b.n	800ed22 <__sccl+0x32>

0800ed60 <__submore>:
 800ed60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed64:	460c      	mov	r4, r1
 800ed66:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800ed68:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ed6c:	4299      	cmp	r1, r3
 800ed6e:	d11d      	bne.n	800edac <__submore+0x4c>
 800ed70:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800ed74:	f7fa faaa 	bl	80092cc <_malloc_r>
 800ed78:	b918      	cbnz	r0, 800ed82 <__submore+0x22>
 800ed7a:	f04f 30ff 	mov.w	r0, #4294967295
 800ed7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed82:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ed86:	63a3      	str	r3, [r4, #56]	; 0x38
 800ed88:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800ed8c:	6360      	str	r0, [r4, #52]	; 0x34
 800ed8e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800ed92:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed96:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 800ed9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed9e:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 800eda2:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800eda6:	6020      	str	r0, [r4, #0]
 800eda8:	2000      	movs	r0, #0
 800edaa:	e7e8      	b.n	800ed7e <__submore+0x1e>
 800edac:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800edae:	0077      	lsls	r7, r6, #1
 800edb0:	463a      	mov	r2, r7
 800edb2:	f000 fb27 	bl	800f404 <_realloc_r>
 800edb6:	4605      	mov	r5, r0
 800edb8:	2800      	cmp	r0, #0
 800edba:	d0de      	beq.n	800ed7a <__submore+0x1a>
 800edbc:	eb00 0806 	add.w	r8, r0, r6
 800edc0:	4601      	mov	r1, r0
 800edc2:	4632      	mov	r2, r6
 800edc4:	4640      	mov	r0, r8
 800edc6:	f7f9 ff8d 	bl	8008ce4 <memcpy>
 800edca:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800edce:	f8c4 8000 	str.w	r8, [r4]
 800edd2:	e7e9      	b.n	800eda8 <__submore+0x48>

0800edd4 <__swbuf_r>:
 800edd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800edd6:	460e      	mov	r6, r1
 800edd8:	4614      	mov	r4, r2
 800edda:	4605      	mov	r5, r0
 800eddc:	b118      	cbz	r0, 800ede6 <__swbuf_r+0x12>
 800edde:	6983      	ldr	r3, [r0, #24]
 800ede0:	b90b      	cbnz	r3, 800ede6 <__swbuf_r+0x12>
 800ede2:	f000 f9f3 	bl	800f1cc <__sinit>
 800ede6:	4b21      	ldr	r3, [pc, #132]	; (800ee6c <__swbuf_r+0x98>)
 800ede8:	429c      	cmp	r4, r3
 800edea:	d12b      	bne.n	800ee44 <__swbuf_r+0x70>
 800edec:	686c      	ldr	r4, [r5, #4]
 800edee:	69a3      	ldr	r3, [r4, #24]
 800edf0:	60a3      	str	r3, [r4, #8]
 800edf2:	89a3      	ldrh	r3, [r4, #12]
 800edf4:	071a      	lsls	r2, r3, #28
 800edf6:	d52f      	bpl.n	800ee58 <__swbuf_r+0x84>
 800edf8:	6923      	ldr	r3, [r4, #16]
 800edfa:	b36b      	cbz	r3, 800ee58 <__swbuf_r+0x84>
 800edfc:	6923      	ldr	r3, [r4, #16]
 800edfe:	6820      	ldr	r0, [r4, #0]
 800ee00:	1ac0      	subs	r0, r0, r3
 800ee02:	6963      	ldr	r3, [r4, #20]
 800ee04:	b2f6      	uxtb	r6, r6
 800ee06:	4283      	cmp	r3, r0
 800ee08:	4637      	mov	r7, r6
 800ee0a:	dc04      	bgt.n	800ee16 <__swbuf_r+0x42>
 800ee0c:	4621      	mov	r1, r4
 800ee0e:	4628      	mov	r0, r5
 800ee10:	f000 f948 	bl	800f0a4 <_fflush_r>
 800ee14:	bb30      	cbnz	r0, 800ee64 <__swbuf_r+0x90>
 800ee16:	68a3      	ldr	r3, [r4, #8]
 800ee18:	3b01      	subs	r3, #1
 800ee1a:	60a3      	str	r3, [r4, #8]
 800ee1c:	6823      	ldr	r3, [r4, #0]
 800ee1e:	1c5a      	adds	r2, r3, #1
 800ee20:	6022      	str	r2, [r4, #0]
 800ee22:	701e      	strb	r6, [r3, #0]
 800ee24:	6963      	ldr	r3, [r4, #20]
 800ee26:	3001      	adds	r0, #1
 800ee28:	4283      	cmp	r3, r0
 800ee2a:	d004      	beq.n	800ee36 <__swbuf_r+0x62>
 800ee2c:	89a3      	ldrh	r3, [r4, #12]
 800ee2e:	07db      	lsls	r3, r3, #31
 800ee30:	d506      	bpl.n	800ee40 <__swbuf_r+0x6c>
 800ee32:	2e0a      	cmp	r6, #10
 800ee34:	d104      	bne.n	800ee40 <__swbuf_r+0x6c>
 800ee36:	4621      	mov	r1, r4
 800ee38:	4628      	mov	r0, r5
 800ee3a:	f000 f933 	bl	800f0a4 <_fflush_r>
 800ee3e:	b988      	cbnz	r0, 800ee64 <__swbuf_r+0x90>
 800ee40:	4638      	mov	r0, r7
 800ee42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee44:	4b0a      	ldr	r3, [pc, #40]	; (800ee70 <__swbuf_r+0x9c>)
 800ee46:	429c      	cmp	r4, r3
 800ee48:	d101      	bne.n	800ee4e <__swbuf_r+0x7a>
 800ee4a:	68ac      	ldr	r4, [r5, #8]
 800ee4c:	e7cf      	b.n	800edee <__swbuf_r+0x1a>
 800ee4e:	4b09      	ldr	r3, [pc, #36]	; (800ee74 <__swbuf_r+0xa0>)
 800ee50:	429c      	cmp	r4, r3
 800ee52:	bf08      	it	eq
 800ee54:	68ec      	ldreq	r4, [r5, #12]
 800ee56:	e7ca      	b.n	800edee <__swbuf_r+0x1a>
 800ee58:	4621      	mov	r1, r4
 800ee5a:	4628      	mov	r0, r5
 800ee5c:	f000 f81a 	bl	800ee94 <__swsetup_r>
 800ee60:	2800      	cmp	r0, #0
 800ee62:	d0cb      	beq.n	800edfc <__swbuf_r+0x28>
 800ee64:	f04f 37ff 	mov.w	r7, #4294967295
 800ee68:	e7ea      	b.n	800ee40 <__swbuf_r+0x6c>
 800ee6a:	bf00      	nop
 800ee6c:	080104f0 	.word	0x080104f0
 800ee70:	08010510 	.word	0x08010510
 800ee74:	080104d0 	.word	0x080104d0

0800ee78 <__ascii_wctomb>:
 800ee78:	b149      	cbz	r1, 800ee8e <__ascii_wctomb+0x16>
 800ee7a:	2aff      	cmp	r2, #255	; 0xff
 800ee7c:	bf85      	ittet	hi
 800ee7e:	238a      	movhi	r3, #138	; 0x8a
 800ee80:	6003      	strhi	r3, [r0, #0]
 800ee82:	700a      	strbls	r2, [r1, #0]
 800ee84:	f04f 30ff 	movhi.w	r0, #4294967295
 800ee88:	bf98      	it	ls
 800ee8a:	2001      	movls	r0, #1
 800ee8c:	4770      	bx	lr
 800ee8e:	4608      	mov	r0, r1
 800ee90:	4770      	bx	lr
	...

0800ee94 <__swsetup_r>:
 800ee94:	4b32      	ldr	r3, [pc, #200]	; (800ef60 <__swsetup_r+0xcc>)
 800ee96:	b570      	push	{r4, r5, r6, lr}
 800ee98:	681d      	ldr	r5, [r3, #0]
 800ee9a:	4606      	mov	r6, r0
 800ee9c:	460c      	mov	r4, r1
 800ee9e:	b125      	cbz	r5, 800eeaa <__swsetup_r+0x16>
 800eea0:	69ab      	ldr	r3, [r5, #24]
 800eea2:	b913      	cbnz	r3, 800eeaa <__swsetup_r+0x16>
 800eea4:	4628      	mov	r0, r5
 800eea6:	f000 f991 	bl	800f1cc <__sinit>
 800eeaa:	4b2e      	ldr	r3, [pc, #184]	; (800ef64 <__swsetup_r+0xd0>)
 800eeac:	429c      	cmp	r4, r3
 800eeae:	d10f      	bne.n	800eed0 <__swsetup_r+0x3c>
 800eeb0:	686c      	ldr	r4, [r5, #4]
 800eeb2:	89a3      	ldrh	r3, [r4, #12]
 800eeb4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800eeb8:	0719      	lsls	r1, r3, #28
 800eeba:	d42c      	bmi.n	800ef16 <__swsetup_r+0x82>
 800eebc:	06dd      	lsls	r5, r3, #27
 800eebe:	d411      	bmi.n	800eee4 <__swsetup_r+0x50>
 800eec0:	2309      	movs	r3, #9
 800eec2:	6033      	str	r3, [r6, #0]
 800eec4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800eec8:	81a3      	strh	r3, [r4, #12]
 800eeca:	f04f 30ff 	mov.w	r0, #4294967295
 800eece:	e03e      	b.n	800ef4e <__swsetup_r+0xba>
 800eed0:	4b25      	ldr	r3, [pc, #148]	; (800ef68 <__swsetup_r+0xd4>)
 800eed2:	429c      	cmp	r4, r3
 800eed4:	d101      	bne.n	800eeda <__swsetup_r+0x46>
 800eed6:	68ac      	ldr	r4, [r5, #8]
 800eed8:	e7eb      	b.n	800eeb2 <__swsetup_r+0x1e>
 800eeda:	4b24      	ldr	r3, [pc, #144]	; (800ef6c <__swsetup_r+0xd8>)
 800eedc:	429c      	cmp	r4, r3
 800eede:	bf08      	it	eq
 800eee0:	68ec      	ldreq	r4, [r5, #12]
 800eee2:	e7e6      	b.n	800eeb2 <__swsetup_r+0x1e>
 800eee4:	0758      	lsls	r0, r3, #29
 800eee6:	d512      	bpl.n	800ef0e <__swsetup_r+0x7a>
 800eee8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800eeea:	b141      	cbz	r1, 800eefe <__swsetup_r+0x6a>
 800eeec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800eef0:	4299      	cmp	r1, r3
 800eef2:	d002      	beq.n	800eefa <__swsetup_r+0x66>
 800eef4:	4630      	mov	r0, r6
 800eef6:	f7fa f97d 	bl	80091f4 <_free_r>
 800eefa:	2300      	movs	r3, #0
 800eefc:	6363      	str	r3, [r4, #52]	; 0x34
 800eefe:	89a3      	ldrh	r3, [r4, #12]
 800ef00:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800ef04:	81a3      	strh	r3, [r4, #12]
 800ef06:	2300      	movs	r3, #0
 800ef08:	6063      	str	r3, [r4, #4]
 800ef0a:	6923      	ldr	r3, [r4, #16]
 800ef0c:	6023      	str	r3, [r4, #0]
 800ef0e:	89a3      	ldrh	r3, [r4, #12]
 800ef10:	f043 0308 	orr.w	r3, r3, #8
 800ef14:	81a3      	strh	r3, [r4, #12]
 800ef16:	6923      	ldr	r3, [r4, #16]
 800ef18:	b94b      	cbnz	r3, 800ef2e <__swsetup_r+0x9a>
 800ef1a:	89a3      	ldrh	r3, [r4, #12]
 800ef1c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800ef20:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ef24:	d003      	beq.n	800ef2e <__swsetup_r+0x9a>
 800ef26:	4621      	mov	r1, r4
 800ef28:	4630      	mov	r0, r6
 800ef2a:	f000 fa11 	bl	800f350 <__smakebuf_r>
 800ef2e:	89a0      	ldrh	r0, [r4, #12]
 800ef30:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ef34:	f010 0301 	ands.w	r3, r0, #1
 800ef38:	d00a      	beq.n	800ef50 <__swsetup_r+0xbc>
 800ef3a:	2300      	movs	r3, #0
 800ef3c:	60a3      	str	r3, [r4, #8]
 800ef3e:	6963      	ldr	r3, [r4, #20]
 800ef40:	425b      	negs	r3, r3
 800ef42:	61a3      	str	r3, [r4, #24]
 800ef44:	6923      	ldr	r3, [r4, #16]
 800ef46:	b943      	cbnz	r3, 800ef5a <__swsetup_r+0xc6>
 800ef48:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800ef4c:	d1ba      	bne.n	800eec4 <__swsetup_r+0x30>
 800ef4e:	bd70      	pop	{r4, r5, r6, pc}
 800ef50:	0781      	lsls	r1, r0, #30
 800ef52:	bf58      	it	pl
 800ef54:	6963      	ldrpl	r3, [r4, #20]
 800ef56:	60a3      	str	r3, [r4, #8]
 800ef58:	e7f4      	b.n	800ef44 <__swsetup_r+0xb0>
 800ef5a:	2000      	movs	r0, #0
 800ef5c:	e7f7      	b.n	800ef4e <__swsetup_r+0xba>
 800ef5e:	bf00      	nop
 800ef60:	2000000c 	.word	0x2000000c
 800ef64:	080104f0 	.word	0x080104f0
 800ef68:	08010510 	.word	0x08010510
 800ef6c:	080104d0 	.word	0x080104d0

0800ef70 <abort>:
 800ef70:	b508      	push	{r3, lr}
 800ef72:	2006      	movs	r0, #6
 800ef74:	f000 fa9e 	bl	800f4b4 <raise>
 800ef78:	2001      	movs	r0, #1
 800ef7a:	f000 fb2f 	bl	800f5dc <_exit>
	...

0800ef80 <__env_lock>:
 800ef80:	4801      	ldr	r0, [pc, #4]	; (800ef88 <__env_lock+0x8>)
 800ef82:	f7fe bbbf 	b.w	800d704 <__retarget_lock_acquire_recursive>
 800ef86:	bf00      	nop
 800ef88:	20000358 	.word	0x20000358

0800ef8c <__env_unlock>:
 800ef8c:	4801      	ldr	r0, [pc, #4]	; (800ef94 <__env_unlock+0x8>)
 800ef8e:	f7fe bbbb 	b.w	800d708 <__retarget_lock_release_recursive>
 800ef92:	bf00      	nop
 800ef94:	20000358 	.word	0x20000358

0800ef98 <__sflush_r>:
 800ef98:	898a      	ldrh	r2, [r1, #12]
 800ef9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef9e:	4605      	mov	r5, r0
 800efa0:	0710      	lsls	r0, r2, #28
 800efa2:	460c      	mov	r4, r1
 800efa4:	d458      	bmi.n	800f058 <__sflush_r+0xc0>
 800efa6:	684b      	ldr	r3, [r1, #4]
 800efa8:	2b00      	cmp	r3, #0
 800efaa:	dc05      	bgt.n	800efb8 <__sflush_r+0x20>
 800efac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800efae:	2b00      	cmp	r3, #0
 800efb0:	dc02      	bgt.n	800efb8 <__sflush_r+0x20>
 800efb2:	2000      	movs	r0, #0
 800efb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800efb8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800efba:	2e00      	cmp	r6, #0
 800efbc:	d0f9      	beq.n	800efb2 <__sflush_r+0x1a>
 800efbe:	2300      	movs	r3, #0
 800efc0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800efc4:	682f      	ldr	r7, [r5, #0]
 800efc6:	602b      	str	r3, [r5, #0]
 800efc8:	d032      	beq.n	800f030 <__sflush_r+0x98>
 800efca:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800efcc:	89a3      	ldrh	r3, [r4, #12]
 800efce:	075a      	lsls	r2, r3, #29
 800efd0:	d505      	bpl.n	800efde <__sflush_r+0x46>
 800efd2:	6863      	ldr	r3, [r4, #4]
 800efd4:	1ac0      	subs	r0, r0, r3
 800efd6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800efd8:	b10b      	cbz	r3, 800efde <__sflush_r+0x46>
 800efda:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800efdc:	1ac0      	subs	r0, r0, r3
 800efde:	2300      	movs	r3, #0
 800efe0:	4602      	mov	r2, r0
 800efe2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800efe4:	6a21      	ldr	r1, [r4, #32]
 800efe6:	4628      	mov	r0, r5
 800efe8:	47b0      	blx	r6
 800efea:	1c43      	adds	r3, r0, #1
 800efec:	89a3      	ldrh	r3, [r4, #12]
 800efee:	d106      	bne.n	800effe <__sflush_r+0x66>
 800eff0:	6829      	ldr	r1, [r5, #0]
 800eff2:	291d      	cmp	r1, #29
 800eff4:	d82c      	bhi.n	800f050 <__sflush_r+0xb8>
 800eff6:	4a2a      	ldr	r2, [pc, #168]	; (800f0a0 <__sflush_r+0x108>)
 800eff8:	40ca      	lsrs	r2, r1
 800effa:	07d6      	lsls	r6, r2, #31
 800effc:	d528      	bpl.n	800f050 <__sflush_r+0xb8>
 800effe:	2200      	movs	r2, #0
 800f000:	6062      	str	r2, [r4, #4]
 800f002:	04d9      	lsls	r1, r3, #19
 800f004:	6922      	ldr	r2, [r4, #16]
 800f006:	6022      	str	r2, [r4, #0]
 800f008:	d504      	bpl.n	800f014 <__sflush_r+0x7c>
 800f00a:	1c42      	adds	r2, r0, #1
 800f00c:	d101      	bne.n	800f012 <__sflush_r+0x7a>
 800f00e:	682b      	ldr	r3, [r5, #0]
 800f010:	b903      	cbnz	r3, 800f014 <__sflush_r+0x7c>
 800f012:	6560      	str	r0, [r4, #84]	; 0x54
 800f014:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f016:	602f      	str	r7, [r5, #0]
 800f018:	2900      	cmp	r1, #0
 800f01a:	d0ca      	beq.n	800efb2 <__sflush_r+0x1a>
 800f01c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f020:	4299      	cmp	r1, r3
 800f022:	d002      	beq.n	800f02a <__sflush_r+0x92>
 800f024:	4628      	mov	r0, r5
 800f026:	f7fa f8e5 	bl	80091f4 <_free_r>
 800f02a:	2000      	movs	r0, #0
 800f02c:	6360      	str	r0, [r4, #52]	; 0x34
 800f02e:	e7c1      	b.n	800efb4 <__sflush_r+0x1c>
 800f030:	6a21      	ldr	r1, [r4, #32]
 800f032:	2301      	movs	r3, #1
 800f034:	4628      	mov	r0, r5
 800f036:	47b0      	blx	r6
 800f038:	1c41      	adds	r1, r0, #1
 800f03a:	d1c7      	bne.n	800efcc <__sflush_r+0x34>
 800f03c:	682b      	ldr	r3, [r5, #0]
 800f03e:	2b00      	cmp	r3, #0
 800f040:	d0c4      	beq.n	800efcc <__sflush_r+0x34>
 800f042:	2b1d      	cmp	r3, #29
 800f044:	d001      	beq.n	800f04a <__sflush_r+0xb2>
 800f046:	2b16      	cmp	r3, #22
 800f048:	d101      	bne.n	800f04e <__sflush_r+0xb6>
 800f04a:	602f      	str	r7, [r5, #0]
 800f04c:	e7b1      	b.n	800efb2 <__sflush_r+0x1a>
 800f04e:	89a3      	ldrh	r3, [r4, #12]
 800f050:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f054:	81a3      	strh	r3, [r4, #12]
 800f056:	e7ad      	b.n	800efb4 <__sflush_r+0x1c>
 800f058:	690f      	ldr	r7, [r1, #16]
 800f05a:	2f00      	cmp	r7, #0
 800f05c:	d0a9      	beq.n	800efb2 <__sflush_r+0x1a>
 800f05e:	0793      	lsls	r3, r2, #30
 800f060:	680e      	ldr	r6, [r1, #0]
 800f062:	bf08      	it	eq
 800f064:	694b      	ldreq	r3, [r1, #20]
 800f066:	600f      	str	r7, [r1, #0]
 800f068:	bf18      	it	ne
 800f06a:	2300      	movne	r3, #0
 800f06c:	eba6 0807 	sub.w	r8, r6, r7
 800f070:	608b      	str	r3, [r1, #8]
 800f072:	f1b8 0f00 	cmp.w	r8, #0
 800f076:	dd9c      	ble.n	800efb2 <__sflush_r+0x1a>
 800f078:	6a21      	ldr	r1, [r4, #32]
 800f07a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800f07c:	4643      	mov	r3, r8
 800f07e:	463a      	mov	r2, r7
 800f080:	4628      	mov	r0, r5
 800f082:	47b0      	blx	r6
 800f084:	2800      	cmp	r0, #0
 800f086:	dc06      	bgt.n	800f096 <__sflush_r+0xfe>
 800f088:	89a3      	ldrh	r3, [r4, #12]
 800f08a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f08e:	81a3      	strh	r3, [r4, #12]
 800f090:	f04f 30ff 	mov.w	r0, #4294967295
 800f094:	e78e      	b.n	800efb4 <__sflush_r+0x1c>
 800f096:	4407      	add	r7, r0
 800f098:	eba8 0800 	sub.w	r8, r8, r0
 800f09c:	e7e9      	b.n	800f072 <__sflush_r+0xda>
 800f09e:	bf00      	nop
 800f0a0:	20400001 	.word	0x20400001

0800f0a4 <_fflush_r>:
 800f0a4:	b538      	push	{r3, r4, r5, lr}
 800f0a6:	690b      	ldr	r3, [r1, #16]
 800f0a8:	4605      	mov	r5, r0
 800f0aa:	460c      	mov	r4, r1
 800f0ac:	b913      	cbnz	r3, 800f0b4 <_fflush_r+0x10>
 800f0ae:	2500      	movs	r5, #0
 800f0b0:	4628      	mov	r0, r5
 800f0b2:	bd38      	pop	{r3, r4, r5, pc}
 800f0b4:	b118      	cbz	r0, 800f0be <_fflush_r+0x1a>
 800f0b6:	6983      	ldr	r3, [r0, #24]
 800f0b8:	b90b      	cbnz	r3, 800f0be <_fflush_r+0x1a>
 800f0ba:	f000 f887 	bl	800f1cc <__sinit>
 800f0be:	4b14      	ldr	r3, [pc, #80]	; (800f110 <_fflush_r+0x6c>)
 800f0c0:	429c      	cmp	r4, r3
 800f0c2:	d11b      	bne.n	800f0fc <_fflush_r+0x58>
 800f0c4:	686c      	ldr	r4, [r5, #4]
 800f0c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f0ca:	2b00      	cmp	r3, #0
 800f0cc:	d0ef      	beq.n	800f0ae <_fflush_r+0xa>
 800f0ce:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f0d0:	07d0      	lsls	r0, r2, #31
 800f0d2:	d404      	bmi.n	800f0de <_fflush_r+0x3a>
 800f0d4:	0599      	lsls	r1, r3, #22
 800f0d6:	d402      	bmi.n	800f0de <_fflush_r+0x3a>
 800f0d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f0da:	f7fe fb13 	bl	800d704 <__retarget_lock_acquire_recursive>
 800f0de:	4628      	mov	r0, r5
 800f0e0:	4621      	mov	r1, r4
 800f0e2:	f7ff ff59 	bl	800ef98 <__sflush_r>
 800f0e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f0e8:	07da      	lsls	r2, r3, #31
 800f0ea:	4605      	mov	r5, r0
 800f0ec:	d4e0      	bmi.n	800f0b0 <_fflush_r+0xc>
 800f0ee:	89a3      	ldrh	r3, [r4, #12]
 800f0f0:	059b      	lsls	r3, r3, #22
 800f0f2:	d4dd      	bmi.n	800f0b0 <_fflush_r+0xc>
 800f0f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f0f6:	f7fe fb07 	bl	800d708 <__retarget_lock_release_recursive>
 800f0fa:	e7d9      	b.n	800f0b0 <_fflush_r+0xc>
 800f0fc:	4b05      	ldr	r3, [pc, #20]	; (800f114 <_fflush_r+0x70>)
 800f0fe:	429c      	cmp	r4, r3
 800f100:	d101      	bne.n	800f106 <_fflush_r+0x62>
 800f102:	68ac      	ldr	r4, [r5, #8]
 800f104:	e7df      	b.n	800f0c6 <_fflush_r+0x22>
 800f106:	4b04      	ldr	r3, [pc, #16]	; (800f118 <_fflush_r+0x74>)
 800f108:	429c      	cmp	r4, r3
 800f10a:	bf08      	it	eq
 800f10c:	68ec      	ldreq	r4, [r5, #12]
 800f10e:	e7da      	b.n	800f0c6 <_fflush_r+0x22>
 800f110:	080104f0 	.word	0x080104f0
 800f114:	08010510 	.word	0x08010510
 800f118:	080104d0 	.word	0x080104d0

0800f11c <std>:
 800f11c:	2300      	movs	r3, #0
 800f11e:	b510      	push	{r4, lr}
 800f120:	4604      	mov	r4, r0
 800f122:	e9c0 3300 	strd	r3, r3, [r0]
 800f126:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f12a:	6083      	str	r3, [r0, #8]
 800f12c:	8181      	strh	r1, [r0, #12]
 800f12e:	6643      	str	r3, [r0, #100]	; 0x64
 800f130:	81c2      	strh	r2, [r0, #14]
 800f132:	6183      	str	r3, [r0, #24]
 800f134:	4619      	mov	r1, r3
 800f136:	2208      	movs	r2, #8
 800f138:	305c      	adds	r0, #92	; 0x5c
 800f13a:	f7f9 fde1 	bl	8008d00 <memset>
 800f13e:	4b05      	ldr	r3, [pc, #20]	; (800f154 <std+0x38>)
 800f140:	6263      	str	r3, [r4, #36]	; 0x24
 800f142:	4b05      	ldr	r3, [pc, #20]	; (800f158 <std+0x3c>)
 800f144:	62a3      	str	r3, [r4, #40]	; 0x28
 800f146:	4b05      	ldr	r3, [pc, #20]	; (800f15c <std+0x40>)
 800f148:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f14a:	4b05      	ldr	r3, [pc, #20]	; (800f160 <std+0x44>)
 800f14c:	6224      	str	r4, [r4, #32]
 800f14e:	6323      	str	r3, [r4, #48]	; 0x30
 800f150:	bd10      	pop	{r4, pc}
 800f152:	bf00      	nop
 800f154:	0800a1d5 	.word	0x0800a1d5
 800f158:	0800a1fb 	.word	0x0800a1fb
 800f15c:	0800a233 	.word	0x0800a233
 800f160:	0800a257 	.word	0x0800a257

0800f164 <_cleanup_r>:
 800f164:	4901      	ldr	r1, [pc, #4]	; (800f16c <_cleanup_r+0x8>)
 800f166:	f000 b8af 	b.w	800f2c8 <_fwalk_reent>
 800f16a:	bf00      	nop
 800f16c:	0800f0a5 	.word	0x0800f0a5

0800f170 <__sfmoreglue>:
 800f170:	b570      	push	{r4, r5, r6, lr}
 800f172:	2268      	movs	r2, #104	; 0x68
 800f174:	1e4d      	subs	r5, r1, #1
 800f176:	4355      	muls	r5, r2
 800f178:	460e      	mov	r6, r1
 800f17a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f17e:	f7fa f8a5 	bl	80092cc <_malloc_r>
 800f182:	4604      	mov	r4, r0
 800f184:	b140      	cbz	r0, 800f198 <__sfmoreglue+0x28>
 800f186:	2100      	movs	r1, #0
 800f188:	e9c0 1600 	strd	r1, r6, [r0]
 800f18c:	300c      	adds	r0, #12
 800f18e:	60a0      	str	r0, [r4, #8]
 800f190:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f194:	f7f9 fdb4 	bl	8008d00 <memset>
 800f198:	4620      	mov	r0, r4
 800f19a:	bd70      	pop	{r4, r5, r6, pc}

0800f19c <__sfp_lock_acquire>:
 800f19c:	4801      	ldr	r0, [pc, #4]	; (800f1a4 <__sfp_lock_acquire+0x8>)
 800f19e:	f7fe bab1 	b.w	800d704 <__retarget_lock_acquire_recursive>
 800f1a2:	bf00      	nop
 800f1a4:	2000035a 	.word	0x2000035a

0800f1a8 <__sfp_lock_release>:
 800f1a8:	4801      	ldr	r0, [pc, #4]	; (800f1b0 <__sfp_lock_release+0x8>)
 800f1aa:	f7fe baad 	b.w	800d708 <__retarget_lock_release_recursive>
 800f1ae:	bf00      	nop
 800f1b0:	2000035a 	.word	0x2000035a

0800f1b4 <__sinit_lock_acquire>:
 800f1b4:	4801      	ldr	r0, [pc, #4]	; (800f1bc <__sinit_lock_acquire+0x8>)
 800f1b6:	f7fe baa5 	b.w	800d704 <__retarget_lock_acquire_recursive>
 800f1ba:	bf00      	nop
 800f1bc:	2000035b 	.word	0x2000035b

0800f1c0 <__sinit_lock_release>:
 800f1c0:	4801      	ldr	r0, [pc, #4]	; (800f1c8 <__sinit_lock_release+0x8>)
 800f1c2:	f7fe baa1 	b.w	800d708 <__retarget_lock_release_recursive>
 800f1c6:	bf00      	nop
 800f1c8:	2000035b 	.word	0x2000035b

0800f1cc <__sinit>:
 800f1cc:	b510      	push	{r4, lr}
 800f1ce:	4604      	mov	r4, r0
 800f1d0:	f7ff fff0 	bl	800f1b4 <__sinit_lock_acquire>
 800f1d4:	69a3      	ldr	r3, [r4, #24]
 800f1d6:	b11b      	cbz	r3, 800f1e0 <__sinit+0x14>
 800f1d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f1dc:	f7ff bff0 	b.w	800f1c0 <__sinit_lock_release>
 800f1e0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f1e4:	6523      	str	r3, [r4, #80]	; 0x50
 800f1e6:	4b13      	ldr	r3, [pc, #76]	; (800f234 <__sinit+0x68>)
 800f1e8:	4a13      	ldr	r2, [pc, #76]	; (800f238 <__sinit+0x6c>)
 800f1ea:	681b      	ldr	r3, [r3, #0]
 800f1ec:	62a2      	str	r2, [r4, #40]	; 0x28
 800f1ee:	42a3      	cmp	r3, r4
 800f1f0:	bf04      	itt	eq
 800f1f2:	2301      	moveq	r3, #1
 800f1f4:	61a3      	streq	r3, [r4, #24]
 800f1f6:	4620      	mov	r0, r4
 800f1f8:	f000 f820 	bl	800f23c <__sfp>
 800f1fc:	6060      	str	r0, [r4, #4]
 800f1fe:	4620      	mov	r0, r4
 800f200:	f000 f81c 	bl	800f23c <__sfp>
 800f204:	60a0      	str	r0, [r4, #8]
 800f206:	4620      	mov	r0, r4
 800f208:	f000 f818 	bl	800f23c <__sfp>
 800f20c:	2200      	movs	r2, #0
 800f20e:	60e0      	str	r0, [r4, #12]
 800f210:	2104      	movs	r1, #4
 800f212:	6860      	ldr	r0, [r4, #4]
 800f214:	f7ff ff82 	bl	800f11c <std>
 800f218:	68a0      	ldr	r0, [r4, #8]
 800f21a:	2201      	movs	r2, #1
 800f21c:	2109      	movs	r1, #9
 800f21e:	f7ff ff7d 	bl	800f11c <std>
 800f222:	68e0      	ldr	r0, [r4, #12]
 800f224:	2202      	movs	r2, #2
 800f226:	2112      	movs	r1, #18
 800f228:	f7ff ff78 	bl	800f11c <std>
 800f22c:	2301      	movs	r3, #1
 800f22e:	61a3      	str	r3, [r4, #24]
 800f230:	e7d2      	b.n	800f1d8 <__sinit+0xc>
 800f232:	bf00      	nop
 800f234:	0800fca0 	.word	0x0800fca0
 800f238:	0800f165 	.word	0x0800f165

0800f23c <__sfp>:
 800f23c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f23e:	4607      	mov	r7, r0
 800f240:	f7ff ffac 	bl	800f19c <__sfp_lock_acquire>
 800f244:	4b1e      	ldr	r3, [pc, #120]	; (800f2c0 <__sfp+0x84>)
 800f246:	681e      	ldr	r6, [r3, #0]
 800f248:	69b3      	ldr	r3, [r6, #24]
 800f24a:	b913      	cbnz	r3, 800f252 <__sfp+0x16>
 800f24c:	4630      	mov	r0, r6
 800f24e:	f7ff ffbd 	bl	800f1cc <__sinit>
 800f252:	3648      	adds	r6, #72	; 0x48
 800f254:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f258:	3b01      	subs	r3, #1
 800f25a:	d503      	bpl.n	800f264 <__sfp+0x28>
 800f25c:	6833      	ldr	r3, [r6, #0]
 800f25e:	b30b      	cbz	r3, 800f2a4 <__sfp+0x68>
 800f260:	6836      	ldr	r6, [r6, #0]
 800f262:	e7f7      	b.n	800f254 <__sfp+0x18>
 800f264:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f268:	b9d5      	cbnz	r5, 800f2a0 <__sfp+0x64>
 800f26a:	4b16      	ldr	r3, [pc, #88]	; (800f2c4 <__sfp+0x88>)
 800f26c:	60e3      	str	r3, [r4, #12]
 800f26e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f272:	6665      	str	r5, [r4, #100]	; 0x64
 800f274:	f7fe fa44 	bl	800d700 <__retarget_lock_init_recursive>
 800f278:	f7ff ff96 	bl	800f1a8 <__sfp_lock_release>
 800f27c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f280:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f284:	6025      	str	r5, [r4, #0]
 800f286:	61a5      	str	r5, [r4, #24]
 800f288:	2208      	movs	r2, #8
 800f28a:	4629      	mov	r1, r5
 800f28c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f290:	f7f9 fd36 	bl	8008d00 <memset>
 800f294:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f298:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f29c:	4620      	mov	r0, r4
 800f29e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f2a0:	3468      	adds	r4, #104	; 0x68
 800f2a2:	e7d9      	b.n	800f258 <__sfp+0x1c>
 800f2a4:	2104      	movs	r1, #4
 800f2a6:	4638      	mov	r0, r7
 800f2a8:	f7ff ff62 	bl	800f170 <__sfmoreglue>
 800f2ac:	4604      	mov	r4, r0
 800f2ae:	6030      	str	r0, [r6, #0]
 800f2b0:	2800      	cmp	r0, #0
 800f2b2:	d1d5      	bne.n	800f260 <__sfp+0x24>
 800f2b4:	f7ff ff78 	bl	800f1a8 <__sfp_lock_release>
 800f2b8:	230c      	movs	r3, #12
 800f2ba:	603b      	str	r3, [r7, #0]
 800f2bc:	e7ee      	b.n	800f29c <__sfp+0x60>
 800f2be:	bf00      	nop
 800f2c0:	0800fca0 	.word	0x0800fca0
 800f2c4:	ffff0001 	.word	0xffff0001

0800f2c8 <_fwalk_reent>:
 800f2c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f2cc:	4606      	mov	r6, r0
 800f2ce:	4688      	mov	r8, r1
 800f2d0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800f2d4:	2700      	movs	r7, #0
 800f2d6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f2da:	f1b9 0901 	subs.w	r9, r9, #1
 800f2de:	d505      	bpl.n	800f2ec <_fwalk_reent+0x24>
 800f2e0:	6824      	ldr	r4, [r4, #0]
 800f2e2:	2c00      	cmp	r4, #0
 800f2e4:	d1f7      	bne.n	800f2d6 <_fwalk_reent+0xe>
 800f2e6:	4638      	mov	r0, r7
 800f2e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f2ec:	89ab      	ldrh	r3, [r5, #12]
 800f2ee:	2b01      	cmp	r3, #1
 800f2f0:	d907      	bls.n	800f302 <_fwalk_reent+0x3a>
 800f2f2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f2f6:	3301      	adds	r3, #1
 800f2f8:	d003      	beq.n	800f302 <_fwalk_reent+0x3a>
 800f2fa:	4629      	mov	r1, r5
 800f2fc:	4630      	mov	r0, r6
 800f2fe:	47c0      	blx	r8
 800f300:	4307      	orrs	r7, r0
 800f302:	3568      	adds	r5, #104	; 0x68
 800f304:	e7e9      	b.n	800f2da <_fwalk_reent+0x12>

0800f306 <__swhatbuf_r>:
 800f306:	b570      	push	{r4, r5, r6, lr}
 800f308:	460e      	mov	r6, r1
 800f30a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f30e:	2900      	cmp	r1, #0
 800f310:	b096      	sub	sp, #88	; 0x58
 800f312:	4614      	mov	r4, r2
 800f314:	461d      	mov	r5, r3
 800f316:	da08      	bge.n	800f32a <__swhatbuf_r+0x24>
 800f318:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800f31c:	2200      	movs	r2, #0
 800f31e:	602a      	str	r2, [r5, #0]
 800f320:	061a      	lsls	r2, r3, #24
 800f322:	d410      	bmi.n	800f346 <__swhatbuf_r+0x40>
 800f324:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f328:	e00e      	b.n	800f348 <__swhatbuf_r+0x42>
 800f32a:	466a      	mov	r2, sp
 800f32c:	f000 f8de 	bl	800f4ec <_fstat_r>
 800f330:	2800      	cmp	r0, #0
 800f332:	dbf1      	blt.n	800f318 <__swhatbuf_r+0x12>
 800f334:	9a01      	ldr	r2, [sp, #4]
 800f336:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800f33a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800f33e:	425a      	negs	r2, r3
 800f340:	415a      	adcs	r2, r3
 800f342:	602a      	str	r2, [r5, #0]
 800f344:	e7ee      	b.n	800f324 <__swhatbuf_r+0x1e>
 800f346:	2340      	movs	r3, #64	; 0x40
 800f348:	2000      	movs	r0, #0
 800f34a:	6023      	str	r3, [r4, #0]
 800f34c:	b016      	add	sp, #88	; 0x58
 800f34e:	bd70      	pop	{r4, r5, r6, pc}

0800f350 <__smakebuf_r>:
 800f350:	898b      	ldrh	r3, [r1, #12]
 800f352:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f354:	079d      	lsls	r5, r3, #30
 800f356:	4606      	mov	r6, r0
 800f358:	460c      	mov	r4, r1
 800f35a:	d507      	bpl.n	800f36c <__smakebuf_r+0x1c>
 800f35c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800f360:	6023      	str	r3, [r4, #0]
 800f362:	6123      	str	r3, [r4, #16]
 800f364:	2301      	movs	r3, #1
 800f366:	6163      	str	r3, [r4, #20]
 800f368:	b002      	add	sp, #8
 800f36a:	bd70      	pop	{r4, r5, r6, pc}
 800f36c:	ab01      	add	r3, sp, #4
 800f36e:	466a      	mov	r2, sp
 800f370:	f7ff ffc9 	bl	800f306 <__swhatbuf_r>
 800f374:	9900      	ldr	r1, [sp, #0]
 800f376:	4605      	mov	r5, r0
 800f378:	4630      	mov	r0, r6
 800f37a:	f7f9 ffa7 	bl	80092cc <_malloc_r>
 800f37e:	b948      	cbnz	r0, 800f394 <__smakebuf_r+0x44>
 800f380:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f384:	059a      	lsls	r2, r3, #22
 800f386:	d4ef      	bmi.n	800f368 <__smakebuf_r+0x18>
 800f388:	f023 0303 	bic.w	r3, r3, #3
 800f38c:	f043 0302 	orr.w	r3, r3, #2
 800f390:	81a3      	strh	r3, [r4, #12]
 800f392:	e7e3      	b.n	800f35c <__smakebuf_r+0xc>
 800f394:	4b0d      	ldr	r3, [pc, #52]	; (800f3cc <__smakebuf_r+0x7c>)
 800f396:	62b3      	str	r3, [r6, #40]	; 0x28
 800f398:	89a3      	ldrh	r3, [r4, #12]
 800f39a:	6020      	str	r0, [r4, #0]
 800f39c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f3a0:	81a3      	strh	r3, [r4, #12]
 800f3a2:	9b00      	ldr	r3, [sp, #0]
 800f3a4:	6163      	str	r3, [r4, #20]
 800f3a6:	9b01      	ldr	r3, [sp, #4]
 800f3a8:	6120      	str	r0, [r4, #16]
 800f3aa:	b15b      	cbz	r3, 800f3c4 <__smakebuf_r+0x74>
 800f3ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800f3b0:	4630      	mov	r0, r6
 800f3b2:	f000 f8ad 	bl	800f510 <_isatty_r>
 800f3b6:	b128      	cbz	r0, 800f3c4 <__smakebuf_r+0x74>
 800f3b8:	89a3      	ldrh	r3, [r4, #12]
 800f3ba:	f023 0303 	bic.w	r3, r3, #3
 800f3be:	f043 0301 	orr.w	r3, r3, #1
 800f3c2:	81a3      	strh	r3, [r4, #12]
 800f3c4:	89a0      	ldrh	r0, [r4, #12]
 800f3c6:	4305      	orrs	r5, r0
 800f3c8:	81a5      	strh	r5, [r4, #12]
 800f3ca:	e7cd      	b.n	800f368 <__smakebuf_r+0x18>
 800f3cc:	0800f165 	.word	0x0800f165

0800f3d0 <memmove>:
 800f3d0:	4288      	cmp	r0, r1
 800f3d2:	b510      	push	{r4, lr}
 800f3d4:	eb01 0402 	add.w	r4, r1, r2
 800f3d8:	d902      	bls.n	800f3e0 <memmove+0x10>
 800f3da:	4284      	cmp	r4, r0
 800f3dc:	4623      	mov	r3, r4
 800f3de:	d807      	bhi.n	800f3f0 <memmove+0x20>
 800f3e0:	1e43      	subs	r3, r0, #1
 800f3e2:	42a1      	cmp	r1, r4
 800f3e4:	d008      	beq.n	800f3f8 <memmove+0x28>
 800f3e6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f3ea:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f3ee:	e7f8      	b.n	800f3e2 <memmove+0x12>
 800f3f0:	4402      	add	r2, r0
 800f3f2:	4601      	mov	r1, r0
 800f3f4:	428a      	cmp	r2, r1
 800f3f6:	d100      	bne.n	800f3fa <memmove+0x2a>
 800f3f8:	bd10      	pop	{r4, pc}
 800f3fa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f3fe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f402:	e7f7      	b.n	800f3f4 <memmove+0x24>

0800f404 <_realloc_r>:
 800f404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f408:	4680      	mov	r8, r0
 800f40a:	4614      	mov	r4, r2
 800f40c:	460e      	mov	r6, r1
 800f40e:	b921      	cbnz	r1, 800f41a <_realloc_r+0x16>
 800f410:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f414:	4611      	mov	r1, r2
 800f416:	f7f9 bf59 	b.w	80092cc <_malloc_r>
 800f41a:	b92a      	cbnz	r2, 800f428 <_realloc_r+0x24>
 800f41c:	f7f9 feea 	bl	80091f4 <_free_r>
 800f420:	4625      	mov	r5, r4
 800f422:	4628      	mov	r0, r5
 800f424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f428:	f000 f882 	bl	800f530 <_malloc_usable_size_r>
 800f42c:	4284      	cmp	r4, r0
 800f42e:	4607      	mov	r7, r0
 800f430:	d802      	bhi.n	800f438 <_realloc_r+0x34>
 800f432:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f436:	d812      	bhi.n	800f45e <_realloc_r+0x5a>
 800f438:	4621      	mov	r1, r4
 800f43a:	4640      	mov	r0, r8
 800f43c:	f7f9 ff46 	bl	80092cc <_malloc_r>
 800f440:	4605      	mov	r5, r0
 800f442:	2800      	cmp	r0, #0
 800f444:	d0ed      	beq.n	800f422 <_realloc_r+0x1e>
 800f446:	42bc      	cmp	r4, r7
 800f448:	4622      	mov	r2, r4
 800f44a:	4631      	mov	r1, r6
 800f44c:	bf28      	it	cs
 800f44e:	463a      	movcs	r2, r7
 800f450:	f7f9 fc48 	bl	8008ce4 <memcpy>
 800f454:	4631      	mov	r1, r6
 800f456:	4640      	mov	r0, r8
 800f458:	f7f9 fecc 	bl	80091f4 <_free_r>
 800f45c:	e7e1      	b.n	800f422 <_realloc_r+0x1e>
 800f45e:	4635      	mov	r5, r6
 800f460:	e7df      	b.n	800f422 <_realloc_r+0x1e>

0800f462 <_raise_r>:
 800f462:	291f      	cmp	r1, #31
 800f464:	b538      	push	{r3, r4, r5, lr}
 800f466:	4604      	mov	r4, r0
 800f468:	460d      	mov	r5, r1
 800f46a:	d904      	bls.n	800f476 <_raise_r+0x14>
 800f46c:	2316      	movs	r3, #22
 800f46e:	6003      	str	r3, [r0, #0]
 800f470:	f04f 30ff 	mov.w	r0, #4294967295
 800f474:	bd38      	pop	{r3, r4, r5, pc}
 800f476:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800f478:	b112      	cbz	r2, 800f480 <_raise_r+0x1e>
 800f47a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800f47e:	b94b      	cbnz	r3, 800f494 <_raise_r+0x32>
 800f480:	4620      	mov	r0, r4
 800f482:	f000 f831 	bl	800f4e8 <_getpid_r>
 800f486:	462a      	mov	r2, r5
 800f488:	4601      	mov	r1, r0
 800f48a:	4620      	mov	r0, r4
 800f48c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f490:	f000 b818 	b.w	800f4c4 <_kill_r>
 800f494:	2b01      	cmp	r3, #1
 800f496:	d00a      	beq.n	800f4ae <_raise_r+0x4c>
 800f498:	1c59      	adds	r1, r3, #1
 800f49a:	d103      	bne.n	800f4a4 <_raise_r+0x42>
 800f49c:	2316      	movs	r3, #22
 800f49e:	6003      	str	r3, [r0, #0]
 800f4a0:	2001      	movs	r0, #1
 800f4a2:	e7e7      	b.n	800f474 <_raise_r+0x12>
 800f4a4:	2400      	movs	r4, #0
 800f4a6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800f4aa:	4628      	mov	r0, r5
 800f4ac:	4798      	blx	r3
 800f4ae:	2000      	movs	r0, #0
 800f4b0:	e7e0      	b.n	800f474 <_raise_r+0x12>
	...

0800f4b4 <raise>:
 800f4b4:	4b02      	ldr	r3, [pc, #8]	; (800f4c0 <raise+0xc>)
 800f4b6:	4601      	mov	r1, r0
 800f4b8:	6818      	ldr	r0, [r3, #0]
 800f4ba:	f7ff bfd2 	b.w	800f462 <_raise_r>
 800f4be:	bf00      	nop
 800f4c0:	2000000c 	.word	0x2000000c

0800f4c4 <_kill_r>:
 800f4c4:	b538      	push	{r3, r4, r5, lr}
 800f4c6:	4d07      	ldr	r5, [pc, #28]	; (800f4e4 <_kill_r+0x20>)
 800f4c8:	2300      	movs	r3, #0
 800f4ca:	4604      	mov	r4, r0
 800f4cc:	4608      	mov	r0, r1
 800f4ce:	4611      	mov	r1, r2
 800f4d0:	602b      	str	r3, [r5, #0]
 800f4d2:	f000 f855 	bl	800f580 <_kill>
 800f4d6:	1c43      	adds	r3, r0, #1
 800f4d8:	d102      	bne.n	800f4e0 <_kill_r+0x1c>
 800f4da:	682b      	ldr	r3, [r5, #0]
 800f4dc:	b103      	cbz	r3, 800f4e0 <_kill_r+0x1c>
 800f4de:	6023      	str	r3, [r4, #0]
 800f4e0:	bd38      	pop	{r3, r4, r5, pc}
 800f4e2:	bf00      	nop
 800f4e4:	20000360 	.word	0x20000360

0800f4e8 <_getpid_r>:
 800f4e8:	f000 b83a 	b.w	800f560 <_getpid>

0800f4ec <_fstat_r>:
 800f4ec:	b538      	push	{r3, r4, r5, lr}
 800f4ee:	4d07      	ldr	r5, [pc, #28]	; (800f50c <_fstat_r+0x20>)
 800f4f0:	2300      	movs	r3, #0
 800f4f2:	4604      	mov	r4, r0
 800f4f4:	4608      	mov	r0, r1
 800f4f6:	4611      	mov	r1, r2
 800f4f8:	602b      	str	r3, [r5, #0]
 800f4fa:	f000 f829 	bl	800f550 <_fstat>
 800f4fe:	1c43      	adds	r3, r0, #1
 800f500:	d102      	bne.n	800f508 <_fstat_r+0x1c>
 800f502:	682b      	ldr	r3, [r5, #0]
 800f504:	b103      	cbz	r3, 800f508 <_fstat_r+0x1c>
 800f506:	6023      	str	r3, [r4, #0]
 800f508:	bd38      	pop	{r3, r4, r5, pc}
 800f50a:	bf00      	nop
 800f50c:	20000360 	.word	0x20000360

0800f510 <_isatty_r>:
 800f510:	b538      	push	{r3, r4, r5, lr}
 800f512:	4d06      	ldr	r5, [pc, #24]	; (800f52c <_isatty_r+0x1c>)
 800f514:	2300      	movs	r3, #0
 800f516:	4604      	mov	r4, r0
 800f518:	4608      	mov	r0, r1
 800f51a:	602b      	str	r3, [r5, #0]
 800f51c:	f000 f828 	bl	800f570 <_isatty>
 800f520:	1c43      	adds	r3, r0, #1
 800f522:	d102      	bne.n	800f52a <_isatty_r+0x1a>
 800f524:	682b      	ldr	r3, [r5, #0]
 800f526:	b103      	cbz	r3, 800f52a <_isatty_r+0x1a>
 800f528:	6023      	str	r3, [r4, #0]
 800f52a:	bd38      	pop	{r3, r4, r5, pc}
 800f52c:	20000360 	.word	0x20000360

0800f530 <_malloc_usable_size_r>:
 800f530:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800f534:	1f18      	subs	r0, r3, #4
 800f536:	2b00      	cmp	r3, #0
 800f538:	bfbc      	itt	lt
 800f53a:	580b      	ldrlt	r3, [r1, r0]
 800f53c:	18c0      	addlt	r0, r0, r3
 800f53e:	4770      	bx	lr

0800f540 <_close>:
 800f540:	4b02      	ldr	r3, [pc, #8]	; (800f54c <_close+0xc>)
 800f542:	2258      	movs	r2, #88	; 0x58
 800f544:	601a      	str	r2, [r3, #0]
 800f546:	f04f 30ff 	mov.w	r0, #4294967295
 800f54a:	4770      	bx	lr
 800f54c:	20000360 	.word	0x20000360

0800f550 <_fstat>:
 800f550:	4b02      	ldr	r3, [pc, #8]	; (800f55c <_fstat+0xc>)
 800f552:	2258      	movs	r2, #88	; 0x58
 800f554:	601a      	str	r2, [r3, #0]
 800f556:	f04f 30ff 	mov.w	r0, #4294967295
 800f55a:	4770      	bx	lr
 800f55c:	20000360 	.word	0x20000360

0800f560 <_getpid>:
 800f560:	4b02      	ldr	r3, [pc, #8]	; (800f56c <_getpid+0xc>)
 800f562:	2258      	movs	r2, #88	; 0x58
 800f564:	601a      	str	r2, [r3, #0]
 800f566:	f04f 30ff 	mov.w	r0, #4294967295
 800f56a:	4770      	bx	lr
 800f56c:	20000360 	.word	0x20000360

0800f570 <_isatty>:
 800f570:	4b02      	ldr	r3, [pc, #8]	; (800f57c <_isatty+0xc>)
 800f572:	2258      	movs	r2, #88	; 0x58
 800f574:	601a      	str	r2, [r3, #0]
 800f576:	2000      	movs	r0, #0
 800f578:	4770      	bx	lr
 800f57a:	bf00      	nop
 800f57c:	20000360 	.word	0x20000360

0800f580 <_kill>:
 800f580:	4b02      	ldr	r3, [pc, #8]	; (800f58c <_kill+0xc>)
 800f582:	2258      	movs	r2, #88	; 0x58
 800f584:	601a      	str	r2, [r3, #0]
 800f586:	f04f 30ff 	mov.w	r0, #4294967295
 800f58a:	4770      	bx	lr
 800f58c:	20000360 	.word	0x20000360

0800f590 <_lseek>:
 800f590:	4b02      	ldr	r3, [pc, #8]	; (800f59c <_lseek+0xc>)
 800f592:	2258      	movs	r2, #88	; 0x58
 800f594:	601a      	str	r2, [r3, #0]
 800f596:	f04f 30ff 	mov.w	r0, #4294967295
 800f59a:	4770      	bx	lr
 800f59c:	20000360 	.word	0x20000360

0800f5a0 <_read>:
 800f5a0:	4b02      	ldr	r3, [pc, #8]	; (800f5ac <_read+0xc>)
 800f5a2:	2258      	movs	r2, #88	; 0x58
 800f5a4:	601a      	str	r2, [r3, #0]
 800f5a6:	f04f 30ff 	mov.w	r0, #4294967295
 800f5aa:	4770      	bx	lr
 800f5ac:	20000360 	.word	0x20000360

0800f5b0 <_sbrk>:
 800f5b0:	4a04      	ldr	r2, [pc, #16]	; (800f5c4 <_sbrk+0x14>)
 800f5b2:	6811      	ldr	r1, [r2, #0]
 800f5b4:	4603      	mov	r3, r0
 800f5b6:	b909      	cbnz	r1, 800f5bc <_sbrk+0xc>
 800f5b8:	4903      	ldr	r1, [pc, #12]	; (800f5c8 <_sbrk+0x18>)
 800f5ba:	6011      	str	r1, [r2, #0]
 800f5bc:	6810      	ldr	r0, [r2, #0]
 800f5be:	4403      	add	r3, r0
 800f5c0:	6013      	str	r3, [r2, #0]
 800f5c2:	4770      	bx	lr
 800f5c4:	20000368 	.word	0x20000368
 800f5c8:	20000370 	.word	0x20000370

0800f5cc <_write>:
 800f5cc:	4b02      	ldr	r3, [pc, #8]	; (800f5d8 <_write+0xc>)
 800f5ce:	2258      	movs	r2, #88	; 0x58
 800f5d0:	601a      	str	r2, [r3, #0]
 800f5d2:	f04f 30ff 	mov.w	r0, #4294967295
 800f5d6:	4770      	bx	lr
 800f5d8:	20000360 	.word	0x20000360

0800f5dc <_exit>:
 800f5dc:	e7fe      	b.n	800f5dc <_exit>
	...

0800f5e0 <_init>:
 800f5e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f5e2:	bf00      	nop
 800f5e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f5e6:	bc08      	pop	{r3}
 800f5e8:	469e      	mov	lr, r3
 800f5ea:	4770      	bx	lr

0800f5ec <_fini>:
 800f5ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f5ee:	bf00      	nop
 800f5f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f5f2:	bc08      	pop	{r3}
 800f5f4:	469e      	mov	lr, r3
 800f5f6:	4770      	bx	lr
